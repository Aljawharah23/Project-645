[
    [
        "WICKET-85",
        "WICKET-83",
        "FormTester does not set request parameters for unchanged form fields When using the FormTester, the Form is correctly having its field values, but FormTester does not call setFormComponentValue() for every field.  Thus, the request parameters are not set for the next request, when submit() is called.\n\nThe workaround is to call setValue() for every field.\n\nThe attached patch fixes the problem for AbstractTextComponent.  It also adds a new method getTextComponentValue() as a shortcut to access a field value.",
        "FormTester doesn't update input models public Page()\n{\n    final Form form = new Form( \"form\" );\n    form.add( new TextField( \"name\", new Model( \"some input\" ) ).setRequired( true ) );\n    add( form );\n}\n\npublic void test()\n{\n    tester.startPage( Page.class );\n    tester.newFormTester( \"form\" ).submit();\n    tester.newFormTester( \"form\" ).submit();\n    tester.assertNoErrorMessage(); // <--- test fails here, because \"name\" model is null\n}\n"
    ],
    [
        "WICKET-175",
        "WICKET-84",
        "Page.onDetach is called by each ComponentResourceRequestTarget ComponentResourceRequestTarget#detach(RequestCycle) calls page#internalDetach()\n\nThis results in Page#onDetach() being called as many times as there are images or whatever on your page, which seems entirely wrong. Mentioned this to ivaynberg on IRC and he said: \"we should have theadlocal guards\".",
        "detach is called twice When debugging current 1.3, I saw that the detach of a page is called twice:\n\nThread [SocketListener0-9] (Suspended (breakpoint at line 106 in AbstractBasePage))\n\tLeerlingZoekenPage(AbstractBasePage).internalDetach() line: 106\n\tFilePageStore.storePage(String, Page) line: 152\t\n\tSecondLevelCacheSessionStore$1.storePage(String, Page) line: 208\n\tSecondLevelCacheSessionStore$SecondLevelCachePageMap.put(Page) line: 77\n\tIridiumSession(Session).touch(Page) line: 817\t\n\tLeerlingZoekenPage(Page).renderPage() line: 426\t\n\tRedirectPageRequestTarget(PageRequestTarget).respond(RequestCycle) line: 67\n\tDefaultResponseStrategy.respond(RequestCycle) line: 4\tDefaultWebRequestCycleProcessor(AbstractCompoundRequestCycleProcessor).respond(RequestCycle) line: 66\tIridiumRequestCycle(RequestCycle).doProcessEventsAndRespond(IRequestCycleProcessor) line: 920\tIridiumRequestCycle(RequestCycle).processEventsAndRespond() line: 947\tIridiumRequestCycle(RequestCycle).step() line: 1028\t\n\tIridiumRequestCycle(RequestCycle).steps() line: 1102\t\n\tIridiumRequestCycle(RequestCycle).request() line: 456\t\n\tWicketServlet.doGet(HttpServletRequest, HttpServletResponse) line: 216\tWicketServlet(HttpServlet).service(HttpServletRequest, HttpServletResponse) line: 596\tWicketServlet(HttpServlet).service(ServletRequest, ServletResponse) line: 689\tServletHolder.handle(ServletRequest, ServletResponse) line: 428\n\nand:\n\nThread [SocketListener0-9] (Suspended (breakpoint at line 106 in AbstractBasePage))\n\tLeerlingZoekenPage(AbstractBasePage).internalDetach() line: 106\n\tRedirectPageRequestTarget(PageRequestTarget).detach(RequestCycle) line: 84\n\tIridiumRequestCycle(RequestCycle).detach() line: 825\t\n\tIridiumRequestCycle(RequestCycle).steps() line: 1120\t\n\tIridiumRequestCycle(RequestCycle).request() line: 456\t\n\tWicketServlet.doGet(HttpServletRequest, HttpServletResponse) line: 216\n\tWicketServlet(HttpServlet).service(HttpServletRequest, HttpServletResponse) line: 596\n\tWicketServlet(HttpServlet).service(ServletRequest, ServletResponse) line: 689\n"
    ],
    [
        "WICKET-223",
        "WICKET-88",
        "NPE in Check.onComponentTag I've been getting NPEs in wicket.markup.html.form.Check line 132 since upgrading to wicket 1.2.4\n\nit seems that it is possible for FormComponent.getInputAsArray() can return null rather than an empty array.\n\na fix would be to do a null check in Check or ensure that getInputAsArray() never returns null",
        "NPE in Check.java The Forms examples fails with an NPE in Check.java\n\n               if (group.hasRawInput())\n               {\n                       String[] inputs = group.getInputAsArray();\n                       for (String input : inputs)   <<<<<< NPE\n                       {\n                               if (value.equals(input))\n                               {\n                                       tag.put(\"checked\", \"checked\");\n                               }\n                       }\n               }\n\nJuergen\n"
    ],
    [
        "WICKET-387",
        "WICKET-376",
        "[PATCH] ajax Wicket.form.serialize has been broken  It has been broken since \"Support for serializing nested form\" commit. \n\nform.elements has been replaced by element.childNodes. The problem is that form.elements return only form elements but childNodes returns all child. I understand why we can not work with form.elements (nested form) and the goal of this commit, but now all ajax form submit is broken :(\n\nI attach a patch allowing nested form and make serialisation works. But It supposed every tags under the form to serialize to be parse with javascript. Imho it is very painfull and can take a long time on big form. ",
        "form serialization doesn't recurse into all elements Changes made to support serialization of nested forms (http://svn.apache.org/viewvc/incubator/wicket/branches/wicket-1.x/wicket/src/main/java/wicket/ajax/wicket-ajax.js?r1=515852&r2=515851&pathrev=515852) causes all DOM elements, not just form elements, to be iterated upon. However, existing code expects these elements to have a \"name\" attribute (and not to be disabled); lacking those, recursion stops and potential form elements below them are not considered for serialization."
    ],
    [
        "WICKET-432",
        "WICKET-332",
        "getvariation() is called from webpage constructor through commoninit() getvariation() is called from commoninit(). if user overrides getvariation() and makes it depend on variables initialized from his webpage subclass' constructor then this method is invoked before the constructor has finished - which of course leads to problems. \n\ngetvariation should not be called from WebPage constructor",
        "BodyContainer addOnLoadModifier(final IModel model, final Component behaviorOwner) impl rewritten to use the new wicket/ajax onload hook? Now we have an onLoad hook through javascript shouldn't we rewrite the body container add onload modifier method?\n"
    ],
    [
        "WICKET-526",
        "WICKET-497",
        "URL mounting doesn't work well together with stateless pages See the stateless example. Uncomment the mount line in StatelessApplication#init, and test the form in the example. When it is not mounted, it displays feebback, when it's mounted it doesn't.",
        "For stateless mounted page incorrect url is generated There is no redirect by default if I use setResponsePage(new Home()) inside onSubmit() handler. If set redirect explicitly, after login from stateless SignIn page the url contains form submission listener. Example: http://localhost:8888/app/signin/wicket:interface/%3A0%3AsignInForm%3A%3AIFormSubmitListener%3A?wicket:interface=:1:::."
    ],
    [
        "WICKET-550",
        "WICKET-517",
        "Use WebRequestEncoder everywhere a query string is constructed ",
        "encoding of AttributeModifier's model left unescaped If you do something looking like this:\n\nString url = \"http://www.somewhere.com?param1=a&param2=b\";\ncomponent.add(new AttributeModifier(\"href\", true, new Model(url)));\n\nAfter rendering the component will look like this:\n\n<LINK href=\"http://www.somewhere.com?param1=a&param2=b\"/>\n\nMy template is not in HTML but XML and this is obviously not valid XML (the '&' should be escaped)."
    ],
    [
        "WICKET-571",
        "WICKET-524",
        "AjaxLinks throws java.lang.ClassCastException All AjaxSubmitLink 's throw the following exception when using 1.2.6\n\n12:11:38,841 ERROR [RequestCycle] ::: [Ljava.lang.String; cannot be cast to java.lang.String\njava.lang.ClassCastException: [Ljava.lang.String; cannot be cast to java.lang.String\n        at wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy$DecodedUrlRequest.getParameter(CryptedUrlWebRequestCodingStrategy.java:432)\n        at wicket.protocol.http.request.WebRequestCodingStrategy.decode(WebRequestCodingStrategy.java:161)\n        at wicket.protocol.http.request.CryptedUrlWebRequestCodingStrategy.decode(CryptedUrlWebRequestCodingStrategy.java:98)\n        at wicket.Request.getRequestParameters(Request.java:163)\n        at wicket.RequestCycle.step(RequestCycle.java:992)\n        at wicket.RequestCycle.steps(RequestCycle.java:1084)\n        at wicket.RequestCycle.request(RequestCycle.java:454)\n        at wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:219)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:697)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:81)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n        at org.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:39)\n        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:159)\n        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:59)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)\n        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)\n        at org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)\n        at java.lang.Thread.run(Thread.java:619)\n",
        "ClassCastException in WebRequestCodingStrategy I upgraded to 1.2.6 and am getting a ClassCastException on line 161 of WebRequestCodingStrategy.  When it calls request.getParameter(BEHAVIOR_ID_PARAMETER_NAME) it is expecting a String, but it is returning a String array so I get a classcastexception.  I am using CryptedUrlWebRequestCodingStrategy to build the URLs.  The actual bug appears to be in the WebRequest because it casts to a String which is incorrect, since the actual parameter is a String array."
    ],
    [
        "WICKET-723",
        "WICKET-700",
        "A 'recorder' subcomponent of Palette is used as property expression in the CompoundPropertyModel When using a Palette component in the form and that form has a CompoundPropertyModel model, the palette's internal subcomponent which has an id 'recorder' is apparently used as the property expression. This usually causes an exception, since the form has neither getRecorder, nor setRecorder methods.\n\nAuthor author = new Author();\nauthor.setFirstName(\"John\");\nauthor.setLastName(\"Milton\");\n\nForm form = new Form(\"form\", new CompoundPropertyModel(author));\nadd(form);\nform.add(new Label(\"firstName\"));\nform.add(new Label(\"lastName\"));\nList names = Arrays.asList(new String[] {\"Ferko\", \"Mirko\", \"Janko\", \"Zuzanka\", \"Mi\u0161ko\"});\nIModel model = new PropertyModel(this, \"selectedAuthors\");\nform.add(new Palette(\"lstAuthors\", model, new Model((Serializable) names), new ChoiceRenderer(), 5, false));\n\nWicket 1.3.0 beta1 and previous did not throw the exception, however Wicket 1.3.0 beta2 starts doing that:\n\nWicketMessage: No get method defined for class: class wt.Author expression: recorder\n\nRoot cause:\n\norg.apache.wicket.WicketRuntimeException: No get method defined for class: class wt.Author expression: recorder\n     at org.apache.wicket.util.lang.PropertyResolver.getGetAndSetter(PropertyResolver.java:391)\n     at org.apache.wicket.util.lang.PropertyResolver.getObjectAndGetSetter(PropertyResolver.java:266)",
        "Palette, Recorder Issue - Compound Property Model does not work. Hi All!\n\nI experienced a Problem with the Palette component in the Wicket version\n1.3.0-SNAPSHOT. When I use a PropertyModel as Choices for the Palette, I\nget the following Error (see below). This Problem did'n exist in the\n1.2.6-SNAPSHORT.\n\nI attached an ZIP of the wicket-quickstart where I used the Palette in\nthe Index.java Class.\n\n\nERROR:\n\nWicketMessage: Could not find Form parent for [MarkupContainer\n[Component id = recorder, page = org.apache.wicket.quickstart.Index,\npath = 0:paletteID:recorder.Palette$1, isVisible = true, isVersioned =\nfalse]]\n\nRoot cause:\n\norg.apache.wicket.WicketRuntimeException: Could not find Form parent for\n[MarkupContainer [Component id = recorder, page =\norg.apache.wicket.quickstart.Index, path =\n0:paletteID:recorder.Palette$1, isVisible = true, isVersioned = false]]\nat\norg.apache.wicket.markup.html.form.FormComponent.getForm(FormComponent.j\nava:565)\nat\norg.apache.wicket.extensions.markup.html.form.palette.component.Recorder\n.onBeforeRender(Recorder.java:78)\nat org.apache.wicket.Component.beforeRender(Component.java:846)\nat\norg.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer\n.java:1449)\nat org.apache.wicket.Component.beforeRender(Component.java:856)\nat\norg.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer\n.java:1449)\nat org.apache.wicket.Component.beforeRender(Component.java:856)\nat org.apache.wicket.Page.renderPage(Page.java:885)\nat\norg.apache.wicket.request.target.component.BookmarkablePageRequestTarget\n.respond(BookmarkablePageRequestTarget.java:225)\nat\norg.apache.wicket.request.AbstractRequestCycleProcessor.respond(Abstract\nRequestCycleProcessor.java:103)\nat\norg.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java\n:1037)\nat org.apache.wicket.RequestCycle.step(RequestCycle.java:1107)\nat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1176)\nat org.apache.wicket.RequestCycle.request(RequestCycle.java:499)\nat\norg.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:257\n)\nat\norg.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:\n127)\nat\norg.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHan\ndler.java:1065)\nat\norg.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)\nat\norg.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:1\n85)\nat\norg.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\nat\norg.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:689)\nat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:391)\nat\norg.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)\nat org.mortbay.jetty.Server.handle(Server.java:285)\nat\norg.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:457)\nat\norg.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConne\nction.java:751)\nat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:500)\nat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)\nat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:357)\nat\norg.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:\n329)\nat\norg.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.ja\nva:475)"
    ],
    [
        "WICKET-764",
        "WICKET-748",
        "URL mounting + non ASCII parameter + setRedirect generate incorrect relative URLs Do not work on 1.3.0-SNAPSHOT, but seems to work with 1.3.0-incubating-SNAPSHOT.. ??\n\nWith an ASCII parameter (URL= http://127.0.0.1:8080/context/app/two/key/aaaa )\nI got <img src=\"../../../image/logo.png\"/>\n\nWith an non ASCII parameter (URL= http://127.0.0.1:8080/context/app/two/key/%C3%A9%C3%A9%C3%A9%C3%A9 )\nI got <img src=\"../../../../../../image/logo.png\"/>\n\nSee attached code for more info\n\n",
        "ServletWebRequest.getRelativePathPrefixToContextRoot generates wrong relative path if current page has URL-encoding in the params. Actually, this is against 1.3.0-SNAPSHOT revision: 554607\n\nI have been trying to find a very annoying, seeminly sporadic, glitch where my images that are relative to the context wouldn't \"find\" the image file.  Looking at the source, they would have 11 sets of \"..\" versus the 5 sets that the other resources would have.   Here is how I was trying to display the image:\n\n<img src=\"images/find.png\"/>\n\n I was finally able to produce a scenario in a quickstart to prove the problem exists.  It seems that getPath() and getServletPath() don't work the same way, in that I mean, getPath() had the '{\" encoded as \"%7B\" whereas getServletPath() was not encoded.\nTherefore, this test fails and the path is not properly handled!\n    if (servletPath.endsWith(path))\n"
    ],
    [
        "WICKET-793",
        "WICKET-447",
        "PasswordTextField.setResetPassword(false) not honoring input when form has errors When a PasswordTextField has resetPassword=false and a form is submitted with errors, then the user provided input is not honored and the model's value is returned instead.\n\nThis is because in onComponentTag, getModelObjectAsString() is used instead of getValue() (which is what is used in TextField) or getModelValue():\n\nprotected final void onComponentTag(final ComponentTag tag)\n{\n\tsuper.onComponentTag(tag);\n\ttag.put(\"value\", getResetPassword() ? \"\" : getModelObjectAsString());\n}",
        "Password field gets reset on setResetPassword == false even after successful validation I guess I found an issue when implementing a 'change password' dialog with these input fields (for simplicity in this example the [confirm password] field has been omitted):\n\nCHANGE PASSWORD FORM\n{\n  input type=\"password\" [ old password ], setResetPassword(false)\n\n  input type=\"password\" [ new password ], setResetPassword(false)\n\n  submit \"Change Password\"\n}\n\nAll PasswordTextField's are set to setResetPassword(false). So I expect the input to be kept in the form on each request/response roundtrip.\n\nWhen I type in the [old password] but leave [new password] empty validation of [new password] fails as it is a required field. However the input of [old password] is not remembered but discarded This is wrong as the input for [old password] is valid and validation errors only relate to [new password]. So the user is forced to again enter all fields until validation succeeds as a whole.\n\nI tried the same with TextField's instead of PasswordTextField's: In this case the value of [old password] is kept even on validation error of [new password].\n\nCan you confirm this is an issue, please?!"
    ],
    [
        "WICKET-862",
        "WICKET-555",
        "isComponentOnAjaxResponse() chokes on multiline AJAX response In isComponentOnAjaxResponse() in BaseWicketTester, the dot in the regular expression won't match newline characters and thus will fail:\n\n\tpublic Result isComponentOnAjaxResponse(Component component)\n\t{\n\t\t...\n\t\tboolean isComponentInAjaxResponse = ajaxResponse.matches(\".*<component id=\\\"\" + markupId\n\t\t\t\t+ \"\\\" ?>.*\");\n\t\t...\n\t}\n\nSuggest changing it to:\n\n\tpublic Result isComponentOnAjaxResponse(Component component)\n\t{\n\t\t...\n\t\tboolean isComponentInAjaxResponse = ajaxResponse.matches(\"(?s).*<component id=\\\"\" + markupId\n\t\t\t\t+ \"\\\" ?>.*\");\n\t\t...\n\t}\n\nBTW I found this error when trying to update a feedback panel whose markup spreads across lines.",
        "WicketTester.assertComponentOnAjaxResponse fails if AJAX response contains line breaks (Note: I've found this on 1.2.6 -- I'm reporting as existing on later versions based on reading the code.)\n\nWhen any of the components replaced by an AJAX response renders multiple HTML lines, or if the AJAX response contains line breaks for any other reasons, the WicketTester.assertComponentOnAjaxResponse always returns false.\n\nI've traced this to this statement:\n\n\t\tboolean isComponentInAjaxResponse = ajaxResponse.matches(\".*<component id=\\\"\" + markupId\n\t\t\t\t+ \"\\\" ?>.*\");\n\nwhich never matches if ajaxResponse contains a \\n because, in Java RegExps, the dot doesn't match these unless DOTALL is set (and it is not by default).\n\nIn the latest version I've found in SVN (sorry I'm not yet quite familiar with the codebase,) this code has been moved unchanged to org.apache.wicket.util.tester.BaseWicketTester.java -- so I assume the bug is still there.\n\nThe easiest solution is to add a single-line \"(?s)\" flag in front of the regular expression:\n\n\t\tboolean isComponentInAjaxResponse = ajaxResponse.matches(\"(?s).*<component id=\\\"\" + markupId\n\t\t\t\t+ \"\\\" ?>.*\");\n"
    ],
    [
        "WICKET-888",
        "WICKET-887",
        "Unable to find InlineFrames when inside ajax generated content Possibly the same bug as 887, but I'm not sure. The attached examples are sort of linked lists where nodes are panels (list example) or fragments (list2 example). Inside the nodes there is an index number and a inlineframe. The iframe link just gets resolved for the first item.",
        "Unable to find InlineFrames when inside ListViews There is a simple example attached. Even if the list is reusing items (and even with a RefreshingView with reuseifmodelequal strategy) the problem persists."
    ],
    [
        "WICKET-895",
        "WICKET-520",
        "If a form includes a DataTable with AjaxEditableLabels and the form should be refresh an exception occurs when a user switches between a changed label to another A normal Form includes a DataTable which includes some AjaxEditableLabels.\nIf the user changes the contens of a label and the label has an effect of the whole DataTable the complete from has to be refreshed. But if the user switches between one label to another, an exception occurs.\n\nUseCase:\nclick on label and change the value\nto leave the label click another labe in the DataTabel\n--> an exception should occur",
        "Escape doesn't work for AjaxEditableLabel in Firefox The bug only occurs in Firefox (I'm using 2.0). In IE 7 works fine. \nIn wicket-example check the \"Editable Lable Example\". When the user is in edit mode and presses escape the editor is not replaced with the label component and any other AJAX request fails. Bellow is a snapshot from the AJAX debug:\n....\nINFO: Response parsed. Now invoking steps...\nINFO: Response processed successfully.\nINFO: Invoking post-call handler(s)...\nINFO: last focus id was not set\nINFO:\nINFO: Initiating Ajax GET request on \nHelp?wicket:interface=:1:editableLabel:editor::IBehaviorListener:0&wicket:ignoreIfNotActive=true&save=false&random=0.5459241681095125\nINFO: Invoking pre-call handler(s)...\nINFO: Channel busy - postponing...\n\n"
    ],
    [
        "WICKET-1039",
        "WICKET-1022",
        "parameters for Image never used when using a ResourceReference When using parameters (ValueMap) for an Image with a ResourceReference, they are essentially wiped out because of the code in onComponentTag().\n\n<code>\npublic final void onComponentTag(...) {\n       ...\n                final ResourceReference resourceReference = getImageResourceReference();\n                if (resourceReference != null)\n                {\n                        localizedImageResource.setResourceReference(resourceReference);\n                }\n      ...\n}\n</code> \n\nThis in turns calls LocalizedImageResource.setResourceReference( resourceReference, null ). Which nulls out the parameters set in the constructor.\n\nA possible change would to change LocalizedImageResource.setResourceReference( resourceRef ) to the following:\n\n<code>\n\tpublic final void setResourceReference(final ResourceReference resourceReference)\n\t{\n\t\tsetResourceReference(resourceReference, resourceParameters);\n\t}\n\n</code>\n",
        "Created new bug - ValueMap set to null Line 299 of the Image class now executes the following code since the reference is not not null, but wrong setResourceReference is being called. Should call localizedImageResource.setResourceReference(resourceReference, valuemap);  -  now the value map is set to null.\n\n\t\tfinal ResourceReference resourceReference = getImageResourceReference();\n\t\tif (resourceReference != null)\n\t\t{\n\t\t\tlocalizedImageResource.setResourceReference(resourceReference);\n\t\t}\n\nfix fix por favor   =)\n\nThanks igor"
    ],
    [
        "WICKET-1194",
        "WICKET-812",
        "UploadProgressBar incompatible with submit buttons onSubmit method (in FireFox at least) The UploadProgressBar calls form.submit() which, in Firefox at least (not Safari) bypasses the onSubmit methods of the submit buttons.\nThis is a mighty pain for me, as the onSubmit of buttons is just as important as that of the form...",
        "Submit button, multipart content and UploadProgressBar When I use UploadProgressBar, then onSubmit method of SubmitButton not function. I can not also find submit button with findSubmittingButton method of Form. I search this problem. And I find only - submit button is not in http request parameter."
    ],
    [
        "WICKET-1241",
        "WICKET-1224",
        "IE display the ExceptionErrorPage as \"The XML page cannot be displayed\" due to license comment After updating from rc1 to rc2, the ExceptionErrorPage is shown as below in Internet Explorer 6.0 (but ok in FireFox).\nThe solution is probably just to move the license comment down somewhere after the DOCTYPE statement.\n\nThe XML page cannot be displayed \nCannot view XML input using style sheet. Please correct the error and then click the Refresh button, or try again later. \n\n\n--------------------------------------------------------------------------------\n\nThe character '>' was expected. Error processing resource 'http://www.w3.org/TR/html4/loose.dtd'. Line 31, Position 3 \n\n  -- Typical usage:\n--^\n",
        "PopupCloseLink broken with 1.3.0-rc2 in Internet Explorer A popup in Internet Explorer does not close when clicking on a PopupCloseLink.\nInstead of closing it shows the Page in xml-View:\n\n  <?xml version=\"1.0\" encoding=\"UTF-8\" ?> \n- <!-- \n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n  --> \n- <html>\n  <body onLoad=\"javascript:self.close()\" /> \n  </html>\n\n\nIn rc1 there was no xml-header ( <?xml version=\"1.0\" encoding=\"UTF-8\" ?> ), in rc2 there is."
    ],
    [
        "WICKET-1253",
        "WICKET-1239",
        "AjaxEditableLabel throws IllegalAccessException on saving the changed value see http://www.nabble.com/AjaxEditableLabel-not-saving-td14413223.html (really\n\nfirst it appeared to be a tomcat issue, as it works as expected when i fire up jetty, but fails on tomcat (see wicketstuff.org/wicket13/ajax/editable-label)\nbut in the thread on user@ the stacktrace shows that the OP was using jetty too.",
        "java.lang.IllegalAccessError when changing AjaxEditableLabel  When changing AjaxEditableLabel system throws:\n\njava.lang.IllegalAccessError: tried to access method\norg.apache.wicket.Component.onModelChanging()V from class\norg.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$1\n    at\norg.apache.wicket.extensions.ajax.markup.html.AjaxEditableLabel$1.onModelChanging\n(AjaxEditableLabel.java:273)\n    at org.apache.wicket.Component.modelChanging(Component.java:2058)\n    at org.apache.wicket.Component.setModelObject(Component.java:2823)\n    at org.apache.wicket.markup.html.form.FormComponent.updateModel(\nFormComponent.java:992)\n    at org.apache.wicket.markup.html.form.FormComponent.processInput(\nFormComponent.java:874) \n[...]\n\nThe probem is in methd:\n\n        protected FormComponent newEditor(MarkupContainer parent, String componentId, IModel model)\n        {\n                TextField editor = new TextField(componentId, model)\n                {\n                        private static final long serialVersionUID = 1L;\n\n                        protected void onModelChanged()\n                        {\n                                super.onModelChanged();\n                                AjaxEditableLabel.this.onModelChanged();  //here is a bug\n                        }\n\n                        protected void onModelChanging()\n                        {\n                                super.onModelChanging();\n                                AjaxEditableLabel.this.onModelChanging();  //here is a bug\n                        }\n                };\n                editor.setOutputMarkupId(true);\n                editor.setVisible(false);\n                editor.add(new EditorAjaxBehavior());\n                return editor;\n        } \n\nAjaxEditableLabel.this.XXXXXX is not visible.\n\n\nArtur\n"
    ],
    [
        "WICKET-1271",
        "WICKET-1258",
        "Script in RenderHead method of AjaxFormChoiceComponentUpdatingBehavior needs fixing The script in the renderHead method of AjaxFormChoiceComponentUpdatingBehavior assumes that the  Radio Component will be the immediate child of the RadioGroup Component, But in some or in most of the cases that is not correct.\n\nThat is not the case even in the Wicket Examples, in examples the hierarchy is RadioGroup/ListView/Radio.\n\nI have maodied the rendered script to work for RadioGroup/ListView/Radio hierarchy. \n\nAnd the Patch is attached.\n\nRegards\nDipu\n\n\n",
        "AjaxFormChoiceComponentUpdatingBehavior assumes Radio/Choice items are a direct child of the group in the client-side DOM In the reference behavior, the attachFormChoiceHandlers javascript function being rendered in onRenderHead incorrectly assumes that the individual choices we're attaching events to (the Radio or CheckBox components) are direct children of the group.\n\n64) asb.append(\"function attachChoiceHandlers(markupid, callbackscript) {\\n\");\n65) asb.append(\" var choiceElement = document.getElementById(markupid);\\n\");\n66) asb.append(\" for( var x = 0; x < choiceElement.childNodes.length; x++ ) {\\n\");\n67) asb.append(\"   if (choiceElement.childNodes[x] && choiceElement.childNodes[x].tagName) {\\n\");\n68) asb.append(\"     var tag = choiceElement.childNodes[x].tagName.toLowerCase();\\n\");\n69) asb.append(\"     if (tag == 'input') {\\n\");\n70) asb.append(\"       Wicket.Event.add(choiceElement.childNodes[x],'click', callbackscript);\");\n71) asb.append(\"     }\\n\");\n72) asb.append(\"   }\\n\");\n73) asb.append(\" }\\n\");\n74) asb.append(\"}\\n\");\n\nThe problem is the loop on line 66 - it only loops through direct child nodes, when in reality there could be other elements (like spans) in between the RadioGroup and the Radio in the dom, especially if for some reason the Radio was included as a part of another Component, which was actually added to the RadioGroup.\n\nThe fix should be simple, but I don't know the appropriate Wicket-approved function of recursing through children in the client-side.\n\nAs a side note, is there a reason this recursion is done on the client-side rather than on the server-side?"
    ],
    [
        "WICKET-1352",
        "WICKET-1205",
        "authentication invalid redirection when wicket filter is /* Take the example authentication application (examples/authentication), change the wicket filter from /authentication/* to /*\n\nWhen a user logs in for the 1st time, they are redirected to a url which is below the application.\n\neg.\n\nSign in page is \nhttp://localhost:8080/WicketTest3/?wicket:bookmarkablePage=%3Aauthentication.MySignInPage\n\nCorrect login redirects to \nhttp://localhost:8080/index.jsp?wicket:bookmarkablePage=%3Aauthentication.AdminPage\n\nNote the missing \"WicketTest3\"\n\nChanging the servlet filter to something other than /* (in the example below it is /test/*) does not show this problem.\n\ne.g.\nhttp://localhost:8080/WicketTest3/test/?wicket:bookmarkablePage=%3Aauthentication.MySignInPage\n\nlogged in page is\nhttp://localhost:8080/WicketTest3/test/?wicket:bookmarkablePage=%3Aauthentication.AdminPage\n\n\nI hope I've explained this problem correctly.\n\n\nRegards\n\nPeter Henderson.",
        "Relative path calculations for inline paths in non-bookmarkable pages are incorrect on Tomcat. When linking from a bookmarked page to a non-bookmarked page the relative link to the CSS page breaks. "
    ],
    [
        "WICKET-1466",
        "WICKET-861",
        "Use of UrlCompressingWebRequestProcessor breaks major functionality in WicketTester. Use of UrlCompressingWebRequestProcessor breaks major functionality in WicketTester.\n\nAttached is an example quickstart.\n\nIf the tester is instantiated with an application that uses UrlCompressingWebRequestProcessor,\n \nWicketTester tester = new WicketTester(new MyApplication() { \n   protected IRequestCycleProcessor newRequestCycleProcessor() {\n        return new UrlCompressingWebRequestProcessor();\n    });\n\nThen this works\n  tester.startPage(HomePage.class)\n  tester.assertRenderedPage(HomePage.class);\n\nBut this fails with the following stack trace.\n  //start and render the test page\n  tester.startPage(new HomePage());\n  tester.assertRenderedPage(HomePage.class);\n\n\nINFO  - RequestListenerInterface   - registered listener interface [RequestListenerInterface name=IActivePageBehaviorListener, method=public abstract void org.apache.wicket.behavior.IBehaviorListener.onRequest()]\nERROR - RequestCycle               - For input string: \"testPage\"\njava.lang.NumberFormatException: For input string: \"testPage\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)\n\tat java.lang.Integer.parseInt(Integer.java:447)\n\tat java.lang.Integer.parseInt(Integer.java:497)\n\tat org.apache.wicket.protocol.http.request.urlcompressing.UrlCompressor.getComponentAndInterfaceForUID(UrlCompressor.java:122)\n\tat org.apache.wicket.protocol.http.request.urlcompressing.UrlCompressingWebRequestProcessor.resolveListenerInterfaceTarget(UrlCompressingWebRequestProcessor.java:79)\n\tat org.apache.wicket.request.AbstractRequestCycleProcessor.resolveRenderedPage(AbstractRequestCycleProcessor.java:461)\n\tat org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:139)\n\tat org.apache.wicket.RequestCycle.step(RequestCycle.java:1224)\n\tat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1330)\n\tat org.apache.wicket.RequestCycle.request(RequestCycle.java:493)\n\tat org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:387)\n\tat org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:375)\n\tat org.apache.wicket.util.tester.BaseWicketTester.executeListener(BaseWicketTester.java:248)\n\tat org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:233)\n\tat com.mine.page.HomePageUnitTest.testRenderHomePage(HomePageUnitTest.java:21)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)\n\tat org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)\n\tat org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)\n\tat org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)\n\tat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)\n\tat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)\n\tat org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(JUnit4ClassRunner.java:88)\n\tat org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)\n\tat org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)\n\tat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)\n\tat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)\n\tat org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)\n\tat com.intellij.rt.junit4.Junit4TestMethodAdapter.run(Junit4TestMethodAdapter.java:49)\n\tat junit.textui.TestRunner.doRun(TestRunner.java:116)\n\tat com.intellij.rt.execution.junit.IdeaTestRunner.doRun(IdeaTestRunner.java:65)\n\tat junit.textui.TestRunner.doRun(TestRunner.java:109)\n\tat com.intellij.rt.execution.junit.IdeaTestRunner.startRunnerWithArgs(IdeaTestRunner.java:24)\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:118)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:40)\n\n\nSee http://www.nabble.com/Best-method-of-testing-borders-td16389412.html for more context.",
        "NumberFormatException with UrlCompressingWebRequestProcessor in WicketTester In my Application I use UrlCompressingWebRequestProcessor. Now I have a JUnit test case with WicketTester and that Application like this:\n\ntester.startPage(new ITestPageSource() {\n\tpublic Page getTestPage() {\n\t\tPageParameters params = new PageParameters();\n\t\tparams.add(\"0\", \"param\");\n\t\treturn new MyPage(params);\n\t}\n});\n\nI get an Exception:\n\njava.lang.NumberFormatException: For input string: \"testPage\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)\n\tat java.lang.Integer.parseInt(Integer.java:447)\n\tat java.lang.Integer.parseInt(Integer.java:497)\n\tat org.apache.wicket.protocol.http.request.urlcompressing.UrlCompressor.getComponentAndInterfaceForUID(UrlCompressor.java:124)\n\tat org.apache.wicket.protocol.http.request.urlcompressing.UrlCompressingWebRequestProcessor.resolveListenerInterfaceTarget(UrlCompressingWebRequestProcessor.java:81)\n\tat org.apache.wicket.request.AbstractRequestCycleProcessor.resolveRenderedPage(AbstractRequestCycleProcessor.java:440)\n\tat org.apache.wicket.protocol.http.WebRequestCycleProcessor.resolve(WebRequestCycleProcessor.java:139)\n\tat org.apache.wicket.RequestCycle.step(RequestCycle.java:1091)\n\tat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1177)\n\tat org.apache.wicket.RequestCycle.request(RequestCycle.java:500)\n\tat org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:381)\n\tat org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:368)\n\tat org.apache.wicket.util.tester.BaseWicketTester.executeListener(BaseWicketTester.java:239)\n\tat org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:224)\n\nI could work around this by using WebRequestCycleProcessor for my testing-application."
    ],
    [
        "WICKET-1663",
        "WICKET-1624",
        "Wicket tries to decode servlet path that already has been decoded by servlet container If you try to submit a query containing percent sign, for example, you will get something like this:\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nWicketMessage: Can't instantiate page using constructor public ru.yellteam.web.webPages.ShowYellowPage(org.apache.wicket.PageParameters) and argument 3 = \"1\" 2 = \"-\" 0 = \"English\" 1 = \"%\"\n\nRoot cause:\n\njava.lang.IllegalArgumentException: URLDecoder: Illegal hex characters in escape (%) pattern - For input string: \"/-\"\nat java.net.URLDecoder.decode(URLDecoder.java:173)\nat org.apache.wicket.protocol.http.RequestUtils.decode(RequestUtils.java:122)\nat org.apache.wicket.protocol.http.servlet.ServletWebRequest.getRelativePathPrefixToContextRoot(ServletWebRequest.java:177)\nat ru.yellteam.web.webPages.ShowYellowPage.<init>(ShowYellowPage.java:46)\nat java.lang.reflect.Constructor.newInstance(Constructor.java:494)\nat org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:154)\nat org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:96)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.newPage(BookmarkablePageRequestTarget.java:268)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.getPage(BookmarkablePageRequestTarget.java:283)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.processEvents(BookmarkablePageRequestTarget.java:210)\nat org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:90)\nat org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1166)\nat org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)\nat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)\nat org.apache.wicket.RequestCycle.request(RequestCycle.java:493)\nat org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)\nat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:194)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:215)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:188)\nat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\nat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:174)\nat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\nat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)\nat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:108)\nat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:151)\nat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:874)\nat org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:665)\nat org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:528)\nat org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:81)\nat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:689)\nat java.lang.Thread.run(Thread.java:595)\n\nComplete stack:\n\norg.apache.wicket.WicketRuntimeException: Can't instantiate page using constructor public ru.yellteam.web.webPages.ShowYellowPage(org.apache.wicket.PageParameters) and argument 3 = \"1\" 2 = \"-\" 0 = \"English\" 1 = \"%\"\nat org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:175)\nat org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:96)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.newPage(BookmarkablePageRequestTarget.java:268)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.getPage(BookmarkablePageRequestTarget.java:283)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.processEvents(BookmarkablePageRequestTarget.java:210)\nat org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:90)\nat org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1166)\nat org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)\nat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)\nat org.apache.wicket.RequestCycle.request(RequestCycle.java:493)\nat org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)\n\njava.lang.reflect.InvocationTargetException\nat sun.reflect.GeneratedConstructorAccessor16.newInstance(Unknown Source)\nat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\nat java.lang.reflect.Constructor.newInstance(Constructor.java:494)\nat org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:154)\nat org.apache.wicket.session.DefaultPageFactory.newPage(DefaultPageFactory.java:96)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.newPage(BookmarkablePageRequestTarget.java:268)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.getPage(BookmarkablePageRequestTarget.java:283)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.processEvents(BookmarkablePageRequestTarget.java:210)\nat org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:90)\nat org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1166)\nat org.apache.wicket.RequestCycle.step(RequestCycle.java:1241)\nat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1316)\nat org.apache.wicket.RequestCycle.request(RequestCycle.java:493)\nat org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:354)\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThe root cause of the problem is org.apache.wicket.protocol.http.servlet.ServletWebRequest line 177:\nString servletPath = RequestUtils.decode(getServletPath());\n\nwhere getServletPath() is :\n\tpublic String getServletPath()\n\t{\n\t\treturn httpServletRequest.getServletPath();\n\t}\n\nBasically what happens is that at line 177 Wicket tries to decode an url that was already decoded by Apache servlet container. URLDecoder sees something like '%/-' in the string to be decoded and blows up.\nThis problem could be fixed by replacing line 177 with:\n\t\t// MODIFIED BY BORISMAN\n\t\t// WAS: String servletPath = RequestUtils.decode(getServletPath());\n\t\tString servletPath = getServletPath();\n\n\n",
        "ServletWebRequest.getRelativePathPrefixToContextRoot() double decodes servlet path The following line in ServletWebRequest.getRelativePathPrefixToContextRoot()\n\n    String servletPath = RequestUtils.decode(getServletPath());\n\ncauses problems with relative path for CSS and images.  I believe it is because the servlet path is already URL decoded.  Running it again causes things that shouldn't be decoded to be decoded.  For example,\n\n%2B gets URL decoded to a plus (+).  But, running it again causes any + to be decoded to a space.  This causes the endsWith() check to fail when it shouldn't.  Because that fails, more \"../\" get prepended than is correct.\n\nI'll attach a quickstart which demonstrates the problem.\n\nI think the fix is to remove the RequestUtils.decode() call above, but someone closer to the code might feel this breaks something."
    ],
    [
        "WICKET-1729",
        "WICKET-1697",
        "Key creation in Localizer should still, somewhere, use the page  In response to bug:WICKET-1667, some changes were made in org.apache.wicket.Localizer.\nThis fixed the memory leak.\n\nStill, this introduced a bug as the creation of the keys for translation doesn't use the information from the Page instance itself to create the key. This means that, if the same key is used in 2 different pages, at root level, they will end up with the translation of the first page that was loaded.\n\nExample:\nPage A, displays a message with <wicket:message key=\"title\"> (with title=First page in PageA.properties)\nPage B, displays a message with <wicket:message key=\"title\"> (with title=Second page in PageB.properties)\n\nIf you access PageA before PageB, PageB will display the title from PageA, as the translation is cached.\n\nThis is because of the following code:\n[code]\n\t\t\t\tif (cursor instanceof Page)\n\t\t\t\t\tbreak;\n\t\t\t}[/code]\n\nThe correct code should probably be:\n[code]\n\t\t\t\tif (cursor instanceof Page)\n\t\t\t\t\tbuffer.append(\"-\").append(cursor.getClass().getName());\n\t\t\t\t\tbreak;\n\t\t\t}[/code]\n",
        "Bad caching in <wicket:message> tag for the same key in same markup structure wicket:message tag constructs the same key string (into cache) for same text key in the same 'element structure' in different pages. So if you load string in one page, this string will not change in other page until you change language etc.\nExample: you have two independent pages (in different packages) with own *.properties files (with 'title' key) and each page has HTML markup:\n<wicket:extend> <wicket:message key=\"title\"> ....\n\nIn this case, Localizer.java in line 210 will produce the same key (for 'title') for two independent pages. Because there is no parent div in markup file, cache key will be like this:\n\"title-org.apache.wicket.markup.resolver.MarkupInheritanceResolver$TransparentWebMarkupContainer:_extend11-org.apache.wicket.markup.resolver.MarkupInheritanceResolver$TransparentWebMarkupContainer:_child10-cs-null\"\nbut same for BOTH pages.\nProblem is, that this cache key is constructed via parent tags in HTML (up to page) and if you have the same parents and same key attribute in message tag, it will always hit cached string from other pages.\n\nThe only way to avoid this is to use different message keys in different pages. But this is very bad for us.\nI think, that one good solution is to append page name into cache string - it will be like namespace in XML...\n\nBye (perfect work with Wicket!)\nKarel, Prague"
    ],
    [
        "WICKET-1775",
        "WICKET-1774",
        "AutoCompleteTextField drop-down width limited to the width of target component The AutoCompleteTextField drop-down width is limited to the width of the target <INPUT> element. This is a major limitation when you have custom renderers that display additional information about the selectable item.\n\nI've managed to create a local fix and I've submitted two screenshots that describes the difference between an unpatched and patched autocomplete component.\n\nfunction showAutoComplete(){\n        var position=getPosition(wicketGet(elementId));\n        var menu = getAutocompleteMenu();\n        var input=wicketGet(elementId);\n        var index=getOffsetParentZIndex(elementId);        \n        menu.show();\n        menu.style.zIndex=index==\"auto\"?index:Number(index)+1;\n        menu.style.left=position[0]+'px'\n        menu.style.top=(input.offsetHeight+position[1])+'px';\n        menu.style.width='auto';\n        visible=1;\n        hideShowCovered();\n}\n\nI've set menu.style.width='auto'",
        "AutoCompleteTextField width is limited to the width of the associated input element. The width of the AutoCompleteTextField drop-down is limited to the width of the associated <INPUT> element. This is a major problem when you, for example, make us of custom renderers to display explainatory information to a choice.\n\nI'll submit images that demonstrated this."
    ],
    [
        "WICKET-1855",
        "WICKET-1650",
        "Using an AjaxSubmitLink outside of a Form does not set the form property When constructing an AjaxSubmitLink outside of a form using the constructor:\n\npublic AjaxSubmitLink(String id, final Form form)\n\nThe form argument is not set in the link. This prevents the form from seeing the link as its submitting component, which in turn means that using thing like enableDefaultFormProcessing() on the link don't work.\n\nChanging the constructor of AjaxSubmitLink to:\n\npublic AjaxSubmitLink(String id, final Form form)\n{\n  super(id, form)  /* was: super(id) */\n  ...\n}\n\nwill probably fix the problem.\n\nA temporary workaround is to implement a getForm() method in the subclass of the submit link which answers the form of the link\n",
        "AjaxSubmitLink attached to inner form may call wrong form's onSubmit() Just upgrading from 1.3.0 to 1.3.3 and I've noticed this bug, which seems to have been introduced with the implementation of the 'official' nested forms behaviour in 1.3.1.\n\nI have a page with the following structure (simplified):\n\n<form wicket:id=\"outer\">\n    <ajaxSubmitLink wicket:id=\"innerSubmitLink\" />\n    <form wicket:id=\"inner\">\n    </form>\n</form>\n\nIn other words, there's an outer form, which contains an inner form and an AjaxSubmitLink. The link is connected to the inner form (i.e. the inner form is passed into the link's constructor), but not contained within it; clicking the link should submit the inner form *only*. However, what actually happens is that the outer form's onSubmit() method is called.\n\nThis seems to be because the constructor for AjaxSubmitLink doesn't pass its form argument to the AbstractSubmitLink constructor, and therefore when Form.onFormSubmitted() calls submittingComponent.getForm() to find out which form has actually been submitted, it doesn't get back the inner form, but instead uses getParent() and finds the outer form.\n\nThis looks like it should be trivial to fix by making AjaxSubmitLink call the correct AbstractSubmitLink constructor, so instead of:\n\n    public AjaxSubmitLink(String id, final Form form)\n    {\n        super(id);\n\n\n...it does:\n\n    public AjaxSubmitLink(String id, final Form form)\n    {\n        super(id, form);\n\n\n...then the getForm() method will return the correct form -- the one passed in if it's not null, or otherwise the enclosing form."
    ],
    [
        "WICKET-1872",
        "WICKET-1483",
        "Url for behaviour and isTemporary flag of behaviour. You add two behaviors to the Component. First behavior is temporary and the second is normal. \nNow the wicket creates the url by \"urlFor(final Component component, final IBehavior behaviour, final RequestListenerInterface listener)\" for second behavior with behaviourId=1. On the end of request the wicket removes the temporary behavior. Now the component contains only 1 but not 2 behaviors. And in the next request in method \"public final void processEvents(final RequestCycle requestCycle)\" the wicket  tries to find the behavior by its id. But the problem is with if (component.getBehaviors().size() > idAsInt) condition, and with the fact that index of behavior is incorrect.\n\nThe problematic classes with their methods:\n\n*org.apache.wicket.RequestCycle:*\n\tpublic final CharSequence urlFor(final Component component, final IBehavior behaviour,\n\t\tfinal RequestListenerInterface listener)\n\t{\n\t\tint index = component.getBehaviors().indexOf(behaviour);\n\t\tif (index == -1)\n\t\t{\n\t\t\tthrow new IllegalArgumentException(\"Behavior \" + this +\n\t\t\t\t\" was not registered with this component: \" + component.toString());\n\t\t}\n\t\tRequestParameters params = new RequestParameters();\n\t\tparams.setBehaviorId(String.valueOf(index));\n...\n==============================================================================================\n*org.apache.wicket.request.target.component.listener.BehaviorRequestTarget*\n\n\tpublic final void processEvents(final RequestCycle requestCycle)\n\t{\n\t\t// Preprocess like standard component request. Do all the initialization\n\t\t// necessary\n\t\tonProcessEvents(requestCycle);\n\n\t\t// Get the IBehavior for the component based on the request parameters\n\t\tfinal Component component = getTarget();\n\t\tfinal String id = getRequestParameters().getBehaviorId();\n\t\tif (id == null)\n\t\t{\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\t\"Parameter behaviorId was not provided: unable to locate listener. Component: \" +\n\t\t\t\t\t\t\tcomponent.toString());\n\t\t}\n\n\t\tfinal int idAsInt = Integer.parseInt(id);\n\t\tIBehaviorListener behaviorListener = null;\n\t\tif (component.getBehaviors().size() > idAsInt)\n",
        "Unusual ClassCastException (SimpleAttributeModifier to IBehaviorListener) processing onError. Build the application from the four class files and one html file below. Run class Start as an application. Go to your browser, to this URL:\n\nhttp://localhost:4280/behaviorbug/\n\nType some text into the text field. After six characters, it will throw a ClassCastException.\n\nSource:\n\npackage com.bugs.behaviorBug;\n\nimport org.apache.wicket.ajax.AjaxRequestTarget;\nimport org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\nimport org.apache.wicket.behavior.SimpleAttributeModifier;\nimport org.apache.wicket.markup.html.form.TextField;\nimport org.apache.wicket.model.IModel;\n\npublic class BehaviorBug extends TextField {\n\n  public BehaviorBug(String id, IModel model) {\n    super( id, model );\n    init();\n  }\n\n  private int kc = 0;\n  private int cc = 0;\n  private final SimpleAttributeModifier blackBorder = new SimpleAttributeModifier(\n      \"border-color\", \"black\" );\n  private final SimpleAttributeModifier redBorder = new SimpleAttributeModifier(\n      \"border-color\", \"red\" );\n  private SimpleAttributeModifier currentBorder = null;\n\n  private void init() {\n    setBorder( this.blackBorder );\n    AjaxFormComponentUpdatingBehavior changeWarningBehavior = new AjaxFormComponentUpdatingBehavior(\n        \"onchange\" ) {\n\n      @Override\n      protected void onUpdate(AjaxRequestTarget target) {\n        System.err.println( \"WarningTextField onUpdate onChange \"\n            + BehaviorBug.this.cc++ );\n        reColor();\n      }\n\n    };\n\n    // I'm trying to do something tricky here. I want it to validate after every\n    // keystroke, so the user can get instant feedback on when the data is good.\n    AjaxFormComponentUpdatingBehavior keyUpWarningBehavior = new AjaxFormComponentUpdatingBehavior(\n        \"onkeyup\" ) {\n\n      @Override\n      protected void onUpdate(AjaxRequestTarget target) {\n        System.err.println( \"WarningTextField onUpdate onKeyUp \"\n            + BehaviorBug.this.kc++ );\n        reColor();\n        // Thread.dumpStack();\n      }\n\n      // The implementation of AjaxFormComponentUpdatingBehavior only calls\n      // onUpdate\n      // when the field is valid. Since it won't update when the field is\n      // invalid, I\n      // can't get my instant feedback unless I call onUpdate() when there's an\n      // error.\n      // Since I can't override onEvent() (It's final), I override onError to\n      // force\n      // an update even when the field is invalid. This should be safe, since\n      // onError()\n      // is only called on invalid data with a null exception, in which case it\n      // does\n      // nothing.\n      // This, however, seems to be what causes the bug. I have no idea why this\n      // would cause the bug.\n      @Override\n      protected void onError(AjaxRequestTarget target, RuntimeException e) {\n        // Called on validation error with a null e.\n        super.onError( target, e ); // Throws e, if it's not null. Does nothing\n                                    // otherwise.\n        onUpdate( target );\n      }\n\n    };\n    add( changeWarningBehavior );\n    add( keyUpWarningBehavior );\n  }\n\n  private void reColor() {\n    if ( isValid() ) {\n      setBorder( BehaviorBug.this.blackBorder );\n    } else {\n      setBorder( BehaviorBug.this.redBorder );\n    }\n  }\n\n  private void setBorder(SimpleAttributeModifier border) {\n    if ( this.currentBorder != null && this.currentBorder != border ) {\n      remove( this.currentBorder );\n    }\n    this.currentBorder = border;\n    add( this.currentBorder );\n  }\n}\n\npackage com.bugs.behaviorBug;\n\nimport org.apache.wicket.Application;\nimport org.apache.wicket.Page;\nimport org.apache.wicket.Request;\nimport org.apache.wicket.Response;\nimport org.apache.wicket.Session;\nimport org.apache.wicket.protocol.http.WebApplication;\nimport org.apache.wicket.protocol.http.WebSession;\n\n/**\n * \n * @author Miguel Mu\u00f1oz\n * @version $Id$\n * \n */\npublic class BehaviorBugApplication extends WebApplication {\n\n  /**\n   * Constructor\n   */\n  public BehaviorBugApplication() {\n    // empty\n  }\n\n  @Override\n  protected void init() {\n    // empty\n  }\n\n  @Override\n  public Class<? extends Page> getHomePage() {\n    return Index.class;\n  }\n\n  /*\n   * (non-Javadoc)\n   * \n   * @see org.apache.wicket.protocol.http.WebApplication#newSession(org.apache.wicket.Request,\n   *      org.apache.wicket.Response)\n   */\n  @Override\n  public Session newSession(Request request, Response response) {\n    return new BugSession( this, request );\n  }\n  \n  public class BugSession extends WebSession {\n    public BugSession(Application application, Request request) {\n      super(request);\n      setApplication( application );\n    }\n  }\n}\n\npackage com.bugs.behaviorBug;\n\nimport org.apache.wicket.markup.html.WebPage;\nimport org.apache.wicket.markup.html.form.Form;\nimport org.apache.wicket.markup.html.form.TextField;\nimport org.apache.wicket.model.Model;\nimport org.apache.wicket.validation.IValidator;\nimport org.apache.wicket.validation.validator.StringValidator;\n\n/**\n * \n * @author Miguel Mu\u00f1oz\n * @version $Id$\n * \n */\npublic class Index extends WebPage {\n\n  /**\n   * \n   */\n  public Index() {\n    Form form = new Form(\"form\");\n    TextField textField = new BehaviorBug(\"testfield\", new Model());\n    IValidator lengthValidator = new StringValidator.MaximumLengthValidator(4);\n    textField.add( lengthValidator );\n    form.add( textField );\n    add(form);\n  }\n  \n}\n\npackage com.bugs.behaviorBug;\n\nimport org.mortbay.jetty.Connector;\nimport org.mortbay.jetty.Server;\nimport org.mortbay.jetty.nio.SelectChannelConnector;\nimport org.mortbay.jetty.webapp.WebAppContext;\n\n/**\n * \n * @author Miguel Mu\u00f1oz\n * @version $Id$\n * \n */\npublic class Start {\n  private static final int defaultPort = 4280;\n  /**\n   * \n   * @param args\n   */\n  public static void main(String[] args) {\n    int port = defaultPort;\n    if (args.length != 0) {\n      try {\n        port = Integer.valueOf( args[0] );\n      } catch ( NumberFormatException e ) {\n        System.err.println(\"Unable to parse port parameter \\\"\" + args[0] + \"\\\" as an integer.\");\n        System.err.println(\"Using default value of x \" + defaultPort);\n      }\n    }\n    Server server = new Server();\n    SelectChannelConnector connector = new SelectChannelConnector();\n    connector.setPort( port );\n    server.setConnectors( new Connector[] { connector } );\n\n    WebAppContext web = new WebAppContext();\n//    web.setContextPath( \"/workspace/WicketTutorial\" );\n    web.setContextPath( \"/behaviorbug\" );\n    System.out.println( \"CP: \" + web.getContextPath() );\n    web.setWar( \"src/main/webapp\" + port );\n    server.addHandler( web );\n    \n    try {\n      server.start(); // Who was the bozo who declared this to throw Exception?\n      server.join();\n    } catch ( Exception e ) {\n      e.printStackTrace();\n      System.exit( 1 );\n    }\n  }\n}\n\n<html>\n<head>\n<title>Behavior Bug</title>\n<link href=\"style.css\" rel=\"stylesheet\" />\n</head>\n<body>\n<div id=\"container\">\n\t<div id=\"header\">Behavior Bug</div>\n\t<div id=\"content\">\n\t\tType some text into the field below. After six characters, you'll get a stack trace.\n\t\t<form wicket:id=\"form\">\n\t\t\t<input type=\"text\" wicket:id=\"testfield\" name=\"txt\" width=\"35\" size=\"25\" /><p>\n\t\t\tsubmit: <input type=\"submit\" value=\"That's all, Folks!\"/></p>\n\t\t</form>\n\t\tEnd of form.\n\t</div>\n</div>\nTest of Build Process.\n</body>\n</html>"
    ],
    [
        "WICKET-1889",
        "WICKET-1835",
        "ContextImage not generating expected path relative to context root  According to the javadocs the image path for ContextImage \"will be prefixed such that the image is relative to the context root\".\n\nIn my markup I've got:\n<img wicket:id=\"logo\" src=\"mylogo.gif\" />\n\nThen I add the ContextImage to my WebPage:\nadd(new ContextImage(\"logo\", \"images/logos/mylogo.gif\"));\n\n... and I end up with the following in the generated markup:\n<img src=\"../images/logos/mylogo.gif\" />\n\nMy application is deployed with a context root of /myapp and this doesn't work as it resolves to http://mydomain.com/images/logos/mylogo.gif, when it should be http://mydomain.com/myapp/images/logos/mylogo.gif\nAs far as I can tell ContextImage will only work as described when the application is deployed with a context root of /. \nI've checked the source which ContextImage uses to get the context root and in org.apache.wicket.Request it says:\n\n/**\n* Gets a prefix to make this relative to the context root.\n* <p>\n* For example, if your context root is http://server.com/myApp/ and the request is for\n* /myApp/mountedPage/, then the prefix returned might be \"../../\".\n* <p>\n* For a particular technology, this might return either an absolute prefix or a relative one.\n*\n* @return Prefix relative to this request required to back up to context root.\n*/\npublic abstract String getRelativePathPrefixToContextRoot();\n\nHere it clearly states that the context root is \"http://server.com/myApp/\" but the example prefix of \"../../\" relative to \"/myApp/mountedPage/\" does not take you to the context root of /myApp/ but to / which is *not* the Context Root.\n\nI guess this also effects any other components that make use of the same getRelativePathPrefixToContextRoot().",
        "Incorrect context path when linking to static resources (css/javascript) in a template page Per this email thread:\n\nhttp://www.nabble.com/Linking-to-static-css-files-in-a-template-page-bug--td19481551.html\n\nThis does not work correctly for context relative paths.\n\nFor example, for an application deployed with this url:\n\nhttp://localhost:8080/myapp/\n\nThis call in a parent TemplatePage (using page inheritance):\n\nadd( HeaderContributor.forCss( \"/assets/css/style.css\") );\n\nshould render the following:\n\n<link rel=\"stylesheet\" href=\"/myapp/assets/css/style.css\" type=\"text/css\"/> \n\nBut it does not.  It currently renders this (absolute) path:\n\n<link rel=\"stylesheet\" href=\"/assets/css/style.css\" type=\"text/css\"/> \n\nI'm assuming the same thing occurs for JavaScript files contributed in the same way, but I haven't tested that yet.\n\n\n\n"
    ],
    [
        "WICKET-1943",
        "WICKET-1504",
        "Wicket is changing the HTML within an input tag, autocomplete attribute from off to false To prevent Firefox from using its Autocomplete feature on input fields, it is recommend that you use autocomplete='off' as an attribute within the input tag. \nHowever, wicket reads this and changes it to autocomplete = 'false'\n\nHence a tag which initially reads \n<input wicket:id=\"footag\" autocomplete=\"off\" />\n, gets rendered by wicket as \n<input id=\"fooTag3\" name=\"fooTag\" value=\"\" autocomplete=\"false\" wicket:id=\"footag\"/>\n\nThis then does not work with firefox or internet explorer. Autocomplete is not an html standard, however wicket should not be changing the html attributes.",
        "AutoCompleteTextField - javascript error \"type mismatch\" in line 227 in IE I just swithed from 1.3.2 to 1.3.3 and that resultet in a javascript error \"type mismatch\" in line 227, \nwich is this line in wicket-autocomplete.js: \n\n        menu.style.zIndex=index==\"auto\"?index:Number(index)+1;\n\nOnly in IE (6.0) - firefox works fine. \n"
    ],
    [
        "WICKET-1976",
        "WICKET-1513",
        "NPE when <wicket:link> embedding <input type=\"image\" src\"...\"> works: \n<wicket:link>\n   <img src=\"resources/prev.png\">\n</wicket:link>\n\ndoesn't work:\n<wicket:link>\n   <input type=\"image\" src=\"resources/prev.png\" />\n</wicket:link>\n\nErrorLog:\n\nWicketMessage: Exception in rendering component: [MarkupContainer [Component id = _link5]]\n\nRoot cause:\n\njava.lang.NullPointerException\nat org.apache.wicket.markup.resolver.AutoLinkResolver$PathInfo.<init>(AutoLinkResolver.java:249)\nat org.apache.wicket.markup.resolver.AutoLinkResolver.resolveAutomaticLink(AutoLinkResolver.java:812)\nat org.apache.wicket.markup.resolver.AutoLinkResolver.resolve(AutoLinkResolver.java:747)\nat org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1324)\nat org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1476)\nat org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1401)\nat org.apache.wicket.Component.renderComponent(Component.java:2480)\nat org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1411)\nat org.apache.wicket.Component.render(Component.java:2317)\nat org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:223)\nat org.apache.wicket.markup.resolver.WicketLinkResolver.resolve(WicketLinkResolver.java:73)\nat org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1324)\nat org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1427)\nat org.apache.wicket.Page.onRender(Page.java:1470)\nat org.apache.wicket.Component.render(Component.java:2317)\nat org.apache.wicket.Page.renderPage(Page.java:904)\nat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:231)\nat org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:104)\nat org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1181)\nat org.apache.wicket.RequestCycle.step(RequestCycle.java:1252)\nat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1353)\nat org.apache.wicket.RequestCycle.request(RequestCycle.java:493)\nat org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:355)\nat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:200)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\nat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)\nat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)\nat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\nat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)\nat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\nat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:261)\nat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)\nat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:581)\nat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)\nat java.lang.Thread.run(Thread.java:619) ",
        "\"input\" tag with type=\"image\" results in null pointer exception in AutoLinkResolver Something like:\n<input type=\"image\" value=\"Sign up\" src=\"images/ok.png\" />\nshould reproduce the error (this is valid XHTML).\n\nor:\n<embed src=\"flash.swf\" />\n\nor:\n<anything src=\"...\" />\n\njava.lang.NullPointerException\n     at org.apache.wicket.markup.resolver.AutoLinkResolver$PathInfo.<init>(AutoLinkResolver.java:249)\n     at org.apache.wicket.markup.resolver.AutoLinkResolver.resolveAutomaticLink(AutoLinkResolver.java:808)\n     at org.apache.wicket.markup.resolver.AutoLinkResolver.resolve(AutoLinkResolver.java:742)\n     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1324)\n     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1427)\n     at org.apache.wicket.Page.onRender(Page.java:1460)"
    ],
    [
        "WICKET-2046",
        "WICKET-1403",
        "wicket-guice do not work correctly when the application is redeployed with persistent sessions The way wicket-guice (or rather, wicket-ioc) manages the typestore make it not work correctly when the application is redeployed with persistent sessions.\n\nWhen a proxy need to be retrieved from the typestore, before an object of the same type was being injected, GuiceProxyTargetLocator.locateProxyTarget() is called but the type is not present on the application typestore. See, it's added to the typestore in GuiceProxyTargetLocator constructor.",
        "Reinjection fails after Server restart Please see attached testcase. \nSteps to reproduce: \n* start it with mvn resin:run, go to http://localhost:8080/example\n* click a few times\n* stop & restart \n* reload the page (everything fine here (means reload obviously succeeds)\n* click again, you\u00b4ll face\n{code}\nCaused by: java.lang.NullPointerException: type\n\tat com.google.inject.util.Objects.nonNull(Objects.java:35)\n\tat com.google.inject.TypeLiteral.<init>(TypeLiteral.java:69)\n\tat com.google.inject.TypeLiteral$SimpleTypeLiteral.<init>(TypeLiteral.java:181)\n\tat com.google.inject.TypeLiteral.get(TypeLiteral.java:169)\n\tat org.apache.wicket.guice.GuiceProxyTargetLocator.locateProxyTarget(GuiceProxyTargetLocator.java:61)\n\tat org.apache.wicket.proxy.LazyInitProxyFactory$JdkHandler.invoke(LazyInitProxyFactory.java:412)\n\tat org.apache.wicket.proxy.$Proxy13.foo(Unknown Source)\n\tat org.codesmell.HomePage$1.onClick(HomePage.java:25)\n\tat org.apache.wicket.markup.html.link.Link.onLinkClicked(Link.java:214)\n\t... 21 more\n{code}\n\nGuiceProxyTargetLocator does not seem to be coded to cope with this. "
    ],
    [
        "WICKET-2055",
        "WICKET-2032",
        "AutoCompleteTextField doesn't notify that ajax reqeust returned. When AutoCompleteTextField value is empty ( i.eafter writing and deleting characters) AutoCompleteTextField  doesn't call wicketGlobalPostCallHandler() and doesn't hide ajax indicator.\n\nI found the problem in wicket-autocomplete.js:\n\n function doUpdateChoices(resp){\n    \n    \t// check if the input hasn't been cleared in the meanwhile\n    \tvar input=wicketGet(elementId);\n   \t\tif ((Wicket.Focus.getFocusedElement() != input) || !cfg.showListOnEmptyInput && (input.value==null || input.value==\"\")) {\n   \t\t\thideAutoComplete();\n   \t\t\treturn;   ***** <- bug here ****\n   \t\t}\n\nif input.value is empty the function returns without calling:\n        Wicket.Log.info(\"Response processed successfully.\");\n        Wicket.Ajax.invokePostCallHandlers();\n        hideIndicator(); \n\n(which is found and the end of the function)",
        "CLONE -Wicket-autocomplete.js does not invoke invokePostCallHandlers() when input string is 0 lenght or null when AutoCompleteTextField is reset to a 0 length input String (using backspace for exemple)  Wicket.Ajax.invokePostCallHandlers(); is not invoke. it is a problem cause Wicket.Ajax.registerPreCallHandler is called.\n\nwhen these events are used to show ajax busy indicator for exemple, it stay on busy state.\n\ni think that  \n(solution 1) pre and post should be called on 0 input string length call  \nor\n(solution 2) pre and post should not be called (there is no ajax call after all)\n\nbut not pre called et not post.\n\nfor case 1 (pre and post, it can be fixed quickly in wicket-autocomplete.js   function doUpdateChoices(resp) \n\nadding \n\nif ((Wicket.Focus.getFocusedElement() != input) || !cfg.showListOnEmptyInput && (input.value==null || input.value==\"\")) {\n   \t\t\thideAutoComplete();\n\t\t\tWicket.Ajax.invokePostCallHandlers();  // line to be added\n   \t\t\treturn;\n}\n\ni don't have enought insight in wicket-ajax for proposing a fix for solution 2\n\nthanx"
    ],
    [
        "WICKET-2106",
        "WICKET-2093",
        "SubmitLink does not work when used inside Form that is a transparent resolver When a submitlink is added as a child to a form, of which the Form is a transparent resolver: Either the onclick is not rendered properly, or the onclick is rendered ok but the 'event'  never gets in the onSubmit() of the link. A test quickstart test project is attached to this ticket to simulate the problem.",
        "SubmitLink.onSubmit() is not called for submit links outside the form SubmitLink.onSubmit() is not called for submit links outside the form"
    ],
    [
        "WICKET-2376",
        "WICKET-2369",
        "In some cases, org.apache.wicket.extensions.markup.html.repeater.data.table.NavigatorToolbar is not displayed even when there are multiple pages in the DataTable it is attached to The following can recreate the problem:\r\n\r\n1. Create a DataTable with a NavigationToolbar and a page length less than what the data provider will return, i.e., the data table will have more than one page initially.\r\n\r\n2. Add two buttons to the page; the first one, when submitted, will change the criteria of the data provider to return less rows than what can be displayed in one page of the DataTable and reload the page, i.e., after pressing the button, the page will be reloaded with the datatable having only one page and, therefore, the NavigationToolbar will not be visible anymore.\r\n\r\n3. The second button will change the criteria of the data provider back to what it was originally, i.e., it will have more rows than can be displayed in one page of the DataTable, and reload the page. At that point, the NavigationToolbar should be shown again, but it isn't.\r\n\r\nI've found that the bug is due to the fact that the onBeforeRender() method of NavigationToolbar which have the following line for determining visibility of the toolbar:\r\n\r\n      setVisible(table.getPageCount() > 1);\r\n\r\nis not called when the 2nd button is pressed in the above scenario.\r\n\r\nI've been able to work-around this problem by subclassing NavigationToolbar and overidding isVisible() method (which is called many times however, and might cause some performance problems) and added the above line of code as such:\r\n\r\n    @Override\r\n    public boolean isVisible()\r\n    {\r\n        return getTable().getPageCount() > 1;\r\n    }\r\n",
        "Pagination is invisible. When 'AjaxFallbackDefaultDataTable' is refreshed with 'ajax' target, if the content in the table is less than the max size of the page, then the next time, even if the content in the table exceeds the max page size, pagination is not visible.\r\n\r\nObservation\r\n\r\nWhen page is loaded at the first time, the pagination is visible as the page size is 2 and total no of records is 3. (Expected)\r\nAfter that when type \"mary\" in search box and hit the submit button, the pagination is invisible as total no of records currently is 1. (Expected)\r\nAfter that search again for all people by type \"*\" in search box which will result 3 people again. But at this point of time pagination is invisible even though the content in the table exceeds the max page size. (Not Expected)\r\n\r\nThe test page attached has been also uploaded."
    ],
    [
        "WICKET-2402",
        "WICKET-2369",
        "SetRowsPerPage with AjaxFallbackDefaultDataTable The issue was reported earlier by Anton Veretennikov http://www.nabble.com/setRowsPerPage-with-AjaxFallbackDefaultDataTable-tp22521131p22521131.html.\r\n\r\nHis proposed solution to override the NavigationToolbar#isVisible works for me too.\r\n\r\n  @Override\r\n  public boolean isVisible() {\r\n    return table.getPageCount()>1;\r\n  } ",
        "Pagination is invisible. When 'AjaxFallbackDefaultDataTable' is refreshed with 'ajax' target, if the content in the table is less than the max size of the page, then the next time, even if the content in the table exceeds the max page size, pagination is not visible.\r\n\r\nObservation\r\n\r\nWhen page is loaded at the first time, the pagination is visible as the page size is 2 and total no of records is 3. (Expected)\r\nAfter that when type \"mary\" in search box and hit the submit button, the pagination is invisible as total no of records currently is 1. (Expected)\r\nAfter that search again for all people by type \"*\" in search box which will result 3 people again. But at this point of time pagination is invisible even though the content in the table exceeds the max page size. (Not Expected)\r\n\r\nThe test page attached has been also uploaded."
    ],
    [
        "WICKET-2402",
        "WICKET-2376",
        "SetRowsPerPage with AjaxFallbackDefaultDataTable The issue was reported earlier by Anton Veretennikov http://www.nabble.com/setRowsPerPage-with-AjaxFallbackDefaultDataTable-tp22521131p22521131.html.\r\n\r\nHis proposed solution to override the NavigationToolbar#isVisible works for me too.\r\n\r\n  @Override\r\n  public boolean isVisible() {\r\n    return table.getPageCount()>1;\r\n  } ",
        "In some cases, org.apache.wicket.extensions.markup.html.repeater.data.table.NavigatorToolbar is not displayed even when there are multiple pages in the DataTable it is attached to The following can recreate the problem:\r\n\r\n1. Create a DataTable with a NavigationToolbar and a page length less than what the data provider will return, i.e., the data table will have more than one page initially.\r\n\r\n2. Add two buttons to the page; the first one, when submitted, will change the criteria of the data provider to return less rows than what can be displayed in one page of the DataTable and reload the page, i.e., after pressing the button, the page will be reloaded with the datatable having only one page and, therefore, the NavigationToolbar will not be visible anymore.\r\n\r\n3. The second button will change the criteria of the data provider back to what it was originally, i.e., it will have more rows than can be displayed in one page of the DataTable, and reload the page. At that point, the NavigationToolbar should be shown again, but it isn't.\r\n\r\nI've found that the bug is due to the fact that the onBeforeRender() method of NavigationToolbar which have the following line for determining visibility of the toolbar:\r\n\r\n      setVisible(table.getPageCount() > 1);\r\n\r\nis not called when the 2nd button is pressed in the above scenario.\r\n\r\nI've been able to work-around this problem by subclassing NavigationToolbar and overidding isVisible() method (which is called many times however, and might cause some performance problems) and added the above line of code as such:\r\n\r\n    @Override\r\n    public boolean isVisible()\r\n    {\r\n        return getTable().getPageCount() > 1;\r\n    }\r\n"
    ],
    [
        "WICKET-2422",
        "WICKET-2369",
        "DefaultDataTable hides NavigationToolbar once and forever DefaultDataTable does not show NavigationToolbar if initial data does not require more than one page.\r\nDefaultDataTable hides and does not show NavigationToolbar again if data one time does not require more than one page .\r\n",
        "Pagination is invisible. When 'AjaxFallbackDefaultDataTable' is refreshed with 'ajax' target, if the content in the table is less than the max size of the page, then the next time, even if the content in the table exceeds the max page size, pagination is not visible.\r\n\r\nObservation\r\n\r\nWhen page is loaded at the first time, the pagination is visible as the page size is 2 and total no of records is 3. (Expected)\r\nAfter that when type \"mary\" in search box and hit the submit button, the pagination is invisible as total no of records currently is 1. (Expected)\r\nAfter that search again for all people by type \"*\" in search box which will result 3 people again. But at this point of time pagination is invisible even though the content in the table exceeds the max page size. (Not Expected)\r\n\r\nThe test page attached has been also uploaded."
    ],
    [
        "WICKET-2422",
        "WICKET-2376",
        "DefaultDataTable hides NavigationToolbar once and forever DefaultDataTable does not show NavigationToolbar if initial data does not require more than one page.\r\nDefaultDataTable hides and does not show NavigationToolbar again if data one time does not require more than one page .\r\n",
        "In some cases, org.apache.wicket.extensions.markup.html.repeater.data.table.NavigatorToolbar is not displayed even when there are multiple pages in the DataTable it is attached to The following can recreate the problem:\r\n\r\n1. Create a DataTable with a NavigationToolbar and a page length less than what the data provider will return, i.e., the data table will have more than one page initially.\r\n\r\n2. Add two buttons to the page; the first one, when submitted, will change the criteria of the data provider to return less rows than what can be displayed in one page of the DataTable and reload the page, i.e., after pressing the button, the page will be reloaded with the datatable having only one page and, therefore, the NavigationToolbar will not be visible anymore.\r\n\r\n3. The second button will change the criteria of the data provider back to what it was originally, i.e., it will have more rows than can be displayed in one page of the DataTable, and reload the page. At that point, the NavigationToolbar should be shown again, but it isn't.\r\n\r\nI've found that the bug is due to the fact that the onBeforeRender() method of NavigationToolbar which have the following line for determining visibility of the toolbar:\r\n\r\n      setVisible(table.getPageCount() > 1);\r\n\r\nis not called when the 2nd button is pressed in the above scenario.\r\n\r\nI've been able to work-around this problem by subclassing NavigationToolbar and overidding isVisible() method (which is called many times however, and might cause some performance problems) and added the above line of code as such:\r\n\r\n    @Override\r\n    public boolean isVisible()\r\n    {\r\n        return getTable().getPageCount() > 1;\r\n    }\r\n"
    ],
    [
        "WICKET-2422",
        "WICKET-2402",
        "DefaultDataTable hides NavigationToolbar once and forever DefaultDataTable does not show NavigationToolbar if initial data does not require more than one page.\r\nDefaultDataTable hides and does not show NavigationToolbar again if data one time does not require more than one page .\r\n",
        "SetRowsPerPage with AjaxFallbackDefaultDataTable The issue was reported earlier by Anton Veretennikov http://www.nabble.com/setRowsPerPage-with-AjaxFallbackDefaultDataTable-tp22521131p22521131.html.\r\n\r\nHis proposed solution to override the NavigationToolbar#isVisible works for me too.\r\n\r\n  @Override\r\n  public boolean isVisible() {\r\n    return table.getPageCount()>1;\r\n  } "
    ],
    [
        "WICKET-2427",
        "WICKET-2375",
        "substituteDate function doesn't respect date pattern The function Wicket.DateTime.substituteDate in wicket-date.js fails to correctly format dates.\r\n\r\nExample: create a datetextfield like this\r\nDateTextField birthDate = DateTextField.forDateStyle(\"birthdateFromAndTo\", \"M-\");\r\nand add a DatePicker to it:\r\nbirthDate.add(new DatePicker());\r\nThe datetextfield will only validate when the input matches 'd-MMM-yyyy' (for my locale, at least) as can be verified by executing birthDate.getTextFormat(). This translates to '17-augustus-2009' for today's date.\r\n\r\nHowever, when a date is selected in the datepicker, it puts '17-8-2009' in the DateTextField. The reason is, I believe, that subsituteDate() assumes that all fields in the pattern are numbers. Instead, it should execute a proper date formatting. The function either should call the Wicket side to format the input date, or it should do it in javascript. On http://www.timdown.co.uk/code/simpledateformat.js I found an Apache licensed piece of javascript code that should do the work (it misses l10n though).",
        "Changing the date format of org.apache.wicket.extensions.yui.calendar.DateField does not work I've tried many different ways of changing the date pattern of the selected date in DateField but none worked. I've looked at the produced javascript code and I could see that the datePattern is set to the configured date format (dd-MMM-yy); however, the selected date is still displayed in the following format 'dd-MM-yyyy' .\r\n\r\nBelow is my code for creating the DateField and setting the date pattern:\r\n\r\n<code>\r\neditor = new DateField(\"editor\", new PropertyModel(model, property))\r\n        {\r\n            @Override\r\n            protected DateTextField newDateTextField(String id, PropertyModel model)\r\n            {\r\n                return DateTextField.withConverter(id, model,\r\n                    new PatternDateConverter(\"dd-MMM-yy\", true));\r\n            }\r\n\r\n            @Override\r\n            protected DatePicker newDatePicker()\r\n            {\r\n                return new DatePicker()\r\n                {\r\n                    @Override\r\n                    protected String getDatePattern()\r\n                    {\r\n                        return \"dd-MMM-yy\";\r\n                    }\r\n                };\r\n            }\r\n        };\r\n</code>"
    ],
    [
        "WICKET-2501",
        "WICKET-2500",
        "BaseWicketTester clickLink calls onBeginRequest two times. Whilte testing a page using BaseWicketTester.clickLink, it results in calling two times the RequestCycle onBeginRequest.\r\nIs this correct? This cause a problem to me cause in onBeginRequest I open DB transaction as per Open Session in View pattern. So transaction is opened a second time before being committed.\r\n\r\nfirst time, line 697\r\ncallOnBeginRequest(requestCycle);\r\n\r\nsecond time, line 704\r\nprocessRequestCycle(requestCycle);\r\n\r\nalso call onBeginRequest as you see in the stack:\r\n\r\nThread [main] (Suspended (breakpoint at line 24 in SessionManager))   \r\n    SessionManager.start() line: 24   \r\n    DataRequestCycle.onBeginRequest() line: 26   \r\n    DataRequestCycle(RequestCycle).prepare() line: 1240   \r\n    DataRequestCycle(RequestCycle).step() line: 1304   \r\n    DataRequestCycle(RequestCycle).steps() line: 1428   \r\n    DataRequestCycle(RequestCycle).request() line: 545   \r\n    WicketTester(MockWebApplication).processRequestCycle(WebRequestCycle) line: 504   \r\n    WicketTester(BaseWicketTester).clickLink(String, boolean) line: 704   \r\n    WicketTester(BaseWicketTester).clickLink(String) line: 649   \r\n    EditPageTest.addProducts() line: 50   \r\n    NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]   \r\n    NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39   \r\n    DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25   \r\n    Method.invoke(Object, Object...) line: 597   \r\n    TestMethod.invoke(Object) line: 59   \r\n    MethodRoadie.runTestMethod() line: 98   \r\n    MethodRoadie$2.run() line: 79   \r\n    MethodRoadie.runBeforesThenTestThenAfters(Runnable) line: 87   \r\n    MethodRoadie.runTest() line: 77   \r\n    MethodRoadie.run() line: 42   \r\n    JUnit4ClassRunner.invokeTestMethod(Method, RunNotifier) line: 88   \r\n    JUnit4ClassRunner.runMethods(RunNotifier) line: 51   \r\n    JUnit4ClassRunner$1.run() line: 44   \r\n    ClassRoadie.runUnprotected() line: 27   \r\n    ClassRoadie.runProtected() line: 37   \r\n    JUnit4ClassRunner.run(RunNotifier) line: 42   \r\n    JUnit4TestMethodReference(JUnit4TestReference).run(TestExecution) line: 46   \r\n    TestExecution.run(ITestReference[]) line: 38   \r\n    RemoteTestRunner.runTests(String[], String, TestExecution) line: 467   \r\n    RemoteTestRunner.runTests(TestExecution) line: 683   \r\n    RemoteTestRunner.run() line: 390   \r\n    RemoteTestRunner.main(String[]) line: 197   \r\n\r\n\r\n\r\n-- \r\nDaniele Dellafiore\r\nhttp://blog.ildella.net\r\nhttp://twitter.com/ildella\r\n",
        "BaseWicketTester clickLink calls onBeginRequest two times. Whilte testing a page using BaseWicketTester.clickLink, it results in calling two times the RequestCycle onBeginRequest.\r\nIs this correct? This cause a problem to me cause in onBeginRequest I open DB transaction as per Open Session in View pattern. So transaction is opened a second time before being committed.\r\n\r\nfirst time, line 697\r\ncallOnBeginRequest(requestCycle);\r\n\r\nsecond time, line 704\r\nprocessRequestCycle(requestCycle);\r\n\r\nalso call onBeginRequest as you see in the stack:\r\n\r\nThread [main] (Suspended (breakpoint at line 24 in SessionManager))   \r\n    SessionManager.start() line: 24   \r\n    DataRequestCycle.onBeginRequest() line: 26   \r\n    DataRequestCycle(RequestCycle).prepare() line: 1240   \r\n    DataRequestCycle(RequestCycle).step() line: 1304   \r\n    DataRequestCycle(RequestCycle).steps() line: 1428   \r\n    DataRequestCycle(RequestCycle).request() line: 545   \r\n    WicketTester(MockWebApplication).processRequestCycle(WebRequestCycle) line: 504   \r\n    WicketTester(BaseWicketTester).clickLink(String, boolean) line: 704   \r\n    WicketTester(BaseWicketTester).clickLink(String) line: 649   \r\n    EditPageTest.addProducts() line: 50   \r\n    NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]   \r\n    NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39   \r\n    DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25   \r\n    Method.invoke(Object, Object...) line: 597   \r\n    TestMethod.invoke(Object) line: 59   \r\n    MethodRoadie.runTestMethod() line: 98   \r\n    MethodRoadie$2.run() line: 79   \r\n    MethodRoadie.runBeforesThenTestThenAfters(Runnable) line: 87   \r\n    MethodRoadie.runTest() line: 77   \r\n    MethodRoadie.run() line: 42   \r\n    JUnit4ClassRunner.invokeTestMethod(Method, RunNotifier) line: 88   \r\n    JUnit4ClassRunner.runMethods(RunNotifier) line: 51   \r\n    JUnit4ClassRunner$1.run() line: 44   \r\n    ClassRoadie.runUnprotected() line: 27   \r\n    ClassRoadie.runProtected() line: 37   \r\n    JUnit4ClassRunner.run(RunNotifier) line: 42   \r\n    JUnit4TestMethodReference(JUnit4TestReference).run(TestExecution) line: 46   \r\n    TestExecution.run(ITestReference[]) line: 38   \r\n    RemoteTestRunner.runTests(String[], String, TestExecution) line: 467   \r\n    RemoteTestRunner.runTests(TestExecution) line: 683   \r\n    RemoteTestRunner.run() line: 390   \r\n    RemoteTestRunner.main(String[]) line: 197   \r\n\r\n\r\n\r\n-- \r\nDaniele Dellafiore\r\nhttp://blog.ildella.net\r\nhttp://twitter.com/ildella\r\n"
    ],
    [
        "WICKET-2519",
        "WICKET-2506",
        "1.4.2 enclosure problem I believe there is a enclosure related bug in wicket 1.4.2, which stopped me from upgrading :( Same code works fine with 1.4.1\r\nFinally I narrowed it down to adding following to quick start (attached to problem):\r\n\r\n2 lines to HomePage.html\r\n    <wicket:enclosure><br/><a wicket:id=\"logout\"><wicket:message key=\"logout\" /></a></wicket:enclosure>\r\n    <wicket:enclosure><a wicket:id=\"login\"><wicket:message key=\"login\" /></a></wicket:enclosure>\r\n\r\n2 lines to HomePage.java\r\n        add(new BookmarkablePageLink<Void>(\"logout\", HomePage.class));\r\n        add(new BookmarkablePageLink<Void>(\"login\", HomePage.class));\r\nand HomePage.properties\r\nlogin=Login\r\nlogout=Logout\r\n\r\nI get following stack trace\r\n\r\nWicketMessage: Could not find child with id: login in the wicket:enclosure\r\n\r\nRoot cause:\r\n\r\norg.apache.wicket.WicketRuntimeException: Could not find child with id: login in the wicket:enclosure\r\n     at org.apache.wicket.markup.html.internal.Enclosure.checkChildComponent(Enclosure.java:210)\r\n     at org.apache.wicket.markup.html.internal.Enclosure.ensureAllChildrenPresent(Enclosure.java:249)\r\n     at org.apache.wicket.markup.html.internal.Enclosure.onComponentTagBody(Enclosure.java:169)\r\n     at org.apache.wicket.Component.renderComponent(Component.java:2626)\r\n     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)\r\n     at org.apache.wicket.Component.render(Component.java:2457)\r\n     at org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:229)\r\n     at org.apache.wicket.markup.resolver.EnclosureResolver.resolve(EnclosureResolver.java:61)\r\n     at org.apache.wicket.markup.resolver.ComponentResolvers.resolve(ComponentResolvers.java:81)\r\n     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1418)\r\n     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1528)\r\n     at org.apache.wicket.Page.onRender(Page.java:1545)\r\n     at org.apache.wicket.Component.render(Component.java:2457)\r\n     at org.apache.wicket.Page.renderPage(Page.java:914)\r\n     at org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:262)\r\n     at org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)\r\n     at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)\r\n     at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)\r\n     at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)\r\n     at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)\r\n     at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:468)\r\n     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:301)\r\n     at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\r\n     at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)\r\n     at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\r\n     at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\r\n     at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)\r\n     at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)\r\n     at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)\r\n     at org.mortbay.jetty.Server.handle(Server.java:295)\r\n     at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)\r\n     at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)\r\n     at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)\r\n     at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)\r\n     at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)\r\n     at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:226)\r\n     at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)\r\n\r\n",
        "Regression: \"Could not find child with id: <ID> in the wicket:enclosure\" for non-component tag Attached testcase passes with wicket-1.4.1 but fails with 1.4.2 saying:\r\n\r\norg.apache.wicket.WicketRuntimeException: Could not find child with id: radio in the wicket:enclosure\r\n\tat org.apache.wicket.markup.html.internal.Enclosure.checkChildComponent(Enclosure.java:210)\r\n\tat org.apache.wicket.markup.html.internal.Enclosure.ensureAllChildrenPresent(Enclosure.java:249)\r\n\tat org.apache.wicket.markup.html.internal.Enclosure.onComponentTagBody(Enclosure.java:169)\r\n\tat org.apache.wicket.Component.renderComponent(Component.java:2626)\r\n\tat org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)\r\n\tat org.apache.wicket.Component.render(Component.java:2457)\r\n\tat org.apache.wicket.MarkupContainer.autoAdd(MarkupContainer.java:229)\r\n\tat org.apache.wicket.markup.resolver.EnclosureResolver.resolve(EnclosureResolver.java:61)\r\n\tat org.apache.wicket.markup.resolver.ComponentResolvers.resolve(ComponentResolvers.java:81)\r\n\tat org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1418)\r\n\tat org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1577)\r\n\tat org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1501)\r\n\tat org.apache.wicket.Component.renderComponent(Component.java:2626)\r\n\tat org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1512)\r\n\tat org.apache.wicket.Component.render(Component.java:2457)\r\n\tat org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1414)\r\n\tat org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1528)\r\n\tat org.apache.wicket.Page.onRender(Page.java:1545)\r\n\tat org.apache.wicket.Component.render(Component.java:2457)\r\n\tat org.apache.wicket.Page.renderPage(Page.java:914)\r\n\tat org.apache.wicket.request.target.component.BookmarkablePageRequestTarget.respond(BookmarkablePageRequestTarget.java:262)\r\n\tat org.apache.wicket.request.AbstractRequestCycleProcessor.respond(AbstractRequestCycleProcessor.java:105)\r\n\tat org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1258)\r\n\tat org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)\r\n\tat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)\r\n\tat org.apache.wicket.RequestCycle.request(RequestCycle.java:594)\r\n\tat org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:478)\r\n\tat org.apache.wicket.protocol.http.MockWebApplication.processRequestCycle(MockWebApplication.java:390)\r\n\tat org.apache.wicket.util.tester.BaseWicketTester.startPage(BaseWicketTester.java:300)\r\n\tat org.apache.wicket.EnclosurePageTest.testRender(EnclosurePageTest.java:23)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat junit.framework.TestCase.runTest(TestCase.java:154)\r\n\tat junit.framework.TestCase.runBare(TestCase.java:127)\r\n\tat junit.framework.TestResult$1.protect(TestResult.java:106)\r\n\tat junit.framework.TestResult.runProtected(TestResult.java:124)\r\n\tat junit.framework.TestResult.run(TestResult.java:109)\r\n\tat junit.framework.TestCase.run(TestCase.java:118)\r\n\tat junit.framework.TestSuite.runTest(TestSuite.java:208)\r\n\tat junit.framework.TestSuite.run(TestSuite.java:203)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)\r\n\tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)\r\n\tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)\r\n\tat org.apache.maven.surefire.Surefire.run(Surefire.java:177)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)"
    ],
    [
        "WICKET-2521",
        "WICKET-2491",
        "Ajax Target gives 404 on MultiPart form Sometimes when a MultiFileUploadField is submitted via Ajax, a 404 error results in resulting ajax call when components are added to the AjaxRequestTarget.\r\nI suspect that the cause of this that the form is set to multi part.  If the MultiFileUploadField is removed but setMultiPart(true) is set, the same error occurs.\r\nHowever, with no MultiFileUploadField and multiPart set to false, the error does not occur.\r\n\r\nI've attached a quickstart to this to demonstrate this issue.\r\n\r\nJust unzip this and run mvn jetty:run.  Then navigate to http://localhost:8080/Ajax404MultiPart\r\n\r\nIf you click \"Add Attachments\" the container will be set to visible.  Click the submit button and\r\nthe error occurs (you can see it in the Wicket Ajax Debug window).",
        "Ajax multipart broken on mounted pages The page is mounted with MixedParamHybridUrlCodingStrategy.\r\nIt contains multipart form with FileUploadField and UploadProgressBar components.\r\nIt also contains AjaxFallbackButton.\r\nWhen pressing the button we can see 404 response in ajax debug panel."
    ],
    [
        "WICKET-2551",
        "WICKET-2339",
        "Bug in WicketTester when submitting forms When submitting a form in a test using WicketTester for an Application that has a RequestCycleProcessor that uses the CryptedUrlWebRequestCodingStrategy, Wicket redirects to the HomePage. It seems that WicketTester can't figure out wich component actually submits the form  because PageParameter \"path\" is undefined, so it decides to redirect to the HomePage. This can be checked in WebRequestCycleProcessor#resolve(RequestCycle, RequestParameters).\r\n\r\nThe attached QuickStart reproduces the bug. After fixing it, the TestOtherPage test should pass.",
        "Fix : testSignIn2(org.apache.wicket.examples.signin2.Signin2Test) MockHttpServletRequest is broken when used with CryptedUrlWebRequestCodingStrategy\r\n\r\nMockHttpServletRequest.getQueryString() line: 714 returns the QueryString like this: (in the specific Test Case of SignIn2Test)\r\n\r\nusername=wicket&password=wicket&rememberMeRow:rememberMe=true&x=6*:1:signInPanel:signInForm::IFormSubmitListener::\r\n\r\nCryptedUrlWebRequestCodingStrategy decodeURL(final String url) cant read that \r\n\r\nit expexts the paramter 'x=' at the very beginning of the QueryString of the URL.\r\n\r\nsorry no patch file.\r\n(in my current mood I'd throw the CryptedUrlWebRequestCodingStrategy away)\r\n\r\nmf"
    ],
    [
        "WICKET-2607",
        "WICKET-2541",
        "Required fields remain required when enclsoure containing field is hidden ",
        "FormComponents hidden by wicket:enclosure should not be validated upon form submit FormComponents that are hidden by an enclosing wicket:enclosure tag should not by validated.\r\n\r\nIf there is a form with 2 form components A and B and an enclosure is used to hide both A and B and it is controlled by B.isVisible (wicket:enclosure child=\"B\"), the FormComponent A is still validated.\r\nSimple example: a RequiredTextField is still required even if made invisible by a surrounding enclosure."
    ],
    [
        "WICKET-2622",
        "WICKET-2613",
        "DatePicker doesn't appear I am using org.apache.wicket.extensions.yui.calendar.DateField\r\nWhen I upgraded to Wicket 1.4.4, the DatePickers stopped functioning. The mouse changes to a pointer when I hover over the little calendar icon, but clicking on them doesn't do anything.\r\nThe only other related behaviour I've seen is my ModalWindows don't load their borders anymore - maybe there's a problem loading some referenced resources?",
        "Content-Length Issue with 1.4.4 I have upgraded to wicket-1.4.4 from wicket-1.4.3. I have made sure to recompile all dependent libraries against 1.4.4. Since switching any component referenced from a JAR comes back with an incorrect content-length.\r\n\r\nI can resolve this issue by switching back to 1.4.3. \r\n\r\nsyris:~ victori$ curl -I http://lfab:8480/resources/wicket.contrib.IconElements/vcard.gif\r\nHTTP/1.1 200 OK\r\nDate: Sun, 13 Dec 2009 23:02:11 GMT\r\nLast-Modified: Sun, 13 Dec 2009 23:00:44 GMT\r\nExpires: Mon, 14 Dec 2009 00:02:11 GMT\r\nCache-Control: max-age=3600\r\nContent-Type: image/gif\r\nContent-Length: 99925\r\nServer: Jetty(6.1.12)\r\n\r\n\r\nIt should be 619 bytes."
    ],
    [
        "WICKET-2627",
        "WICKET-2620",
        "DataTable generates two <thead wicket:id=\"topToolbars\"> The table generated by DataTable has two thead tag with the same wicketID. One for the navigation, second for the headers.\r\n\r\n<table class=\"dataview\" cellspacing=\"0\" wicket:id=\"datatable\">\r\n    <thead wicket:id=\"topToolbars\">\r\n         <tr class=\"navigation\">\r\n               .....\r\n         </tr>\r\n    </thead>\r\n    <thead wicket:id=\"topToolbars\">\r\n          <tr class=\"headers\"> \r\n               .....\r\n          </tr>\r\n    </thead>\r\n    ......",
        "DataTable generates two <thead wicket:id=\"topToolbars\"> The tables generated by DataTable component in the current version of Wicket (1.4.3) do not contain <thead> in the output HTML.\r\nIt was working correctly in wicket 1.4.0 but there were some changes to fix other issues - see WICKET-2436\r\n\r\nTo replicate - launch the wicket-examples-1.4.3.war and look at the DataTable example:\r\nhttp://localhost:8081/wicket-examples-1.4.3/repeater/?wicket:bookmarkablePage=:org.apache.wicket.examples.repeater.DataTablePage\r\nIf you check the HTML source you will see it does not contain thead tag:\r\n{html}\r\n<table class=\"dataview\" cellspacing=\"0\">\r\n\r\n\t<tr class=\"navigation\">\r\n{html}\r\nWhen you look at http://www.wicket-library.com/wicket-examples/repeater/?wicket:bookmarkablePage=:org.apache.wicket.examples.repeater.DataTablePage\r\nit shows:\r\n{html}\r\n<table class=\"dataview\" cellspacing=\"0\">\r\n<thead>\r\n\t<tr class=\"navigation\">\r\n{html}\r\nMust be a previous version? :-)"
    ],
    [
        "WICKET-2634",
        "WICKET-2502",
        "WicketTester doesn't handle multiple RestartResponseExceptions. WicketTester doesn't handle multiple RestartResponseExceptions because it doesn't use the same loop pattern as RequestCycle.steps().\r\n\r\nTestcase attached.\r\n\r\nLow priority, i workarounded it in my app.",
        "WicketTester cannot handle consecutive RestartResponseException's See attached quickstart junit test. WicketTester \"crashes\" (seizes from running the tests) if there eare consecutive RestartResponseException's."
    ],
    [
        "WICKET-2711",
        "WICKET-2078",
        "Wicket 1.4.5 + Websphere Portal Express 6.1: query string parameters are not forwarded through WicketPortlet In my application, I am using portlet init parameter \"viewPage\" to define view page URL with query string parameter. For e.g.\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\t<portlet>\r\n\t\t<description>My Test</description>\r\n\t\t<portlet-name>Test</portlet-name>\r\n\t\t<display-name>Test</display-name>\r\n\t\t<portlet-class>org.apache.wicket.protocol.http.portlet.WicketPortlet</portlet-class>\r\n\t\t<init-param>\r\n\t\t\t<name>wicketFilterPath</name>\r\n\t\t\t<value>/test</value>\r\n\t\t</init-param>\r\n\t\t<init-param>\r\n\t\t\t<name>viewPage</name>\r\n\t\t\t<value>/test?portletid=portlet1</value>\r\n\t\t</init-param>\r\n\t\t<supports>\r\n\t\t\t<mime-type>*/*</mime-type>\r\n\t\t\t<portlet-mode>VIEW</portlet-mode>\r\n\t\t</supports>\r\n\t\t<portlet-info>\r\n\t\t\t<title>Test Portlet</title>\r\n\t\t\t<keywords>Wicket</keywords>\r\n\t\t</portlet-info>\r\n\t</portlet>\r\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\r\nIn my web.xml, I have filter mapping that maps \"/test/*\" to WicketFilter. The home page of my application displays appropriate contents on the basis of \"portletid\".\r\n\r\nThis setup works fine with JBoss Portal 2.7.2, but with Websphere Portal Express 6.1, my home page never gets the \"portletid\" parameters. \r\n\r\nAfter investigation, it was realized that org.apache.wicket.protocol.http.portlet.PortletServletRequestWrapper has logic to obtain the querystring from wrapped request, but doesnt override methods getParameterMap / getParameters & getParameter to convert query string into parameters. I am not very sure whether Websphere Portal Server has any setting to do this conversion. \r\n\r\n\r\nHere is the workaround that I have used\r\n1. Created MyServletWebRequest that extends ServletWebRequest \r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\npublic class MyServletWebRequest extends ServletWebRequest {\r\n  private Map<String, String[]> paramMap;\r\n\r\n  public MyServletWebRequest(HttpServletRequest httpServletRequest) {\r\n    super(httpServletRequest);\r\n    if (httpServletRequest instanceof PortletServletRequestWrapper) {\r\n      String qs = this.getQueryString();\r\n      if (StringUtil.hasLength(qs)) {\r\n        paramMap = new HashMap<String, String[]>();\r\n        StringTokenizer tokens = new StringTokenizer(qs, \"&\");\r\n        while (tokens.hasMoreTokens()) {\r\n          String tuple = tokens.nextToken();\r\n          int index = tuple.indexOf(\"=\");\r\n          if (index != -1) {\r\n            String key = tuple.substring(0, index);\r\n            String value = tuple.substring(index + 1);\r\n            paramMap.put(key, new String[] { value });\r\n          }\r\n        }\r\n      } else {\r\n        paramMap = Collections.EMPTY_MAP;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  @Override\r\n  public Map getParameterMap() {\r\n    Map<String, String[]> combinedMap =\r\n      new HashMap<String, String[]>(super.getParameterMap());\r\n      combinedMap.putAll(paramMap);\r\n    return combinedMap;\r\n  }\r\n\r\n  @Override\r\n  public String getParameter(String key) {\r\n    if (paramMap.containsKey(key))\r\n      return paramMap.get(key)[0];\r\n\r\n    return super.getParameter(key);\r\n  }\r\n\r\n  @Override\r\n  public String[] getParameters(String key) {\r\n    if (paramMap.containsKey(key))\r\n      return paramMap.get(key);\r\n\r\n    return super.getParameters(key);\r\n  }\r\n\r\n}\r\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\r\n\r\n2. Then updated the MyWebApplication class (extends WebApplication) to override newWebRequest method\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  @Override\r\n  protected WebRequest newWebRequest(HttpServletRequest servletRequest) {\r\n    return new MyServletWebRequest(servletRequest);\r\n  }\r\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\r\nThat has solved the issue. \r\n\r\nI think PortletServletRequestWrapper should override getParameterMap / getParameters & getParameter methods. ",
        "WICKET-2058 does not support IBM Websphere Portal Server 6.1 First of all I want to say thanks a lot for resolving the issue WICKET-2058 to Ate, Thijs and Antony!\nI checked out the revision 739543 from trunk and experimented/tested a lot with the wicket examples within IBM Websphere Portal 6.1.\n\nI had to add the following lines into web.xml to get the first example-portlets visible in my browser:\n\n  <context-param>\n    <param-name>org.apache.wicket.detectPortletContext</param-name>\n    <param-value>true</param-value>\n  </context-param>\n\nThe next problem I stumbled over was that the generated links (e.g. BookmarkablePageLink<Void>(\"link\", PageXY.class) ) did not work at all.\nI traced the problem down to the point that the generated wicketURL in PortletRequestContext.encodeRenderURL includes all query-parameters but the PortletFilter does \nnot get them as parameters, just the path-part.\n\n\nWicketPortlet.processRequest:\n\n\tPortletRequestDispatcher rd = getPortletContext().getRequestDispatcher(wicketURL);\n\n\tif (rd != null)\n\t{\n\t\t// delegate to wicket filter - this is where the magic happens\n\t\trd.include(request, response);\n\t\t...\n\nLet's assume wicketURL has the value of \"/repeater/?wicket:interface=:8:oir:17:toggleHighlite:2:ILinkListener::\", the result would be the same as the value of \"/repeater/\".\nI was able to fix it by applying the query parameters as \"real\" parameters to the javax.portlet.PortletURL for Action and Render-URLs (see Patch for PortletRequestContext).\n\nAfter that I had the same problem with form-submission. The form-values came in perfectly to the model, but after leaving the ACTION-PHASE the state was all gone in RENDER-PHASE. \nSo I did the same in WicketPortlet.processActionResponseState and applied all wicketURL-query parameteters to the response (setRenderParameter). see Patch for WicketPortlet.\n\nAnother solution could be a PortletRequestWrapper within the WicketFilter implementation. Or does anybody have a better idea?\n\nIt would be really great to see this issue fixed in wicket 1.4!\n\nI'll keep on testing the next days with the ajax examples (some worked already with the provided patch applied) and WPS 6.1..."
    ],
    [
        "WICKET-2726",
        "WICKET-2491",
        "CLONE -Ajax multipart broken on mounted pages The page is mounted with MixedParamHybridUrlCodingStrategy.\r\nIt contains multipart form with FileUploadField and UploadProgressBar components.\r\nIt also contains AjaxFallbackButton.\r\nWhen pressing the button we can see 404 response in ajax debug panel.",
        "Ajax multipart broken on mounted pages The page is mounted with MixedParamHybridUrlCodingStrategy.\r\nIt contains multipart form with FileUploadField and UploadProgressBar components.\r\nIt also contains AjaxFallbackButton.\r\nWhen pressing the button we can see 404 response in ajax debug panel."
    ],
    [
        "WICKET-2726",
        "WICKET-2521",
        "CLONE -Ajax multipart broken on mounted pages The page is mounted with MixedParamHybridUrlCodingStrategy.\r\nIt contains multipart form with FileUploadField and UploadProgressBar components.\r\nIt also contains AjaxFallbackButton.\r\nWhen pressing the button we can see 404 response in ajax debug panel.",
        "Ajax Target gives 404 on MultiPart form Sometimes when a MultiFileUploadField is submitted via Ajax, a 404 error results in resulting ajax call when components are added to the AjaxRequestTarget.\r\nI suspect that the cause of this that the form is set to multi part.  If the MultiFileUploadField is removed but setMultiPart(true) is set, the same error occurs.\r\nHowever, with no MultiFileUploadField and multiPart set to false, the error does not occur.\r\n\r\nI've attached a quickstart to this to demonstrate this issue.\r\n\r\nJust unzip this and run mvn jetty:run.  Then navigate to http://localhost:8080/Ajax404MultiPart\r\n\r\nIf you click \"Add Attachments\" the container will be set to visible.  Click the submit button and\r\nthe error occurs (you can see it in the Wicket Ajax Debug window)."
    ],
    [
        "WICKET-2730",
        "WICKET-2491",
        "updating form problem when multipart ist set to true in attached sample i have form wit fileupload and mulitpar set on true, after click on cancel button form is not updated\r\nthe same problem was in issue 2491, and it should be fixet, but it isnt.",
        "Ajax multipart broken on mounted pages The page is mounted with MixedParamHybridUrlCodingStrategy.\r\nIt contains multipart form with FileUploadField and UploadProgressBar components.\r\nIt also contains AjaxFallbackButton.\r\nWhen pressing the button we can see 404 response in ajax debug panel."
    ],
    [
        "WICKET-2730",
        "WICKET-2521",
        "updating form problem when multipart ist set to true in attached sample i have form wit fileupload and mulitpar set on true, after click on cancel button form is not updated\r\nthe same problem was in issue 2491, and it should be fixet, but it isnt.",
        "Ajax Target gives 404 on MultiPart form Sometimes when a MultiFileUploadField is submitted via Ajax, a 404 error results in resulting ajax call when components are added to the AjaxRequestTarget.\r\nI suspect that the cause of this that the form is set to multi part.  If the MultiFileUploadField is removed but setMultiPart(true) is set, the same error occurs.\r\nHowever, with no MultiFileUploadField and multiPart set to false, the error does not occur.\r\n\r\nI've attached a quickstart to this to demonstrate this issue.\r\n\r\nJust unzip this and run mvn jetty:run.  Then navigate to http://localhost:8080/Ajax404MultiPart\r\n\r\nIf you click \"Add Attachments\" the container will be set to visible.  Click the submit button and\r\nthe error occurs (you can see it in the Wicket Ajax Debug window)."
    ],
    [
        "WICKET-2730",
        "WICKET-2726",
        "updating form problem when multipart ist set to true in attached sample i have form wit fileupload and mulitpar set on true, after click on cancel button form is not updated\r\nthe same problem was in issue 2491, and it should be fixet, but it isnt.",
        "CLONE -Ajax multipart broken on mounted pages The page is mounted with MixedParamHybridUrlCodingStrategy.\r\nIt contains multipart form with FileUploadField and UploadProgressBar components.\r\nIt also contains AjaxFallbackButton.\r\nWhen pressing the button we can see 404 response in ajax debug panel."
    ],
    [
        "WICKET-2735",
        "WICKET-2717",
        "setResponsePage in AjaxButton works WRONG in 1.4.6 Suppose inside a BookmarkablePage which is mounted to \"CurrentPage\" , \r\nthere is an AjaxButton , when clicked , it will setResponsePage(CurrentPage.class , pps)\r\n\r\nIf a user is browsing http://foo.bar/app/CurrentPage/key/value , and submit the AjaxButton , \r\nIn 1.4.5 , he will be redirect to http://foo.bar/app/CurrentPage/key/value  , it is correct \r\nBut in 1.4.6 , he will be redirect to http://foo.bar/app/CurrentPage/key/CurrentPage/key/value , it is WRONG\r\n\r\nI think there may be something wrong in wicket2312's patch",
        "bookmarkablepagelink broken on ajaxupdate bookmarkablepagelink broken on ajax update ,i see the problem in 1.4.6,1.4.5 doesn't have it.\r\nI am attaching the quickstart for the problem."
    ],
    [
        "WICKET-2743",
        "WICKET-2717",
        "BookmarkablePageLink creates an invalid url when components are updated via ajax (using AjaxPagingNavigator) I have a 2 mounted pages, one mounted at \"home\" and one mounted at \"page2\". When clicking a BookmarkablePageLink for \"home\" the browser is sent to the correct page. The home page then uses a DataView to create many panels with BookmarkablePageLinks to page2. If you paginate using AjaxPagingNavigator the links in the panels incorrectly point to \"/home/test/foo/page2\". Where test/foo was a pageparameter sent to the page.\r\n\r\nThis works correctly in 1.4.5.",
        "bookmarkablepagelink broken on ajaxupdate bookmarkablepagelink broken on ajax update ,i see the problem in 1.4.6,1.4.5 doesn't have it.\r\nI am attaching the quickstart for the problem."
    ],
    [
        "WICKET-2743",
        "WICKET-2735",
        "BookmarkablePageLink creates an invalid url when components are updated via ajax (using AjaxPagingNavigator) I have a 2 mounted pages, one mounted at \"home\" and one mounted at \"page2\". When clicking a BookmarkablePageLink for \"home\" the browser is sent to the correct page. The home page then uses a DataView to create many panels with BookmarkablePageLinks to page2. If you paginate using AjaxPagingNavigator the links in the panels incorrectly point to \"/home/test/foo/page2\". Where test/foo was a pageparameter sent to the page.\r\n\r\nThis works correctly in 1.4.5.",
        "setResponsePage in AjaxButton works WRONG in 1.4.6 Suppose inside a BookmarkablePage which is mounted to \"CurrentPage\" , \r\nthere is an AjaxButton , when clicked , it will setResponsePage(CurrentPage.class , pps)\r\n\r\nIf a user is browsing http://foo.bar/app/CurrentPage/key/value , and submit the AjaxButton , \r\nIn 1.4.5 , he will be redirect to http://foo.bar/app/CurrentPage/key/value  , it is correct \r\nBut in 1.4.6 , he will be redirect to http://foo.bar/app/CurrentPage/key/CurrentPage/key/value , it is WRONG\r\n\r\nI think there may be something wrong in wicket2312's patch"
    ],
    [
        "WICKET-2760",
        "WICKET-2753",
        "InternetExplorer JS issue with form namespaces http://media.fabulously40.com/images/wicket-error-js-debug-editor.png\r\n\r\nSeems Form#registerJavascriptNamespaces  causes an issue with IE8. ",
        "Javascript in Form.registerJavascriptNamespaces() fails in Firefox 3.5.8 The undefined comparisons fail for me with a message stating that the Wicket variable is undefined (which the code is actually meant to check)"
    ],
    [
        "WICKET-2767",
        "WICKET-2648",
        "DatePicker Calendar: wrong year format when 4 digits are used (yyyy), e.g. 2010 --> 0010 I found that there is still a bug in Wicket 1.4.7 in case that the datePattern is \"dd/MM/yyyy\".\r\n\r\nFor example, if you use the DatePicker and select a date such as\r\n23/02/2010 from the calendar GUI, the date selected in the DateTextField is \"23/02/0010\".\r\n\r\nThis is the example Java code:\r\n\r\n                // define the date text field for the data decorrenza\r\n                DateTextField dataDecorrenzaDaTextField = new DateTextField(\"dataDecorrenzaDa\",\r\n                        new PropertyModel(this.accordo, \"dataDecorrenzaDa\"),\r\n                        new PatternDateConverter(\"dd/MM/yyyy\", true)\r\n                );\r\n\r\n                // add the graphical calendar date picker\r\n                dataDecorrenzaDaTextField.add(new DatePicker() {\r\n\r\n                        @Override\r\n                        protected boolean enableMonthYearSelection() {\r\n \r\n                            // enable month/year selection\r\n                            return true;\r\n\r\n                        } // end enableMonthYearSelection\r\n\r\n                    } // end DatePicker\r\n\r\n                );\r\n\r\nI found that the bug is still in the \"wicket-date.js\", line 137.\r\n\r\nThe wrong code is:\r\n\r\nif(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n\r\nThis line also makes the module 100 on the year, when the year pattern is \"yyyy\".\r\n\r\nThe fixed code is:\r\n\r\nif(datePattern.match(/yyyy+/)) {\r\n    year = year;\r\n} else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n\r\n\r\n",
        "DatePicker javascript uses 4 symbols for year although pattern contains just yy Steps to reproduce:\r\n1. Create TextField\r\n2. Add DatePicker with yy for year (en_US locale, SHORT format, for example).\r\n3. Set some date to textfield\r\n4. Open page (year is correctly shown with two digits)\r\n5. Click datepicker icon\r\nExpected: year is still 2-digit\r\nActual: year becomes 4-digit"
    ],
    [
        "WICKET-2768",
        "WICKET-2717",
        "WebRequestCodingStrategy.encode renders incorrect url in ajax requests Bug introduced by WICKET-2312, see also last comment in that bug for ways to reproduce.\r\n\r\nThe WebRequestCodingStrategy.encode function contains the following code:\r\n \t\tif (url != null && !portletRequest)\r\n\t\t{\r\n\t\t\t// We've found the URL and it's mounted.\r\n\r\n\t\t\t// In the case of Ajax, we don't want to prepend a relative path\r\n\t\t\t// to the mounted URL. See WICKET-2312.\r\n\t\t\tskipRelativePathPrefix = isAjax;\r\n\t\t}\r\n\r\nEffect: when in an ajax request creating an url with component.urlFor(TargetPage.class, parameters) the generated url does not contain the relative path prefix, hence is incorrect.",
        "bookmarkablepagelink broken on ajaxupdate bookmarkablepagelink broken on ajax update ,i see the problem in 1.4.6,1.4.5 doesn't have it.\r\nI am attaching the quickstart for the problem."
    ],
    [
        "WICKET-2768",
        "WICKET-2735",
        "WebRequestCodingStrategy.encode renders incorrect url in ajax requests Bug introduced by WICKET-2312, see also last comment in that bug for ways to reproduce.\r\n\r\nThe WebRequestCodingStrategy.encode function contains the following code:\r\n \t\tif (url != null && !portletRequest)\r\n\t\t{\r\n\t\t\t// We've found the URL and it's mounted.\r\n\r\n\t\t\t// In the case of Ajax, we don't want to prepend a relative path\r\n\t\t\t// to the mounted URL. See WICKET-2312.\r\n\t\t\tskipRelativePathPrefix = isAjax;\r\n\t\t}\r\n\r\nEffect: when in an ajax request creating an url with component.urlFor(TargetPage.class, parameters) the generated url does not contain the relative path prefix, hence is incorrect.",
        "setResponsePage in AjaxButton works WRONG in 1.4.6 Suppose inside a BookmarkablePage which is mounted to \"CurrentPage\" , \r\nthere is an AjaxButton , when clicked , it will setResponsePage(CurrentPage.class , pps)\r\n\r\nIf a user is browsing http://foo.bar/app/CurrentPage/key/value , and submit the AjaxButton , \r\nIn 1.4.5 , he will be redirect to http://foo.bar/app/CurrentPage/key/value  , it is correct \r\nBut in 1.4.6 , he will be redirect to http://foo.bar/app/CurrentPage/key/CurrentPage/key/value , it is WRONG\r\n\r\nI think there may be something wrong in wicket2312's patch"
    ],
    [
        "WICKET-2768",
        "WICKET-2743",
        "WebRequestCodingStrategy.encode renders incorrect url in ajax requests Bug introduced by WICKET-2312, see also last comment in that bug for ways to reproduce.\r\n\r\nThe WebRequestCodingStrategy.encode function contains the following code:\r\n \t\tif (url != null && !portletRequest)\r\n\t\t{\r\n\t\t\t// We've found the URL and it's mounted.\r\n\r\n\t\t\t// In the case of Ajax, we don't want to prepend a relative path\r\n\t\t\t// to the mounted URL. See WICKET-2312.\r\n\t\t\tskipRelativePathPrefix = isAjax;\r\n\t\t}\r\n\r\nEffect: when in an ajax request creating an url with component.urlFor(TargetPage.class, parameters) the generated url does not contain the relative path prefix, hence is incorrect.",
        "BookmarkablePageLink creates an invalid url when components are updated via ajax (using AjaxPagingNavigator) I have a 2 mounted pages, one mounted at \"home\" and one mounted at \"page2\". When clicking a BookmarkablePageLink for \"home\" the browser is sent to the correct page. The home page then uses a DataView to create many panels with BookmarkablePageLinks to page2. If you paginate using AjaxPagingNavigator the links in the panels incorrectly point to \"/home/test/foo/page2\". Where test/foo was a pageparameter sent to the page.\r\n\r\nThis works correctly in 1.4.5."
    ],
    [
        "WICKET-2773",
        "WICKET-2648",
        "yui DatePicker based wicket component  truncates years to the 0-99 interval even if 'yyyy' is set as year pattern See last comment at http://issues.apache.org/jira/browse/WICKET-2648 - I open this new ticked because that one is closed.\r\n\r\nBug is still in the \"wicket-date.js\", line 137. \r\n\r\nThe wrong code is: \r\n\r\nif(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); \r\n\r\nThis line also makes the module 100 on the year, when the year pattern is \"yyyy\". \r\n\r\nThe fixed code is: \r\n\r\nif(datePattern.match(/yyyy+/)) { \r\n\r\n    year = year; \r\n\r\n  } else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); ",
        "DatePicker javascript uses 4 symbols for year although pattern contains just yy Steps to reproduce:\r\n1. Create TextField\r\n2. Add DatePicker with yy for year (en_US locale, SHORT format, for example).\r\n3. Set some date to textfield\r\n4. Open page (year is correctly shown with two digits)\r\n5. Click datepicker icon\r\nExpected: year is still 2-digit\r\nActual: year becomes 4-digit"
    ],
    [
        "WICKET-2773",
        "WICKET-2767",
        "yui DatePicker based wicket component  truncates years to the 0-99 interval even if 'yyyy' is set as year pattern See last comment at http://issues.apache.org/jira/browse/WICKET-2648 - I open this new ticked because that one is closed.\r\n\r\nBug is still in the \"wicket-date.js\", line 137. \r\n\r\nThe wrong code is: \r\n\r\nif(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); \r\n\r\nThis line also makes the module 100 on the year, when the year pattern is \"yyyy\". \r\n\r\nThe fixed code is: \r\n\r\nif(datePattern.match(/yyyy+/)) { \r\n\r\n    year = year; \r\n\r\n  } else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); ",
        "DatePicker Calendar: wrong year format when 4 digits are used (yyyy), e.g. 2010 --> 0010 I found that there is still a bug in Wicket 1.4.7 in case that the datePattern is \"dd/MM/yyyy\".\r\n\r\nFor example, if you use the DatePicker and select a date such as\r\n23/02/2010 from the calendar GUI, the date selected in the DateTextField is \"23/02/0010\".\r\n\r\nThis is the example Java code:\r\n\r\n                // define the date text field for the data decorrenza\r\n                DateTextField dataDecorrenzaDaTextField = new DateTextField(\"dataDecorrenzaDa\",\r\n                        new PropertyModel(this.accordo, \"dataDecorrenzaDa\"),\r\n                        new PatternDateConverter(\"dd/MM/yyyy\", true)\r\n                );\r\n\r\n                // add the graphical calendar date picker\r\n                dataDecorrenzaDaTextField.add(new DatePicker() {\r\n\r\n                        @Override\r\n                        protected boolean enableMonthYearSelection() {\r\n \r\n                            // enable month/year selection\r\n                            return true;\r\n\r\n                        } // end enableMonthYearSelection\r\n\r\n                    } // end DatePicker\r\n\r\n                );\r\n\r\nI found that the bug is still in the \"wicket-date.js\", line 137.\r\n\r\nThe wrong code is:\r\n\r\nif(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n\r\nThis line also makes the module 100 on the year, when the year pattern is \"yyyy\".\r\n\r\nThe fixed code is:\r\n\r\nif(datePattern.match(/yyyy+/)) {\r\n    year = year;\r\n} else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n\r\n\r\n"
    ],
    [
        "WICKET-2779",
        "WICKET-2662",
        "Submit a nested form via ajax to upload a file inside modal window does not work on IE. I'm trying to submit a nested form via ajax to upload a file  inside modal window.\r\nI get an exception:\r\njava.lang.IllegalStateException: ServletRequest does not contain multipart content. One possible solution is to explicitly call Form.setMultipart(true), Wicket tries its best to auto-detect multipart forms but there are certain situation where it cannot.\r\nat org.apache.wicket.protocol.http.servlet.MultipartServletWebRequest.<init>(MultipartServletWebRequest.java:113) \r\n\r\nAfter debug:\r\nFileUploadBase.isMultipartContent get false because\r\n\r\nif (contentType.toLowerCase().startsWith(MULTIPART))   - contentType = application/x-www-form-urlencoded \r\n\r\nIt only occurs on IE browser (both IE7 and IE8).",
        "Form.setMultiPart(true) doesn't work in IE8 I have a wizard. The wizard contains an initially hidden file upload, and a link that opens a ModalWindow. The Form inside the ModalWindow has setMultiPart(true), and the Form from the wizard has setMultiPart(true). When I click the buttons inside the ModalWindow, they work correctly in Firefox and Chrome. But in IE8, it fails with this error.\r\n\r\n2010-01-06 11:22:11,431 | http-8080-2 | ERROR | org.apache.wicket.RequestCycle | ServletRequest does not contain multipart content. One possible solution is to explicitly call Form.setMultipart(true), Wicket tries its best to auto-detect multipart forms but there are certain situation where it cannot.\r\njava.lang.IllegalStateException: ServletRequest does not contain multipart content. One possible solution is to explicitly call Form.setMultipart(true), Wicket tries its best to auto-detect multipart forms but there are certain situation where it cannot.\r\n\tat org.apache.wicket.protocol.http.servlet.MultipartServletWebRequest.<init>(MultipartServletWebRequest.java:113)\r\n\tat org.apache.wicket.protocol.http.servlet.MultipartServletWebRequest.<init>(MultipartServletWebRequest.java:83)\r\n\tat org.apache.wicket.extensions.ajax.markup.html.form.upload.MultipartRequest.<init>(MultipartRequest.java:41)\r\n\tat org.apache.wicket.extensions.ajax.markup.html.form.upload.UploadWebRequest.newMultipartWebRequest(UploadWebRequest.java:66)\r\n\tat org.apache.wicket.markup.html.form.Form.handleMultiPart(Form.java:1661)\r\n\tat org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:853)\r\n\tat org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:135)\r\n\tat org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)\r\n\tat org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:299)\r\n\tat org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)\r\n\tat org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)\r\n\tat org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)\r\n\tat org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)\r\n\tat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)\r\n\tat org.apache.wicket.RequestCycle.request(RequestCycle.java:545)\r\n\tat org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:479)\r\n\tat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:312)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\r\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)\r\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\r\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)\r\n\tat java.lang.Thread.run(Thread.java:619)\r\n"
    ],
    [
        "WICKET-2805",
        "WICKET-2648",
        "DateTextField and DatePicker do not work properly with four digit year patterns in 1.4.7 Date patterns that contains four digit year does not work properly with DatePicker and DateTextField in 1.4.7. \r\n\r\nSteps to reproduce the error:\r\n1. Create a form with a DateTextField, a DatePicker with a four digit year pattern like yyyy-MM-dd and a submit button.\r\n2. Run the project. Click on the DatePicker and select a date. For example 2010-03-25. \r\n3. Submit the Form and check what's submitted to the server. Server receives the date as 0010-03-25.\r\n\r\nA quickstart to reproduce the problem is attached.\r\n",
        "DatePicker javascript uses 4 symbols for year although pattern contains just yy Steps to reproduce:\r\n1. Create TextField\r\n2. Add DatePicker with yy for year (en_US locale, SHORT format, for example).\r\n3. Set some date to textfield\r\n4. Open page (year is correctly shown with two digits)\r\n5. Click datepicker icon\r\nExpected: year is still 2-digit\r\nActual: year becomes 4-digit"
    ],
    [
        "WICKET-2805",
        "WICKET-2767",
        "DateTextField and DatePicker do not work properly with four digit year patterns in 1.4.7 Date patterns that contains four digit year does not work properly with DatePicker and DateTextField in 1.4.7. \r\n\r\nSteps to reproduce the error:\r\n1. Create a form with a DateTextField, a DatePicker with a four digit year pattern like yyyy-MM-dd and a submit button.\r\n2. Run the project. Click on the DatePicker and select a date. For example 2010-03-25. \r\n3. Submit the Form and check what's submitted to the server. Server receives the date as 0010-03-25.\r\n\r\nA quickstart to reproduce the problem is attached.\r\n",
        "DatePicker Calendar: wrong year format when 4 digits are used (yyyy), e.g. 2010 --> 0010 I found that there is still a bug in Wicket 1.4.7 in case that the datePattern is \"dd/MM/yyyy\".\r\n\r\nFor example, if you use the DatePicker and select a date such as\r\n23/02/2010 from the calendar GUI, the date selected in the DateTextField is \"23/02/0010\".\r\n\r\nThis is the example Java code:\r\n\r\n                // define the date text field for the data decorrenza\r\n                DateTextField dataDecorrenzaDaTextField = new DateTextField(\"dataDecorrenzaDa\",\r\n                        new PropertyModel(this.accordo, \"dataDecorrenzaDa\"),\r\n                        new PatternDateConverter(\"dd/MM/yyyy\", true)\r\n                );\r\n\r\n                // add the graphical calendar date picker\r\n                dataDecorrenzaDaTextField.add(new DatePicker() {\r\n\r\n                        @Override\r\n                        protected boolean enableMonthYearSelection() {\r\n \r\n                            // enable month/year selection\r\n                            return true;\r\n\r\n                        } // end enableMonthYearSelection\r\n\r\n                    } // end DatePicker\r\n\r\n                );\r\n\r\nI found that the bug is still in the \"wicket-date.js\", line 137.\r\n\r\nThe wrong code is:\r\n\r\nif(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n\r\nThis line also makes the module 100 on the year, when the year pattern is \"yyyy\".\r\n\r\nThe fixed code is:\r\n\r\nif(datePattern.match(/yyyy+/)) {\r\n    year = year;\r\n} else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n\r\n\r\n"
    ],
    [
        "WICKET-2805",
        "WICKET-2773",
        "DateTextField and DatePicker do not work properly with four digit year patterns in 1.4.7 Date patterns that contains four digit year does not work properly with DatePicker and DateTextField in 1.4.7. \r\n\r\nSteps to reproduce the error:\r\n1. Create a form with a DateTextField, a DatePicker with a four digit year pattern like yyyy-MM-dd and a submit button.\r\n2. Run the project. Click on the DatePicker and select a date. For example 2010-03-25. \r\n3. Submit the Form and check what's submitted to the server. Server receives the date as 0010-03-25.\r\n\r\nA quickstart to reproduce the problem is attached.\r\n",
        "yui DatePicker based wicket component  truncates years to the 0-99 interval even if 'yyyy' is set as year pattern See last comment at http://issues.apache.org/jira/browse/WICKET-2648 - I open this new ticked because that one is closed.\r\n\r\nBug is still in the \"wicket-date.js\", line 137. \r\n\r\nThe wrong code is: \r\n\r\nif(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); \r\n\r\nThis line also makes the module 100 on the year, when the year pattern is \"yyyy\". \r\n\r\nThe fixed code is: \r\n\r\nif(datePattern.match(/yyyy+/)) { \r\n\r\n    year = year; \r\n\r\n  } else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); "
    ],
    [
        "WICKET-2807",
        "WICKET-1448",
        "AjaxSubmitLink not calling the onsubmit event handler SubmitLink calls the <form>'s onsubmit event handler, \r\nBut AjaxSubmitLink does not.",
        "SubmitLink bypass jquery submit eventhandler <form id=\"wicketForm\"><a href=\"#\" wicket:id=\"submitLink\">submit</a></form>\n\nif:\n        response.renderOnDomReadyJavascript(\"jQuery('#\"+component.getMarkupId()+\"').submit(function(){alert('x');return false;})\");\n\nthe alert will not show when submitLink is clicked, and the form is submitted\n\nif: \n        response.renderOnDomReadyJavascript(\"document.getElementById('\"+component.getMarkupId()+\"').onsubmit = function(){alert('x');return false;}\");\n\nthe alert will show and the form is not submmitted\n"
    ],
    [
        "WICKET-2841",
        "WICKET-2648",
        "DatePicker does not parse year with pattern dd.MM.yyyy correctly. We use the date pattern dd.MM.yyyy, and when returning from the date picker (org.apache.wicket.extensions.yui.calendar.DatePicker) yields incorrect value in the date text field (org.apache.wicket.extensions.markup.html.form.DateTextField).\r\n\r\nFor instance picking the date 19.04.2010 in the date picker, yields 19.04.10, which again becomes the java.util.Date 19.04.0010. We have found the source of the problem, and created a fix for this, but hopefully you can fix this in a later release, so we do not have to maintain a local patched version of wicket-datetime.\r\n\r\nI have included the patch here. However this code seems very intentional, so applying this patch may be breaking something else!?\r\n\r\nThanks\r\n- Alf\r\n\r\ndiff --git a/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js b/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\nindex 7f19c55..420f075 100644\r\n--- a/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\n+++ b/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\n@@ -134,7 +134,7 @@ Wicket.DateTime.substituteDate = function(datePattern, date) {\r\n        // optionally do some padding to match the pattern\r\n        if(datePattern.match(/dd+/)) day = Wicket.DateTime.padDateFragment(day);\r\n        if(datePattern.match(/MM+/)) month = Wicket.DateTime.padDateFragment(month);\r\n-        if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n+       if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year);\r\n        // replace pattern with real values\r\n        return datePattern.replace(/d+/, day).replace(/M+/, month).replace(/y+/, year);\r\n }",
        "DatePicker javascript uses 4 symbols for year although pattern contains just yy Steps to reproduce:\r\n1. Create TextField\r\n2. Add DatePicker with yy for year (en_US locale, SHORT format, for example).\r\n3. Set some date to textfield\r\n4. Open page (year is correctly shown with two digits)\r\n5. Click datepicker icon\r\nExpected: year is still 2-digit\r\nActual: year becomes 4-digit"
    ],
    [
        "WICKET-2841",
        "WICKET-2767",
        "DatePicker does not parse year with pattern dd.MM.yyyy correctly. We use the date pattern dd.MM.yyyy, and when returning from the date picker (org.apache.wicket.extensions.yui.calendar.DatePicker) yields incorrect value in the date text field (org.apache.wicket.extensions.markup.html.form.DateTextField).\r\n\r\nFor instance picking the date 19.04.2010 in the date picker, yields 19.04.10, which again becomes the java.util.Date 19.04.0010. We have found the source of the problem, and created a fix for this, but hopefully you can fix this in a later release, so we do not have to maintain a local patched version of wicket-datetime.\r\n\r\nI have included the patch here. However this code seems very intentional, so applying this patch may be breaking something else!?\r\n\r\nThanks\r\n- Alf\r\n\r\ndiff --git a/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js b/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\nindex 7f19c55..420f075 100644\r\n--- a/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\n+++ b/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\n@@ -134,7 +134,7 @@ Wicket.DateTime.substituteDate = function(datePattern, date) {\r\n        // optionally do some padding to match the pattern\r\n        if(datePattern.match(/dd+/)) day = Wicket.DateTime.padDateFragment(day);\r\n        if(datePattern.match(/MM+/)) month = Wicket.DateTime.padDateFragment(month);\r\n-        if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n+       if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year);\r\n        // replace pattern with real values\r\n        return datePattern.replace(/d+/, day).replace(/M+/, month).replace(/y+/, year);\r\n }",
        "DatePicker Calendar: wrong year format when 4 digits are used (yyyy), e.g. 2010 --> 0010 I found that there is still a bug in Wicket 1.4.7 in case that the datePattern is \"dd/MM/yyyy\".\r\n\r\nFor example, if you use the DatePicker and select a date such as\r\n23/02/2010 from the calendar GUI, the date selected in the DateTextField is \"23/02/0010\".\r\n\r\nThis is the example Java code:\r\n\r\n                // define the date text field for the data decorrenza\r\n                DateTextField dataDecorrenzaDaTextField = new DateTextField(\"dataDecorrenzaDa\",\r\n                        new PropertyModel(this.accordo, \"dataDecorrenzaDa\"),\r\n                        new PatternDateConverter(\"dd/MM/yyyy\", true)\r\n                );\r\n\r\n                // add the graphical calendar date picker\r\n                dataDecorrenzaDaTextField.add(new DatePicker() {\r\n\r\n                        @Override\r\n                        protected boolean enableMonthYearSelection() {\r\n \r\n                            // enable month/year selection\r\n                            return true;\r\n\r\n                        } // end enableMonthYearSelection\r\n\r\n                    } // end DatePicker\r\n\r\n                );\r\n\r\nI found that the bug is still in the \"wicket-date.js\", line 137.\r\n\r\nThe wrong code is:\r\n\r\nif(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n\r\nThis line also makes the module 100 on the year, when the year pattern is \"yyyy\".\r\n\r\nThe fixed code is:\r\n\r\nif(datePattern.match(/yyyy+/)) {\r\n    year = year;\r\n} else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n\r\n\r\n"
    ],
    [
        "WICKET-2841",
        "WICKET-2773",
        "DatePicker does not parse year with pattern dd.MM.yyyy correctly. We use the date pattern dd.MM.yyyy, and when returning from the date picker (org.apache.wicket.extensions.yui.calendar.DatePicker) yields incorrect value in the date text field (org.apache.wicket.extensions.markup.html.form.DateTextField).\r\n\r\nFor instance picking the date 19.04.2010 in the date picker, yields 19.04.10, which again becomes the java.util.Date 19.04.0010. We have found the source of the problem, and created a fix for this, but hopefully you can fix this in a later release, so we do not have to maintain a local patched version of wicket-datetime.\r\n\r\nI have included the patch here. However this code seems very intentional, so applying this patch may be breaking something else!?\r\n\r\nThanks\r\n- Alf\r\n\r\ndiff --git a/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js b/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\nindex 7f19c55..420f075 100644\r\n--- a/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\n+++ b/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\n@@ -134,7 +134,7 @@ Wicket.DateTime.substituteDate = function(datePattern, date) {\r\n        // optionally do some padding to match the pattern\r\n        if(datePattern.match(/dd+/)) day = Wicket.DateTime.padDateFragment(day);\r\n        if(datePattern.match(/MM+/)) month = Wicket.DateTime.padDateFragment(month);\r\n-        if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n+       if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year);\r\n        // replace pattern with real values\r\n        return datePattern.replace(/d+/, day).replace(/M+/, month).replace(/y+/, year);\r\n }",
        "yui DatePicker based wicket component  truncates years to the 0-99 interval even if 'yyyy' is set as year pattern See last comment at http://issues.apache.org/jira/browse/WICKET-2648 - I open this new ticked because that one is closed.\r\n\r\nBug is still in the \"wicket-date.js\", line 137. \r\n\r\nThe wrong code is: \r\n\r\nif(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); \r\n\r\nThis line also makes the module 100 on the year, when the year pattern is \"yyyy\". \r\n\r\nThe fixed code is: \r\n\r\nif(datePattern.match(/yyyy+/)) { \r\n\r\n    year = year; \r\n\r\n  } else if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100); "
    ],
    [
        "WICKET-2841",
        "WICKET-2805",
        "DatePicker does not parse year with pattern dd.MM.yyyy correctly. We use the date pattern dd.MM.yyyy, and when returning from the date picker (org.apache.wicket.extensions.yui.calendar.DatePicker) yields incorrect value in the date text field (org.apache.wicket.extensions.markup.html.form.DateTextField).\r\n\r\nFor instance picking the date 19.04.2010 in the date picker, yields 19.04.10, which again becomes the java.util.Date 19.04.0010. We have found the source of the problem, and created a fix for this, but hopefully you can fix this in a later release, so we do not have to maintain a local patched version of wicket-datetime.\r\n\r\nI have included the patch here. However this code seems very intentional, so applying this patch may be breaking something else!?\r\n\r\nThanks\r\n- Alf\r\n\r\ndiff --git a/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js b/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\nindex 7f19c55..420f075 100644\r\n--- a/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\n+++ b/src/main/java/org/apache/wicket/extensions/yui/calendar/wicket-date.js\r\n@@ -134,7 +134,7 @@ Wicket.DateTime.substituteDate = function(datePattern, date) {\r\n        // optionally do some padding to match the pattern\r\n        if(datePattern.match(/dd+/)) day = Wicket.DateTime.padDateFragment(day);\r\n        if(datePattern.match(/MM+/)) month = Wicket.DateTime.padDateFragment(month);\r\n-        if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year % 100);\r\n+       if(datePattern.match(/yy+/)) year = Wicket.DateTime.padDateFragment(year);\r\n        // replace pattern with real values\r\n        return datePattern.replace(/d+/, day).replace(/M+/, month).replace(/y+/, year);\r\n }",
        "DateTextField and DatePicker do not work properly with four digit year patterns in 1.4.7 Date patterns that contains four digit year does not work properly with DatePicker and DateTextField in 1.4.7. \r\n\r\nSteps to reproduce the error:\r\n1. Create a form with a DateTextField, a DatePicker with a four digit year pattern like yyyy-MM-dd and a submit button.\r\n2. Run the project. Click on the DatePicker and select a date. For example 2010-03-25. \r\n3. Submit the Form and check what's submitted to the server. Server receives the date as 0010-03-25.\r\n\r\nA quickstart to reproduce the problem is attached.\r\n"
    ],
    [
        "WICKET-2842",
        "WICKET-2577",
        "cookies are not base64 encoded by default The rememberMe cookie value can contain spezail chars like german umlauts (\u00f6\u00e4\u00fc..).  Use the default SignInPanel and try a username with umlauts. All cookies should stored base64 encoded by default.\r\n\r\n\r\nStacktrace:\r\n\r\nUnexpected RuntimeException\r\n\r\nWicketMessage: Method onFormSubmitted of interface org.apache.wicket.markup.html.form.IFormSubmitListener targeted at component [MarkupContainer [Component id = signInForm]] threw an exception\r\n\r\nRoot cause:\r\n\r\njava.lang.IllegalArgumentException: Control character in cookie value, consider BASE64 encoding your value\r\nat org.apache.tomcat.util.http.ServerCookie.maybeQuote2(ServerCookie.java:396)\r\nat org.apache.tomcat.util.http.ServerCookie.maybeQuote2(ServerCookie.java:389)\r\nat org.apache.tomcat.util.http.ServerCookie.appendCookieValue(ServerCookie.java:293)\r\nat org.apache.catalina.connector.Response.addCookieInternal(Response.java:1010)\r\nat org.apache.catalina.connector.Response.addCookieInternal(Response.java:979)\r\nat org.apache.catalina.connector.Response.addCookie(Response.java:967)\r\nat org.apache.catalina.connector.ResponseFacade.addCookie(ResponseFacade.java:343)\r\nat org.apache.wicket.protocol.http.WebResponse.addCookie(WebResponse.java:87)\r\nat org.apache.wicket.markup.html.form.persistence.CookieValuePersister.save(CookieValuePersister.java:260)\r\nat org.apache.wicket.markup.html.form.persistence.CookieValuePersister.save(CookieValuePersister.java:131)\r\nat org.apache.wicket.markup.html.form.persistence.CookieValuePersister.save(CookieValuePersister.java:139)\r\nat org.apache.wicket.markup.html.form.Form$13.onFormComponent(Form.java:1445)\r\nat org.apache.wicket.markup.html.form.FormComponent$AbstractVisitor.formComponent(FormComponent.java:112)\r\nat org.apache.wicket.markup.html.form.FormComponent.visitFormComponentsPostOrderHelper(FormComponent.java:441)\r\nat org.apache.wicket.markup.html.form.FormComponent.visitFormComponentsPostOrderHelper(FormComponent.java:428)\r\nat org.apache.wicket.markup.html.form.FormComponent.visitFormComponentsPostOrder(FormComponent.java:400)\r\nat org.apache.wicket.markup.html.form.Form.visitFormComponentsPostOrder(Form.java:1209)\r\nat org.apache.wicket.markup.html.form.Form.persistFormComponentData(Form.java:1433)\r\nat org.apache.wicket.markup.html.form.Form.process(Form.java:1007)\r\nat org.apache.wicket.markup.html.form.StatelessForm.process(StatelessForm.java:63)\r\nat org.apache.wicket.markup.html.form.Form.process(Form.java:931)\r\nat org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:896)\r\nat java.lang.reflect.Method.invoke(Method.java:597)\r\nat org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:182)\r\nat org.apache.wicket.request.target.component.BookmarkableListenerInterfaceRequestTarget.processEvents(BookmarkableListenerInterfaceRequestTarget.java:161)\r\nat org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)\r\nat org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)\r\nat org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)\r\nat org.apache.wicket.RequestCycle.steps(RequestCycle.java:1428)\r\nat org.apache.wicket.RequestCycle.request(RequestCycle.java:545)\r\nat org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:479)\r\nat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:312)\r\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\r\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\r\nat de.kbs.web.filter.SessionTimeoutFilter.doFilter(SessionTimeoutFilter.java:53)\r\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\r\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\r\nat org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:113)\r\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)\r\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\r\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\r\nat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\r\nat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\r\nat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\r\nat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\r\nat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\r\nat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\r\nat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)\r\nat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\r\nat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\r\nat java.lang.Thread.run(Thread.java:619)",
        "Cookies with special symbols in its values aren't properly saved Cookies with special symbols in its values aren't properly saved and as result of it aren't properly loaded.\r\nThe real example is usage of email name as a login in a login form with \"remember me\" feature.\r\n\r\nThe problem is that email name contains '@' symbol which is inside \"tspecials\" set according to rfc2068 (2.2), and so can't be used in cookie value.\r\nThe possible solution to this issue is to use \"quoted-string\" instead of \"token\", as described in rfc2109 (4.1).\r\n\r\nTo workaround this problem I override getValuePersister class of a Form class:\r\n\t\t@Override\r\n\t\tprotected IValuePersister getValuePersister() {\r\n\t\t\treturn new CookieValuePersister() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void save(String key, String value) {\r\n\t\t\t\t\tsuper.save(key, \"\\\"\" + value + \"\\\"\");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\nWithout this workaround loaded value is just \"username\" instead of \"username@domain.name\".\r\n\r\nI believe the proper place to fix it in a Cookie class, but probably there are some historical reasons to don't follow RFC.\r\nE.g. in a jetty servlet-api-2.5-6.1.9 you can see following code:\r\n    // Note -- disabled for now to allow full Netscape compatibility\r\n    // from RFC 2068, token special case characters\r\n    // \r\n    // private static final String tspecials = \"()<>@,;:\\\\\\\"/[]?={} \\t\";\r\n\r\n    private static final String tspecials = \",; \";\r\n\r\nBut issue exists in tomcat implementation of servlet-api too and also depends on browser.\r\n\r\nSo I suggest to add workaround in wicket. Probably we should add quotes only if tspecials are contained inside cookie value, but in my workaround I don't care about two extra chars and also don't check whether value is already quoted."
    ],
    [
        "WICKET-2872",
        "WICKET-2636",
        "Wicket:enclosure does not work properly on <wicket:extend> pages I Just upgraded from 1.4-rc7 to 1.4.8 and I found a bug with enclosures:\r\n\r\nI used to have:\r\n   <wicket:enclosure child=\"selectedCustomersLabel\">\r\n   <tr><th align=\"left\"><wicket:container\r\nwicket:id=\"customerSelectionLabel\"/>:</th><td><wicket:container\r\nwicket:id=\"selectedCustomersLabel\"/></td></tr>\r\n   </wicket:enclosure>\r\n\r\nAnd in the code I was used to changing the visibility only for selectedCustomersLabel\r\n\r\nThis worked fine with 1.4-rc7. Setting selectedCustomersLabel invisible would hide also customerSelectionLabel.\r\n\r\nNow with 1.4.8 I get an exception that customerSelectionLabel does not have markup.... if I set it invisible it works, but that's a whole lot of work if I have to change all enclosures to work like this. \r\n\r\nSpecifically, THE BUG OCCURS WHEN PAGE HAS <wicket:extend> tag. See attached quickstart.\r\n\r\n",
        "Wicket enclosure cannot find wicket container children when hidden and in an extended page When you have a wicket:enclosure, which is in a page which extends markup of another page, then it cannot find wicket:container components which are inside it, when it is hidden.\r\n\r\n    \t<wicket:extend>\r\n\t    \t<wicket:enclosure child=\"child\">\r\n\t    \t\t<div wicket:id=\"div\"></div>\r\n\t    \t\t<wicket:container wicket:id=\"container\"></wicket:container>\r\n\t    \t\t<div wicket:id=\"child\"></div>\r\n\t    \t</wicket:enclosure>\r\n    \t</wicket:extend>\r\n\r\nIt gives the normal wicket component not found exception, that you get when you don't reference the wicket:id in markup.\r\n\r\nChange the wicket:container to a div (or other html element) and it works correctly.\r\n\r\nWorks on 1.4.1, 1.4.2 gives a different error, 1.4.3-1.4.5 give the error described here.\r\n\r\nIt only seems to happen if the page extends markup, if you place it into a page which does not extend markup it works."
    ],
    [
        "WICKET-2875",
        "WICKET-2741",
        "Heavily Broken Caching in Injector The caching implementation in org.apache.wicket.injection.Injector is heavily broken. for each (!) component, a ConcurrentHashMap is created and findFields(..) get called. This happens as a new container is created for every yet unknown class instead of yet unknown ClassLoaders.\r\n\r\nthis is the erroneous code:\r\n\r\n// try cache\r\nConcurrentHashMap<String, Field[]> container = cache.get(clazz.getClassLoader());\r\nif (container != null)\r\n{\r\n\tfields = container.get(clazz.getName());\r\n}\r\n\r\nif (fields == null)\r\n{\r\n\tfields = findFields(clazz, factory);\r\n\r\n\t// write to cache\r\n\tcontainer = new ConcurrentHashMap<String, Field[]>();\r\n\tcontainer.put(clazz.getName(), fields);\r\n\tcache.put(clazz.getClassLoader(), container);\r\n}\r\n\r\nBy the way: This bug was introduced with the fix of WICKET-625 in revision 830070 dated 0ct 27, 2009",
        "non-performant Collections.synchronizedMap() should be replaced with ConcurrentMap The following two classes use Collections.synchronizedMap() --> lots of contention @ concurrent load. \r\n* RequestListenerInterface.interfaces\r\n* WebApplication.addBufferedResponse\r\n* Injector.inject() - 'cache' field. \r\n\r\nThe last instance makes @SpringBean unusable in production (too much contention @ concurrent load)\r\n\r\nHere's a sample output of contention around monitor of class java.util.Collections$SynchronizedMap:\r\n\r\n{noformat}\r\n+--------------------------------------------------------------------------------------+------------------+-----------------+\r\n|                                         Name                                         |    Time (ms)     |      Count      |\r\n+--------------------------------------------------------------------------------------+------------------+-----------------+\r\n|  +---java.util.Collections$SynchronizedMap.get(Object)                               |  126,101   51 %  |  19,145   52 %  |\r\n|  | |                                                                                 |                  |                 |\r\n|  | +---org.apache.wicket.injection.Injector.inject(Object, IFieldValueFactory)       |  109,912   45 %  |  16,285   44 %  |\r\n|  | |                                                                                 |                  |                 |\r\n|  | +---org.springframework.beans.CachedIntrospectionResults.forClass(Class)          |   16,188    7 %  |   2,860    8 %  |\r\n|  |                                                                                   |                  |                 |\r\n|  +---java.util.Collections$SynchronizedMap.put(Object, Object)                       |  119,343   49 %  |  17,676   48 %  |\r\n|    |                                                                                 |                  |                 |\r\n|    +---org.apache.wicket.injection.Injector.inject(Object, IFieldValueFactory)       |                  |                 |\r\n|      |                                                                               |                  |                 |\r\n|      +---org.apache.wicket.injection.ConfigurableInjector.inject(Object)             |                  |                 |\r\n|        |                                                                             |                  |                 |\r\n|        +---org.apache.wicket.injection.ComponentInjector.onInstantiation(Component)  |  118,060   48 %  |  17,467   47 %  |\r\n|        |                                                                             |                  |                 |\r\n|        +---com.castanealabs.gui.model.ZipCodeValidator.<init>()                      |      686    0 %  |     106    0 %  |\r\n|        |                                                                             |                  |                 |\r\n|        +---com.castanealabs.gui.model.ProductSkuProgramDataProvider.<init>(IModel)   |      337    0 %  |      59    0 %  |\r\n|        |                                                                             |                  |                 |\r\n|        +---com.castanealabs.gui.model.ProductTypeProgramDataProvider.<init>(IModel)  |      259    0 %  |      44    0 %  |\r\n+--------------------------------------------------------------------------------------+------------------+-----------------+\r\n\r\nGenerated by YourKit Java Profiler 8.0.22 Feb 12, 2010 3:52:25 PM\r\n{noformat}\r\n"
    ],
    [
        "WICKET-2958",
        "WICKET-1987",
        "Success handler not called when redirecting with Ajax We put an ajax indicator on our page. This adds the wicket.show('indicator') method before the call to wicketAjaxGet.\r\nTo the wicketAjaxGet a success and failure handler are attached that call the wicket.hide methods.\r\n\r\nWe have a button that redirects to a file, so the page doesn't change. The browser just pops up a file download dialog. The thing is that the ajax indicator isn't removed.\r\n\r\nThere are no calls to successHandler or failureHandler for redirects only for loadedCalls.\r\n\r\nI attached a patch that adds a call to the successHandler after the this.done() when a redirect is asked for. In most of the cases the successHandler is an empty function.",
        "Ajax response never get completed When you click on the link provided by the sample page you could see that a pdf is displayed but in the ajax debug window the ajax response never get completed. \nIt remains in \"Invoking pre-call handler(s)\".\n\nWhen the link is clicked, a specific QueryStringUrlCodingStrategy is called that does the following:\n\tpublic IRequestTarget decode(RequestParameters requestParameters) {\n\t\t\n\t\t//ContextRelativeResource context = new ContextRelativeResource(\"test.pdf\");\n\t\tPackageResource resource = PackageResource.get(this.getClass(), \"test.pdf\");\n\t\tIResourceStream resourceStream = resource.getResourceStream();\n\t\t\t\n\t\tResourceStreamRequestTarget rsrt = new \tResourceStreamRequestTarget(resourceStream);\n\t\t\n\t\t \n\t\treturn rsrt; \n\t} \n\n\nI don't know if it's really a bug, but for instance, if you register several mouse icon pointer for the different ajax call you could get that the waiting state of the mouse is preserved after the action is completed.\n\n"
    ],
    [
        "WICKET-2999",
        "WICKET-1572",
        "Packaged Resource URLs encoded with jsessionid Packaged Resource URLs encoded with jsessionid even with Browser Cookie Support\r\n\r\nWith the provided testcase (this works in almost any testcase):\r\n- Remove browser cookies for the test domain.\r\n- Click on link \"Wicket\".\r\n+ The browser hits the the wicket application for the first time with no cookie.\r\n+ The application responds with a 302 response with a cookie, for a URL containing jsessionid.\r\n+ The browser receives the cookie with the response and sends another request for a URL containing jsessionid.\r\n+ The request contains the cookie header.\r\n\r\nExpected behavior from now on:\r\n\r\nThe application knows that the browser has cookie support and should not rewrite URLs in links in the content.\r\n\r\nActual behavior:\r\n\r\nThe application responds with content where links contain jsessionid eg\r\n<script type=\"text/javascript\" src=\"resources/org.apache.wicket.markup.html.WicketEventReference/wicket-event.js;jsessionid=3884e\r\n<form wicket:id=\"testForm\" action=\";jsessionid=388...\r\n\r\nTwo things: Form submit URLs and packaged resource URLs.\r\n\r\nI guess the problem is not necessarily URL rewriting in all cases because the URL of the page must contain jsessionid, and that this URL may have been copied as a whole when building the submit URL of the form.\r\n\r\nHowever, the jsessionid in packaged resources leads to double-fetching of resources such as wicket-event.js with jsessionid in the URL and without it which breaks browser cache behavior.\r\n\r\nI am filing this as NetBeans project just in case it happens only in combination with GlassFish.",
        "Ajax postcall handler only called once under specific condition The problem is originally raised here: http://www.nabble.com/Ajax-postcall-handler-does-not-get-called-every-time-td16659218.html#a16663054\n\n0) Run the quickstart project\n1) Close all browser windows, then open a browser\n2) Visit the page (http://localhost:8080)\n3) click the link, postcall handler is called as expected\n4) any click again, postcall handler is not called\n\nNow the strange part\n\n0) Leave the browser window open, restart the quickstart project\n1) Visit the page (http://localhost:8080)\n2) click the link again and again and postcall handler is called every time as expected\n\nIE7, FF 2.0.0.14, Safari and Opera and all the same.\n\n\n\nAjaxRegisterPostCallHandler.java    =====================================================\n\npublic class AjaxRegisterPostCallHandler extends WebPage {\n\tprivate int count;\n\n\tprivate static HeaderContributor headerCont = new HeaderContributor(new IHeaderContributor() {\n\t\tpublic void renderHead(IHeaderResponse response) {\n\t\t\tresponse\n\t\t\t\t\t.renderOnLoadJavascript(\"Wicket.Ajax.registerPostCallHandler(function(){alert('ajax');});\");\n\t\t}\n\n\t});\n\t\n\tpublic AjaxRegisterPostCallHandler() {\n\n\t\tfinal WebMarkupContainer container = new WebMarkupContainer(\"container\");\n\t\tcontainer.setOutputMarkupId(true);\n\t\tadd(container);\n\n\t\tLabel label = new Label(\"count\", new AbstractReadOnlyModel() {\n\n\t\t\tpublic Object getObject() {\n\t\t\t\treturn count;\n\t\t\t}\n\n\t\t});\n\t\tcontainer.add(label);\n\t\tcontainer.add(new AjaxLink(\"link\") {\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\tcount++;\n\t\t\t\ttarget.addComponent(container);\n\t\t\t\ttarget.appendJavascript(\";\");\n\t\t\t}\n\n\t\t});\n\n\t\tadd(headerCont);\n\n    }\n}\n\n\nAjaxRegisterPostCallHandler.html ================================================\n\n<html>\n   <head>\n       <title>Test</title>\n   </head>\n   <body>\n       <div wicket:id=\"container\">\n           <div wicket:id=\"count\"></div>\n           <a wicket:id=\"link\">link</a>\n       </div>\n       \n   </body>\n</html>\n"
    ],
    [
        "WICKET-3042",
        "WICKET-3040",
        "AjaxLink does not work Below code never fires the onSubmit\r\n\r\nHTML : \r\n\r\n        <a wicket:id=\"helloSubmit\">Hello</a>\r\n\r\nJava :\r\n\t\tadd(new AjaxSubmitLink(\"helloSubmit\", form){\r\n\t\t\tprivate static final long serialVersionUID = 1L;\r\n\t\t\t@Override\r\n\t\t\tprotected void onSubmit(AjaxRequestTarget target, Form<?> form) {\r\n\t\t\t\tHomePage.this.text = helloService.sayHello(name);\r\n\t\t\t\ttarget.addComponent(label);\r\n\t\t\t}\r\n\t\t\t@Override\r\n\t\t\tprotected void onError(AjaxRequestTarget arg0, Form<?> arg1) {\r\n\t\t\t\t// TODO Auto-generated method stub\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\nPlease start the attached quickstart and press the Hello button, nothing happens with 1.5-m2 but works with 1.5-m1.",
        "Ajax form submit fails in Wicket 1.4.11/Firefox3.6 The very first ajax form submit fails in the attached quickstart.\r\nThe cause is :\r\nRevision 988809 - (view) (download) (as text) (annotate) - [select for diffs]\r\nModified Wed Aug 25 05:22:58 2010 UTC (2 weeks, 2 days ago) by ivaynberg\r\nAjaxSubmitLink not calling the onsubmit event handler\r\nIssue: WICKET-2807\r\n\r\ncommenting wicket-ajax.js, line 1096:\r\nsubmitForm: function(form, submitButton) {\r\n\t    if (!Wicket.Event.fire(form, \"submit\")) return;  <<<<<< THIS\r\n\t    if (this.handleMultipart(form, submitButton)) {\r\nfixes the problem"
    ],
    [
        "WICKET-3334",
        "WICKET-3333",
        "Ampersand in href is escaped twice In my app i have bookmarkable links that are escaped twice. like that \"param1=value1&amp;amp;param2=value2\". After some debuging i found that Link is setting href value, which is escaped once, and after that in the debug view i see that XMLTag.toString shows the same string escaped twice.\r\n\r\nThat looks like regression as the same app code works OK in 1.4.",
        "Links with multiple parameters are wrongly generated If you have a PageParameters, with multiple params, then the resulting link will be something like this /url?id=123&amp;sid=456, so for some reason the & sign is encoded to &amp; which will result in the following parameters on the receiving page:\r\nid=[123], amp;sid=[456]\r\nSee the attached quickstart for example."
    ],
    [
        "WICKET-3392",
        "WICKET-3218",
        "Page#onInitialize (and prepareForRender) is now broken as it is final (see Wicket-3218) I think the 3218 issue is really a misunderstanding of the onInitialize concept, as it was a really needed feature. This was the reason I switched to 1.5-M3, and then BANG! in RC1 this is broken. Let me explain how to use it in the right way, and then my use case for which this is much needed. \r\nUSAGE \r\nAs you have pointed out, onInitialize gets called at the first time when a component gets added to the Page, or - if this doesn't happen in the constructor then - in the render phase (internalPrepareForRender method) at latest. Well, if you add any component to the page in the constructor then onInitialize is really not of much use, actually in this case it's better not to use it all. However if you start making pages as I do, then it becomes a joy to work with. \r\n\r\nThe solution is simple: Don't add any component to the Page in the constructor, use onInitialize for that purpose. If you advocate this as a best practice then the use cases stated below will be much easier to make than without the onInitialize (and using only constructor). \r\n\r\nThe constructor is anyway best suited only for setting up models, performing (some or all of the) service calls and other things needed to ensure that the given Page is the one to show to the user, without going into costly component additions to the Page. \r\n\r\nUSE CASES \r\n- In my current project we have a common base page from which all other pages subclasses and so we share a common layout, some common panels and common functionality in all pages. However once in a while it might be needed to hide or replace one of the common panels in only one page but leave it as common in all of the others. If you only could do this in the constructor then that will be a really pain. The reason in short is that irrespective of whether you use overriden \"panel adder methods\" or any other solution you are still in object construction phase and that puts quite a few restrictions on variable initialization order. I know, I did it, and there are only hacking workarounds for this. On the other hand, onInitialize is a super elegant way to use overriden methods or any cool OO technique since you are not constrained any more by the \"Construction phase\". \r\n\r\n- An other use case is that the user is doing stuff on any page, it can be anything. Irrespective of what he/she is doing, something is happening in the background, perhaps by an other user's action. The next time the first user is refreshing this page or going to another page, I want the user to be notified, in a common way, in a common code. This can be also achieved without onInitialize with more or less hacking (especially when we want the user notified when staying on the same page), but with onInitialize this is a much cleaner. The reason is that prepareForRender (which by the way also got final, why?) precedes onInitialize and so it is possible to do this check there. \r\n\r\nFINAL/NON-FINAL :) THOUGHTS \r\nSorry for getting so long, my only point is that onInitialize (and prepareForRender) not being final was one of the great achievements of 1.5 (backported into 1.4, or was it the other way around?). There were really use cases for this, especially the avoidance of the Java Object Construction Phase limitations (and the possibility of not having ugly big constructors :)). Sure this can be misused or used wrongly as a lot of other things in Wicket, but this is not a reason to limit the good usage of this. You can put it in the javadoc, that only use onInitialize when you don't do add operations in the constructor. Actually I would also ask what's the point of onInitialize anywhere else than for Pages? At least I could live without it anywhere else, but not for Pages. \r\nI hope you will change both methods back to non-final. If not, then I will have to revert to 1.4 and possibly never use 1.5 since the above issues are showstoppers for me. This would be a sad thing from such a great framework.",
        "Component#onInitialize is broken for Pages As first mentioned at http://mail-archives.apache.org/mod_mbox/wicket-dev/201012.mbox/%3C1291238699.1749.1408166705@webmail.messagingengine.com%3E , I think the current (Wicket 1.4.14) implementation of Component#onInitialize is broken for Pages. Pages get initialized as soon as the first component is added, which is correct. But this usually happens within the constructor of the page, which means that the page object isn't fully initialized yet. The entire point of having onInitialize, however, is to be able to do further work once all constructors have run. See https://github.com/duesenklipper/wicket-oninitialize for a quickstart that demonstrates the problem.\r\n\r\nPedro Santos suggested in the above thread to just switch the entire object construction to onInitialize. I don't think this is a good idea, because\r\n1) it is completely counter-intuitive\r\n2) it is not always realistic to have an entire class hierarchy not using the constructor just because a subclass somewhere might want to use onInitialize\r\n3) it is inconsistent with onInitialize behavior for all other (non-Page) components. Here I can easily mix work in the constructor with onInitialize.\r\n\r\nI propose the following patch:\r\n- override onInitialize in Page and make it final, so Pages can't use this any more. This should not cause any unnecessary breaking, since currently it's not working for pages anyway.\r\n- introduce Page#onPageInitialize to provide a safe alternative to onInitialize\r\n- make a special case for Page in Component's beforeRender to fire Page#onPageInitialize if necessary\r\n\r\nYes, this is a bit of special casing for Page, but there's quite a lot of that needed for Page anyway. I think the impact of this should be minimal.\r\n\r\nMy page includes documentation and a new testcase that verifies the new behavior. I modified the old ComponentInitializationTest to reflect the fact that Page doesn't get onInitialize any more."
    ],
    [
        "WICKET-3472",
        "WICKET-3093",
        "autocompletetextfield focus issue in wicket 1.4.14 In autocompletetextfield, cursor keeps going back to the beginning of text field when tying text in the text field. This is very annoying. It seems like this is issue is wicket-autocomplete.js. I even tried wicket 1.4.15 and issue is present in this version as well. Please resolve this issue or let me know the workaround.\r\n\r\nThanks,\r\nRajeev\r\n\r\n",
        "Self-updating AutoCompleteTextField moves focus to start of field in IE only I have an AutoCompleteTextField that has a AjaxFormSubmitBehavior(\"onchange\") attached so that we can canonicalise the value (eg correct the case) automatically. In IE only, when you pause long enough to trigger the AjaxFormSubmitBehavior, the cursor moves to the start of the text field, so if you type \"123\" slowly you may be \"312\".\r\n\r\nThis is only an issue in IE as it is caused by WICKET-2279 - if I remove the javascript added for that bug the problem goes away.\r\n\r\nThe problem can also be solved by changing AjaxFormSubmitBehavior(\"onchange\") to AjaxFormSubmitBehavior(\"onblur\"), but I still consider it a bug given it only occurs in IE - Firefox and Chrome behave correctly no matter what you do.\r\n\r\nAlso, since the javascript added in WICKET-2279 starts with the comment \"// hack for a focus issue in IE, WICKET-2279\" I figured you'd like to know about any quirky behaviour it causes.\r\n"
    ],
    [
        "WICKET-3631",
        "WICKET-3576",
        "invoking setResponsePage after setting cookie results in cookie not being created(no Set-Cookie header being sent to the client). invoking setResponsePage after setting cookie results in Set-Cookie header not being sent to the client.\r\n\r\n\tadd(new Link(\"create-cookie\") {\r\n\r\n            @Override\r\n            public void onClick() {\r\n                CookieUtils cookieUtils = new CookieUtils();\r\n                cookieUtils.getSettings().setMaxAge(60 * 60 * 24 * 7); //7 days expiration\r\n\r\n                cookieUtils.save(\"rememberme\", \"john\");\r\n\r\n                //by adding the call to setResponsePage(TestPage2.class);\r\n               //cookie will not be created\r\n               //comment the line below and cookie is being created\r\n                setResponsePage(TestPage2.class);\r\n           }",
        "Cannot set a cookie on bookmarkable page Steps to reproduce:\r\n//////////////////////\r\nAfter starting the Wicket Examples, navigate directly to:\r\nhttp://localhost:8080/authentication2/wicket/bookmarkable/org.apache.wicket.examples.authentication2.SignIn2\r\n\r\nSign in with proper user name and password. Notice that the cookie \"LoggedIn\" is not set.\r\n//////////////////////\r\n\r\nThis does not happen if navigation to the authentication2 example is done through the examples home page. In that case, the URL is http://localhost:8080/authentication2/.\r\n\r\nIf I understand correctly, this means that bookmarkable pages cannot set cookies when they also do a redirect. e.g. a bookmarkable sign-in page.\r\n\r\nNote that with the examples from 1.5-rc2, doing the steps described above produces a different result. In that case, signing-in does not set a cookie or actually sign-in at all. The same sign-in page is presented a second time. Sign-in works on this second page."
    ],
    [
        "WICKET-3648",
        "WICKET-3500",
        "AbstractMarkupParser.removeComment() goes in endless loop when the comment is multi line A markup like:\r\n <!--[if lt IE 8 ]>\r\n            <style></style>\r\n            <script src=\"js/ie7.js\"></script>\r\n        <![endif]-->\r\n\r\nand the application is configured with: getMarkupSettings().setStripComments(true);\r\n\r\nmakes AbstractMarkupParser#removeComment(String) to enter in endless loop.",
        "Method AbstractMarkupParser.removeComment() causes an endless loop The last change (see WICKET-3277) of method AbstractMarkupParser.removeComment() in Wicket 1.4.16 causes an endless loop if the markup contains conditional comments for IE. \r\n\r\nFor example, the following string causes a loop in method removeComment()\r\n\r\nrawMarkup = \"\\r\\n      <!--[if IE 6]>\\r\\n        \"\r\n\r\nAccording to the following code snippet \r\n\r\n\tprivate String removeComment(String rawMarkup)\r\n\t{\r\n\t\tint pos1 = rawMarkup.indexOf(\"<!--\");\r\n\t\twhile (pos1 != -1)\r\n\t\t{\r\n\t\t\tint pos2 = rawMarkup.indexOf(\"-->\", pos1 + 4);\r\n\t\t\tfinal StringBuilder buf = new StringBuilder(rawMarkup.length());\r\n\t\t\tif (pos2 != -1)\r\n\t\t\t{\r\n\t\t\t...\r\n\t\t\t}\r\n\t\t\tpos1 = rawMarkup.indexOf(\"<!--\", pos1);\r\n\t\t}\r\n\t\treturn rawMarkup;\r\n\t}\r\n\r\none can see that pos1 remains unchanged if pos2 == -1.\r\n\r\nThe previous version in Wicket 1.4.15 doesn't have this defect. As a workaround set StripComments to false.\r\n\r\n"
    ],
    [
        "WICKET-3699",
        "WICKET-3670",
        "BaseWicketTester startPanel(panel) missing With 1.5RC4.2 the method BaseWicketTester.startPanel(final ITestPanelSource testPanelSource) is deprecated and javadoc says 'use startPanel(panel) instead'. \r\n\r\nThis method does not exist yet. Currently we use startComponent(panel, null) but providing startPanel(panel) would be better.\r\n\r\nBTW: there is a startComponent(component) method and a startComponent(component, pageMarkup) method, but they have nothing to do together... IMO this is somewhat unfortunate...\r\n\r\n\r\n\r\n\r\n\r\n",
        "WicketTester does not support custom pages for component testing using the new API The methods to test components only allow custom markup, no custom pages. We need custom pages for our testcases. I'll attach a patch to add support for this."
    ],
    [
        "WICKET-3722",
        "WICKET-3690",
        "Page Expired after session.invalidate() and setResponsePage() With version 1.5-RC4.2 session invalidate and setResponsePage ends up to a PageExpired, until 1.5-RC3 this worked fine. I've made a quickstart to reproduce:\r\n\r\n- start it with ''maven jetty:run\" and goto localhost:8080\r\n- click on page 'Safe'\r\n- 'klick' to sign in (now you're logged in as admin)\r\n- click 'logout' (session gets invalidated and setResponsePage(HomePage.class))\r\n- now clicking any link you get Page Expired\r\n\r\nSame sample with 1.5-RC3 dependency works fine.\r\n",
        "Session is invalidated more than once because Session.sessionInvalidated is not reset org.apache.wicket.Session.detach() invalidates the http session and null-ifies the sessionStore but doesn't reset 'sessionInvalidated' variable and later if a new session store is created (e.g. during commitRequest [1]) then this new session store is again destroyed at the end.\r\n\r\n1.\r\nThread [qtp1917759555-26] (Suspended (breakpoint at line 80 in RequestAdapter))\t\r\n\tPersistentPageManager$PersitentRequestAdapter(RequestAdapter).bind() line: 80\t\r\n\tPersistentPageManager$PersitentRequestAdapter.getSessionEntry(boolean) line: 339\t\r\n\tPersistentPageManager$PersitentRequestAdapter.storeTouchedPages(List<IManageablePage>) line: 373\t\r\n\tPersistentPageManager$PersitentRequestAdapter(RequestAdapter).commitRequest() line: 185\t\r\n\tPersistentPageManager(AbstractPageManager).commitRequest() line: 94\t\r\n\tPageAccessSynchronizer$1(PageManagerDecorator).commitRequest() line: 68\t\r\n\tPageAccessSynchronizer$1.commitRequest() line: 203\t\r\n\tApplication$2.onDetach(RequestCycle) line: 1522\t\r\n\tRequestCycleListenerCollection$3.notify(IRequestCycleListener) line: 100\t\r\n\tRequestCycleListenerCollection$3.notify(Object) line: 95\t\r\n\tRequestCycleListenerCollection(ListenerCollection<T>).reversedNotify(Iterator<T>, INotifier<T>) line: 121\t\r\n\tRequestCycleListenerCollection(ListenerCollection<T>).reversedNotify(INotifier<T>) line: 112\t\r\n\tRequestCycleListenerCollection.onDetach(RequestCycle) line: 94\t\r\n\tRequestCycle.onDetach() line: 547\t\r\n\tRequestCycle.detach() line: 479\t\r\n\tRequestCycle.processRequestAndDetach() line: 257\t\r\n\tWicketFilter.processRequest(ServletRequest, ServletResponse, FilterChain) line: 138\t\r\n\tWicketFilter.doFilter(ServletRequest, ServletResponse, FilterChain) line: 194\t\r\n..."
    ],
    [
        "WICKET-3743",
        "WICKET-3649",
        "ThumbnailImageResource - getScaledImageInstance - ByteArrayResponse instead of WebResponse Exception org.apache.wicket.response.ByteArrayResponse cannot be cast to org.apache.wicket.request.http.WebResponse\r\nin org.apache.wicket.extensions.markup.html.image.resource.ThumbnailImageResource:113\r\n        ByteArrayResponse byteResponse = new ByteArrayResponse();\r\n\tAttributes dispatchAttributes = new Attributes(attributes.getRequest(), byteResponse);\r\n\tunscaledImageResource.respond(dispatchAttributes);\r\n\r\norg.apache.wicket.request.resource.AbstractResource.response:436 \r\n         WebResponse response = (WebResponse)attributes.getResponse();\r\n",
        "ClassCastException when AbstractResource writes in response of some type other than WebResponse Some times is usefull to write the resource in ByteArrayResponse to access the response bytes latter. An use case is ThumbnailImageResource accessing the wrapped resource image to first resize it and than write in response."
    ],
    [
        "WICKET-3798",
        "WICKET-3719",
        "Replacing one panel with an other on a page inheriting from an other page, does not find the Markup When a Panel is replaced with an other panel:\r\n\r\nonePanel.replaceWith(secondPanel);\r\nonePanel= secondPanel;\r\najaxRequestTarget.add(onePanel);\r\n\r\non a page inheriting from an other page (e.g. MyBasePage) the markup is not found:\r\n\r\norg.apache.wicket.markup.MarkupNotFoundException: Markup not found for Component: [ [Component id = switchpanel]]\r\n     at org.apache.wicket.Component.internalRender(Component.java:2366)\r\n     at org.apache.wicket.Component.render(Component.java:2322)\r\n     at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:941)\r\n     at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:755)\r\n     at org.apache.wicket.ajax.AjaxRequestTarget.contructResponseBody(AjaxRequestTarget.java:645)\r\n     at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:601)\r\n\r\nOn a page extending WebPage it works fine.",
        "Component's markup cannot be found in Ajax requests if the parent is transparent When TransparentWebMarkupContainer is used an inner markup container cannot find its markup on Ajax updates.\r\nThe problem seems to be caused by the fact that ComponentResolvers#resolve() is not executed and since there is transparent container involved Markup.find(String) cannot find the markup for non-transparent markup containers.\r\nI'll commit a disabled test case that shows the problem. "
    ],
    [
        "WICKET-3801",
        "WICKET-3433",
        "Wicket fails parsing conditional comments surrounding the <html> tag When you use conditional comments on the <html> tag, like:\r\n\r\n<!--[if lt IE 7 ]> <html class=\"no-js ie6\" lang=\"en\"> <![endif]-->\r\n<!--[if IE 7 ]>    <html class=\"no-js ie7\" lang=\"en\"> <![endif]-->\r\n<!--[if IE 8 ]>    <html class=\"no-js ie8\" lang=\"en\"> <![endif]-->\r\n<!--[if (gte IE 9)|!(IE)]><!--> <html class=\"no-js\" lang=\"en\"> <!--<![endif]-->\r\n\r\nwhich is valid (x)html code, you'll get: \r\n\r\nUnexpected RuntimeException\r\n\r\nLast cause: Tag does not have a close tag\r\n\r\n\r\n",
        "Wicket parses HTML inside IE conditional comments I cannot use the HTML5 Boilerplate HTML with wicket. Wicket appears to parse HTML inside IE conditional comments when they appear between the doctype declaration and the <html> tag.\r\n\r\nThe first lines of the boilerplate html look like this:\r\n\r\n\t<!doctype html>\r\n\t<!--[if lt IE 7 ]> <html lang=\"en\" class=\"no-js ie6\"> <![endif]-->\r\n\t<!--[if IE 7 ]>    <html lang=\"en\" class=\"no-js ie7\"> <![endif]-->\r\n\t<!--[if IE 8 ]>    <html lang=\"en\" class=\"no-js ie8\"> <![endif]-->\r\n\t<!--[if IE 9 ]>    <html lang=\"en\" class=\"no-js ie9\"> <![endif]-->\r\n\t<!--[if (gt IE 9)|!(IE)]><!--> <html lang=\"en\" class=\"no-js\"> <!--<![endif]-->\r\n\t\r\n...which causes a problem for wicket, as it thinks there are five opening <html> tags on the page."
    ],
    [
        "WICKET-3889",
        "WICKET-3878",
        "Updating the html when refreshing a page does not work for the basepage, child is ok. With getResourceSettings().addResourceFolder(\"c:/projects/wicket/WicketTest/src/java\");\r\nwhen the html file is modified the result is visible by refreshing the page.\r\nWhen the page is composed of a parent page with a child page the html of the child is properly updated when the page is refreshed but the html of the parent page is not.\r\nIn wicket 1.4 both were updated. ",
        "When base markup file has been removed from the cache, the the derived markup should be removed as well Making updates to the base markup doesn't remove the derived markup from the MarkupCache in DEVELOPMENT mode."
    ],
    [
        "WICKET-3908",
        "WICKET-1816",
        "Encoding problem with POSTing a form with Ajax The form is always posted using Ajax in UTF-8, but if you're using a different encoding in the DB or the HTML aswell, the string is ugly obviously. Wicket should convert from UTF-8 to the given encoding (detecting from getMarkupSettings().setDefaultMarkupEncoding(\"...\"); or getRequestCycleSettings().setResponseRequestEncoding(\"...\"); or an other settings parameter which could be given to wicket)\r\n\r\nI'm attaching a quickstart project which demonstrate this issue by echoing back the string given to a textarea.",
        "Wicket 1.3.4 violates servlet standard, Glassfish spews warnings WicketFilter.java line 194 invokes getLastModified() which invokes \"request.getParameterMap()\" on line 962. Later on in that same request, WicketFilter.java line 222 invokes doGet() which invokes response.setCharacterEncoding() on line 376.\n\nThis is just one case where this problem occurs but I believe others might exist. Whenever Wicket violates the standard Glassfish spews out this warning:\n\nPWC4011: Unable to set request character encoding to UTF-8 from context <context-path>, because request parameters have already been read, or ServletRequest.getReader() has already been called\n\n... you literally end up with tens of these warnings per request, and supposedly, the wrong behavior :) Glassfish's FAQ discusses this in more detail: http://wiki.glassfish.java.net/Wiki.jsp?page=FaqWebAppUnableToSetRequestCharEncoding"
    ],
    [
        "WICKET-3923",
        "WICKET-3525",
        "FileUploadField fails when upload size exceeds setMaxSize() on attempting to upload a file whose size exceeds Form.setMaxSize(), using FileUploadField with or without ProgressBar, upload fails with \"Connection Reset\".\r\n\r\nto replicate: in org.apache.wicket.examples.upload.UploadPage.java change setMaxSize(Bytes.kilobytes(100)); to setMaxSize(Bytes.kilobytes(2000));, deploy and attempt to upoad a 5MB file.\r\n\r\n",
        "Fileupload: full request body is read even when it is known that it is larger than the max allowed size Steps to reproduce (works with all major browers, I suggest using Chrome for this because it shows the upload progress status with a percentage in the lower left/right corner):\r\n1. Go to http://www.wicket-library.com/wicket-examples/upload/single\r\n2. Choose a file significantly larger than 100KB (app's max allowed size) for the first form. Post the first form.\r\n3. The post will take long because the file is uploaded and processed by the server.\r\n\r\nThe browsers send the content-length header and wicket compares this with the max allowed upload size in o.a.w.util.upload.FileUploadBase.FileItemIteratorImpl.FileItemIteratorImpl(FileUploadBase, RequestContext). It detects that it is larger than allowed and throws an exception which brakes the input parsing started by the Form component. However the input is still processed by something else.\r\n"
    ],
    [
        "WICKET-3943",
        "WICKET-3820",
        "Wicket.replaceOuterHtmlSafari broken in safari 5.1 Page containing:\r\n  - a form with an input field and 2 ajax submit buttons.\r\n  - 2 div's with panels behind them becoming visible according which submit button.\r\n\r\nForm is successfully posted, correct panel initialization is done but page fails to load due to an error in wicket-ajax.js line 217\r\n\r\n...\r\nwhile (element != next) {\r\n   try {\r\n      Wicket.Head.addJavascripts(element);\r\n   } catch (ignore) {\r\n   }\r\n   element = element.nextSibling;    <== element is null eventually.\r\n}\r\nThe loop fails to find the 'next' element.\r\n\r\nThe 'next' element is a text node and on debugging the javascript code I noticed that the 'next' element is missing alot of properties compared to the element that it should match against in the while loop ( baseURI, parentElement, parentNode, previousSibling, ... )\r\n\r\nKind regards,\r\nWim.\r\n\r\n",
        "New Chrome merges text in replaceOuterHtml, breaking wicket-ajax Chrome 13.0.782.24 beta changes the way \"element.outerHTML = text\" is handled in a way that breaks Wicket's AJAX rendering compared to Chrome 12.0.782.100 (stable).\r\n\r\nBefore the outerHTML assignment that replaces the DOM content, Wicket.replaceOuterHtmlSafari() grabs element.nextSibling. After the outerHTML assignment, it iterates through the new element siblings until the previous \"next\" is encountered. However, when the new text contains trailing whitespace, and the \"previous next\" is a text node, the new version of Chrome merges the two text nodes into a single text node, invalidating the iteration's termination condition. This eventually leads to a null reference, breaking subsequent Javascript/AJAX functionality.\r\n\r\nIs it a good idea to simply add \"while (next.nodeType == 3) next = next.nextSibling;\" after the next assignment in Wicket.replaceOuterHtmlSafari? This just makes the \"previous next\" reference something other than a text node."
    ],
    [
        "WICKET-3951",
        "WICKET-3773",
        "AjaxFallbackButton deteriorates \">\" in value attribute. Using \">\" in attribute value is not forbidden by HTML neither XML.\r\nWhen used in value attrib, AjaxFallbackButton spoils it - it renders this:\r\n\r\n   <input value=\"\" ... type=\"button\">&gt;\" /&gt;\r\n\r\nLonger snippets:\r\nHTML:\r\n\r\n       <input type=\"button\" wicket:id=\"prev\" value=\"<< Prev day\" />\r\n       <input type=\"button\" wicket:id=\"next\" value=\"Next day >>\" />\r\n\r\nJava:\r\n\r\n        this.navigForm.add( new AjaxFallbackButton(\"prev\", this.navigForm) {\r\n            protected void onSubmit(AjaxRequestTarget target, Form<?> form) {\r\n            }\r\n        });\r\n\r\n        this.navigForm.add( new AjaxFallbackButton(\"next\", this.navigForm) {\r\n            protected void onSubmit(AjaxRequestTarget target, Form<?> form) {\r\n            }\r\n        });\r\n\r\n\r\nRendered HTML:\r\n\r\n <input value=\"&lt;&lt; Prev day\" name=\"prev\" id=\"prev4\" onclick=\"var wcall=wicketSubmitFormById('navig1', '../?wicket:interface=:0:navig:prev::IActivePageBehaviorListener:0:1&amp;wicket:ignoreIfNotActive=true', 'prev' ,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$$(this)&amp;&amp;Wicket.$$('navig1')}.bind(this));;; return false;\" type=\"button\">\r\n\r\n       <input value=\"\" next=\"\" day=\"\" name=\"next\" id=\"next5\" onclick=\"var wcall=wicketSubmitFormById('navig1', '../?wicket:interface=:0:navig:next::IActivePageBehaviorListener:0:1&amp;wicket:ignoreIfNotActive=true', 'next' ,function() { }.bind(this),function() { }.bind(this), function() {return Wicket.$$(this)&amp;&amp;Wicket.$$('navig1')}.bind(this));;; return false;\" type=\"button\">&gt;\" /&gt;\r\n       \r\n",
        "Onclick Script displayed as Link Text Wicket changes an anchor that has an onclick attribute in a way that breaks it:\r\n\r\n<a href=\"google.com\" onclick=\"if(history.length > 1){history.back();return false;}else{return true;}\">Back to Google</a>\r\nbecomes:\r\n<a href=\"google.com\" onclick=\"\" if=\"\" history.length=\"\"> 1){history.back();return false;}else{return true;}\">Back to Google</a>"
    ],
    [
        "WICKET-3982",
        "WICKET-3847",
        "Modal Window is not shown in IE8 On examples page http://wicketstuff.org/wicket/ajax/modal-window if you click on \"Show modal dialog with a page\" or \"Show modal dialog with panel\", no modal windows will be shown.",
        "Modal window won't show in internet explorer document mode 8 Plain modal window won't show after revision 1135146, WICKET-3782 Notifications before and after DOM node replacement (...) using Internet Explorer 9 in document mode quirks, 7 and 8. Works in document mode 9, Opera 11.11, Chrome 13.0.782.32 beta-m, Firefox 3.6.18 and 5.0\r\n\r\nSeems like the lines:\r\nvar newElement = Wicket.$(element.id);\r\nWicket.Event.publish('/dom/node/added', newElement);\r\nthe 2nd time they run, element.id = \"\", which makes Wicket.$ (document.getElementById(\"\")) crash, and an \"ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: [object Error]\" is logged to the Wicket ajax debug window.\r\n\r\nQuick workaround: Somewhere in your code, include the following script: \r\n<script type=\"text/javascript\">\r\n    oldFu = Wicket.$;\r\n\r\n    Wicket.$ = function(arg) {\r\n        if (arg == null || typeof(arg) == \"undefined\" || arg == \"\") {\r\n            return null;\r\n        }\r\n        return oldFu(arg);\r\n    }\r\n</script>\r\n\r\nWhere the difference to the original $ function is the arg==\"\" check"
    ],
    [
        "WICKET-3985",
        "WICKET-3820",
        "Ajax calls does not support IPad Safari Our website is on Apache Wicket 1.4.8. I am trying to see our website works on iPad. The website loads fine however wherever I have Ajax calls on the application Safari is either frozen or it doesn't load the data from database or doesn't make the Ajax calls. \r\nI have tested \"drop down choice example\" on http://wicketstuff.org/wicket14/ajax/ which is failing too. Ajax request is successful, but i think the response is generated by wicket IPad safari is not able to understand/parse. \r\n \r\nP.S The website works fine in iPhone without the above issues.",
        "New Chrome merges text in replaceOuterHtml, breaking wicket-ajax Chrome 13.0.782.24 beta changes the way \"element.outerHTML = text\" is handled in a way that breaks Wicket's AJAX rendering compared to Chrome 12.0.782.100 (stable).\r\n\r\nBefore the outerHTML assignment that replaces the DOM content, Wicket.replaceOuterHtmlSafari() grabs element.nextSibling. After the outerHTML assignment, it iterates through the new element siblings until the previous \"next\" is encountered. However, when the new text contains trailing whitespace, and the \"previous next\" is a text node, the new version of Chrome merges the two text nodes into a single text node, invalidating the iteration's termination condition. This eventually leads to a null reference, breaking subsequent Javascript/AJAX functionality.\r\n\r\nIs it a good idea to simply add \"while (next.nodeType == 3) next = next.nextSibling;\" after the next assignment in Wicket.replaceOuterHtmlSafari? This just makes the \"previous next\" reference something other than a text node."
    ],
    [
        "WICKET-3985",
        "WICKET-3943",
        "Ajax calls does not support IPad Safari Our website is on Apache Wicket 1.4.8. I am trying to see our website works on iPad. The website loads fine however wherever I have Ajax calls on the application Safari is either frozen or it doesn't load the data from database or doesn't make the Ajax calls. \r\nI have tested \"drop down choice example\" on http://wicketstuff.org/wicket14/ajax/ which is failing too. Ajax request is successful, but i think the response is generated by wicket IPad safari is not able to understand/parse. \r\n \r\nP.S The website works fine in iPhone without the above issues.",
        "Wicket.replaceOuterHtmlSafari broken in safari 5.1 Page containing:\r\n  - a form with an input field and 2 ajax submit buttons.\r\n  - 2 div's with panels behind them becoming visible according which submit button.\r\n\r\nForm is successfully posted, correct panel initialization is done but page fails to load due to an error in wicket-ajax.js line 217\r\n\r\n...\r\nwhile (element != next) {\r\n   try {\r\n      Wicket.Head.addJavascripts(element);\r\n   } catch (ignore) {\r\n   }\r\n   element = element.nextSibling;    <== element is null eventually.\r\n}\r\nThe loop fails to find the 'next' element.\r\n\r\nThe 'next' element is a text node and on debugging the javascript code I noticed that the 'next' element is missing alot of properties compared to the element that it should match against in the while loop ( baseURI, parentElement, parentNode, previousSibling, ... )\r\n\r\nKind regards,\r\nWim.\r\n\r\n"
    ],
    [
        "WICKET-4018",
        "WICKET-3847",
        "In IE second modal window isn't shown In IE modal window, created in another modal window isn't shown (frame is drown, but content doesn't load). see attached quickstart",
        "Modal window won't show in internet explorer document mode 8 Plain modal window won't show after revision 1135146, WICKET-3782 Notifications before and after DOM node replacement (...) using Internet Explorer 9 in document mode quirks, 7 and 8. Works in document mode 9, Opera 11.11, Chrome 13.0.782.32 beta-m, Firefox 3.6.18 and 5.0\r\n\r\nSeems like the lines:\r\nvar newElement = Wicket.$(element.id);\r\nWicket.Event.publish('/dom/node/added', newElement);\r\nthe 2nd time they run, element.id = \"\", which makes Wicket.$ (document.getElementById(\"\")) crash, and an \"ERROR: Wicket.Ajax.Call.processEvaluation: Exception evaluating javascript: [object Error]\" is logged to the Wicket ajax debug window.\r\n\r\nQuick workaround: Somewhere in your code, include the following script: \r\n<script type=\"text/javascript\">\r\n    oldFu = Wicket.$;\r\n\r\n    Wicket.$ = function(arg) {\r\n        if (arg == null || typeof(arg) == \"undefined\" || arg == \"\") {\r\n            return null;\r\n        }\r\n        return oldFu(arg);\r\n    }\r\n</script>\r\n\r\nWhere the difference to the original $ function is the arg==\"\" check"
    ],
    [
        "WICKET-4018",
        "WICKET-3982",
        "In IE second modal window isn't shown In IE modal window, created in another modal window isn't shown (frame is drown, but content doesn't load). see attached quickstart",
        "Modal Window is not shown in IE8 On examples page http://wicketstuff.org/wicket/ajax/modal-window if you click on \"Show modal dialog with a page\" or \"Show modal dialog with panel\", no modal windows will be shown."
    ],
    [
        "WICKET-4119",
        "WICKET-4110",
        "FileResourceStream returns unknown content type See http://apache-wicket.1842946.n4.nabble.com/PackageResourceReference-and-Doctype-in-Markup-file-tp3889467p3889587.html\r\n\r\nThe response for FileResourceStreams returns an unknown content type for css- and image-files. Correct content types should be \"text/css\" and \"image/png\" (see also attached quickstart).",
        "Connection lost, give up responding : jetty EOFException To reproduce : Stop app, clean internet explorer cache files and relaunch app"
    ],
    [
        "WICKET-4153",
        "WICKET-4142",
        "The tbody section of a DataTable is empty when no records are returned by the provider. When a DataTable is rendered without records, the tbody section is empty. This violates the html spec.\r\n\r\nFrom the spec:\r\n\"When present, each THEAD, TFOOT, and TBODY contains a row group. Each row group must contain at least one row, defined by the TR element.\"\r\nand\r\n\"The THEAD, TFOOT, and TBODY sections must contain the same number of columns.\"",
        "DataTable generates empty <tbody> --> invalid XHTML strict When the dataset contains 0 rows, an empty <tbody> is generated by DataTable. This is not valid XHTML strict. \r\n\r\nAccording to XHTML 1.0 Strict: \r\n- a <table> must at least contain one <tbody> or <tr>\r\n- a <tbody> must contain at least one <tr>\r\n- a <tr> must contain at least one <th> or <td>\r\n\r\nI can only think of one possible solution and it's quite ugly: add an \"invisible row\" (either always, or only when there are 0 rows) just after the opening <tbody> tag in DataTable.html: \r\n<tr style=\"display: none;\"><td></td></tr> "
    ],
    [
        "WICKET-4157",
        "WICKET-4111",
        "AjaxLazyLoadPanel not loading in IE 8 and 9 (not tested with IE 7) I have a page with 3 lazy load panels. Page works fine with FF, Chrome and Opera but not with IE 8 and 9. \r\nhttp://wicketstuff.org/wicket/ajax/lazy-loading?0  also not working.\r\nI dont know if i should re-open\r\nhttps://issues.apache.org/jira/browse/WICKET-1653\r\nso i opened a new bug report.",
        "addDomReadyEvent broken for IE Wicket.Event.addDomReadyEvent is broken in IE since 1.5.1. I identified WICKET-4080 as the cause of the problem: onreadystatechange with readyState=\"loaded\" is sometimes fired before the document is fully loaded, causing scripts that reference DOM nodes to fail.\r\n\r\nSee http://msdn.microsoft.com/en-us/library/ms534359%28v=vs.85%29.aspx for the order of the readystate events.\r\n\r\nThe attached quickstart reproduces the issue (you may need to F5 a few times as it does not happen reliably). The actual JS error is:\r\n\r\nSCRIPT5007: The property \"onkeydown\" has no value: The object is null or undefined\r\nwicket-autocomplete-ver-1317728550188.js, Line 91 Character 9\r\n"
    ],
    [
        "WICKET-4178",
        "WICKET-4170",
        "Use a strategy to decide how much information to log when a thread cannot get the lock to a page In Wicket 1.4.x, the pagemap would also log the stacktrace for threads that hold the pagelock, if a timeout occurs. This behaviour is no longer present in 1.5.x.",
        "Dump the threads' stack traces if a thread cannot acquire the lock on a page instance  It would be useful if Wicket dumps the stacks of all threads or at least of the thread that holds the lock of a page if another thread cannot acquire this lock for the specified timeout duration.\r\nCurrently we just WARN that a threadB cannot acquire the lock because another thread holds it for more then a minute. If the developer wants to debug this she will need to reproduce the problem somehow and then dump the stacks with jstack, kill -3, jconsole, ...\r\nIt will be nice if Wicket does that when the problem happens and save some time of the developer."
    ],
    [
        "WICKET-4193",
        "WICKET-4071",
        "Indicator in IndicatingAjaxLink works only one time There is a WebMarkupContainer (or any container) and an IndicatingAjaxLink inside it. In the link's onClick method the WebMarkupContainer is added to the target. When the link is pressed for the first time after the page is loaded there is an indicator. When the link is pressed for the second time, there is no indicator. This affects any component with AjaxIndicatorAppender.",
        "AjaxIndicatorAppender removes itself immediately when added via ajax When addding/replacing IndicatingAjaxLink's using ajax in Wicket 1.5.0 it's indicator markup is directly removed when parsing the ajax response. The AjaxIndicatorAppender renders a bit of javascript to the response (when it is an ajax request) to remove previous indicators from the dom (see issue WICKET-722) but in 1.5.0 the execution order of the javascript is different, causing the indicator markup to be added first and the javascript to remove *previous* versions of the indicator to be run next and thus removing the newly added indicator.\r\n\r\nDe ajax debug windows shows that the component is replaced first and then the javascript is run. In 1.4.18 ajax logging shows the javascript run first and then the component gets replaced, resulting in correct behavior."
    ],
    [
        "WICKET-4263",
        "WICKET-4247",
        "Missing renderCSSReference- and renderJavascriptReference-Methods in HeaderResponseContainerFilteringHeaderResponse (have to be overwritten from DecoratingHeaderResponse) A AbstractDependencyRespectingResourceAggregatingHeaderResponse cannot be used in addition to a because the css and javascript is rendered by the \"render\" method of the HeaderResponseContainerFilteringHeaderResponse:\r\n\r\n\r\n\t/**\r\n\t * Renders a single resource reference. This is called from\r\n\t * {@link #renderIfNotAlreadyRendered(Set, ResourceReferenceAndStringData)} for references that\r\n\t * had not been rendered elsewhere.\r\n\t * \r\n\t * @param data\r\n\t *            the reference (and associated data) to conditionally render.\r\n\t */\r\n\tprotected void render(ResourceReferenceAndStringData data)\r\n\t{\r\n\t\tResourceUtil.renderTo(getRealResponse(), data);\r\n\t}\r\n\r\nIf you take al look into the ResourceUtil.renderTo Method, you will see that the used \"renderCSSReference\"- and \"renderJavascriptReference\"-methods are not overwritten in the HeaderResponseContainerFilteringHeaderResponse class.\r\n\r\nSo a filtering of javascript and css References in different buckets is not possible, if you additionally would like to aggregate the css and javascript references in different groups.\r\n",
        "HeaderResponseContainerFilteringHeaderResponse does not override enough methods Seen on Wicket 1.5.3 and I think it is still there in SVN.\r\n\r\nMajor because users might be trapped thinking that their Javascript is at the bottom but it is not, having weird consequences.\r\n\r\nAttached is a quickstart. It sets up a header response decorator with a header response sending javascript to the bottom which is optionally wrapped by a simple implementation of an aggregating header response. The wrapper though uses a full-arguments method to render javascript which is not fetched by the other response header. So the javascript ends up in the html head.\r\n\r\nIt should suffice to override the remaining four (js/css, resource ref/url) render methods to fix this.\r\n"
    ],
    [
        "WICKET-4290",
        "WICKET-4287",
        "Confusion between a form component's wicket:id and a PageParameter in Wicket 1.5.x A Form has a strange behavior when a component has the same wicket:id than a page parameter.\r\n\r\nTo create a Bookmarkable link after a form is submited, setResponsePage is called, and a PageParameter object is given as a parameter : \r\n\t\t\tPageParameters params = new PageParameters();\r\n\t\t\tparams.add(\"searchString\", searchField.getValue());\r\n\t\t\tsetResponsePage(SomePage.class, params);\r\n\r\nIn Wicket 1.5, if \"searchString\" is also a form-component's wicket:id, the form will only be submitted once : \r\nsearchField.getValue() will always return the first value entered by the user.\r\n\r\n\r\nHere's an example : \r\n\r\npublic class SearchPanel extends Panel {\r\n\r\n\tpublic SearchPanel(String id) {\r\n\t\tsuper(id);\r\n\t\tadd(new SearchForm(\"searchForm\"));\r\n\t}\r\n\r\n\tprivate class SearchForm extends Form<String> {\r\n\r\n\t\tprivate static final long serialVersionUID = 1L;\r\n\t\tprivate TextField<String> searchField;\r\n\r\n\t\tpublic SearchForm(String id) {\r\n\t\t\tsuper(id);\r\n\t\t\tsearchField = new TextField<String>(\"searchString\", new Model<String>(\"\"));\r\n\t\t\tadd(searchField);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic void onSubmit() {\r\n\t\t\tPageParameters params = new PageParameters();\r\n\t\t\tparams.add(\"searchString\", searchField.getValue());\r\n\t\t\tsetResponsePage(ListContactsPage.class, params);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nI tested the same application with Wicket 1.4.17 and it was fine. I only had this problem in Wicket 1.5.2 and 1.5.3.",
        "DropDownChoice loses selection after submit when model set via URL param I'm seeing some surprising behavior with DropDownChoice.  My page takes a param and initializes a DropDownChoice model with it. So the drop-down can be initialized via a param in the URL like ?sport=baseball.  \r\n\r\nI've got a submit button on the page, and I find that when the model is set via the URL, clicking submit sets the drop-down choice to null, if it was previously initialized via the URL. However if the user sets the drop-down interactively, it \"survives\" the form submit.\r\n\r\nI'll attach a quickstart that demonstrates it.  \r\n\r\n1. go to http://localhost:8080/?sport=baseball\r\n2. click submit (without changing the drop-down)\r\n3. observe that drop-down gets reset to \"Any\"\r\n4. try choosing a sport via drop-down, say \"archery\"\r\n5. click submit\r\n6. observe that drop-down correctly preserves the choice\r\n\r\nThis is with 1.5.3; it does not reproduce with 1.4.18. The quickstart includes a git project with 1.5.3 in master, and an additional branch \"1.4.18\" for showing that it doesn't happen under that release.\r\n\r\n"
    ],
    [
        "WICKET-4293",
        "WICKET-3957",
        "UrlResourceStream closes incorrect InputStream causing stacktraces on undeploy on GlassFish The UrlResourceStream, used by PackageResources, uses URLConnection#getInputStream() to get file contents. This method is called in UrlResourceStream#getInputStream(), but also when closing the resource in UrlResourceStream#close(). At least on GlassFish v2 and v3, the second call to URLConnection#getInputStream() returns a new stream, so the one created to retrieve the file contents is never closed properly.\r\nThis results in a warning of the container when the classes are garbage-collected, for example on undeploy.\r\n\r\nThe problem is not triggered in all situations. It can be reproduced by using Wicket in a multi-module project consisting of an EAR, WAR and JAR. The JAR must contain a resource (CSS, image, ...) and a Behavior. Inside the Behavior, a static ResourceReference must be created for the resource file.\r\nWhen using this Behavior from inside the WAR project by loading a page the resource is loaded properly. On undeploy however, the described problem will show up.\r\n\r\nThe problem does not exists in Wicket 1.4.x, because a reference to the InputStream is stored. A quickstart and patch for 1.5 is available, will try to attach it :)",
        "PackageResource file locking problem After moving from 1.4.x to 1.5-RC5.1, updates to resources loaded via IHeaderContributor.renderHead() cause file and/or directory locking problems on individual files and/or at the base package directory level. The resulting locking problems disallow changes to resources without stopping the server, followed by a project refresh, rebuild, and server restart. This obviously slows down development time quite severely.\r\n\r\nComparable quick starts generated from 1.4.17 and 1.5-SNAPSHOT demonstrate the problem in 1.5 but no problem in 1.4.17. Similar testing in Linux reveals no problems, nor does there appear to be a problem when using the generated quick starts with Jetty. This seems to be a JBoss and Windows with Wicket 1.5 specific problem."
    ],
    [
        "WICKET-4294",
        "WICKET-4084",
        "AutoCompleteTextField does not show suggestions when it is used on ModalWindow in InternetExplorer When the AutoCompleteTextfield is used on a ModalWindow the suggestions are not shown. The reason is the following code in modal.css on line 171:\r\n\r\ndiv.wicket-modal div.w_content_container {\r\n\tposition: relative;\r\n}\r\n\r\nThis was added in revision 1071523 of modal.css. As a workaround to make the suggestions visible i use the following code in the css-sheet of my project:\r\n\r\n/* \r\n * FIXES rendering issue of autocomplete \r\n * suggestions on modal windows in internet explorer 7, 8, ..?\r\n */\r\nDIV.wicket-modal DIV.w_content_container {\r\n\tposition : static !important;\r\n}\r\n\r\nI will attach a quickstart project, that you can use to reproduce the bug. Start it and type http://localhost:8080/ac into your browser.\r\nTo show the bug you have to remove the workaround from style.css or disable it using the developer toolbar of internet explorer.",
        "AutoComplete text field inside a modal window displays drop-down in the wrong location if the page is scrolled I have a page that contains a ModalWindow. That ModalWindow contains an AutoCompleteTextField.\r\nIf the main page has a lot of content, the AutoCompleteTextField only works correctly if the page is scrolled to the top.\r\nYou can see this easily by scrolling the page up and down while the ModalWindow is open and the AutoCompleteTextField is showing its dropdown.\r\n\r\nI believe what is happening is that the dropdown has an absolute position relative to the Page, rather than relative to the ModalWindow. When you scroll the page down, the dropdown remains in the same position on the page (and hence scrolls off the top), while the ModalWindow stays in the same position on the screen."
    ],
    [
        "WICKET-4335",
        "WICKET-4320",
        "Change in WIcketTester behavior from 1.4.19 to 1.5.3 See attached quickstart.\r\n\r\nThe quickstart contains an Application and a junit test case.  Run the app.  Select a value from the DropDownChoice, click the button that appears. Everything works fine - check log output for two lines.\r\nNow run the unit test case which I think emulates what the user does via WicketTester - on the button press, the IModel<> value has been reset.\r\n\r\nThis test case ran fine under 1.4.19, but upon a recent upgrade to 1.5.3 now fails.\r\n",
        "wicketTester#executeBehavior doesn't ever attach request-parameter  wicketTester#executeBehavior doesn't honor AjaxFormSubmitBehavior contract. When wicketTester executes the behaviour, no request-parameters are sent.\r\n\r\n"
    ],
    [
        "WICKET-4360",
        "WICKET-4286",
        "Wicket reloading old page id on page refresh \r\nThis issue was first reported on StackOverflow but after further investigation it is possible that this is a bug:\r\n\r\nhttp://stackoverflow.com/questions/8985785/wicket-serialization-deserialization-issue\r\n\r\nI added following to my Page class:\r\n\r\n\tprivate void writeObject(ObjectOutputStream oos) throws IOException {\r\n\t\toos.defaultWriteObject();\r\n\t\tSystem.err.println(\"Writing \" + this + something to print out the type of the filter);\r\n\t}\r\n\r\n\tprivate void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException {\r\n\t\tois.defaultReadObject();\r\n\t\tSystem.err.println(\"Reading \" + this + something to print out the type of the filter); \r\n\t}\r\n\r\n1. When the Page is loaded first it prints (actually it prints this 5 times, not sure if it's normal):\r\nWriting [Page class = com.bnpp.ecom.homepage.web.Homepage, id = 0, render count = 1]: type = ALL\r\n\r\n2. When I click on AjaxLink 'ALL' (that will update the filter) it still prints:\r\nWriting [Page class = com.bnpp.ecom.homepage.web.Homepage, id = 0, render count = 1]: type = ALL\r\n\r\n3. When I click on AjaxLink 'DISCUSSIONS' (that will update the filter) it still prints:\r\nWriting [Page class = com.bnpp.ecom.homepage.web.Homepage, id = 0, render count = 1]: type = DISCUSSIONS\r\n\r\n4. When I refresh the page (F5) the pageid is updated:\r\nWriting [Page class = com.bnpp.ecom.homepage.web.Homepage, id = 1, render count = 2]: type = DISCUSSIONS\r\n\r\nThe url however does not change, it stays http://.../?0\r\n\r\n5. When I click on AjaxLink 'ALL' (that will update the filter) it prints:\r\nWriting [Page class = com.bnpp.ecom.homepage.web.Homepage, id = 1, render count = 1]: type = ALL\r\n\r\nSo far so good but\r\n6. When I refresh the page now (F5) this is printed out:\r\nReading [Page class = com.bnpp.ecom.homepage.web.Homepage, id = 0, render count = 1]: type = DISCUSSIONS\r\nWriting [Page class = com.bnpp.ecom.homepage.web.Homepage, id = 2, render count = 2]: type = DISCUSSIONS\r\n\r\nSo it deserializes the page with id 0 although the last known page id was 1 and all changes that were done for version 1 are ignored (in this case switching the type from DISCUSSIONS to ALL).",
        "ListView causes page ID increment A ListView with setReuseItems(false) causes the page ID to increment when the page is reloaded or the back button is pressed. This new ID is not reflected in the URL so Ajax actions against the new ID are lost when navigating away and back again. \r\n\r\nSteps to reproduce in quickstart\r\n1) Load quickstart project in browser\r\n2) Click \"Link to Other\" then click browser's back button.\r\n3) Notice the log statement indicates the HomePage ID is 2, yet the URL remains at ID 0\r\n4) Click \"Ajax Increment Link\" a few times\r\n5) Click \"Link to Other\" then click browser's back button\r\n6) Notice the counter is at zero, and subsequent clicks to the \"Ajax Increment Link\" start from zero. The current page ID output in the log is 4.\r\n\r\n"
    ],
    [
        "WICKET-4382",
        "WICKET-3947",
        "Attribute wicket:message not resolved within parent tag with InlineEnclosure Outer div uses Attribute wicket:enclosure. Some inner element uses Attribute wicket:message. This is not being resolved, however the tag variation is being resolved.\r\n\r\nquickstart attached:\r\nsee both h1 tags inside the inline enclosure div under \"#1\". The first h1 uses wicket:message tag, while the second uses the attribute.",
        "Inline Enclosure does not work properly when using wicket:extend and wicket:child When using Inline Enclosures describes in https://issues.apache.org/jira/browse/WICKET-3422 the functionality is broken in a page that uses wicket:extend and wicket:child."
    ],
    [
        "WICKET-4397",
        "WICKET-4366",
        "Ajax lazy components not loading After fix for WICKET-4227 I am still getting problems with lazy panels. WICKET-4227 is indeed fixed, but lazy panels are not loaded - they are in 'loading' state forever.\r\n\r\nTo reproduce issue please use quickstart from WICKET-4227 and change returned channel type in MyAjaxLazyLoadPanel object to AjaxChannel.Type.DROP. \r\n\r\nPlease note that if it is fixed, maybe WICKET-4366 will be also fixed.\r\nNote also that this issue is similar to WICKET-4157.\r\n\r\nI have seen that this issue occurs also in IE9 after logging into my application (only after login, refreshing page with F5 makes panels loadable).",
        "Dropping  loading of 'AjaxLazyLoadPanels' by clicking 'AjaxFallbackLink' (with ajax-channel set to \"AjaxChannel.Type.DROP\"), still causes Component not found exception \r\nWe have been following the developments around WICKET-4227 issue with great interest hoping that this would resolve the related problem we have with our Wicket based application (please check the project site for more project related info: http://intelleo.eu).\r\n\r\nThe page in question implements several tabs utilizing \"AjaxTabbedPanel\" overridden so that its \"AjaxFallbackLink\" uses \"AjaxChannel.Type.DROP\". One of the tabs on the page, is displaying a form that loads several \"AjaxLazyLoadPanels\". The idea was to enable users to navigate away from the form on that tab, without having to wait for all LazyPanels to finish loading.\r\n\r\nWhen we click on any other tab, we (still) get the \"Component not found\" exception.\r\nWe are running 1.5-SNAPSHOT.\r\n\r\nPresently we can not provide you with the sample app, but perhaps we can demonstrate the problem off our system if you find it necessary.\r\n\r\nThanks. \r\n\r\n\r\nAleksandar\r\n\r\nThe follwing is the actual ERROR description:\r\n\r\n2012-01-26 11:57:31,883 ERROR org.apache.wicket.DefaultExceptionMapper.internalMap(DefaultExceptionMapper.java:114) - Unexpected error occurred\r\norg.apache.wicket.request.handler.ComponentNotFoundException: Could not find component 'mainContainer:mainTabs:lpform:tabs:panel:mainContentPanel:lpFormPanel:lpform:tabs:panel:learninghistoryupdatinglabel' on page 'class org.intelleo.webui.lp.workspace.MainPage\r\nat org.apache.wicket.request.handler.PageAndComponentProvider.getComponent(PageAndComponentProvider.java:167)\r\nat org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.getComponent(ListenerInterfaceRequestHandler.java:92)\r\nat org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:239)\r\nat org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:750)\r\nat org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)\r\nat org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:252)\r\nat org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209)\r\nat org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)\r\nat org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)\r\nat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)\r\nat org.apache.tuscany.sca.host.webapp.TuscanyServletFilter.doFilter(TuscanyServletFilter.java:99)\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)\r\nat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:425)\r\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\r\nat org.eclipse.jetty.server.session.SessionHandler.handle(SessionHandler.java:182)\r\nat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:933)\r\nat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:362)\r\nat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:867)\r\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\r\nat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)\r\nat org.eclipse.jetty.server.Server.handle(Server.java:334)\r\nat org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:559)\r\nat org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:992)\r\nat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:541)\r\nat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:203)\r\nat org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:406)\r\nat org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:462)\r\nat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)\r\nat java.lang.Thread.run(Thread.java:662)\r\n\r\n"
    ],
    [
        "WICKET-4421",
        "WICKET-4359",
        "content type (mime type) detection in ResourceStreamResource has false fallback the content type (or mime type) detectiong deliveres a wrong mime type, if the file name is set, but the mime type is not know from the application.\r\n\r\nResourceStreamResource Line 148 and the followings:\r\n\r\n\t\t\tfinal String contentType;\r\n\t\t\tif (fileName != null && Application.exists())\r\n\t\t\t{\r\n\t\t\t\tcontentType = Application.get().getMimeType(fileName);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tcontentType = stream.getContentType();\r\n\t\t\t}\r\n\t\t\tdata.setContentType(contentType);\r\n\r\nWhen the mime type is  not know from the application it is set to null and indifferent if the stream knows the correct mime type or not.\r\nI think the stream should be used as fallback if there is no mime type registered at the application, see:\r\n\r\n        String contentType = null;\r\n        if (fileName != null && Application.exists()) {\r\n            contentType = Application.get().getMimeType(fileName);\r\n        }\r\n        if(contentType == null) {\r\n             contentType = stream.getContentType();\r\n        }\r\n         data.setContentType(contentType);\r\n\r\nThis solutions offers the benefit, that the user can provide the correct mime type through the ResourceStream.",
        "Package resources leak file handles It seems 1.5.4 introduced a new file handle leak with PackageResource.\r\nlsof shows that there are opened input streams after using such resource."
    ],
    [
        "WICKET-4442",
        "WICKET-4260",
        "UrlEncoder does not encode colons in path segments UrlEncoder adds the colon (\":\") to its \"dontNeedEncoding\" set. This breaks redirect for stateful mounts with colons in path segments, and appears to contradict the rules in the preceding comment. Moving the exception to only apply to query parameters may be more appropriate.",
        "UrlRenderer renders invalid relative URLs if first segment contains colon Seen on Wicket 1.5.3.\r\n\r\nIf a relative url of a link starts with a path segment containing a colon then the whole uri will be regarded as absolute uri, so typically browsers will complain that there is no handle for the protocol foo in foo:bar/dee/per.\r\n\r\nSee also the attached quickstart. The start page contains three links, one relative with colon, one absolute and one to a mounted page without colon for comparison.\r\nThe application also has a static switch to add an extended urlrenderer, prepending \"./\" if needed. This fix is merely a quick shot and there might be better alternatives.\r\n"
    ],
    [
        "WICKET-4456",
        "WICKET-4379",
        "Custom Validators do not lookup resources from their own .properties files I have a custom MyValidator.java and corresponding MyValidator.properties that contains translations for errors. This is working with Wicket 1.4.18 and 1.4.19. The same thing is not working with Wicket 1.5.4.\r\n\r\nI get following message when MyValidator triggers in Wicket 1.5:\r\n\r\nCould not locate error message for component: TextField@form:field and error: [ValidationError message=[null], keys=[MyValidator.invalid], variables=[null]]. Tried keys: field.MyValidator.invalid, MyValidator.invalid.\r\n\r\nI get following message in Wicket 1.4:\r\n\r\nThis is MyValidator msg\r\n\r\n-----\r\n\r\nAccording the log, the MyValidator.properties is not read at all in Wicket 1.5:\r\n\r\nDEBUG - Localizer                  - Locate property: key: 'field.MyValidator.invalid'; Component: '[TextField [Component id = field]]'\r\nDEBUG - ponentStringResourceLoader - component: '[TextField [Component id = field]]'; key: 'field.MyValidator.invalid'\r\nDEBUG - ponentStringResourceLoader - key: 'form.field.field.MyValidator.invalid'; class: 'com.mycompany.HomePage'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'com.mycompany.HomePage'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.field.MyValidator.invalid'; class: 'com.mycompany.HomePage$1'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'com.mycompany.HomePage$1'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'org.apache.wicket.markup.html.form.TextField'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - component: '[TextField [Component id = field]]'; key: 'field.MyValidator.invalid'\r\nDEBUG - ponentStringResourceLoader - component: '[TextField [Component id = field]]'; key: 'field.MyValidator.invalid'\r\nDEBUG - ponentStringResourceLoader - key: 'form.field.field.MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nINFO  - PropertiesFactory          - Loading properties files from jar:file:/C:/Users/K838349/.m2/repository/org/apache/wicket/wicket-core/1.5.4/wicket-core-1.5.4.jar!/org/apache/wicket/Application_fi.properties with loader org.apache.wicket.resource.IsoPropertiesFilePropertiesLoader@1fac852\r\nINFO  - PropertiesFactory          - Loading properties files from jar:file:/C:/Users/K838349/.m2/repository/org/apache/wicket/wicket-core/1.5.4/wicket-core-1.5.4.jar!/org/apache/wicket/Application.properties with loader org.apache.wicket.resource.IsoPropertiesFilePropertiesLoader@1fac852\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.field.MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'org.apache.wicket.validation.ValidatorAdapter'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'org.apache.wicket.validation.validator.StringValidator$MaximumLengthValidator'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'org.apache.wicket.Initializer'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - Localizer                  - Property not found; key: 'field.MyValidator.invalid'; Component: '[TextField [Component id = field]]'\r\nDEBUG - Localizer                  - Property found in cache: 'field.MyValidator.invalid'; Component: '[TextField [Component id = field]]'; value: 'null'\r\nDEBUG - Localizer                  - Locate property: key: 'MyValidator.invalid'; Component: '[TextField [Component id = field]]'\r\nDEBUG - ponentStringResourceLoader - component: '[TextField [Component id = field]]'; key: 'MyValidator.invalid'\r\nDEBUG - ponentStringResourceLoader - key: 'form.field.MyValidator.invalid'; class: 'com.mycompany.HomePage'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'com.mycompany.HomePage'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'com.mycompany.HomePage$1'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'com.mycompany.HomePage$1'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'org.apache.wicket.markup.html.form.TextField'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - component: '[TextField [Component id = field]]'; key: 'MyValidator.invalid'\r\nDEBUG - ponentStringResourceLoader - component: '[TextField [Component id = field]]'; key: 'MyValidator.invalid'\r\nDEBUG - ponentStringResourceLoader - key: 'form.field.MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'field.MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'com.mycompany.WicketApplication'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'org.apache.wicket.validation.ValidatorAdapter'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'org.apache.wicket.validation.validator.StringValidator$MaximumLengthValidator'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - ponentStringResourceLoader - key: 'MyValidator.invalid'; class: 'org.apache.wicket.Initializer'; locale: 'fi_FI'; Style: 'null'; Variation: 'null'\r\nDEBUG - Localizer                  - Property not found; key: 'MyValidator.invalid'; Component: '[TextField [Component id = field]]'\r\nDEBUG - Localizer                  - Property found in cache: 'MyValidator.invalid'; Component: '[TextField [Component id = field]]'; value: 'null'\r\nWARN  - FormComponent              - Could not locate error message for component: TextField@form:field and error: [ValidationError message=[null], keys=[MyValidator.invalid], variables=[null]]. Tried keys: field.MyValidator.invalid, MyValidator.invalid.\r\nonerror\r\n\r\n\r\nI will attach quickstarts from Wicket 1.4 and Wicket 1.5 versions.\r\n",
        "org.apache.wicket.validation.ValidatorAdapter class causes problem with validator properties to be loaded \r\nPROBLEM:\r\n<e1nPL> hi I am having such problem: \r\n<e1nPL> I have implemented validator by implementing IValidator<T> interface\r\n<e1nPL> and I have impelemnted the same validator by extending AbstractValidator<T> class\r\n\r\nCODE:\r\n    ===================== VALIDATOR EXTENDED FROM AbstractValidator =====================\r\n    package com.mycompany;\r\n     \r\n    import java.util.regex.Pattern;\r\n    import org.apache.wicket.IClusterable;\r\n    import org.apache.wicket.util.lang.Classes;\r\n    import org.apache.wicket.validation.IValidatable;\r\n    import org.apache.wicket.validation.IValidator;\r\n    import org.apache.wicket.validation.ValidationError;\r\n    import org.apache.wicket.validation.validator.AbstractValidator;\r\n     \r\n    /**\r\n     *\r\n     * @author e1n\r\n     */\r\n    public class PasswordPolicyValidator<T> extends AbstractValidator<T> {\r\n     \r\n        private static final Pattern UPPER = Pattern.compile(\"[A-Z]\");\r\n        private static final Pattern LOWER = Pattern.compile(\"[a-z]\");\r\n        private static final Pattern NUMBER = Pattern.compile(\"[0-9]\");\r\n       \r\n        @Override\r\n        public void onValidate(IValidatable<T> validatable) {\r\n            final String password = (String)validatable.getValue();\r\n           \r\n            if (!NUMBER.matcher(password).find()) {\r\n                error(validatable, \"no-digit\");\r\n            }\r\n            if (!LOWER.matcher(password).find()) {\r\n                error(validatable, \"no-lower\");\r\n            }\r\n            if (!UPPER.matcher(password).find()) {\r\n                error(validatable, \"no-upper\");\r\n            }\r\n     \r\n        }\r\n       \r\n        @Override\r\n        public void error(IValidatable<T> validatable, String errorKey) {\r\n            ValidationError err = new ValidationError();\r\n            err.addMessageKey(Classes.simpleName(getClass()) + \".\" + errorKey);\r\n            validatable.error(err);\r\n        }\r\n       \r\n    }\r\n     \r\n     \r\n    =============== VALIDATOR directly implementing IValidator interfce ====================\r\n    package com.mycompany;\r\n     \r\n    import java.util.regex.Pattern;\r\n    import org.apache.wicket.IClusterable;\r\n    import org.apache.wicket.util.lang.Classes;\r\n    import org.apache.wicket.validation.IValidatable;\r\n    import org.apache.wicket.validation.IValidator;\r\n    import org.apache.wicket.validation.ValidationError;\r\n    import org.apache.wicket.validation.validator.AbstractValidator;\r\n     \r\n    /**\r\n     *\r\n     * @author e1n\r\n     */\r\n    public class PasswordPolicyValidator<T> implements IValidator<T> {\r\n     \r\n        private static final Pattern UPPER = Pattern.compile(\"[A-Z]\");\r\n        private static final Pattern LOWER = Pattern.compile(\"[a-z]\");\r\n        private static final Pattern NUMBER = Pattern.compile(\"[0-9]\");\r\n     \r\n        public void validate(IValidatable<T> validatable) {\r\n            final String password = (String)validatable.getValue();\r\n           \r\n            if (!NUMBER.matcher(password).find()) {\r\n                error(validatable, \"no-digit\");\r\n            }\r\n            if (!LOWER.matcher(password).find()) {\r\n                error(validatable, \"no-lower\");\r\n            }\r\n            if (!UPPER.matcher(password).find()) {\r\n                error(validatable, \"no-upper\");\r\n            }\r\n     \r\n        }\r\n       \r\n        public void error(IValidatable<T> validatable, String errorKey) {\r\n            ValidationError err = new ValidationError();\r\n            err.addMessageKey(Classes.simpleName(getClass()) + \".\" + errorKey);\r\n            validatable.error(err);\r\n        }\r\n       \r\n    }\r\n\r\n\r\n\r\n<e1nPL> I also have properties file which is named after validator class\r\n<e1nPL> and placed in the same package\r\n<e1nPL> my problem is that when i use to validate my form field validator which implements IValidator interface it is not capable of loading error messages from properties file\r\n<e1nPL> but when i am using validator which is extending AbstractValidator class\r\n<e1nPL> properties file with error msgs gets loaded\r\nPOSSIBLE FIX:\r\n<e1nPL> ok i have found class which is responsible for my problem and it is probably a bug\r\n<e1nPL> org.apache.wicket.validation.ValidatorAdapter\r\n<e1nPL> which wraps classes that directly implements IValidator interface\r\n<e1nPL> then when resources are loaded, and properties file are searched in class path etc., loaders search in wrong path that is build against org.apache.wicket.validation.ValidatorAdapter \r\nPLACE WHER FIX SHOULD OCCOUR\r\norg.apache.wicket.resource.loader.ValidatorStringResourceLoader::loadStringResource(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.String)\r\n\r\n"
    ],
    [
        "WICKET-4470",
        "WICKET-4366",
        "problem with loading lazy components It seems that probably WICKET-4227 is not fixed. I am still getting problems in 1.5.5.\r\n\r\nIf I override ajax channel like:\r\n\r\n@Override\r\nprotected AjaxChannel getChannel() {\r\n        return new AjaxChannel( \"0\", AjaxChannel.Type.DROP ); }\r\n\r\nOnly last item is loaded and other items are in continuous loading state - see WICKET-4397.\r\n\r\nWith unique channel name:\r\n\r\n@Override\r\nprotected AjaxChannel getChannel() {\r\n        return new AjaxChannel( String.valueOf( System.currentTimeMillis() ), AjaxChannel.Type.DROP ); }\r\n\r\nlazy items are loaded asynchronously, however if I try to do action which results in drop, I am getting the same exception as in WICKET-4227.\r\n",
        "Dropping  loading of 'AjaxLazyLoadPanels' by clicking 'AjaxFallbackLink' (with ajax-channel set to \"AjaxChannel.Type.DROP\"), still causes Component not found exception \r\nWe have been following the developments around WICKET-4227 issue with great interest hoping that this would resolve the related problem we have with our Wicket based application (please check the project site for more project related info: http://intelleo.eu).\r\n\r\nThe page in question implements several tabs utilizing \"AjaxTabbedPanel\" overridden so that its \"AjaxFallbackLink\" uses \"AjaxChannel.Type.DROP\". One of the tabs on the page, is displaying a form that loads several \"AjaxLazyLoadPanels\". The idea was to enable users to navigate away from the form on that tab, without having to wait for all LazyPanels to finish loading.\r\n\r\nWhen we click on any other tab, we (still) get the \"Component not found\" exception.\r\nWe are running 1.5-SNAPSHOT.\r\n\r\nPresently we can not provide you with the sample app, but perhaps we can demonstrate the problem off our system if you find it necessary.\r\n\r\nThanks. \r\n\r\n\r\nAleksandar\r\n\r\nThe follwing is the actual ERROR description:\r\n\r\n2012-01-26 11:57:31,883 ERROR org.apache.wicket.DefaultExceptionMapper.internalMap(DefaultExceptionMapper.java:114) - Unexpected error occurred\r\norg.apache.wicket.request.handler.ComponentNotFoundException: Could not find component 'mainContainer:mainTabs:lpform:tabs:panel:mainContentPanel:lpFormPanel:lpform:tabs:panel:learninghistoryupdatinglabel' on page 'class org.intelleo.webui.lp.workspace.MainPage\r\nat org.apache.wicket.request.handler.PageAndComponentProvider.getComponent(PageAndComponentProvider.java:167)\r\nat org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.getComponent(ListenerInterfaceRequestHandler.java:92)\r\nat org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:239)\r\nat org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:750)\r\nat org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)\r\nat org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:252)\r\nat org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209)\r\nat org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)\r\nat org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)\r\nat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)\r\nat org.apache.tuscany.sca.host.webapp.TuscanyServletFilter.doFilter(TuscanyServletFilter.java:99)\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)\r\nat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:425)\r\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\r\nat org.eclipse.jetty.server.session.SessionHandler.handle(SessionHandler.java:182)\r\nat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:933)\r\nat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:362)\r\nat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:867)\r\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\r\nat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)\r\nat org.eclipse.jetty.server.Server.handle(Server.java:334)\r\nat org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:559)\r\nat org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:992)\r\nat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:541)\r\nat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:203)\r\nat org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:406)\r\nat org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:462)\r\nat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)\r\nat java.lang.Thread.run(Thread.java:662)\r\n\r\n"
    ],
    [
        "WICKET-4470",
        "WICKET-4397",
        "problem with loading lazy components It seems that probably WICKET-4227 is not fixed. I am still getting problems in 1.5.5.\r\n\r\nIf I override ajax channel like:\r\n\r\n@Override\r\nprotected AjaxChannel getChannel() {\r\n        return new AjaxChannel( \"0\", AjaxChannel.Type.DROP ); }\r\n\r\nOnly last item is loaded and other items are in continuous loading state - see WICKET-4397.\r\n\r\nWith unique channel name:\r\n\r\n@Override\r\nprotected AjaxChannel getChannel() {\r\n        return new AjaxChannel( String.valueOf( System.currentTimeMillis() ), AjaxChannel.Type.DROP ); }\r\n\r\nlazy items are loaded asynchronously, however if I try to do action which results in drop, I am getting the same exception as in WICKET-4227.\r\n",
        "Ajax lazy components not loading After fix for WICKET-4227 I am still getting problems with lazy panels. WICKET-4227 is indeed fixed, but lazy panels are not loaded - they are in 'loading' state forever.\r\n\r\nTo reproduce issue please use quickstart from WICKET-4227 and change returned channel type in MyAjaxLazyLoadPanel object to AjaxChannel.Type.DROP. \r\n\r\nPlease note that if it is fixed, maybe WICKET-4366 will be also fixed.\r\nNote also that this issue is similar to WICKET-4157.\r\n\r\nI have seen that this issue occurs also in IE9 after logging into my application (only after login, refreshing page with F5 makes panels loadable)."
    ],
    [
        "WICKET-4475",
        "WICKET-4230",
        "Inline Enclosure needs to check isVisibleInHierarchy, not only isVisible If the Visibility of the child component from the inline enclure uses setVisibleAllowed, the enclosure is rendered if the component is not visible. Take a look to the updateVisibility-method of the InlineEnclosure-Class. In my opinion the method should check for isVisibleInHierarchy.\r\n",
        "InlineEnclosure is not working in combination with setVisibilityAllowed InlineEnclosure should use determineVisibility instead of isVisible;\r\n\r\n\r\nShowcase:\r\nhttps://github.com/osiefart/wicket-jira-bugs/tree/master/enclosure-bug-1_4"
    ],
    [
        "WICKET-4508",
        "WICKET-4438",
        "Multiple JARs containing one or more *.class in the same package org/apache/wicket/serialize/IClusterable.class should not be in Maven binary wicket-util Multiple JARs containing one or more *.class in the same package org/apache/wicket/serialize/IClusterable.class should not be in Maven binary wicket-util\r\n\r\n\r\nThe Maven wicket-util JAR has one or more *.class files in the same package as another JAR.\r\n\r\nwicket-core has org/apache/wicket/Application.class (1 file listed of 79)\r\nwicket-util has org/apache/wicket/IClusterable.class (1 file listed of 1)\r\n\r\nThis is not allowed by standard Java ClassLoading rules.  The ClassLoader has the right to stop searching to remainder of the CLASSPATH once it finds the first CLASSPATH entry to contain one or more file resources inside a package.  That CLASSPATH entry can then be considered authoritative for that package.\r\n\r\nThe specification allows for a ClassLoader implemented to perform an exhaustive search of all CLASSPATH entries (if it wants) but it is not a requirement.  So in this way you need to specialized ClassLoader in order to see 1 package split across multiple JARs.\r\n\r\nIt is better for all Java projects to produce redistributes / binary releases that are are compatible as possible with the Java ecosystem.\r\n\r\nThis issue is also a violation of OSGi packaging principals.  If you happen to care about OSGi.\r\n\r\n\r\nPossible Solution:\r\n\r\n1) Ensure the org/apache/wicket/IClusterable.class file is put into the wicket-core Maven module.\r\n\r\n\r\n2) Change the package that IClusterable belongs, maybe org/apache/wicket/serialize/IClusterable.class would be a good choice.  But I'd guess this breaks backwards compatibility.\r\n\r\n\r\nIt maybe worth investigating why org/apache/wicket/serialize/ISerializer.class is also in wicket-util as I think this also would be better moved into wicket-core.  However this is not causing any harm that I can see as no other JAR I have checked contains one or more file resources in the package org/apache/wicket/serialize.  There is a package called org/apache/wicket/serialize/java in wicket-core but that does not count for the purpose of this rule.",
        "Make Wicket more OSGi friendly This is a parent ticket for all OSGi related improvements that we can make for Wicket 6.0"
    ],
    [
        "WICKET-4515",
        "WICKET-3525",
        "Upload Info used by Upload Progress Bar is missing error condition information Since UploadInfor is missing error messages/information handeling, there is no way for progress bar to know that an error happened and it has to stop looking up the changes. For instance, such condition can be triggered if the form hosting upload field has maximum file size set to 100M.\r\nOn an attempt to uplaod a file bigger than 100M no progress is reported, time estimate keeps growing and the screen is flickering with every refresh.\r\nAn attempt to fix this was done in https://issues.apache.org/jira/browse/WICKET-3525 however never made to 1.5.5 or 6.0 beta.\r\nPlease provide the needed error handeling to enable real use of the progress bar.\r\nTo my sinsere disappointment I had to remove the component from the code for now.",
        "Fileupload: full request body is read even when it is known that it is larger than the max allowed size Steps to reproduce (works with all major browers, I suggest using Chrome for this because it shows the upload progress status with a percentage in the lower left/right corner):\r\n1. Go to http://www.wicket-library.com/wicket-examples/upload/single\r\n2. Choose a file significantly larger than 100KB (app's max allowed size) for the first form. Post the first form.\r\n3. The post will take long because the file is uploaded and processed by the server.\r\n\r\nThe browsers send the content-length header and wicket compares this with the max allowed upload size in o.a.w.util.upload.FileUploadBase.FileItemIteratorImpl.FileItemIteratorImpl(FileUploadBase, RequestContext). It detects that it is larger than allowed and throws an exception which brakes the input parsing started by the Form component. However the input is still processed by something else.\r\n"
    ],
    [
        "WICKET-4515",
        "WICKET-3923",
        "Upload Info used by Upload Progress Bar is missing error condition information Since UploadInfor is missing error messages/information handeling, there is no way for progress bar to know that an error happened and it has to stop looking up the changes. For instance, such condition can be triggered if the form hosting upload field has maximum file size set to 100M.\r\nOn an attempt to uplaod a file bigger than 100M no progress is reported, time estimate keeps growing and the screen is flickering with every refresh.\r\nAn attempt to fix this was done in https://issues.apache.org/jira/browse/WICKET-3525 however never made to 1.5.5 or 6.0 beta.\r\nPlease provide the needed error handeling to enable real use of the progress bar.\r\nTo my sinsere disappointment I had to remove the component from the code for now.",
        "FileUploadField fails when upload size exceeds setMaxSize() on attempting to upload a file whose size exceeds Form.setMaxSize(), using FileUploadField with or without ProgressBar, upload fails with \"Connection Reset\".\r\n\r\nto replicate: in org.apache.wicket.examples.upload.UploadPage.java change setMaxSize(Bytes.kilobytes(100)); to setMaxSize(Bytes.kilobytes(2000));, deploy and attempt to upoad a 5MB file.\r\n\r\n"
    ],
    [
        "WICKET-4549",
        "WICKET-4548",
        "Wicket 6.0.0-beta1: RangeValidator / FeedbackPanel Issue (NPE) While using the following code:\r\n\r\n        form.add(new FeedbackPanel(\"feedback\"));\r\n\r\n        final TextField<Integer> input = new TextField<Integer>(\"input\", new Model<Integer>(15), Integer.class);\r\n        input.add(new RangeValidator<Integer>(0, 200));\r\n        form.add(input);\r\n\r\nI've got a NPE with wicket6.0.0-beta1, when I submit the form with a value not inside the validator's bounds. (ie, 500).\r\n\r\njava.lang.NullPointerException\r\n     at org.apache.wicket.markup.html.form.ValidationErrorFeedback.toString(ValidationErrorFeedback.java:83)\r\n     at org.apache.wicket.markup.html.panel.FeedbackPanel.newMessageDisplayComponent(FeedbackPanel.java:338)\r\n\r\n     at org.apache.wicket.markup.html.panel.FeedbackPanel$MessageListView.populateItem(FeedbackPanel.java:117)\r\n     at org.apache.wicket.markup.html.list.ListView.onPopulate(ListView.java:524)\r\n     at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:116)",
        "NullPointerException in org.apache.wicket.markup.html.form.ValidationErrorFeedback org.apache.wicket.markup.html.form.ValidationErrorFeedback throws a NPE in the following situation:\r\n\r\n- Form with a TextField<Integer> that has a RangeValidator\r\n- value outside range is entered\r\n- form is submitted\r\n\r\nSee attached quickstart."
    ],
    [
        "WICKET-4581",
        "WICKET-4569",
        "AJAX autocomplete of wicket-examples not working The autocomplete is not working on wicket-6.0.0-beta2 on Firefox 12 and it was working on wicket-6.0.0-beta1.\r\n\r\nI've traced and the problem started with this commit:\r\nhttps://github.com/apache/wicket/commit/a1d5ef35b5167fffa2b7fb6ff718e72e2a29b431\r\n\r\nA simple workaround is to revert this commit (git revert a1d5ef3) and rebuild wicket, and everything seems to work fine (at least on Firefox 12).\r\n",
        "AutoComplete text field does not work: Channel busy - postponing.. After first input I'm getting a \"Channel busy - postponing...\".\r\n\r\nThe same code works fine with Wicket 1.5.4. "
    ],
    [
        "WICKET-4644",
        "WICKET-4641",
        "AjaxFallbackLink still renders inline.javascript AjaxFallbackLink still renders onlick inline javascript if applied to a e.g. <div>, resulting in a \"none ajax-call\" for some reason",
        "AjaxFallbackLink and log a warning when there are several ajax event behaviors on the same event When I was using an AjaxFallbackLink I got the warning about multiple Behaviours changing the \"onclick\" attribute.\r\n\r\nI changed it to AjaxLink and the warning disappeared."
    ],
    [
        "WICKET-4654",
        "WICKET-4545",
        "FragmentMarkupSourcingStrategy doesn't see fragment markup which is declared in subclassed panel. Steps to reproduce:\r\n- Create class ParentPanel extending Panel\r\n- Create class ChildPanel extending ParentPanel\r\n- Create fragment in ChildPanel\r\n- launch app\r\nResult:\r\nMarkupNotFoundException: No Markup found for Fragment fragmentDef in providing markup container \r\n\r\nSample app attached.",
        "MarkupNotFoundException for Fragment and TransparentWebMarkupContainer Create a base WebPage with a TransparentWebMarkupContainer to allow subclasses register CSS classes on the body tag. Add a Fragment to one of these subsclasses, the markup of the Fragment is not found. \r\nSee also http://apache-wicket.1842946.n4.nabble.com/MarkupNotFoundException-for-Fragment-and-TransparentWebMarkupContainer-tp4619968.html\r\n\r\nException thrown:\r\n\r\norg.apache.wicket.markup.MarkupNotFoundException: No Markup found for Fragment testFragment in providing markup container [Page class = org.foo.HomePage, id = 0, render count = 1]\r\nat org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy.getMarkup(FragmentMarkupSourcingStrategy.java:143)\r\n\r\n"
    ],
    [
        "WICKET-4665",
        "WICKET-4366",
        "Add a new AjaxChannel that discards any Ajax requests if there is a running request in the same channel The schedule JavaScript function of the ajax channel uses a BUSY flag and a request queue in a callbacks array.\r\n\r\nIf the channel is marked as busy because there is a request currently being executed, the second part of the function is executed and for channel type DROP, the newly scheduled request is put into the callbacks queue.\r\n\r\nUsing this approach, the dropping channel type actually allows 2 requests in the \"total queue\".\r\nThe one that triggers the busy = true which is still running and the one that is stored into the callbacks array.\r\n\r\nReading the documentation of AjaxChannel.DROP says:\r\n\r\ndropping - only the last Ajax request is processed, the others are discarded\r\n\r\n\t\tschedule: function (callback) {\r\n\t\t\tif (this.busy === false) {\r\n\t\t\t\tthis.busy = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t} catch (exception) {\r\n\t\t\t\t\tthis.busy = false;\r\n\t\t\t\t\tWicket.Log.error(\"An error occurred while executing Ajax request:\" + exception);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tWicket.Log.info(\"Channel busy - postponing...\");\r\n\t\t\t\tif (this.type === 's') { // stack\r\n\t\t\t\t\tthis.callbacks.push(callback);\r\n\t\t\t\t}\r\n\t\t\t\telse { /* drop */\r\n\t\t\t\t\tthis.callbacks = [];\r\n\t\t\t\t\t//  THIS IS WRONG   this.callbacks[0] = callback;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\nTo make it work, the dropping channel should NOT store the currently scheduled request, but simply clear the callbacks array.",
        "Dropping  loading of 'AjaxLazyLoadPanels' by clicking 'AjaxFallbackLink' (with ajax-channel set to \"AjaxChannel.Type.DROP\"), still causes Component not found exception \r\nWe have been following the developments around WICKET-4227 issue with great interest hoping that this would resolve the related problem we have with our Wicket based application (please check the project site for more project related info: http://intelleo.eu).\r\n\r\nThe page in question implements several tabs utilizing \"AjaxTabbedPanel\" overridden so that its \"AjaxFallbackLink\" uses \"AjaxChannel.Type.DROP\". One of the tabs on the page, is displaying a form that loads several \"AjaxLazyLoadPanels\". The idea was to enable users to navigate away from the form on that tab, without having to wait for all LazyPanels to finish loading.\r\n\r\nWhen we click on any other tab, we (still) get the \"Component not found\" exception.\r\nWe are running 1.5-SNAPSHOT.\r\n\r\nPresently we can not provide you with the sample app, but perhaps we can demonstrate the problem off our system if you find it necessary.\r\n\r\nThanks. \r\n\r\n\r\nAleksandar\r\n\r\nThe follwing is the actual ERROR description:\r\n\r\n2012-01-26 11:57:31,883 ERROR org.apache.wicket.DefaultExceptionMapper.internalMap(DefaultExceptionMapper.java:114) - Unexpected error occurred\r\norg.apache.wicket.request.handler.ComponentNotFoundException: Could not find component 'mainContainer:mainTabs:lpform:tabs:panel:mainContentPanel:lpFormPanel:lpform:tabs:panel:learninghistoryupdatinglabel' on page 'class org.intelleo.webui.lp.workspace.MainPage\r\nat org.apache.wicket.request.handler.PageAndComponentProvider.getComponent(PageAndComponentProvider.java:167)\r\nat org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.getComponent(ListenerInterfaceRequestHandler.java:92)\r\nat org.apache.wicket.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:239)\r\nat org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:750)\r\nat org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)\r\nat org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:252)\r\nat org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:209)\r\nat org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:280)\r\nat org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)\r\nat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)\r\nat org.apache.tuscany.sca.host.webapp.TuscanyServletFilter.doFilter(TuscanyServletFilter.java:99)\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)\r\nat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:425)\r\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)\r\nat org.eclipse.jetty.server.session.SessionHandler.handle(SessionHandler.java:182)\r\nat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:933)\r\nat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:362)\r\nat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:867)\r\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)\r\nat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)\r\nat org.eclipse.jetty.server.Server.handle(Server.java:334)\r\nat org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:559)\r\nat org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:992)\r\nat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:541)\r\nat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:203)\r\nat org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:406)\r\nat org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:462)\r\nat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)\r\nat java.lang.Thread.run(Thread.java:662)\r\n\r\n"
    ],
    [
        "WICKET-4665",
        "WICKET-4397",
        "Add a new AjaxChannel that discards any Ajax requests if there is a running request in the same channel The schedule JavaScript function of the ajax channel uses a BUSY flag and a request queue in a callbacks array.\r\n\r\nIf the channel is marked as busy because there is a request currently being executed, the second part of the function is executed and for channel type DROP, the newly scheduled request is put into the callbacks queue.\r\n\r\nUsing this approach, the dropping channel type actually allows 2 requests in the \"total queue\".\r\nThe one that triggers the busy = true which is still running and the one that is stored into the callbacks array.\r\n\r\nReading the documentation of AjaxChannel.DROP says:\r\n\r\ndropping - only the last Ajax request is processed, the others are discarded\r\n\r\n\t\tschedule: function (callback) {\r\n\t\t\tif (this.busy === false) {\r\n\t\t\t\tthis.busy = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t} catch (exception) {\r\n\t\t\t\t\tthis.busy = false;\r\n\t\t\t\t\tWicket.Log.error(\"An error occurred while executing Ajax request:\" + exception);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tWicket.Log.info(\"Channel busy - postponing...\");\r\n\t\t\t\tif (this.type === 's') { // stack\r\n\t\t\t\t\tthis.callbacks.push(callback);\r\n\t\t\t\t}\r\n\t\t\t\telse { /* drop */\r\n\t\t\t\t\tthis.callbacks = [];\r\n\t\t\t\t\t//  THIS IS WRONG   this.callbacks[0] = callback;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\nTo make it work, the dropping channel should NOT store the currently scheduled request, but simply clear the callbacks array.",
        "Ajax lazy components not loading After fix for WICKET-4227 I am still getting problems with lazy panels. WICKET-4227 is indeed fixed, but lazy panels are not loaded - they are in 'loading' state forever.\r\n\r\nTo reproduce issue please use quickstart from WICKET-4227 and change returned channel type in MyAjaxLazyLoadPanel object to AjaxChannel.Type.DROP. \r\n\r\nPlease note that if it is fixed, maybe WICKET-4366 will be also fixed.\r\nNote also that this issue is similar to WICKET-4157.\r\n\r\nI have seen that this issue occurs also in IE9 after logging into my application (only after login, refreshing page with F5 makes panels loadable)."
    ],
    [
        "WICKET-4665",
        "WICKET-4470",
        "Add a new AjaxChannel that discards any Ajax requests if there is a running request in the same channel The schedule JavaScript function of the ajax channel uses a BUSY flag and a request queue in a callbacks array.\r\n\r\nIf the channel is marked as busy because there is a request currently being executed, the second part of the function is executed and for channel type DROP, the newly scheduled request is put into the callbacks queue.\r\n\r\nUsing this approach, the dropping channel type actually allows 2 requests in the \"total queue\".\r\nThe one that triggers the busy = true which is still running and the one that is stored into the callbacks array.\r\n\r\nReading the documentation of AjaxChannel.DROP says:\r\n\r\ndropping - only the last Ajax request is processed, the others are discarded\r\n\r\n\t\tschedule: function (callback) {\r\n\t\t\tif (this.busy === false) {\r\n\t\t\t\tthis.busy = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t} catch (exception) {\r\n\t\t\t\t\tthis.busy = false;\r\n\t\t\t\t\tWicket.Log.error(\"An error occurred while executing Ajax request:\" + exception);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tWicket.Log.info(\"Channel busy - postponing...\");\r\n\t\t\t\tif (this.type === 's') { // stack\r\n\t\t\t\t\tthis.callbacks.push(callback);\r\n\t\t\t\t}\r\n\t\t\t\telse { /* drop */\r\n\t\t\t\t\tthis.callbacks = [];\r\n\t\t\t\t\t//  THIS IS WRONG   this.callbacks[0] = callback;\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\nTo make it work, the dropping channel should NOT store the currently scheduled request, but simply clear the callbacks array.",
        "problem with loading lazy components It seems that probably WICKET-4227 is not fixed. I am still getting problems in 1.5.5.\r\n\r\nIf I override ajax channel like:\r\n\r\n@Override\r\nprotected AjaxChannel getChannel() {\r\n        return new AjaxChannel( \"0\", AjaxChannel.Type.DROP ); }\r\n\r\nOnly last item is loaded and other items are in continuous loading state - see WICKET-4397.\r\n\r\nWith unique channel name:\r\n\r\n@Override\r\nprotected AjaxChannel getChannel() {\r\n        return new AjaxChannel( String.valueOf( System.currentTimeMillis() ), AjaxChannel.Type.DROP ); }\r\n\r\nlazy items are loaded asynchronously, however if I try to do action which results in drop, I am getting the same exception as in WICKET-4227.\r\n"
    ],
    [
        "WICKET-4692",
        "WICKET-4142",
        "DataTable should emit empty <tr/> in <tbody> when no entries are available DataTable will emit an empty <tbody> when there are no entries to show. However, when using it with a NoRecordsToolbar this will result in a table with only data in thead and tfoot.\r\nIn combination with the css  border-collapse: collapse;  this will not work for some reason - there must be some data in the tbody for it to work.\r\nSo the tbody should contain at least an empty <tr/> tag instead of nothing if there are no results to show.",
        "DataTable generates empty <tbody> --> invalid XHTML strict When the dataset contains 0 rows, an empty <tbody> is generated by DataTable. This is not valid XHTML strict. \r\n\r\nAccording to XHTML 1.0 Strict: \r\n- a <table> must at least contain one <tbody> or <tr>\r\n- a <tbody> must contain at least one <tr>\r\n- a <tr> must contain at least one <th> or <td>\r\n\r\nI can only think of one possible solution and it's quite ugly: add an \"invisible row\" (either always, or only when there are 0 rows) just after the opening <tbody> tag in DataTable.html: \r\n<tr style=\"display: none;\"><td></td></tr> "
    ],
    [
        "WICKET-4692",
        "WICKET-4153",
        "DataTable should emit empty <tr/> in <tbody> when no entries are available DataTable will emit an empty <tbody> when there are no entries to show. However, when using it with a NoRecordsToolbar this will result in a table with only data in thead and tfoot.\r\nIn combination with the css  border-collapse: collapse;  this will not work for some reason - there must be some data in the tbody for it to work.\r\nSo the tbody should contain at least an empty <tr/> tag instead of nothing if there are no results to show.",
        "The tbody section of a DataTable is empty when no records are returned by the provider. When a DataTable is rendered without records, the tbody section is empty. This violates the html spec.\r\n\r\nFrom the spec:\r\n\"When present, each THEAD, TFOOT, and TBODY contains a row group. Each row group must contain at least one row, defined by the TR element.\"\r\nand\r\n\"The THEAD, TFOOT, and TBODY sections must contain the same number of columns.\""
    ],
    [
        "WICKET-4700",
        "WICKET-3947",
        "Inline enclosures and isVisibleInHierarchy There is a problem with the inline enclosure.\r\nComponents inside the inline enclosure don't respond\r\ncorrectly to call \"isVisibleInHierarchy()\". \r\n(Returns true even if component is hidden) Attached\r\nis a patch (against wicket 1.4.20) that fixes this.\r\nThis patch doesn't fix the problem for components inside nested\r\ninline enclosures. There's a test for this as well, and it fails. \r\n(TogglePageTests.testTogglingNestedInlineEnclosures1())\r\n\r\nHopefully this patch might be of help in finding a solution for those as well.",
        "Inline Enclosure does not work properly when using wicket:extend and wicket:child When using Inline Enclosures describes in https://issues.apache.org/jira/browse/WICKET-3422 the functionality is broken in a page that uses wicket:extend and wicket:child."
    ],
    [
        "WICKET-4700",
        "WICKET-4382",
        "Inline enclosures and isVisibleInHierarchy There is a problem with the inline enclosure.\r\nComponents inside the inline enclosure don't respond\r\ncorrectly to call \"isVisibleInHierarchy()\". \r\n(Returns true even if component is hidden) Attached\r\nis a patch (against wicket 1.4.20) that fixes this.\r\nThis patch doesn't fix the problem for components inside nested\r\ninline enclosures. There's a test for this as well, and it fails. \r\n(TogglePageTests.testTogglingNestedInlineEnclosures1())\r\n\r\nHopefully this patch might be of help in finding a solution for those as well.",
        "Attribute wicket:message not resolved within parent tag with InlineEnclosure Outer div uses Attribute wicket:enclosure. Some inner element uses Attribute wicket:message. This is not being resolved, however the tag variation is being resolved.\r\n\r\nquickstart attached:\r\nsee both h1 tags inside the inline enclosure div under \"#1\". The first h1 uses wicket:message tag, while the second uses the attribute."
    ],
    [
        "WICKET-4747",
        "WICKET-4737",
        "WicketFilter#setFilterPath is broken In wicket 1.5 I initialize wicket this way:\r\n\r\n        WicketFilter wicket = new WicketFilter(webApplication);\r\n        wicket.setFilterPath(\"\");\r\n        FilterRegistration.Dynamic filter = servletContext.addFilter(\"wicket\", wicket);\r\n\r\nIn 6.0.0 I get \"Filter path is write-once. You can not change it. Current value=''\r\n\r\nThat's because the logic in WicketFilter#init changed a bit and it re-sets the filter even though it has already been set (there's already a comment that it should be allowed but it's broken now).\r\n\r\nThis\r\n\r\n\t\tif (configureFilterPath != null)\r\n\t\t{\r\n\t\t\tsetFilterPath(configureFilterPath);\r\n\t\t}\r\n\r\nneeds to be\r\n\r\n\t\tif (getFilterPath() == null && configureFilterPath != null)\r\n\t\t{\r\n\t\t\tsetFilterPath(configureFilterPath);\r\n\t\t}",
        "IllegalStateException on WicketFilter.init() after calling setFilterPath() WICKET-4626 broke the ability to pre-set the filter path using setFilterPath(). The patch introduced by WICKET-4626 calls setFilterPath() from within WicketFilter.init(), and setFilterPath() throws IllegalStateException if it is called more than once."
    ],
    [
        "WICKET-4803",
        "WICKET-4493",
        "UrlDecoder should log a message when invalid input is provided In the class: org.apache.wicket.protocol.http.WicketURLDecoder there are two IllegalArgumentException which should be wrapped in WicketRuntimeException, otherwise they are caught by the exception handler form the servlet container (jetty, tomcat, ...) which then uses their http 500 error code configuration instead of the exception handling of wicket.\r\n\r\nWrapping them would be good for consistency and help manage runtime exceptions. \r\nThese are the two exceptions:\r\nthrow new IllegalArgumentException(\"URLDecoder: Incomplete trailing escape (%) pattern\"); \r\nthrow new IllegalArgumentException(\"URLDecoder: Illegal hex characters in escape (%) pattern - \" + e.getMessage()); ",
        "Unwrapped IllegalArgumentException in WicketURLDecoder In the class: org.apache.wicket.protocol.http.WicketURLDecoder there are two IllegalArgumentException which should be wrapped in WicketRuntimeException\r\n\r\nWrapping them would be good for consistency and help manage runtime exceptions.\r\n\r\nThese are the two exceptions, lines 164 and 179:\r\n\r\nthrow new IllegalArgumentException(\"URLDecoder: Incomplete trailing escape (%) pattern\");\r\nthrow new IllegalArgumentException(\"URLDecoder: Illegal hex characters in escape (%) pattern - \" + e.getMessage());\r\n\r\ne.g.\r\n\r\nthrow new WicketRuntimeException(new IllegalArgumentException(\"URLDecoder: Incomplete trailing escape (%) pattern\"));\r\nthrow new WicketRuntimeException(new IllegalArgumentException(\"URLDecoder: Illegal hex characters in escape (%) pattern - \" + e.getMessage()));\r\n\r\nOther similar runtime exceptions found:\r\n\r\norg.apache.wicket.protocol.http.servlet.MultipartServletWebRequest\r\n\r\nLines 106, 114\r\nthrow new IllegalArgumentException(\"argument maxSize must be not null\");\r\nthrow new IllegalStateException(\"ServletRequest does not contain multipart content. One possible solution is to explicitly call Form.setMultipart(true), Wicket tries its best to auto-detect multipart forms but there are certain situation where it cannot.\");\r\n"
    ],
    [
        "WICKET-4843",
        "WICKET-4423",
        "Dragging ModalWindow does not work in IE8 and causes javascript errors When the ModalWindow pops up and you try to drag it nothing happens, Javascript error message appears (also when clicking the close button a javascript error appears).\r\n\r\nWith debuggung I found that in Wicket.Drag.mouseMove, .mouseUp and MouseOut parameter \"e\" is undefined in IE8, while parameter \"event\" exists?",
        "Modal Window dragging failes with iframe Forwarding of mouse event from nested iframes seems to have stopped working. (see javascript Wicket.Iframe)"
    ],
    [
        "WICKET-4848",
        "WICKET-4799",
        "Reporter of FeedbackMessage should not be set to 'null' on detach When FeedbackMessages are detached via IDetachable#detach() the reporter of the message is set to null. \r\nThis seems to be part of legacy cleanup before feedback messages were stored in the components meta data.\r\nSince settings the reporter to null changes the state of the message and \r\nalso partially bypasses the logic behing IApplicationSettings#setFeedbackMessageCleanupFilter(..) \r\n we should remove that logic.",
        "FeedbackMessage.getReporter does not survive requests - ComponentFeedbackMessageFilter and ContainerFeedbackMessageFilter fail Might sound like a duplicate to WICKET-4544, but please reconsider the following:\r\n\r\n- Wicket Migration guide, says:\r\n\"Feedback messages reported against components are now stored in component's metadata rather then in session. This will allow them to survive across requests, see WICKET-2705. When session and components are detached they will run this filter on any stored messages, all messages accepted by the filter are removed.\"\r\n\r\nAs far as I understand the main intention of this was to let FeedbackMessages survive AJAX-Request.  \r\nBut: due to WICKET-2384 , on the messages, that are not removed, still the reporter is set to null.\r\n\r\nThere are - however - some classes, that depend on the reporter set properly. Especially, this is true for ComponentFeedbackMessageFilter. It uses the reportert to determine, if a feedback message belongst to a certain (form) component.\r\n\r\nSo, if we have a form with FeedbackPanels on each form component, and they use ComponentFeedbackMessageFilter, we still have the effect, that the feedback messages disappear on Ajax Requests. IMHO, this is against the intention of WICKET-2705.\r\n\r\nProposals:   \r\na) Please reconsider the solution for WICKET-2384. Does the reporter always have to be nullified?\r\nor:\r\nb) Please make FormComponent to somehow restore the reporter for its own FeedbackMessages when the form component is de-serailized.\r\nor:\r\nc) Remove FeedbackMessage.getReporter completely (or at least, make it deprecated), as it cannot be used consistently. Provide alternatives to ComponentFeedbackMessageFilter / ContainerFeedbackMessageFilter that do not rely on FeedbackMessage.getReporter.  For example,  ComponentFeedbackPanel / FeedbackPanle could pass through the considered component to the FeedbackCollector that is created in FeedbackMessagesModel."
    ],
    [
        "WICKET-4868",
        "WICKET-4623",
        "UploadProgressBar never stops checking for updates The upload progress bar never finishes its final loop because of the strict comparison operator \"===\".\r\n\r\n{code}\r\nvar update = responseAsText.split('|');\r\nvar progressPercent = update[1];\r\nvar status = update[2];\r\n...\r\n\r\nif (progressPercent === 100) {\r\n   Wicket.DOM.hide(this.statusid);\r\n   Wicket.DOM.hide(this.barid);\r\n} else {\r\n   this.scheduleUpdate();\r\n}\r\n{code}\r\n\r\nThe progressPercent variable is a string, thus the strict comparison always fails. The string should either be parsed into a numeric value or compared as a string, e.g. progressPercent === \"100\".",
        "UploadProgressBar does not show up if the form submitted by AjaxButton or AjaxLink If I submit the form normal submit button then the progressbar shows up. If I do it with any ajax component (AjaxLink, AjaxButton ...) then it does not show.\r\nI set up setOutputMarkupPlaceholderTag(true) for progressbar itself and it's parent component (the form) but it has not helped.\r\n"
    ],
    [
        "WICKET-4874",
        "WICKET-3947",
        "\"Cannot find element with id\" error seen in Ajax Debug for child of wicket:enclosure When an AjaxLink is hidden due to being a child of a wicket:enclosure an error is seen in the Ajax Debug window. It seems like the event handler is expecting the AjaxLink to exist in the DOM even though it has been hidden.",
        "Inline Enclosure does not work properly when using wicket:extend and wicket:child When using Inline Enclosures describes in https://issues.apache.org/jira/browse/WICKET-3422 the functionality is broken in a page that uses wicket:extend and wicket:child."
    ],
    [
        "WICKET-4874",
        "WICKET-4382",
        "\"Cannot find element with id\" error seen in Ajax Debug for child of wicket:enclosure When an AjaxLink is hidden due to being a child of a wicket:enclosure an error is seen in the Ajax Debug window. It seems like the event handler is expecting the AjaxLink to exist in the DOM even though it has been hidden.",
        "Attribute wicket:message not resolved within parent tag with InlineEnclosure Outer div uses Attribute wicket:enclosure. Some inner element uses Attribute wicket:message. This is not being resolved, however the tag variation is being resolved.\r\n\r\nquickstart attached:\r\nsee both h1 tags inside the inline enclosure div under \"#1\". The first h1 uses wicket:message tag, while the second uses the attribute."
    ],
    [
        "WICKET-4874",
        "WICKET-4700",
        "\"Cannot find element with id\" error seen in Ajax Debug for child of wicket:enclosure When an AjaxLink is hidden due to being a child of a wicket:enclosure an error is seen in the Ajax Debug window. It seems like the event handler is expecting the AjaxLink to exist in the DOM even though it has been hidden.",
        "Inline enclosures and isVisibleInHierarchy There is a problem with the inline enclosure.\r\nComponents inside the inline enclosure don't respond\r\ncorrectly to call \"isVisibleInHierarchy()\". \r\n(Returns true even if component is hidden) Attached\r\nis a patch (against wicket 1.4.20) that fixes this.\r\nThis patch doesn't fix the problem for components inside nested\r\ninline enclosures. There's a test for this as well, and it fails. \r\n(TogglePageTests.testTogglingNestedInlineEnclosures1())\r\n\r\nHopefully this patch might be of help in finding a solution for those as well."
    ],
    [
        "WICKET-4875",
        "WICKET-4408",
        "AjaxLinks in Panels created by IComponentResolver do not work When a panel is added by an application provided implementation of IComponentResolver none of the AjaxLinkS work. When the same panel is added explicitly it works fine.\r\n\r\nI think it could be related to the change Wicket 6.x where all of the event handling code is added to a script in the <head> section instead of being distributed throughout the body where each AjaxLink is defined, like it was in Wicket 1.5.\r\n\r\nAttached is a quickstart that demonstrates the problem. It contains two instances of 'SystemPanel'. One is added explicitly in HomePage.java and the other is provided by the ComponentResolver.\r\n\r\nClicking the first link will output a message to stdout/console. Clicking the second link will not because it's AjaxLink's onClick is not firing due to the bug.\r\n\r\nNOTE: attached quickstart uses port 80 not port 8080.",
        "Components resolved by an IComponentResolver fail to contribute to header via renderHead If a component is resolved via an IComponentResolver implementation then its overridden renderHead method never gets called.\r\n\r\nIf the same component is added explicitly to its parent then its renderHead method is called.\r\n\r\nThis is critical for us because we have markup variations that may or may not include certain panels. We thus leave the construction/adding of these panels to our IComponentResolver implementation because we can't explicitly add them because not all markup will require all panels.\r\n\r\nClass MyPanel extends Panel\r\n{\r\n\r\n/**\r\n\r\n * Write out necessary header markup.\r\n\r\n */\r\n\r\n@Override\r\n\r\npublic void renderHead(IHeaderResponse response)\r\n\r\n{\r\n\r\n    StringBuffer sb = new StringBuffer();\r\n\r\n    \r\n\r\n    sb.append(\"<script src=\\\"/jquery.easing.1.3.min.js\\\"></script>\");\r\n\r\n    sb.append(\"<script src=\\\"/trans-banner.min.js\\\"></script>\");\r\n\r\n \r\n\r\n    response.renderString(sb.toString());\r\n\r\n} \r\n\r\n}\r\n\r\n\r\nWe aren't using any markup inheritance at the panel level."
    ],
    [
        "WICKET-4990",
        "WICKET-4705",
        "Problem using AutoCompleteBehavior with AjaxFormComponentUpdatingBehavior(\"onchange\") \r\nGiven a text field that uses the following behaviors: \r\nA.  AjaxFormComponentUpdatingBehavior(\"onchange\"); \r\nB.  AutoCompleteBehavior\r\n\r\nSay I enter an letter 'U' into the text field, and an auto-suggest list pops up.\r\nWhen I select an item (e.g. USD) from the auto-suggest list using a mouse, the onchange event from behavior A  is fired twice. The 1st onchange event is for 'U' and the 2nd onchange event is for 'USD'. \r\n\r\nThis issue is mentioned as a regression by Sven Meier and related to WICKET-1280.",
        "AutoCompleteTextField + AjaxFormComponentUpdatingBehavior \"onchange\" problem on wicket 6.0 I have an AutoCompleteTextField with one\r\nAjaxFormComponentUpdatingBehavior added and, on wicket 6.0, it stop\r\nworking. It was working perfectly on wicket 1.5.7.\r\nWhen I select on value with keyboard, nothing happens. When I click in\r\nsome option, the event is fired twice.\r\n\r\nI attached a quickstart with the problem. Changing the wicket version\r\nto 1.5.7, everything works ok."
    ],
    [
        "WICKET-5009",
        "WICKET-4973",
        "Method AbstractRequestLogger.hasBufferRolledOver does not handle situation where requestWindow is a zero-length array [2013-01-25 18:05:55,378] [ERROR] [ajp-bio-8019-exec-58] org.apache.wicket.request.cycle.RequestCycle | Exception occurred during onEndRequest\r\njava.lang.ArrayIndexOutOfBoundsException: -1\r\n        at org.apache.wicket.protocol.http.AbstractRequestLogger.hasBufferRolledOver(AbstractRequestLogger.java:185)\r\n        at org.apache.wicket.protocol.http.AbstractRequestLogger.resizeBuffer(AbstractRequestLogger.java:448)\r\n        at org.apache.wicket.protocol.http.AbstractRequestLogger.addRequest(AbstractRequestLogger.java:339)\r\n        at org.apache.wicket.protocol.http.CobraRequestLogger.addRequest(CobraRequestLogger.java:40)\r\n        at org.apache.wicket.protocol.http.AbstractRequestLogger.requestTime(AbstractRequestLogger.java:246)\r\n        at org.apache.wicket.Application$2.onEndRequest(Application.java:1640)\r\n        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$2.notify(RequestCycleListenerCollection.java:85)\r\n        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$2.notify(RequestCycleListenerCollection.java:81)\r\n        at org.apache.wicket.util.listener.ListenerCollection.reversedNotify(ListenerCollection.java:144)\r\n        at org.apache.wicket.request.cycle.RequestCycleListenerCollection.onEndRequest(RequestCycleListenerCollection.java:80)\r\n        at org.apache.wicket.request.cycle.RequestCycle.onDetach(RequestCycle.java:606)\r\n        at org.apache.wicket.request.cycle.RequestCycle.detach(RequestCycle.java:568)\r\n        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:286)\r\n        at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:244)\r\n        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:188)\r\n        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:267)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\r\n\r\n\r\nCheck for zero-length array is after the call to resizeBuffer() in the method addRequest:\r\n\t\t\t// if the requestWindow is a zero-length array, nothing gets stored\r\n\t\t\tif (requestWindow.length == 0)\r\n\t\t\t\treturn;\r\n\r\nThe reason why the requestWindow array was initialized with length 0 at all is still something I am looking into, but the exception in hasBufferRolledOver prevents the resizeBuffer method to lazy init the array at a later moment.",
        "AbstractRequestLogger - infinite ArrayIndexOutOfBoundsException when requestWindow size is 0 On our production-system we discovered an issue:\r\nWe saw this stacktrace in our logs (at the end of _every_ request):\r\n\r\n\r\n13-01-13 16:59:33 ERROR - RequestCycle                   - Exception occurred during onEndRequest\r\njava.lang.ArrayIndexOutOfBoundsException: -1\r\n        at org.apache.wicket.protocol.http.AbstractRequestLogger.hasBufferRolledOver(AbstractRequestLogger.java:185)\r\n        at org.apache.wicket.protocol.http.AbstractRequestLogger.resizeBuffer(AbstractRequestLogger.java:448)\r\n        at org.apache.wicket.protocol.http.AbstractRequestLogger.addRequest(AbstractRequestLogger.java:339)\r\n        at org.apache.wicket.protocol.http.CobraRequestLogger.addRequest(CobraRequestLogger.java:40)\r\n        at org.apache.wicket.protocol.http.AbstractRequestLogger.requestTime(AbstractRequestLogger.java:246)\r\n        at org.apache.wicket.Application$2.onEndRequest(Application.java:1640)\r\n        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$2.notify(RequestCycleListenerCollection.java:85)\r\n        at org.apache.wicket.request.cycle.RequestCycleListenerCollection$2.notify(RequestCycleListenerCollection.java:81)\r\n        at org.apache.wicket.util.listener.ListenerCollection.reversedNotify(ListenerCollection.java:144)\r\n        at org.apache.wicket.request.cycle.RequestCycleListenerCollection.onEndRequest(RequestCycleListenerCollection.java:80)\r\n        at org.apache.wicket.request.cycle.RequestCycle.onDetach(RequestCycle.java:596)\r\n        at org.apache.wicket.request.cycle.RequestCycle.detach(RequestCycle.java:558)\r\n        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:285)\r\n        at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:188)\r\n        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:245)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\r\n        at nl.topicus.cobra.hibernate.CloseTransactionAfterViewFilter.doFilterInternal(CloseTransactionAfterViewFilter.java:65)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\r\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\r\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)\r\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)\r\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\r\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)\r\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\r\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\r\n        at org.apache.coyote.ajp.AjpProcessor.process(AjpProcessor.java:200)\r\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)\r\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n\r\n\r\nApparently our requestWindow array was initialized with size 0. Problem is, when trying to resize it to a larger size, an ArrayIndexOutOfBoundsException occurs, so resizing fails (and because of that it tries to resize it on every request...)\r\n\r\nThe problem disappears (and sometimes returns) when restarting the application."
    ],
    [
        "WICKET-5032",
        "WICKET-4877",
        "NumberFormatException in request.Url.parse() I have a Bookmarkable URL,\r\n\r\n> http://myserver.com:8080/release/FOO/1.2.3.GA\r\n\r\nmapped using\r\n\r\n{code}\r\nmountPage(\"/release/${product}/${version}\", ReleasePage.class);\r\n{code}\r\n\r\nWhen there's no active session, navigating to such URL causes:\r\n\r\n\r\n{code}\r\nRoot cause:\r\n\r\njava.lang.NumberFormatException: For input string: \"8080;jsessionid=YW+Sz2ReIBQk-H2TfCG9dsUC\"\r\n     at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\r\n     at java.lang.Integer.parseInt(Integer.java:492)\r\n     at java.lang.Integer.parseInt(Integer.java:527)\r\n     at org.apache.wicket.request.Url.parse(Url.java:195)\r\n     at org.apache.wicket.request.Url.parse(Url.java:121)\r\n     at org.apache.wicket.protocol.http.servlet.ServletWebResponse.encodeURL(ServletWebResponse.java:194)\r\n     at org.apache.wicket.protocol.http.HeaderBufferingWebResponse.encodeURL(HeaderBufferingWebResponse.java:161)\r\n     at org.apache.wicket.request.cycle.RequestCycle.renderUrl(RequestCycle.java:524)\r\n     at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:492)\r\n     at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:477)\r\n     at org.apache.wicket.Component.urlFor(Component.java:3319)\r\n     at org.apache.wicket.markup.html.link.BookmarkablePageLink.getURL(BookmarkablePageLink.java:209)\r\n     at org.apache.wicket.markup.html.link.Link.onComponentTag(Link.java:361)\r\n     at org.apache.wicket.Component.internalRenderComponent(Component.java:2530)\r\n     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1530)\r\n     at org.apache.wicket.Component.internalRender(Component.java:2389)\r\n     at org.apache.wicket.Component.render(Component.java:2317)\r\n     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1428)\r\n     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1592)\r\n     at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1567)\r\n     at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:689)\r\n     at org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy.renderAssociatedMarkup(AssociatedMarkupSourcingStrategy.java:76)\r\n     at org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy.onComponentTagBody(PanelMarkupSourcingStrategy.java:112)\r\n     at org.apache.wicket.Component.internalRenderComponent(Component.java:2559)\r\n     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1530)\r\n     at org.apache.wicket.Component.internalRender(Component.java:2389)\r\n     at org.apache.wicket.Component.render(Component.java:2317)\r\n     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1428)\r\n     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1592)\r\n     at org.apache.wicket.Page.onRender(Page.java:907)\r\n     at org.apache.wicket.markup.html.WebPage.onRender(WebPage.java:140)\r\n     at org.apache.wicket.Component.internalRender(Component.java:2389)\r\n     at org.apache.wicket.Component.render(Component.java:2317)\r\n     at org.apache.wicket.Page.renderPage(Page.java:1035)\r\n     at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:118)\r\n     at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:246)\r\n     at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:167)\r\n     at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:784)\r\n     at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)\r\n     at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:255)\r\n     at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:212)\r\n     at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:283)\r\n     at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:188)\r\n     at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:244)\r\n     at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280)\r\n     at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248)\r\n     at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275)\r\n     at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161)\r\n     at org.jboss.as.jpa.interceptor.WebNonTxEmCloserValve.invoke(WebNonTxEmCloserValve.java:50)\r\n     at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:165)\r\n     at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:155)\r\n     at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\r\n     at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\r\n     at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:372)\r\n     at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877)\r\n     at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:679)\r\n     at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:931)\r\n     at java.lang.Thread.run(Thread.java:722)\r\n\r\nComplete stack:\r\n\r\norg.apache.wicket.WicketRuntimeException: Exception in rendering component: [HeaderPanel [Component id = header]]\r\n     at org.apache.wicket.Component.internalRenderComponent(Component.java:2586)\r\n     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1530)\r\n     at org.apache.wicket.Component.internalRender(Component.java:2389)\r\n     at org.apache.wicket.Component.render(Component.java:2317)\r\n     at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1428)\r\n     at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1592)\r\n     at org.apache.wicket.Page.onRender(Page.java:907)\r\n     at org.apache.wicket.markup.html.WebPage.onRender(WebPage.java:140)\r\n     at org.apache.wicket.Component.internalRender(Component.java:2389)\r\n     at org.apache.wicket.Component.render(Component.java:2317)\r\n     at org.apache.wicket.Page.renderPage(Page.java:1035)\r\n     at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:118)\r\n     at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:246)\r\n     at org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:167)\r\n     at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:784)\r\n     at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)\r\n     at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:255)\r\n     at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:212)\r\n     at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:283)\r\n     at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:188)\r\n{code}",
        "encodeUrl fails parsing jsessionid when using root context We are using Selenium 2.26.0 to test our Wicket application, using Jetty 6.1.25 (also tried 7.0.0.pre5) and Firefox 12 as client browser.\r\n\r\nWith Wicket 1.5.8 everything worked fine but updating to 1.5.9 the following error occurs on first request:\r\n\r\njava.lang.NumberFormatException: For input string: \"56704;jsessionid=t3j8z4tsuazh1jfbcnjr8ryg\"\r\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)\r\n\tat java.lang.Integer.parseInt(Integer.java:458)\r\n\tat java.lang.Integer.parseInt(Integer.java:499)\r\n\tat org.apache.wicket.request.Url.parse(Url.java:195)\r\n\tat org.apache.wicket.request.Url.parse(Url.java:121)\r\n\tat org.apache.wicket.protocol.http.servlet.ServletWebResponse.encodeURL(ServletWebResponse.java:194)\r\n\tat org.apache.wicket.protocol.http.HeaderBufferingWebResponse.encodeURL(HeaderBufferingWebResponse.java:161)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.renderUrl(RequestCycle.java:524)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:492)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:477)\r\n\tat org.apache.wicket.Component.urlFor(Component.java:3319)\r\n\tat org.apache.wicket.markup.html.link.BookmarkablePageLink.getURL(BookmarkablePageLink.java:209)\r\n\tat org.apache.wicket.markup.html.link.Link.onComponentTag(Link.java:361)\r\n\tat org.apache.wicket.Component.internalRenderComponent(Component.java:2530)\r\n\tat org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1530)\r\n\tat org.apache.wicket.Component.internalRender(Component.java:2389)\r\n\tat org.apache.wicket.Component.render(Component.java:2317)\r\n\tat org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1428)\r\n\tat org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1592)\r\n\tat org.apache.wicket.Page.onRender(Page.java:907)\r\n\tat org.apache.wicket.markup.html.WebPage.onRender(WebPage.java:140)\r\n\tat org.apache.wicket.Component.internalRender(Component.java:2389)\r\n\tat org.apache.wicket.Component.render(Component.java:2317)\r\n\tat org.apache.wicket.Page.renderPage(Page.java:1035)\r\n\tat org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:118)\r\n\tat org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:246)\r\n\tat org.apache.wicket.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:167)\r\n\tat org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:784)\r\n\tat org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:304)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.executeExceptionRequestHandler(RequestCycle.java:313)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:227)\r\n\tat org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:283)\r\n\tat org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:188)\r\n\tat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:244)\r\n\r\nUsing debugger, the encodeUrl method has variables \r\n\r\nfullUrl = http://localhost:56704\r\nencodedFullUrl = http://localhost:56704;jsessionid=8kxeo3reannw1qjtxgkju8yiu\r\n\r\nbefore the exception occurs. I believe this is related to https://issues.apache.org/jira/browse/WICKET-4645.\r\n"
    ],
    [
        "WICKET-5101",
        "WICKET-1771",
        "Could not open second modal window after closing first Precondition: first modal window is opened. \r\nIt has ajax submit form inside.\r\n\r\nAfter submitting form inside modal I want to open another modal with another content.\r\n\r\nI debugged wicket ajax response and found, \r\nthat script, witch should close first window, closes second instead.\r\n\r\nI attached wicket-ajax-response.js to demonstrate the problem.\r\n\r\nwicket ajax engine correct runs those two functions, but \"win.current.close();\" at line 16\r\nactually closes second window, opened at line 40.\r\n\r\n\r\nSee also\r\nhttps://issues.apache.org/jira/browse/WICKET-1576",
        "Cant close an old ModalWindow and open a new in one AjaxRequest I have a ModalWindow for some confirmation action. After that confirmation, i want to close the window and open an other modalwindow. The ConfirmWindow can be also opened from a ModalWindow. So i need this extra ModalWindow.\n\nThe Problem: The Close javascript uses a timeout, but the open -javascript dont.\n\nMy fix for this solution: \n\n\n\nprivate String getWindowOpenJavascript(){...\n\npostProcessSettings(buffer);\n\n\t\tbuffer.append(\"window.current.setTimeout(function() {\n\t\t\tWicket.Window.create(settings).show();\n\t\t}, 0);\\n\");\n\n\t\treturn buffer.toString();\n\n.."
    ],
    [
        "WICKET-5134",
        "WICKET-5084",
        "java.lang.NullPointerException at org.apache.wicket.markup.html.form.Form.onComponentTag(Form.java:1520) during Atmosphere eventbus.post() if using WebSockets If using WebSockets, it always throws the NPE below:\r\n\r\n{code}\r\nUnexpected RuntimeException\r\n\r\nLast cause: null\r\n\r\nStacktrace\r\n\r\nRoot cause:\r\n\r\njava.lang.NullPointerException\r\n     at org.apache.wicket.markup.html.form.Form.onComponentTag(Form.java:1520)\r\n     at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)\r\n     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1488)\r\n     at org.apache.wicket.Component.internalRender(Component.java:2370)\r\n     at org.apache.wicket.Component.render(Component.java:2298)\r\n     at org.apache.wicket.ajax.XmlAjaxResponse.writeComponent(XmlAjaxResponse.java:127)\r\n     at org.apache.wicket.ajax.AbstractAjaxResponse.writeComponents(AbstractAjaxResponse.java:214)\r\n     at org.apache.wicket.ajax.AbstractAjaxResponse.writeTo(AbstractAjaxResponse.java:145)\r\n     at org.apache.wicket.ajax.AjaxRequestHandler.respond(AjaxRequestHandler.java:363)\r\n     at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:840)\r\n     at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)\r\n     at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:97)\r\n     at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:254)\r\n     at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:211)\r\n     at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:282)\r\n     at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:320)\r\n     at org.apache.wicket.atmosphere.EventBus.postToSingleResource(EventBus.java:297)\r\n     at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:272)\r\n     at com.soluvas.story.impl.StoryManagerImpl.publish(StoryManagerImpl.java:107)\r\n     at id.co.bippo.comment.story.ProductCommentedStoryPoster.createStoriesAndPublish(ProductCommentedStoryPoster.java:71)\r\n     at java.lang.reflect.Method.invoke(Method.java:601)\r\n     at com.google.common.eventbus.EventHandler.handleEvent(EventHandler.java:74)\r\n     at com.google.common.eventbus.SynchronizedEventHandler.handleEvent(SynchronizedEventHandler.java:45)\r\n     at com.google.common.eventbus.EventBus.dispatch(EventBus.java:314)\r\n     at com.google.common.eventbus.AsyncEventBus.access$001(AsyncEventBus.java:34)\r\n     at com.google.common.eventbus.AsyncEventBus$1.run(AsyncEventBus.java:100)\r\n     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n     at java.lang.Thread.run(Thread.java:722)\r\n\r\ndisplay page view\r\n{code}\r\n\r\nAnother stacktrace:\r\n\r\n{code}\r\nUnexpected RuntimeException\r\n\r\nLast cause: null\r\n\r\nStacktrace\r\n\r\nRoot cause:\r\n\r\njava.lang.NullPointerException\r\n     at org.apache.wicket.markup.html.form.Form.onComponentTag(Form.java:1520)\r\n     at org.apache.wicket.Component.internalRenderComponent(Component.java:2511)\r\n     at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1488)\r\n     at org.apache.wicket.Component.internalRender(Component.java:2370)\r\n     at org.apache.wicket.Component.render(Component.java:2298)\r\n     at org.apache.wicket.ajax.XmlAjaxResponse.writeComponent(XmlAjaxResponse.java:127)\r\n     at org.apache.wicket.ajax.AbstractAjaxResponse.writeComponents(AbstractAjaxResponse.java:214)\r\n     at org.apache.wicket.ajax.AbstractAjaxResponse.writeTo(AbstractAjaxResponse.java:145)\r\n     at org.apache.wicket.ajax.AjaxRequestHandler.respond(AjaxRequestHandler.java:363)\r\n     at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:840)\r\n     at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)\r\n     at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:97)\r\n     at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:254)\r\n     at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:211)\r\n     at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:282)\r\n     at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:320)\r\n     at org.apache.wicket.atmosphere.EventBus.postToSingleResource(EventBus.java:297)\r\n     at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:272)\r\n     at com.soluvas.story.impl.StoryManagerImpl.publish(StoryManagerImpl.java:107)\r\n     at id.co.bippo.comment.story.ProductCommentedStoryPoster.createStoriesAndPublish(ProductCommentedStoryPoster.java:71)\r\n     at java.lang.reflect.Method.invoke(Method.java:601)\r\n     at com.google.common.eventbus.EventHandler.handleEvent(EventHandler.java:74)\r\n     at com.google.common.eventbus.SynchronizedEventHandler.handleEvent(SynchronizedEventHandler.java:45)\r\n     at com.google.common.eventbus.EventBus.dispatch(EventBus.java:314)\r\n     at com.google.common.eventbus.AsyncEventBus.access$001(AsyncEventBus.java:34)\r\n     at com.google.common.eventbus.AsyncEventBus$1.run(AsyncEventBus.java:100)\r\n     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n     at java.lang.Thread.run(Thread.java:722)\r\n\r\ndisplay page view\r\n{code}\r\n\r\nThis bug is always reproducible in my configuration.\r\n\r\nIt doesn't occur if comet/long-polling is used instead of websockets. Which means setting below will not trigger the bug:\r\n\r\n{code}\r\n\t\t<init-param>\r\n\t\t\t<param-name>org.atmosphere.useWebSocket</param-name>\r\n\t\t\t<param-value>false</param-value>\r\n\t\t</init-param>\r\n{code}",
        "ClassNotFoundException with Atmosphere on Bookmarkable pages https://github.com/krasa/wicket-atmosphere-quickstart\r\n\r\nrun, go to second page, click on link.\r\n\r\nfrom some reason, it makes requests to \r\n\r\nhttp://localhost:8080/wicket/bookmarkable/resource/org.apache.wicket.resource.JQueryResourceReference/jquery/jquery-ver-1362607904693.js  \r\ninstead of: http://localhost:8080/wicket/resource/org.apache.wicket.resource.JQueryResourceReference/jquery/jquery-ver-1362607904693.js   \r\n =>java.lang.ClassNotFoundException: page\r\n\r\nI noticed few things:\r\n1) Form cannot be updated, crashes on NPE\r\n2) ugly crash when updated component has not setOutputMarkupId(true);\r\n3) otherwise it seems to work"
    ],
    [
        "WICKET-5153",
        "WICKET-5145",
        "Wicket-atmosphere pushes empty messages When filters filter out all subscriptions for a page, the logic around the ajaxRequestScheduled flag in AtmosphereRequestHandler prevents rendering the AjaxRequestHandler, which results in an emtpy response. This is pushed to the client and passed to the Wicket Ajax framework, which fails to parse it, because it expects it to be an XML document with ajax-response root element. This appears in the Wicket Ajax debug window:\r\n\r\nERROR: Wicket.Ajax.Call.failure: Error while parsing response: Could not find root <ajax-response> element\r\n\r\nNote that because of\r\n\r\nhttps://github.com/Atmosphere/atmosphere/issues/1042\r\n\r\nAtmosphere does not pass the first empty message to callbacks, so the error above only happens when the second empty message is pushed.\r\n",
        "do not post an Atmosphere event if the filtered subscription set is empty wicket-atmosphere will post an event for an AtmosphereResource even if, after applying filters, no subscription exists for that resource. This includes resources which listen to events of different type (the second parameter of the subscribed method) since that is handled by filters too."
    ],
    [
        "WICKET-5195",
        "WICKET-5185",
        "libxml2 splits large CData section. this breaks the processing of components If the AJAX-Responses in WebKit-Browsern are too large the libxml2 splits the CData-Sections in two: one with 300 chars and the other section with the rest. \r\n\r\nThis breaks the processComponent function in the wicket-ajax. js because it relies on the fact that only one section is returned:\r\n\r\ntext = node.firstChild.nodeValue; \r\n\r\n\r\nIn Wicket 6 the issue appears again, in Line 1052 of \"wicket-ajax-jquery.js\".",
        "JavaScript text is spread in several DOM text nodes  Since WICKET-5132 wicket-ajax.js reads the <evaluation>s' text by using JavaScript DOM APIs for performance improvements.\r\n\r\nThis causes problems when the text is too long because some browsers create several text nodes instead of just one.\r\n\r\nWicket has to merge the text from all children nodes. "
    ],
    [
        "WICKET-5202",
        "WICKET-5193",
        "Page redirects can fail when using url encoding When url encoding is used instead of cookies for session management, some redirections do not work in Wicket 6.8.0. The problem appears to be in UrlRenderer.renderRelativeUrl, which returns the (invalid) relative URL:\r\n\r\n\"..//demo/app;jsessionid=0BFE4703434CFF7BEBAE5CBF6C60B15F\" \r\n\r\nwhen passed the URL:\r\n\r\n\"http://localhost:8080/demo/app;jsessionid=0BFE4703434CFF7BEBAE5CBF6C60B15F\"\r\n\r\nand when the UrlRenderer's base URL is: \r\n\r\n\"wicket/page?1-1.ILinkListener-link\"\r\n\r\nThis is because the removeCommonPrefixes method tries to compare segments between the encoded target URL and a URL parsed from \r\n\r\n(URLRenderer line 319):\r\nUrl commonPrefix = Url.parse(request.getContextPath() + request.getFilterPath());\r\n\r\nThis second URL does not contain the ;jsessionid=... suffix and the removeCommonPrefixes method doesn't remove prefixes properly. The problem doesn't occur when using cookies for session management, of course.\r\n\r\nThis issue is new between Wicket version 6.2.0 and 6.8.0. When deployed into a servlet container using url-encoding for session management, the following app works under Wicket 6.2.0 but fails (because of redirecting to an invalid URL) under Wicket 6.8.0:\r\n\r\n// ------------------------\r\n// App.java\r\nimport org.apache.wicket.protocol.http.WebApplication;\r\nimport org.apache.wicket.Page;\r\n\r\npublic class App extends WebApplication {\r\n    @Override\r\n    public Class<? extends Page> getHomePage() {\r\n        return A.class;\r\n    }\r\n}\r\n\r\n// ------------------------\r\n// A.java\r\nimport org.apache.wicket.markup.html.WebPage;\r\nimport org.apache.wicket.markup.html.link.Link;\r\n\r\npublic class A extends WebPage {\r\n    public A() {\r\n        add(new Link<Object>(\"link\") {\r\n            @Override\r\n            public void onClick() {\r\n                setResponsePage(B.class);\r\n            }\r\n        });\r\n    }\r\n}\r\n    \r\n// ------------------------\r\n// B.java\r\nimport org.apache.wicket.markup.html.WebPage;\r\nimport org.apache.wicket.markup.html.link.Link;\r\n\r\npublic class B extends WebPage {\r\n    public B() {\r\n        add(new Link<Object>(\"link\") {\r\n            @Override\r\n            public void onClick() {\r\n                setResponsePage(A.class);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ------------------------\r\n\r\nClicking the link on the home page A will successfully navigate to page B. Clicking the link on page B should navigate to page A. Under Wicket 6.2.0, or Wicket 6.8.0 with cookies, it works. With Wicket 6.8.0 and url-encoding, it tries to redirect to an incorrect URL like \r\n\r\nhttp://localhost:8080/demo/app//demo/app;jsessionid=0BFE4703434CFF7BEBAE5CBF6C60B15F\r\n\r\nwhich fails (note the double slash and repeated context/filter in the URL). \r\n\r\nIt is possible to configure Tomcat to use url encoding instead of cookies for session management by editing the conf/context.xml file within the Tomcat installation and making the root element of that file read:\r\n\r\n <Context cookies=\"false\">\r\n\r\n",
        "UrlRenderer appends './' also to URLs that start with '/' URL are not correctly rendered when we move from a stateless navigation (no permanent session bound) to a stateful page. To reproduce the problem do the following steps:\r\n\r\n1. start wicket-examples module and be sure to not have any cached data or cookies of this application on your browser.\r\n2. navigate to wicket-examples application and go to ajax examples page\r\n3. navigate to one of the example, for example 'Auto-Complete TextField Example'. At this point a persistent session is created and the jsessionid attribute is visible in the URL bar\r\n4. now if you try to click on [go back] you will get an arror as its anchor is not valid\r\n\r\nThe problem is inside UrlREnderer. We should add an additional test in the if after comment 'sanitize start' to check that URL doesn't start with '/'\r\n\r\nSee attached patch."
    ],
    [
        "WICKET-5214",
        "WICKET-3947",
        "Unrendered component wrongly ignored When a page has a hidden enclosure, unrelated components that were not rendered are silently ignored (with only a debug message). Example:\r\n\r\npublic class HomePage extends WebPage {\r\n\tpublic HomePage() {\r\n\t\tadd(new Label(\"foo\", \"bar\"));\r\n\t\tadd(new WebMarkupContainer(\"baz\").setVisible(false));\r\n\t}\r\n}\r\n\r\nHomepage.html:\r\nHello <wicket:enclosure><div wicket:id=\"baz\"></div></wicket:enclosure>\r\n\r\nResult: the page shows \"Hello\".\r\nIf you remove \".setVisible(false)\", then...\r\n\r\nUnexpected RuntimeException\r\nLast cause: The component(s) below failed to render. Possible reasons could be that: 1) you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered), 2) if your components were added in a parent container then make sure the markup for the child container includes them in <wicket:extend>.\r\n1. [Component id = foo]",
        "Inline Enclosure does not work properly when using wicket:extend and wicket:child When using Inline Enclosures describes in https://issues.apache.org/jira/browse/WICKET-3422 the functionality is broken in a page that uses wicket:extend and wicket:child."
    ],
    [
        "WICKET-5214",
        "WICKET-4382",
        "Unrendered component wrongly ignored When a page has a hidden enclosure, unrelated components that were not rendered are silently ignored (with only a debug message). Example:\r\n\r\npublic class HomePage extends WebPage {\r\n\tpublic HomePage() {\r\n\t\tadd(new Label(\"foo\", \"bar\"));\r\n\t\tadd(new WebMarkupContainer(\"baz\").setVisible(false));\r\n\t}\r\n}\r\n\r\nHomepage.html:\r\nHello <wicket:enclosure><div wicket:id=\"baz\"></div></wicket:enclosure>\r\n\r\nResult: the page shows \"Hello\".\r\nIf you remove \".setVisible(false)\", then...\r\n\r\nUnexpected RuntimeException\r\nLast cause: The component(s) below failed to render. Possible reasons could be that: 1) you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered), 2) if your components were added in a parent container then make sure the markup for the child container includes them in <wicket:extend>.\r\n1. [Component id = foo]",
        "Attribute wicket:message not resolved within parent tag with InlineEnclosure Outer div uses Attribute wicket:enclosure. Some inner element uses Attribute wicket:message. This is not being resolved, however the tag variation is being resolved.\r\n\r\nquickstart attached:\r\nsee both h1 tags inside the inline enclosure div under \"#1\". The first h1 uses wicket:message tag, while the second uses the attribute."
    ],
    [
        "WICKET-5214",
        "WICKET-4700",
        "Unrendered component wrongly ignored When a page has a hidden enclosure, unrelated components that were not rendered are silently ignored (with only a debug message). Example:\r\n\r\npublic class HomePage extends WebPage {\r\n\tpublic HomePage() {\r\n\t\tadd(new Label(\"foo\", \"bar\"));\r\n\t\tadd(new WebMarkupContainer(\"baz\").setVisible(false));\r\n\t}\r\n}\r\n\r\nHomepage.html:\r\nHello <wicket:enclosure><div wicket:id=\"baz\"></div></wicket:enclosure>\r\n\r\nResult: the page shows \"Hello\".\r\nIf you remove \".setVisible(false)\", then...\r\n\r\nUnexpected RuntimeException\r\nLast cause: The component(s) below failed to render. Possible reasons could be that: 1) you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered), 2) if your components were added in a parent container then make sure the markup for the child container includes them in <wicket:extend>.\r\n1. [Component id = foo]",
        "Inline enclosures and isVisibleInHierarchy There is a problem with the inline enclosure.\r\nComponents inside the inline enclosure don't respond\r\ncorrectly to call \"isVisibleInHierarchy()\". \r\n(Returns true even if component is hidden) Attached\r\nis a patch (against wicket 1.4.20) that fixes this.\r\nThis patch doesn't fix the problem for components inside nested\r\ninline enclosures. There's a test for this as well, and it fails. \r\n(TogglePageTests.testTogglingNestedInlineEnclosures1())\r\n\r\nHopefully this patch might be of help in finding a solution for those as well."
    ],
    [
        "WICKET-5214",
        "WICKET-4874",
        "Unrendered component wrongly ignored When a page has a hidden enclosure, unrelated components that were not rendered are silently ignored (with only a debug message). Example:\r\n\r\npublic class HomePage extends WebPage {\r\n\tpublic HomePage() {\r\n\t\tadd(new Label(\"foo\", \"bar\"));\r\n\t\tadd(new WebMarkupContainer(\"baz\").setVisible(false));\r\n\t}\r\n}\r\n\r\nHomepage.html:\r\nHello <wicket:enclosure><div wicket:id=\"baz\"></div></wicket:enclosure>\r\n\r\nResult: the page shows \"Hello\".\r\nIf you remove \".setVisible(false)\", then...\r\n\r\nUnexpected RuntimeException\r\nLast cause: The component(s) below failed to render. Possible reasons could be that: 1) you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered), 2) if your components were added in a parent container then make sure the markup for the child container includes them in <wicket:extend>.\r\n1. [Component id = foo]",
        "\"Cannot find element with id\" error seen in Ajax Debug for child of wicket:enclosure When an AjaxLink is hidden due to being a child of a wicket:enclosure an error is seen in the Ajax Debug window. It seems like the event handler is expecting the AjaxLink to exist in the DOM even though it has been hidden."
    ],
    [
        "WICKET-5245",
        "WICKET-5207",
        "Usage of removed functions in jQuery http://jquery.com/upgrade-guide/1.9/#removed-properties-of-the-event-object\r\n\r\nwicket-ajax-jquery.js line 2653 uses the undocumented and removed method handle on the jQuery.event object. Could dispatch be used instead?",
        "Use documented jQuery APIs for triggering the special event 'inputchange' jQuery 1.9/2.0 changed its internals and now the special event 'inputchange' doesn't work.\r\nwicket-examples' autocomplete demo shows the problem."
    ],
    [
        "WICKET-5253",
        "WICKET-5226",
        "Wicket-cdi not working with Weld 2.0  Wicket-cdi is violating the CDI spec by injecting every component. The spec is clear about this and non-static inner classes may not managed or injected.\r\n\r\nWeld error is: WELD-000070 Simple bean [EnhancedAnnotatedTypeImpl]  class nl.frozn.liuk.web.wizard.component.employment.EmploymentPanel$1 cannot be a non-static inner class\r\n\r\nI made a workaround for ourself by using own INonContextualManager and check if the object that will be injected has no enclosing class.\r\n\r\nMy workaround is.\r\n\r\nif (instance.getClass().getEnclosingClass() == null) {\r\n            NonContextual.of(instance.getClass(), beanManager).inject(instance);\r\n}\r\n",
        "CDI integration fails in Glassfish 4.0 with WELD-000070 When CDI is configured in the Application and a page has a non-static inner class the page throws exception, regardless of whether there are any injected fields.\r\n\r\nCaused by: org.jboss.weld.exceptions.DefinitionException: WELD-000070 Simple bean [EnhancedAnnotatedTypeImpl] private  class com.inversebit.HomePage$AForm cannot be a non-static inner class\r\n\tat org.jboss.weld.injection.producer.BasicInjectionTarget.checkType(BasicInjectionTarget.java:81)\r\n\tat org.jboss.weld.injection.producer.BasicInjectionTarget.<init>(BasicInjectionTarget.java:69)\r\n\tat org.jboss.weld.injection.producer.BeanInjectionTarget.<init>(BeanInjectionTarget.java:52)\r\n\tat org.jboss.weld.manager.InjectionTargetFactoryImpl.createInjectionTarget(InjectionTargetFactoryImpl.java:95)\r\n\tat org.jboss.weld.manager.InjectionTargetFactoryImpl.createInjectionTarget(InjectionTargetFactoryImpl.java:78)\r\n\t... 65 more\r\n"
    ],
    [
        "WICKET-5323",
        "WICKET-5282",
        "During EventBus.post() from non-Wicket thread: an error occurred while generating an Url for handler at o.a.w.request.cycle.RequestCycle.urlFor() When AtmosphereEventBus.post() is called from a non-Wicket thread (and no web request), it fails with the following, due to NullPointerException: null at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getContextRelativeUrl()\r\n\r\n{code}\r\n2013-08-22 08:48:30.656\r\n04:49:23.551 | ERROR | oryBean_Worker-7 | o.a.w.DefaultExceptionMapper     | he.wicket.DefaultExceptionMapper  123 | Unexpected error occurred\r\norg.apache.wicket.WicketRuntimeException: An error occurred while generating an Url for handler 'org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler@6f93daec'\r\n        at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:535) [wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.Component.urlFor(Component.java:3347) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.behavior.AbstractAjaxBehavior.getCallbackUrl(AbstractAjaxBehavior.java:88) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.renderAjaxAttributes(AbstractDefaultAjaxBehavior.java:223) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.renderAjaxAttributes(AbstractDefaultAjaxBehavior.java:207) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.getCallbackScript(AbstractDefaultAjaxBehavior.java:457) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.AjaxEventBehavior.renderHead(AjaxEventBehavior.java:83) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.Component.renderHead(Component.java:2714) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy$1.component(ChildFirstHeaderRenderStrategy.java:85) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:96) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:87) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.DeepChildFirstVisitor.visit(DeepChildFirstVisitor.java:51) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy.renderChildHeaders(ChildFirstHeaderRenderStrategy.java:78) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.markup.renderStrategy.ChildFirstHeaderRenderStrategy.renderHeader(ChildFirstHeaderRenderStrategy.java:57) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.AbstractAjaxResponse.writeHeaderContribution(AbstractAjaxResponse.java:464) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.XmlAjaxResponse.writeComponent(XmlAjaxResponse.java:110) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.AbstractAjaxResponse.writeComponents(AbstractAjaxResponse.java:213) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.AbstractAjaxResponse.writeTo(AbstractAjaxResponse.java:145) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.ajax.AjaxRequestHandler.respond(AjaxRequestHandler.java:359) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:861) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64) ~[wicket-request-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:97) ~[wicket-request-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:261) [wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:218) [wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:289) [wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:341) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.apache.wicket.atmosphere.EventBus.postToSingleResource(EventBus.java:317) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:292) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.soluvas.web.site.AtmosphereApplication.bridgeToAtmosphere(AtmosphereApplication.java:53) ~[org.soluvas.web.site-2.1.0-SNAPSHOT.jar:na]\r\n        at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source) ~[na:na]\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_25]\r\n        at java.lang.reflect.Method.invoke(Method.java:606) ~[na:1.7.0_25]\r\n        at com.google.common.eventbus.EventHandler.handleEvent(EventHandler.java:74) ~[guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.SynchronizedEventHandler.handleEvent(SynchronizedEventHandler.java:45) ~[guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.dispatch(EventBus.java:314) ~[guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.dispatchQueuedEvents(EventBus.java:296) ~[guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.post(EventBus.java:267) ~[guava-14.0.1.jar:na]\r\n        at com.quikdo.freq.job.EventBusJobListener.jobWasExecuted(EventBusJobListener.java:54) ~[EventBusJobListener.class:na]\r\n        at org.quartz.core.QuartzScheduler.notifyJobListenersWasExecuted(QuartzScheduler.java:2020) ~[quartz-2.2.0.jar:na]\r\n        at org.quartz.core.JobRunShell.notifyJobListenersComplete(JobRunShell.java:355) ~[quartz-2.2.0.jar:na]\r\n        at org.quartz.core.JobRunShell.run(JobRunShell.java:229) ~[quartz-2.2.0.jar:na]\r\n        at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:560) ~[quartz-2.2.0.jar:na]\r\nCaused by: java.lang.NullPointerException: null\r\n        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getContextRelativeUrl(ServletWebRequest.java:194) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getClientUrl(ServletWebRequest.java:148) ~[wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.atmosphere.AtmosphereWebRequest.getClientUrl(AtmosphereWebRequest.java:112) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.apache.wicket.request.UrlRenderer.shouldRenderAsFull(UrlRenderer.java:354) ~[wicket-request-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.UrlRenderer.renderUrl(UrlRenderer.java:100) ~[wicket-request-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.cycle.RequestCycle.renderUrl(RequestCycle.java:548) [wicket-core-6.10.0.jar:6.10.0]\r\n        at org.apache.wicket.request.cycle.RequestCycle.urlFor(RequestCycle.java:530) [wicket-core-6.10.0.jar:6.10.0]\r\n        ... 49 common frames omitted\r\n\r\n        at org.apache.wicket.DefaultExceptionMapper.internalMap(DefaultExceptionMapper.java:123)\r\n        at org.apache.wicket.DefaultExceptionMapper.map(DefaultExceptionMapper.java:62)\r\n        at org.apache.wicket.request.cycle.RequestCycle.handleException(RequestCycle.java:352)\r\n        at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:229)\r\n        at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:289)\r\n        at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:341)\r\n        at org.apache.wicket.atmosphere.EventBus.postToSingleResource(EventBus.java:317)\r\n        at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:292)\r\n{code}\r\n\r\nNote that although there is no web request, the Atmosphere EventBus.post() should still work.\r\n\r\nAlso FYI, not sure if this helps, a WebSocket request scheme is \"WebSocket\", not \"http\" nor \"http\".\r\n\r\nRelated to WICKET-5134, WICKET-5084, WICKET-5280.",
        "o.a.w.protocol.http.servlet.ServletWebRequest.getContextRelativeUrl throws NPE when posting EventBus inside Atmosphere request Sometimes happens when during an Wicket-Atmosphere request, i.e. inside an Atmosphere's @Subscribe handler, we post an object to Wicket-Atmosphere's EventBus.\r\n\r\nIn all cases where it happens, it happens when EventBus.post called from a non-Wicket thread.\r\n\r\n{code}\r\n08:17:46.460 | ERROR | oryBean_Worker-9 | c.g.c.e.E.default                | .google.common.eventbus.EventBus  316 | Could not dispatch event: Job DEFAULT.loadToArchive execution complete at  08:17:46 07/22/2013 and reports: exitCode=COMPLETED;exitDescription=Loaded 1 CSVs to Archive as archived/2013-07-22T08:17:46.098-04:00.csv, 1 point times made stale: [2013-07-22T12:15:00.000Z] to handler [wrapper public void org.soluvas.web.site.AtmosphereApplication.bridgeToAtmosphere(java.lang.Object)]\r\njava.lang.reflect.InvocationTargetException: null\r\n        at sun.reflect.GeneratedMethodAccessor66.invoke(Unknown Source) ~[na:na]\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_15]\r\n        at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_15]\r\n        at com.google.common.eventbus.EventHandler.handleEvent(EventHandler.java:74) ~[guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.SynchronizedEventHandler.handleEvent(SynchronizedEventHandler.java:45) ~[guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.dispatch(EventBus.java:314) [guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.dispatchQueuedEvents(EventBus.java:296) [guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.post(EventBus.java:267) [guava-14.0.1.jar:na]\r\n        at com.quikdo.freq.job.EventBusJobListener.jobWasExecuted(EventBusJobListener.java:54) [EventBusJobListener.class:na]\r\n        at org.quartz.core.QuartzScheduler.notifyJobListenersWasExecuted(QuartzScheduler.java:2020) [quartz-2.2.0.jar:na]\r\n        at org.quartz.core.JobRunShell.notifyJobListenersComplete(JobRunShell.java:355) [quartz-2.2.0.jar:na]\r\n        at org.quartz.core.JobRunShell.run(JobRunShell.java:229) [quartz-2.2.0.jar:na]\r\n        at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:560) [quartz-2.2.0.jar:na]\r\nCaused by: java.lang.NullPointerException: null\r\n        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getContextRelativeUrl(ServletWebRequest.java:194) ~[wicket-core-6.9.1.jar:6.9.1]\r\n        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.<init>(ServletWebRequest.java:113) ~[wicket-core-6.9.1.jar:6.9.1]\r\n        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.<init>(ServletWebRequest.java:83) ~[wicket-core-6.9.1.jar:6.9.1]\r\n        at org.apache.wicket.protocol.http.WebApplication.newWebRequest(WebApplication.java:448) ~[wicket-core-6.9.1.jar:6.9.1]\r\n        at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:337) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.apache.wicket.atmosphere.EventBus.postToSingleResource(EventBus.java:317) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:292) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.soluvas.web.site.AtmosphereApplication.bridgeToAtmosphere(AtmosphereApplication.java:53) ~[org.soluvas.web.site-2.1.0-SNAPSHOT.jar:na]\r\n        ... 13 common frames omitted\r\n08:17:46.465 | ERROR | ryBean_Worker-10 | c.g.c.e.E.default                | .google.common.eventbus.EventBus  316 | Could not dispatch event: Job DEFAULT.locationVisitorAggregator fired (by trigger DEFAULT.MT_3jn71esi0mkgo) at:  08:17:46 07/22/2013 to handler [wrapper public void org.soluvas.web.site.AtmosphereApplication.bridgeToAtmosphere(java.lang.Object)]\r\njava.lang.reflect.InvocationTargetException: null\r\n        at sun.reflect.GeneratedMethodAccessor66.invoke(Unknown Source) ~[na:na]\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_15]\r\n        at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_15]\r\n        at com.google.common.eventbus.EventHandler.handleEvent(EventHandler.java:74) ~[guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.SynchronizedEventHandler.handleEvent(SynchronizedEventHandler.java:45) ~[guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.dispatch(EventBus.java:314) [guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.dispatchQueuedEvents(EventBus.java:296) [guava-14.0.1.jar:na]\r\n        at com.google.common.eventbus.EventBus.post(EventBus.java:267) [guava-14.0.1.jar:na]\r\n        at com.quikdo.freq.job.EventBusJobListener.jobToBeExecuted(EventBusJobListener.java:37) [EventBusJobListener.class:na]\r\n        at org.quartz.core.QuartzScheduler.notifyJobListenersToBeExecuted(QuartzScheduler.java:1980) [quartz-2.2.0.jar:na]\r\n        at org.quartz.core.JobRunShell.notifyListenersBeginning(JobRunShell.java:339) [quartz-2.2.0.jar:na]\r\n        at org.quartz.core.JobRunShell.run(JobRunShell.java:174) [quartz-2.2.0.jar:na]\r\n        at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:560) [quartz-2.2.0.jar:na]\r\nCaused by: java.lang.NullPointerException: null\r\n        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.getContextRelativeUrl(ServletWebRequest.java:194) ~[wicket-core-6.9.1.jar:6.9.1]\r\n        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.<init>(ServletWebRequest.java:113) ~[wicket-core-6.9.1.jar:6.9.1]\r\n        at org.apache.wicket.protocol.http.servlet.ServletWebRequest.<init>(ServletWebRequest.java:83) ~[wicket-core-6.9.1.jar:6.9.1]\r\n        at org.apache.wicket.protocol.http.WebApplication.newWebRequest(WebApplication.java:448) ~[wicket-core-6.9.1.jar:6.9.1]\r\n        at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:337) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.apache.wicket.atmosphere.EventBus.postToSingleResource(EventBus.java:317) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.apache.wicket.atmosphere.EventBus.post(EventBus.java:292) ~[wicket-atmosphere-0.11.jar:0.11]\r\n        at org.soluvas.web.site.AtmosphereApplication.bridgeToAtmosphere(AtmosphereApplication.java:53) ~[org.soluvas.web.site-2.1.0-SNAPSHOT.jar:na]\r\n        ... 13 common frames omitted\r\n{code}\r\n\r\nThe NPE happens inside wicket-core, so hopefully wicket-core can give more detailed exception why it's doing so.\r\n\r\nAnd {{org.apache.wicket.atmosphere.EventBus.post}} should probably check its arguments that may cause NPE on wicket-core's part."
    ],
    [
        "WICKET-5383",
        "WICKET-5378",
        "AutoCompleteTextField not positionned correctly Hello,\r\n\r\nI recently upgraded to wicket 6.11.0 because I needed WICKET-5315 to fix a problem with AjaxFormComponentUpdatingBehavior not being properly triggered on an AutoCompleteTextField redrawn via ajax.\r\n\r\nHowever, it seems another fix released in this version, WICKET-5343, is now interfering with the position of the choices list : they are now located a few hundred pixels away from their input.\r\n\r\nThis behavior is consistent across all major browsers.\r\n\r\nI took a quick look at the JavaScript code of this component to check if I could fix this, but honestly I found it far too complex to be edited and maintained without side effects. I had to revert the 6.11.0 code back to the 6.10.0 version to get the input working properly again.\r\n\r\nThe main problem I see here is that this component is so complex that any change in its code is likely to break it for a few people.\r\n\r\nHow do you propose to address this issue ?\r\nShouldn't such JavaScript matters be delegated to 3rd party libraries, such as jQuery UI position() ?\r\n",
        "AutoCompleteTextField inside a ModalWindow shows auto complete dropdown in the wrong location If you create a ModalWindow and add a AutoCompleteTextField into it, when you type into the AutoCompleteTextField the auto complete suggestions dropdown will appear far away from the AutoCompleteTextField (down and to the left).\r\n\r\nThis quickstart works correctly in Wicket 6.9.1. It fails with an error in 6.10.0 (which I haven't raised since it doesn't occur in 6.11.0). "
    ],
    [
        "WICKET-5428",
        "WICKET-5413",
        "AutoCompleteTextfield Position doesn't consider ScrollPosition The JavaScript of AutoCompleteTextField doesn't consider the ScrollPosition of the Page.\r\n\r\nIn our case is an AutoCompleteTextField at the end of a formular, but still in sight at the bottom. If the User is typing without scrolling, everything is fine.\r\n\r\nBut if the User scrolls down, the PopUp Window of the AutoCompleteTextField is heading the wrong position.",
        "Positioning AutoCompleteTextField not correct on resized window The positioning of the AutoCompleteTextField options is off when having a resized browser window.\r\n\r\nI'll upload a testcase. And I have a patch which uses jQueries .offset() which fixes the problem for me."
    ],
    [
        "WICKET-5440",
        "WICKET-4545",
        "TransparentWebMarkupContainer makes resolving of fragment markup fail on child pages I wanted to do this kind of page layout:\r\n<div wicket:id=\"childContainer\">\r\n  <wicket:child />\r\n</div>\r\n\r\nto add css classes to a child container in the parent page class. For this to work, I added a TransparentWebMarkupContainer with id \"childContainer\" to the parent page class. This works in some cases, but if the child page class defines wicket fragments, their markup is not found.\r\n\r\nWhen searching for the child's fragment's markup fragment, Markup.java (line 233) skips all the markup contained in the <body> tag because it has a wicket:id.\r\n\r\nReference for the technique I used:\r\nhttp://stackoverflow.com/questions/5068142/can-a-wicketchild-tag-be-nested-under-another-component-on-the-page ",
        "MarkupNotFoundException for Fragment and TransparentWebMarkupContainer Create a base WebPage with a TransparentWebMarkupContainer to allow subclasses register CSS classes on the body tag. Add a Fragment to one of these subsclasses, the markup of the Fragment is not found. \r\nSee also http://apache-wicket.1842946.n4.nabble.com/MarkupNotFoundException-for-Fragment-and-TransparentWebMarkupContainer-tp4619968.html\r\n\r\nException thrown:\r\n\r\norg.apache.wicket.markup.MarkupNotFoundException: No Markup found for Fragment testFragment in providing markup container [Page class = org.foo.HomePage, id = 0, render count = 1]\r\nat org.apache.wicket.markup.html.panel.FragmentMarkupSourcingStrategy.getMarkup(FragmentMarkupSourcingStrategy.java:143)\r\n\r\n"
    ],
    [
        "WICKET-5440",
        "WICKET-4654",
        "TransparentWebMarkupContainer makes resolving of fragment markup fail on child pages I wanted to do this kind of page layout:\r\n<div wicket:id=\"childContainer\">\r\n  <wicket:child />\r\n</div>\r\n\r\nto add css classes to a child container in the parent page class. For this to work, I added a TransparentWebMarkupContainer with id \"childContainer\" to the parent page class. This works in some cases, but if the child page class defines wicket fragments, their markup is not found.\r\n\r\nWhen searching for the child's fragment's markup fragment, Markup.java (line 233) skips all the markup contained in the <body> tag because it has a wicket:id.\r\n\r\nReference for the technique I used:\r\nhttp://stackoverflow.com/questions/5068142/can-a-wicketchild-tag-be-nested-under-another-component-on-the-page ",
        "FragmentMarkupSourcingStrategy doesn't see fragment markup which is declared in subclassed panel. Steps to reproduce:\r\n- Create class ParentPanel extending Panel\r\n- Create class ChildPanel extending ParentPanel\r\n- Create fragment in ChildPanel\r\n- launch app\r\nResult:\r\nMarkupNotFoundException: No Markup found for Fragment fragmentDef in providing markup container \r\n\r\nSample app attached."
    ],
    [
        "WICKET-5461",
        "WICKET-5235",
        "Exception swallowed in org.apache.wicket.markup.html.form.Button#onComponentTag() While investigating some weird \"browser back\" issue (the label of a specific button would go blank after the user hit the browser's back button) , I noticed that this was caused by a CCE thrown inside our application that was subsequently swallowed by Button#onComponentTag() and thus never showed up in the logs.\r\n\r\nSince the catch{} block in Button.java contains only the most obvious kind of comment ;) , I'm unsure if this is working-as-intended or merely an oversight.\r\n\r\nThanks,\r\nTobias",
        "Button silently ignores MissingResourceException When a Button is rendered with model that tries to load a resource that is missing\r\nand ResourceSettings.throwExceptionOnMissingResource = true, the button catches and silently ignores the MissingResourceException in onComponentTag(), which is not nice."
    ],
    [
        "WICKET-5480",
        "WICKET-5462",
        "AutoLabelResolver creates null pointer exception in 6.13 The underlying issue is that WebRequestCycle.isAjaxRequest returns true but RequestCycle.find(AjaxRequestTarget.class) returns null anyway, because the current request handler is a ListenerInterfaceRequestHandler.\r\n\r\nThis leads to \r\njava.lang.NullPointerException\r\n     at org.apache.wicket.markup.html.form.AutoLabelResolver$AutoLabelMarker.updateFrom(AutoLabelResolver.java:222)",
        "Ajax form-component-label repainting fails when setResponsePage() is used to navigate away from the page that has previously failed form validaiton "
    ],
    [
        "WICKET-5481",
        "WICKET-5469",
        "Closing modal window leads to confirmation dialog whether to leave page or not on origin page Closing an modal window leads to the confirmation dialog whether to\r\nleave page or not.\r\n\r\nWhile this is correct for opened modal windows on a page this should not\r\nhappen on a page where the modal window has been closed already.\r\n\r\nThis has happened after updating Wicket to version 6.13.0. The only\r\nsignificant change regarding this behavior I have found is the adjusted\r\nhandling of \u00bbonbeforeunload\u00ab compared to version 6.12.0 in modal.js\r\n",
        "ModalWindow unload warning always displayed (even if window is closed) The fix applied for WICKET-4909 seems to be bad:\r\n\r\nIf there's a ModalWindow with showUnloadConfirmation == true (java) and window.onbeforeunload == null (javascript), the warning message ('Reloading this page will cause the modal window to disappear') is always displayed, even if the ModalWindow was closed.\r\n\r\nThe fix for WICKET-4909 should probably take the showUnloadConfirmation flag into account."
    ],
    [
        "WICKET-5525",
        "WICKET-5521",
        "StatelessForm Expires on Submit when setRecreateMountedPagesAfterExpiry false A stateless page expires on statelessform submit when setRecreateMountedPagesAfterExpiry is set to false.",
        "Stateless forms does not work when RecreateMountedPagesAfterExpiry turned off If somebody will turn off RecreateMountedPagesAfterExpiry: getPageSettings().setRecreateMountedPagesAfterExpiry(false).\r\n\r\nThen he will always get Page expired on stateless form submit."
    ],
    [
        "WICKET-5540",
        "WICKET-5509",
        "Using wicket page as template -> broken We use a wicket page as template for email. \r\nThis was taken from the wicket-examples > mailtemplate.\r\nIn the examples it also doesn't work anymore.",
        "Wicket examples' MailTemplate from Page is broken While testing 6.14.0 release I found out that the mail template examples doesn't work with the page.\r\n \r\nhttp://localhost:8080/we/mailtemplate/ "
    ],
    [
        "WICKET-5599",
        "WICKET-5597",
        "Cannot set response within a AjaxSubmitLink with button markup A change from 6.15 where this worked.\r\n\r\nUsing a <button> in the markup and AjaxSubmitLink in the code, I can no longer set the response page from within onSubmit \r\n\r\n      public void onSubmit(AjaxRequestTarget art, Form form) {\r\n        System.out.println(\"In onSubmit\");\r\n        setResponsePage(new Page2(new PageParameters()));\r\n      } \r\n\r\n",
        "button behaviour changed The behaviour of a <button> component with no type=\"button\" attribute has changed between 6.15 and 7 M1.   \r\n\r\nWhen the button is connected to an AjaxLink.\r\nIn 6.15 there is no form submit\r\nIn 7 M1 the form is submitted.\r\n\r\nI think the code should control if the form is submitted or not, using AjaxSubmitLink or AjaxLink not the markup.\r\n"
    ],
    [
        "WICKET-5681",
        "WICKET-5539",
        "AbstractBookmarkableMapper sets pageParams to null, might be invalid When adding query params like ?4-1.IFormSubmitListener-xyz to a wicket page expecting path params, AbstractBookmarkableMapper sets all pageParams to null, but this leads to weird behavior for path params.\r\n\r\nSee quickstart at https://github.com/tkruse/pageparams\r\n\r\nWhen opening the page with\r\nhttp://localhost:8080/home/foo/bar\r\nThen Page content says \"foo bar.\" as required.\r\n\r\nWhen opening the same page with\r\nhttp://localhost:8080/home/foo/bar?4-1.IFormSubmitListener-xyz\r\nThen Page content says \"null null.\"\r\n\r\nThis is an unlikely scenario to happen in general I guess, but still it feels like a bug to me. Not sure what other query params could trigger this.",
        "Allow preserving of the parsed PageParameters when re-creating an expired page There is a bookmarkable page mounted, for example, to:\r\n/page/${entityId}\r\n\r\nThis page contains StatelessForm.\r\nSubmitting of form after session expire lead to following:\r\n\r\norg.apache.wicket.core.request.mapper.MountedMapper invokes AbstractBookmarkableMapper.processListener to obtain IRequestHandler to handle submitting of form. \r\nBut there is cleaning of PageParameters within processListener on line 256 (Wicket 6.14) which cleaning \"entityId\" parameter as well and created page finally has no \"enityId\" and (in our case) redirects to 404.\r\n\r\nI see that this cleaning of page parameters was implemented due to Wicket-4594. But I think, just checking for pageId is unsufficient, because pageId might be not null, but actual page may be already expired and new instance should be created."
    ],
    [
        "WICKET-5690",
        "WICKET-3947",
        "Hiding AjaxLink by other's component visibility in enclosure causes JS error I have an enclosure with AjaxLink and Label. I control the visibility of the enclosure by visibility of the Label.\r\n{code}\r\n\t\t<wicket:enclosure child=\"myRewardSum\">\r\n\t\t\t<p class=\"row\">\r\n\t\t\t\t<a wicket:id=\"rewardsLink\" href=\"#\">\r\n\t\t\t\t\t<strong><wicket:message key=\"myRewards\">[Rewards link text]</wicket:message></strong>\r\n\t\t\t\t</a>\r\n\t\t\t\t<span class=\"value\">\r\n\t\t\t\t\t<span wicket:id=\"myRewardSum\">[50 CZK]</span>\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</wicket:enclosure>\r\n{code}\r\n\r\nWhen the visibility is resolved as false, I get following error. Changing the control-child to link itself solves the probl\u00e9m so I think that the condition when to bind the listener dosen't count with enclosures.\r\n\r\n{code}Wicket.Ajax: Cannot bind a listener for event \"click\" on element \"rewardsLink1059\" because the element is not in the DOM\r\nWicket.Ajax.DebugWindow.logError(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 130)\r\nWicket.Log.error(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 232)\r\n.Event.add/<()wicket-...udr6oyc (\u0159\u00e1dek 180)\r\njQuery.Callbacks/fire(data=[Document /Application/, [function(selector, context)]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.add()jquery-1.11.0.js (\u0159\u00e1dek 3145)\r\njQuery.fn.ready(fn=function())jquery-1.11.0.js (\u0159\u00e1dek 3379)\r\njQuery.fn.init(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 2819)\r\njQuery(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 75)\r\n.Event.add(element=\"rewardsLink1059\", type=\"click\", fn=function(jqEvent, data), data=null, selector=undefined)wicket-...udr6oyc (\u0159\u00e1dek 171)\r\n.Ajax.ajax/<(idx=0, evt=\"click\")wicket-...udr6oyc (\u0159\u00e1dek 1930)\r\n.each(obj=[\"click\"], callback=function(idx, evt), args=undefined)jquery-1.11.0.js (\u0159\u00e1dek 384)\r\n.Ajax.ajax(attrs=Object { u=\"./XXrdIQsCca2JfmhojuMQK_...S35cURU7YDKFfEVOnxyQRNg\", e=[1], c=\"rewardsLink1059\"})wicket-...udr6oyc (\u0159\u00e1dek 1908)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nWicket.Ajax.Call.prototype.processEvaluation/evaluate/<(notify=function())wicket-...udr6oyc (\u0159\u00e1dek 1162)\r\nFunctionsExecuter/this.processNext/run()wicket-...udr6oyc (\u0159\u00e1dek 139)\r\n.proxy/proxy()jquery-1.11.0.js (\u0159\u00e1dek 556)\r\nFunctionsExecuter/this.processNext()wicket-...udr6oyc (\u0159\u00e1dek 154)\r\nFunctionsExecuter/this.start()wicket-...udr6oyc (\u0159\u00e1dek 166)\r\nWicket.Ajax.Call.prototype.doAjax/jqXHR<.complete(jqXHR=Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, textStatus=\"success\")wicket-...udr6oyc (\u0159\u00e1dek 699)\r\njQuery.Callbacks/fire(data=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.fireWith(context=Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, args=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3211)\r\ndone(status=200, nativeStatusText=\"OK\", responses=Object { text=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\"}, headers=\"Content-Type: text/xml;c...tty(8.1.14.v20131031)\\r\\n\")jquery-1.11.0.js (\u0159\u00e1dek 9325)\r\n.send/callback(_=readystatechange , isAbort=undefined){code}",
        "Inline Enclosure does not work properly when using wicket:extend and wicket:child When using Inline Enclosures describes in https://issues.apache.org/jira/browse/WICKET-3422 the functionality is broken in a page that uses wicket:extend and wicket:child."
    ],
    [
        "WICKET-5690",
        "WICKET-4382",
        "Hiding AjaxLink by other's component visibility in enclosure causes JS error I have an enclosure with AjaxLink and Label. I control the visibility of the enclosure by visibility of the Label.\r\n{code}\r\n\t\t<wicket:enclosure child=\"myRewardSum\">\r\n\t\t\t<p class=\"row\">\r\n\t\t\t\t<a wicket:id=\"rewardsLink\" href=\"#\">\r\n\t\t\t\t\t<strong><wicket:message key=\"myRewards\">[Rewards link text]</wicket:message></strong>\r\n\t\t\t\t</a>\r\n\t\t\t\t<span class=\"value\">\r\n\t\t\t\t\t<span wicket:id=\"myRewardSum\">[50 CZK]</span>\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</wicket:enclosure>\r\n{code}\r\n\r\nWhen the visibility is resolved as false, I get following error. Changing the control-child to link itself solves the probl\u00e9m so I think that the condition when to bind the listener dosen't count with enclosures.\r\n\r\n{code}Wicket.Ajax: Cannot bind a listener for event \"click\" on element \"rewardsLink1059\" because the element is not in the DOM\r\nWicket.Ajax.DebugWindow.logError(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 130)\r\nWicket.Log.error(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 232)\r\n.Event.add/<()wicket-...udr6oyc (\u0159\u00e1dek 180)\r\njQuery.Callbacks/fire(data=[Document /Application/, [function(selector, context)]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.add()jquery-1.11.0.js (\u0159\u00e1dek 3145)\r\njQuery.fn.ready(fn=function())jquery-1.11.0.js (\u0159\u00e1dek 3379)\r\njQuery.fn.init(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 2819)\r\njQuery(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 75)\r\n.Event.add(element=\"rewardsLink1059\", type=\"click\", fn=function(jqEvent, data), data=null, selector=undefined)wicket-...udr6oyc (\u0159\u00e1dek 171)\r\n.Ajax.ajax/<(idx=0, evt=\"click\")wicket-...udr6oyc (\u0159\u00e1dek 1930)\r\n.each(obj=[\"click\"], callback=function(idx, evt), args=undefined)jquery-1.11.0.js (\u0159\u00e1dek 384)\r\n.Ajax.ajax(attrs=Object { u=\"./XXrdIQsCca2JfmhojuMQK_...S35cURU7YDKFfEVOnxyQRNg\", e=[1], c=\"rewardsLink1059\"})wicket-...udr6oyc (\u0159\u00e1dek 1908)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nWicket.Ajax.Call.prototype.processEvaluation/evaluate/<(notify=function())wicket-...udr6oyc (\u0159\u00e1dek 1162)\r\nFunctionsExecuter/this.processNext/run()wicket-...udr6oyc (\u0159\u00e1dek 139)\r\n.proxy/proxy()jquery-1.11.0.js (\u0159\u00e1dek 556)\r\nFunctionsExecuter/this.processNext()wicket-...udr6oyc (\u0159\u00e1dek 154)\r\nFunctionsExecuter/this.start()wicket-...udr6oyc (\u0159\u00e1dek 166)\r\nWicket.Ajax.Call.prototype.doAjax/jqXHR<.complete(jqXHR=Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, textStatus=\"success\")wicket-...udr6oyc (\u0159\u00e1dek 699)\r\njQuery.Callbacks/fire(data=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.fireWith(context=Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, args=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3211)\r\ndone(status=200, nativeStatusText=\"OK\", responses=Object { text=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\"}, headers=\"Content-Type: text/xml;c...tty(8.1.14.v20131031)\\r\\n\")jquery-1.11.0.js (\u0159\u00e1dek 9325)\r\n.send/callback(_=readystatechange , isAbort=undefined){code}",
        "Attribute wicket:message not resolved within parent tag with InlineEnclosure Outer div uses Attribute wicket:enclosure. Some inner element uses Attribute wicket:message. This is not being resolved, however the tag variation is being resolved.\r\n\r\nquickstart attached:\r\nsee both h1 tags inside the inline enclosure div under \"#1\". The first h1 uses wicket:message tag, while the second uses the attribute."
    ],
    [
        "WICKET-5690",
        "WICKET-4700",
        "Hiding AjaxLink by other's component visibility in enclosure causes JS error I have an enclosure with AjaxLink and Label. I control the visibility of the enclosure by visibility of the Label.\r\n{code}\r\n\t\t<wicket:enclosure child=\"myRewardSum\">\r\n\t\t\t<p class=\"row\">\r\n\t\t\t\t<a wicket:id=\"rewardsLink\" href=\"#\">\r\n\t\t\t\t\t<strong><wicket:message key=\"myRewards\">[Rewards link text]</wicket:message></strong>\r\n\t\t\t\t</a>\r\n\t\t\t\t<span class=\"value\">\r\n\t\t\t\t\t<span wicket:id=\"myRewardSum\">[50 CZK]</span>\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</wicket:enclosure>\r\n{code}\r\n\r\nWhen the visibility is resolved as false, I get following error. Changing the control-child to link itself solves the probl\u00e9m so I think that the condition when to bind the listener dosen't count with enclosures.\r\n\r\n{code}Wicket.Ajax: Cannot bind a listener for event \"click\" on element \"rewardsLink1059\" because the element is not in the DOM\r\nWicket.Ajax.DebugWindow.logError(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 130)\r\nWicket.Log.error(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 232)\r\n.Event.add/<()wicket-...udr6oyc (\u0159\u00e1dek 180)\r\njQuery.Callbacks/fire(data=[Document /Application/, [function(selector, context)]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.add()jquery-1.11.0.js (\u0159\u00e1dek 3145)\r\njQuery.fn.ready(fn=function())jquery-1.11.0.js (\u0159\u00e1dek 3379)\r\njQuery.fn.init(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 2819)\r\njQuery(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 75)\r\n.Event.add(element=\"rewardsLink1059\", type=\"click\", fn=function(jqEvent, data), data=null, selector=undefined)wicket-...udr6oyc (\u0159\u00e1dek 171)\r\n.Ajax.ajax/<(idx=0, evt=\"click\")wicket-...udr6oyc (\u0159\u00e1dek 1930)\r\n.each(obj=[\"click\"], callback=function(idx, evt), args=undefined)jquery-1.11.0.js (\u0159\u00e1dek 384)\r\n.Ajax.ajax(attrs=Object { u=\"./XXrdIQsCca2JfmhojuMQK_...S35cURU7YDKFfEVOnxyQRNg\", e=[1], c=\"rewardsLink1059\"})wicket-...udr6oyc (\u0159\u00e1dek 1908)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nWicket.Ajax.Call.prototype.processEvaluation/evaluate/<(notify=function())wicket-...udr6oyc (\u0159\u00e1dek 1162)\r\nFunctionsExecuter/this.processNext/run()wicket-...udr6oyc (\u0159\u00e1dek 139)\r\n.proxy/proxy()jquery-1.11.0.js (\u0159\u00e1dek 556)\r\nFunctionsExecuter/this.processNext()wicket-...udr6oyc (\u0159\u00e1dek 154)\r\nFunctionsExecuter/this.start()wicket-...udr6oyc (\u0159\u00e1dek 166)\r\nWicket.Ajax.Call.prototype.doAjax/jqXHR<.complete(jqXHR=Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, textStatus=\"success\")wicket-...udr6oyc (\u0159\u00e1dek 699)\r\njQuery.Callbacks/fire(data=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.fireWith(context=Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, args=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3211)\r\ndone(status=200, nativeStatusText=\"OK\", responses=Object { text=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\"}, headers=\"Content-Type: text/xml;c...tty(8.1.14.v20131031)\\r\\n\")jquery-1.11.0.js (\u0159\u00e1dek 9325)\r\n.send/callback(_=readystatechange , isAbort=undefined){code}",
        "Inline enclosures and isVisibleInHierarchy There is a problem with the inline enclosure.\r\nComponents inside the inline enclosure don't respond\r\ncorrectly to call \"isVisibleInHierarchy()\". \r\n(Returns true even if component is hidden) Attached\r\nis a patch (against wicket 1.4.20) that fixes this.\r\nThis patch doesn't fix the problem for components inside nested\r\ninline enclosures. There's a test for this as well, and it fails. \r\n(TogglePageTests.testTogglingNestedInlineEnclosures1())\r\n\r\nHopefully this patch might be of help in finding a solution for those as well."
    ],
    [
        "WICKET-5690",
        "WICKET-4874",
        "Hiding AjaxLink by other's component visibility in enclosure causes JS error I have an enclosure with AjaxLink and Label. I control the visibility of the enclosure by visibility of the Label.\r\n{code}\r\n\t\t<wicket:enclosure child=\"myRewardSum\">\r\n\t\t\t<p class=\"row\">\r\n\t\t\t\t<a wicket:id=\"rewardsLink\" href=\"#\">\r\n\t\t\t\t\t<strong><wicket:message key=\"myRewards\">[Rewards link text]</wicket:message></strong>\r\n\t\t\t\t</a>\r\n\t\t\t\t<span class=\"value\">\r\n\t\t\t\t\t<span wicket:id=\"myRewardSum\">[50 CZK]</span>\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</wicket:enclosure>\r\n{code}\r\n\r\nWhen the visibility is resolved as false, I get following error. Changing the control-child to link itself solves the probl\u00e9m so I think that the condition when to bind the listener dosen't count with enclosures.\r\n\r\n{code}Wicket.Ajax: Cannot bind a listener for event \"click\" on element \"rewardsLink1059\" because the element is not in the DOM\r\nWicket.Ajax.DebugWindow.logError(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 130)\r\nWicket.Log.error(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 232)\r\n.Event.add/<()wicket-...udr6oyc (\u0159\u00e1dek 180)\r\njQuery.Callbacks/fire(data=[Document /Application/, [function(selector, context)]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.add()jquery-1.11.0.js (\u0159\u00e1dek 3145)\r\njQuery.fn.ready(fn=function())jquery-1.11.0.js (\u0159\u00e1dek 3379)\r\njQuery.fn.init(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 2819)\r\njQuery(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 75)\r\n.Event.add(element=\"rewardsLink1059\", type=\"click\", fn=function(jqEvent, data), data=null, selector=undefined)wicket-...udr6oyc (\u0159\u00e1dek 171)\r\n.Ajax.ajax/<(idx=0, evt=\"click\")wicket-...udr6oyc (\u0159\u00e1dek 1930)\r\n.each(obj=[\"click\"], callback=function(idx, evt), args=undefined)jquery-1.11.0.js (\u0159\u00e1dek 384)\r\n.Ajax.ajax(attrs=Object { u=\"./XXrdIQsCca2JfmhojuMQK_...S35cURU7YDKFfEVOnxyQRNg\", e=[1], c=\"rewardsLink1059\"})wicket-...udr6oyc (\u0159\u00e1dek 1908)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nWicket.Ajax.Call.prototype.processEvaluation/evaluate/<(notify=function())wicket-...udr6oyc (\u0159\u00e1dek 1162)\r\nFunctionsExecuter/this.processNext/run()wicket-...udr6oyc (\u0159\u00e1dek 139)\r\n.proxy/proxy()jquery-1.11.0.js (\u0159\u00e1dek 556)\r\nFunctionsExecuter/this.processNext()wicket-...udr6oyc (\u0159\u00e1dek 154)\r\nFunctionsExecuter/this.start()wicket-...udr6oyc (\u0159\u00e1dek 166)\r\nWicket.Ajax.Call.prototype.doAjax/jqXHR<.complete(jqXHR=Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, textStatus=\"success\")wicket-...udr6oyc (\u0159\u00e1dek 699)\r\njQuery.Callbacks/fire(data=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.fireWith(context=Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, args=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3211)\r\ndone(status=200, nativeStatusText=\"OK\", responses=Object { text=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\"}, headers=\"Content-Type: text/xml;c...tty(8.1.14.v20131031)\\r\\n\")jquery-1.11.0.js (\u0159\u00e1dek 9325)\r\n.send/callback(_=readystatechange , isAbort=undefined){code}",
        "\"Cannot find element with id\" error seen in Ajax Debug for child of wicket:enclosure When an AjaxLink is hidden due to being a child of a wicket:enclosure an error is seen in the Ajax Debug window. It seems like the event handler is expecting the AjaxLink to exist in the DOM even though it has been hidden."
    ],
    [
        "WICKET-5690",
        "WICKET-5214",
        "Hiding AjaxLink by other's component visibility in enclosure causes JS error I have an enclosure with AjaxLink and Label. I control the visibility of the enclosure by visibility of the Label.\r\n{code}\r\n\t\t<wicket:enclosure child=\"myRewardSum\">\r\n\t\t\t<p class=\"row\">\r\n\t\t\t\t<a wicket:id=\"rewardsLink\" href=\"#\">\r\n\t\t\t\t\t<strong><wicket:message key=\"myRewards\">[Rewards link text]</wicket:message></strong>\r\n\t\t\t\t</a>\r\n\t\t\t\t<span class=\"value\">\r\n\t\t\t\t\t<span wicket:id=\"myRewardSum\">[50 CZK]</span>\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</wicket:enclosure>\r\n{code}\r\n\r\nWhen the visibility is resolved as false, I get following error. Changing the control-child to link itself solves the probl\u00e9m so I think that the condition when to bind the listener dosen't count with enclosures.\r\n\r\n{code}Wicket.Ajax: Cannot bind a listener for event \"click\" on element \"rewardsLink1059\" because the element is not in the DOM\r\nWicket.Ajax.DebugWindow.logError(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 130)\r\nWicket.Log.error(msg=\"Cannot bind a listener f...ement is not in the DOM\")wicket-...udr6oyc (\u0159\u00e1dek 232)\r\n.Event.add/<()wicket-...udr6oyc (\u0159\u00e1dek 180)\r\njQuery.Callbacks/fire(data=[Document /Application/, [function(selector, context)]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.add()jquery-1.11.0.js (\u0159\u00e1dek 3145)\r\njQuery.fn.ready(fn=function())jquery-1.11.0.js (\u0159\u00e1dek 3379)\r\njQuery.fn.init(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 2819)\r\njQuery(selector=function(), context=undefined)jquery-1.11.0.js (\u0159\u00e1dek 75)\r\n.Event.add(element=\"rewardsLink1059\", type=\"click\", fn=function(jqEvent, data), data=null, selector=undefined)wicket-...udr6oyc (\u0159\u00e1dek 171)\r\n.Ajax.ajax/<(idx=0, evt=\"click\")wicket-...udr6oyc (\u0159\u00e1dek 1930)\r\n.each(obj=[\"click\"], callback=function(idx, evt), args=undefined)jquery-1.11.0.js (\u0159\u00e1dek 384)\r\n.Ajax.ajax(attrs=Object { u=\"./XXrdIQsCca2JfmhojuMQK_...S35cURU7YDKFfEVOnxyQRNg\", e=[1], c=\"rewardsLink1059\"})wicket-...udr6oyc (\u0159\u00e1dek 1908)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nwicket-ajax-jquery-ver-1404896837995.js;jsessionid=1pluxkdxzzgehct98udr6oyc()wicket-...val (2) (\u0159\u00e1dek 1)\r\nWicket.Ajax.Call.prototype.processEvaluation/evaluate/<(notify=function())wicket-...udr6oyc (\u0159\u00e1dek 1162)\r\nFunctionsExecuter/this.processNext/run()wicket-...udr6oyc (\u0159\u00e1dek 139)\r\n.proxy/proxy()jquery-1.11.0.js (\u0159\u00e1dek 556)\r\nFunctionsExecuter/this.processNext()wicket-...udr6oyc (\u0159\u00e1dek 154)\r\nFunctionsExecuter/this.start()wicket-...udr6oyc (\u0159\u00e1dek 166)\r\nWicket.Ajax.Call.prototype.doAjax/jqXHR<.complete(jqXHR=Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, textStatus=\"success\")wicket-...udr6oyc (\u0159\u00e1dek 699)\r\njQuery.Callbacks/fire(data=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3099)\r\njQuery.Callbacks/self.fireWith(context=Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, args=[Object { channel=\"0|s\", initialize=function(), _initializeDefaults=function(), v\u00edce...}, [Object { readyState=4, responseText=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\", responseXML=document, v\u00edce...}, \"success\"]])jquery-1.11.0.js (\u0159\u00e1dek 3211)\r\ndone(status=200, nativeStatusText=\"OK\", responses=Object { text=\"<?xml version=\"1.0\" enco...aluate></ajax-response>\"}, headers=\"Content-Type: text/xml;c...tty(8.1.14.v20131031)\\r\\n\")jquery-1.11.0.js (\u0159\u00e1dek 9325)\r\n.send/callback(_=readystatechange , isAbort=undefined){code}",
        "Unrendered component wrongly ignored When a page has a hidden enclosure, unrelated components that were not rendered are silently ignored (with only a debug message). Example:\r\n\r\npublic class HomePage extends WebPage {\r\n\tpublic HomePage() {\r\n\t\tadd(new Label(\"foo\", \"bar\"));\r\n\t\tadd(new WebMarkupContainer(\"baz\").setVisible(false));\r\n\t}\r\n}\r\n\r\nHomepage.html:\r\nHello <wicket:enclosure><div wicket:id=\"baz\"></div></wicket:enclosure>\r\n\r\nResult: the page shows \"Hello\".\r\nIf you remove \".setVisible(false)\", then...\r\n\r\nUnexpected RuntimeException\r\nLast cause: The component(s) below failed to render. Possible reasons could be that: 1) you have added a component in code but forgot to reference it in the markup (thus the component will never be rendered), 2) if your components were added in a parent container then make sure the markup for the child container includes them in <wicket:extend>.\r\n1. [Component id = foo]"
    ],
    [
        "WICKET-5781",
        "WICKET-5755",
        "AjaxRequestTarget#.focusComponent  does not work I am using the following code to open a modal window and set the focus to the nameField:\r\n\r\nAjaxButton btn = new AjaxButton(\"btnNew\") {\r\n\tprivate static final long serialVersionUID = 1L;\r\n\t\t\t\r\n\t@Override\r\n\tprotected void onSubmit(AjaxRequestTarget target, Form<?> form) {\r\n\t\tModalWindow modalNewDefinition= new ModalWindow(\"mymodal\");\r\n\t\tNewDefinitionPanel p = new NewDefinitionPanel( ...);\r\n\t\tmodalNewDefinition.setContent(p);\r\n\t\tmodalNewDefinition.show(target);\r\n\t\ttarget.focusComponent(p.getNameField());\r\n\t}\r\n}\r\n\r\nAjaxRequestTarget#.focusComponent works fine with Wicket 1.4 but ist has no effect with Wicket 6.18.\r\nWICKET AJAX DEBUG shows:\r\n\r\n....\r\nINFO: returned focused element: [object HTMLInputElement]\r\nINFO: returned focused element: [object HTMLInputElement]\r\nINFO: focus set on inNnameField from server side\r\nINFO: Response processed successfully.\r\nINFO: Calling focus on inNnameField\r\n\r\nThe information \"INFO: focus set on inNnameField\" is however missing and the focus is not set.",
        "Restoring focus after Ajax replace no longer works in IE8 In IE8 focus is no longer reliably restored to the former focus owner after Ajax request.\r\n\r\nThis regression is caused by WICKET-5564."
    ],
    [
        "WICKET-5811",
        "WICKET-5804",
        "Infinite loop issue in PropertyValidator#createUnresolvablePropertyMessage(FormComponent<>)  In case of trivial model, attached to a FormComponent, PropertyValidator#createUnresolvablePropertyMessage(FormComponent<>) has no chances to find suitable model and falls into infinite loop.\r\n\r\n{code}\r\n\t\tIModel<?> model = component.getModel();\r\n\t\t// Code sadly copied over from DefaultPropertyResolver\r\n\t\twhile (true)\r\n\t\t{\r\n\t\t\tif (model == null)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (model instanceof IPropertyReflectionAwareModel)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (model instanceof IWrapModel<?>)\r\n\t\t\t{\r\n\t\t\t\tmodel = ((IWrapModel<?>)model).getWrappedModel();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n                        // FIXME issue is here\r\n\t\t}\r\n{code}",
        "Infinite while loop in PropertyValidator#createUnresolvablePropertyMessage PropertyValidator's createUnresolvablePropertyMessage method may stuck in infinite while loop.\r\n\r\n{code}\r\nwhile (true)\r\n{\r\n\tif (model == null)\r\n\t{\r\n\t\tbreak;\r\n\t}\r\n\tif (model instanceof IPropertyReflectionAwareModel)\r\n\t{\r\n\t\tbreak;\r\n\t}\r\n\tif (model instanceof IWrapModel<?>)\r\n\t{\r\n\t\tmodel = ((IWrapModel<?>)model).getWrappedModel();\r\n\t\tcontinue;\r\n\t}\r\n}\r\n{code}"
    ],
    [
        "WICKET-5813",
        "WICKET-5812",
        "AtmosphereBehavior - invalid callback URL Inside AtmosphereBehavior method getCallbackUrl() return value is calculated as:\r\n{code}\r\nreturn super.getCallbackUrl() + \"&\" + WebRequest.PARAM_AJAX + \"=true&\" + WebRequest.PARAM_AJAX_BASE_URL + \"=.\";\r\n{code}\r\n\r\nIs it correct? When atmosphere update contains some resources (css,\r\njs) their paths are invalid encoded because\r\nWebRequest.PARAM_AJAX_BASE_URL is set to \".\".\r\nMaybe this parameter should be encoded the same way as in AbstractDefaultAjaxBehavior:\r\n{code}\r\nRequestCycle requestCycle = component.getRequestCycle();\r\nUrl baseUrl = requestCycle.getUrlRenderer().getBaseUrl();\r\nCharSequence ajaxBaseUrl = Strings.escapeMarkup(baseUrl.toString());\r\n{code}\r\nIn my test case this solves a problem.",
        "AtmosphereBehavior wrongly sets Ajax base url to '.' AtmosphereBehavior should use requestCycle.getUrlRenderer().getBaseUrl() "
    ],
    [
        "WICKET-5844",
        "WICKET-5843",
        "CryptoMapper doesn't work with context relative UrlResourceReferences Adding a CryptoMapper to the application causes context relative URL's to be rendered twice, causing them to stop working.\r\n\r\nFor example a webjar resource is rendered as:\r\n\r\n||page||rendered url||\r\n|/|./webjars/jquery/1.11.2/jquery.js|\r\n|/admin|./webjars/jquery/1.11.2/jquery.js|\r\n|/admin/configuration|../../webjars/jquery/1.11.2/jquery.js|\r\n|/admin/configuration/|../../../../webjars/jquery/1.11.2/jquery.js|\r\n\r\nThe last two urls won't work as they point to urls outside the context root.\r\n\r\nThe reason this happens is because UrlResourceReference#getUrl returns a UrlResourceReference$CalculatedUrl, which is normally skipped by UrlRenderer#renderRelativeUrl.\r\nBut in the case of CryptoMapper, this CalculatedUrl is converted to a normal Url (in CryptoMapper#encryptRequestListenerParameter) which isn't skipped.\r\n\r\nSo, when you have a CryptoMapper all context relative urls are converted twice: once by UrlRenderer#renderContextRelativeUrl and again by UrlRenderer#renderRelativeUrl.\r\n\r\nA quick fix would be to ignore all url's of type IUrlRenderer in CrytoMapper's mapHandler, but I don't know it this the wanted solution. It seems pretty weird to me that conversion is done twice at all.",
        "CryptoMapper doesn't work with context relative UrlResourceReferences Adding a CryptoMapper to the application causes context relative URL's to be rendered twice, causing them to stop working.\r\n\r\nFor example a webjar resource is rendered as:\r\n\r\n||page||rendered url||\r\n|/|./webjars/jquery/1.11.2/jquery.js|\r\n|/admin|./webjars/jquery/1.11.2/jquery.js|\r\n|/admin/configuration|../../webjars/jquery/1.11.2/jquery.js|\r\n|/admin/configuration/|../../../../webjars/jquery/1.11.2/jquery.js|\r\n\r\nThe last two urls won't work as they point to urls outside the context root.\r\n\r\nThe reason this happens is because UrlResourceReference#getUrl returns a UrlResourceReference$CalculatedUrl, which is normally skipped by UrlRenderer#renderRelativeUrl.\r\nBut in the case of CryptoMapper, this CalculatedUrl is converted to a normal Url (in CryptoMapper#encryptRequestListenerParameter) which isn't skipped.\r\n\r\nSo, when you have a CryptoMapper all context relative urls are converted twice: once by UrlRenderer#renderContextRelativeUrl and again by UrlRenderer#renderRelativeUrl.\r\n\r\nA quick fix would be to ignore all url's of type IUrlRenderer in CrytoMapper's mapHandler, but I don't know it this the wanted solution. It seems pretty weird to me that conversion is done twice at all."
    ],
    [
        "WICKET-5880",
        "WICKET-5879",
        "In a form where the submit method changes the underlying model, the model changes are reverted  In a form that is submitted via an AjaxSubmitLink, if the model is updated in the submit method (and the form is added as to the AjaxRequestTarget so that it is rerendered), the updated value is not displayed.  Or rather, it is displayed very briefly, and then the model is reset to the original value, and the original value is rendered.\r\n\r\nThis occurs in 7.0.0-M5.  In 6.18.0, wicket works as expected, and the new value is rendered. Quickstart attached.",
        "Using an AjaxSubmitLink to hide its form results in an exception In wicket 7, an AjaxSubmitLink that hides its form in the onSubmit() method results in a ListenerInvocationNotAllowedException to be thrown, since the component that triggered the submit is no longer visible.  See quickstart."
    ],
    [
        "WICKET-5946",
        "WICKET-4460",
        "JavaScript/Css PackageResource should use the same charset for compressing WICKET-5827 lead to a regression in org.apache.wicket.request.resource.CssPackageResource#processResponse(). Now Wicket again uses the platform default encoding for reading the compressed JS/CSS as bytes.",
        "Wrong string encoding in JavaScriptPackageResource org.apache.wicket.request.resource.JavaScriptPackageResource.processResponse(Attributes, byte[])\r\ntransforms javascript using an IJavaScriptCompressor if configured - which is the case by default in deployment mode, but not in development mode.\r\nThe problem is that the code uses UTF-8 encoding when creating the String from bytes, but when converting the result String of IJavaScriptCompressor back to bytes, the platform's default encoding is used (e.g. Cp1252 on Windows).\r\nI propose to at least use the same character encoding while converting from/to bytes:\r\n\r\nsomething like (JavaScriptPackageResource line 59 and following):\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tString nonCompressed = new String(processedResponse, \"UTF-8\");\r\n\t\t\t\treturn compressor.compress(nonCompressed).getBytes(\"UTF-8\");\r\n\t\t\t}\r\n\t\t\tcatch (Exception e)\r\n\t\t\t{\r\n\t\t\t\tlog.error(\"Error while filtering content\", e);\r\n\t\t\t\treturn processedResponse;\r\n\t\t\t}\r\n\r\n\r\nOf course it would be even better not to make any assumtions about the encoding of the .js file, but I'm not sure how one could determine that."
    ],
    [
        "WICKET-5963",
        "WICKET-5839",
        "File upload post to AbstractResource does not receive files With the attached quickstart. start jetty and drop a file on the upload panel.\r\nThe post to the mounted resource will be done, but no file will be received.",
        "ServletWebRequest Post Parameters missing To Reproduce:\r\n\r\nI was able to easily reproduce it with the simplest submit button: https://github.com/baholladay/wicketrequesterror\r\n\r\nAll you need to do is click submit and you'll see the parameter value. Then change the wicket version from 6.16.0 to 6.19.0 and rebuild and click submit and you'll see no value after clicking submit.\r\n\r\nDescription: \r\nI'm trying to upgrade to 6.19.0 from 6.16.0 and one of my rest endpoints doesn't have access to the post parameters anymore.\r\n\r\nI mount a specific endpoint to a page:\r\n\r\nApplication.java\r\n\r\nmountPage(\"/fileUpload\", FileUploadRest.class);\r\n\r\n\r\nand then look for the parameters in the page\r\n\r\nFileUploadRest extends WebPage{\r\n\r\npublic FileUploadRest(){\r\n  final ServletWebRequest webRequest = (ServletWebRequest) getRequest();\r\n  MultipartServletWebRequest multiPartRequest = webRequest.newMultipartWebRequest(Bytes.megabytes(100), \"ignored\");\r\nString uuid = multiPartRequest.getRequestParameters().getParameterValue(\"uuid\").toString();\r\n...\r\n}\r\nThis UUID parameter works fine in 6.16.0 but is always null in 6.19.0. This is true for all parameters and the file passed in. I verified that the post is sending the data (by looking at the developer Network tab in chrome).\r\n\r\nRequest Payload:\r\n\r\n------WebKitFormBoundaryttKBVItmK4S1fZNP\r\n\r\nContent-Disposition: form-data; name=\"myAwesomeDropzone_hf_0\"\r\n\r\n\r\n------WebKitFormBoundaryttKBVItmK4S1fZNP\r\nContent-Disposition: form-data; name=\"uuid\"\r\n\r\n4e238b39-478d-4938-8bc2-0416508b04c6\r\n------WebKitFormBoundaryttKBVItmK4S1fZNP\r\nContent-Disposition: form-data; name=\"file\"; filename=\"test4.pdf\"\r\nContent-Type: application/pdf\r\n\r\nI've also tried using a Resource and mounting that instead of a WebPage by following the stackoverflow suggestion [1], but got the same results where no parameters were being passed through.\r\n\r\n[1] http://stackoverflow.com/questions/17874695/wicket-http-post-get-raw-data-from-servletrequest"
    ],
    [
        "WICKET-6009",
        "WICKET-5978",
        "Massive creation of dynamic classes causes OutOfMemory (PermGen) After upgrading Wicket from 6.19 to 6.20 we are discovering massive unnecessary creation of CGLIB-Classes. After debugging the issue occurs every time an old page version is requested from PageStore that has an injected (@SpringBean) - member . If this happens a new proxy will be created every time. This leads to permgen waste and in the end to OutOfMemoryErrors and crashes. In 6.19. this error doesn't occur. For reproducing load any older version of a versioned page and a new class is loaded in ClassLoader (WICKET_WICKET_<anyInjectedSpringBean>$$EnhancerByCGLIB...<anyHash>) \r\n\r\nIn the attached screenshots you can see the difference between the two versions in one example (GarageService - a functional, injected service). The behaviour of the images occurs after restarting the Glassfish-server, deploy of the application. After visiting one site, using it and pressing the back button there are multiple GarageServices in the permgen available.\r\n\r\nBefore update (6.19):\r\n!wicket_spring_6_19.PNG!\r\n\r\nAfter update (6.20):\r\n!wicket_spring_6_20.PNG!\r\n\r\nMaybe this happens in Wicket 7, too. But currently not checked. \r\n",
        "LazyInitProxyFactory fills permgen space Since WICKET-5910 permgen space is filled with proxy classes, since the enhancement key changes for each proxy generation."
    ],
    [
        "WICKET-6012",
        "WICKET-4460",
        "Confused character encodings in JavaScriptPackageResource and CssPackageResource We encountered a character encoding problem with a Javascript resource provided by Wicket 6.20.0 from our application hosted by Tomcat 7 on a Windows server (with a JVM default charset of \"windows-1252\").\r\n\r\nThe source Javascript resource is UTF-8 encoded with a leading BOM mark. The leading bytes of the resource received by the browser are broken.\r\n\r\nWe tested several different solutions which all worked (with various consequences):\r\n\r\n1. Remove the BOM mark from the source Javascript file\r\n2. Set the JVM \"file.encoding\" property to \"UTF-8\".\r\n3. Disable DefaultJavaScriptCompressor in Wicket\r\n4. Change the code in JavaScriptPackageResource to \"return output.getBytes(\"UTF-8\")\"\r\n\r\nWe solved this problem using solution #1.\r\n\r\nWe think you should consider changing the code in  JavaScriptPackageResource and CssPackageResource per solution #4.\r\n\r\nPlease see the attached images and an example quickstart test case (which demonstrates the problem on my Windows machine where the JVM default character encoding is \"windows-1252\").\r\n\r\nThanks to the Wicket team for a great framework.\r\n",
        "Wrong string encoding in JavaScriptPackageResource org.apache.wicket.request.resource.JavaScriptPackageResource.processResponse(Attributes, byte[])\r\ntransforms javascript using an IJavaScriptCompressor if configured - which is the case by default in deployment mode, but not in development mode.\r\nThe problem is that the code uses UTF-8 encoding when creating the String from bytes, but when converting the result String of IJavaScriptCompressor back to bytes, the platform's default encoding is used (e.g. Cp1252 on Windows).\r\nI propose to at least use the same character encoding while converting from/to bytes:\r\n\r\nsomething like (JavaScriptPackageResource line 59 and following):\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tString nonCompressed = new String(processedResponse, \"UTF-8\");\r\n\t\t\t\treturn compressor.compress(nonCompressed).getBytes(\"UTF-8\");\r\n\t\t\t}\r\n\t\t\tcatch (Exception e)\r\n\t\t\t{\r\n\t\t\t\tlog.error(\"Error while filtering content\", e);\r\n\t\t\t\treturn processedResponse;\r\n\t\t\t}\r\n\r\n\r\nOf course it would be even better not to make any assumtions about the encoding of the .js file, but I'm not sure how one could determine that."
    ],
    [
        "WICKET-6012",
        "WICKET-5946",
        "Confused character encodings in JavaScriptPackageResource and CssPackageResource We encountered a character encoding problem with a Javascript resource provided by Wicket 6.20.0 from our application hosted by Tomcat 7 on a Windows server (with a JVM default charset of \"windows-1252\").\r\n\r\nThe source Javascript resource is UTF-8 encoded with a leading BOM mark. The leading bytes of the resource received by the browser are broken.\r\n\r\nWe tested several different solutions which all worked (with various consequences):\r\n\r\n1. Remove the BOM mark from the source Javascript file\r\n2. Set the JVM \"file.encoding\" property to \"UTF-8\".\r\n3. Disable DefaultJavaScriptCompressor in Wicket\r\n4. Change the code in JavaScriptPackageResource to \"return output.getBytes(\"UTF-8\")\"\r\n\r\nWe solved this problem using solution #1.\r\n\r\nWe think you should consider changing the code in  JavaScriptPackageResource and CssPackageResource per solution #4.\r\n\r\nPlease see the attached images and an example quickstart test case (which demonstrates the problem on my Windows machine where the JVM default character encoding is \"windows-1252\").\r\n\r\nThanks to the Wicket team for a great framework.\r\n",
        "JavaScript/Css PackageResource should use the same charset for compressing WICKET-5827 lead to a regression in org.apache.wicket.request.resource.CssPackageResource#processResponse(). Now Wicket again uses the platform default encoding for reading the compressed JS/CSS as bytes."
    ],
    [
        "WICKET-6016",
        "WICKET-5978",
        "AnnotProxyFieldValueFactory generating CGLIB proxies can eat up permgen space If you inject a field with SpringComponentInjector as class (instead of interface) and if wrapInProxies is set, the generated proxy is only cached if the proxy target in spring application context is a singleton. The corresponding code fragment  in AnnotProxyFieldValueFactory.getFieldValue(...) is\r\n\r\nif (wrapInProxies)\r\n{\r\n   target = LazyInitProxyFactory.createProxy(field.getType(), locator);\r\n}\r\n\r\n// only put the proxy into the cache if the bean is a singleton\r\nif (locator.isSingletonBean())\r\n{\r\n   Object tmpTarget = cache.putIfAbsent(locator, target);\r\n   ...\r\n}\r\n\r\nThe problem now is, each time you inject a none singleton spring bean (prototype or other scope) by class, LazyInitProxyFactory.createProxy(...) creates  a new proxy class with help of CGLIB by deriving from the target class.\r\nThis will continuously eat up the permgen space, which was the case in our project.\r\n\r\nIs it possible to create lazy init proxies for none singleton Spring beans that are cachable? This would resolve the problem.  \r\n\r\n\r\n\r\n\r\n ",
        "LazyInitProxyFactory fills permgen space Since WICKET-5910 permgen space is filled with proxy classes, since the enhancement key changes for each proxy generation."
    ],
    [
        "WICKET-6016",
        "WICKET-6009",
        "AnnotProxyFieldValueFactory generating CGLIB proxies can eat up permgen space If you inject a field with SpringComponentInjector as class (instead of interface) and if wrapInProxies is set, the generated proxy is only cached if the proxy target in spring application context is a singleton. The corresponding code fragment  in AnnotProxyFieldValueFactory.getFieldValue(...) is\r\n\r\nif (wrapInProxies)\r\n{\r\n   target = LazyInitProxyFactory.createProxy(field.getType(), locator);\r\n}\r\n\r\n// only put the proxy into the cache if the bean is a singleton\r\nif (locator.isSingletonBean())\r\n{\r\n   Object tmpTarget = cache.putIfAbsent(locator, target);\r\n   ...\r\n}\r\n\r\nThe problem now is, each time you inject a none singleton spring bean (prototype or other scope) by class, LazyInitProxyFactory.createProxy(...) creates  a new proxy class with help of CGLIB by deriving from the target class.\r\nThis will continuously eat up the permgen space, which was the case in our project.\r\n\r\nIs it possible to create lazy init proxies for none singleton Spring beans that are cachable? This would resolve the problem.  \r\n\r\n\r\n\r\n\r\n ",
        "Massive creation of dynamic classes causes OutOfMemory (PermGen) After upgrading Wicket from 6.19 to 6.20 we are discovering massive unnecessary creation of CGLIB-Classes. After debugging the issue occurs every time an old page version is requested from PageStore that has an injected (@SpringBean) - member . If this happens a new proxy will be created every time. This leads to permgen waste and in the end to OutOfMemoryErrors and crashes. In 6.19. this error doesn't occur. For reproducing load any older version of a versioned page and a new class is loaded in ClassLoader (WICKET_WICKET_<anyInjectedSpringBean>$$EnhancerByCGLIB...<anyHash>) \r\n\r\nIn the attached screenshots you can see the difference between the two versions in one example (GarageService - a functional, injected service). The behaviour of the images occurs after restarting the Glassfish-server, deploy of the application. After visiting one site, using it and pressing the back button there are multiple GarageServices in the permgen available.\r\n\r\nBefore update (6.19):\r\n!wicket_spring_6_19.PNG!\r\n\r\nAfter update (6.20):\r\n!wicket_spring_6_20.PNG!\r\n\r\nMaybe this happens in Wicket 7, too. But currently not checked. \r\n"
    ],
    [
        "WICKET-6034",
        "WICKET-6013",
        "AjaxFallbackOrderByBorder does not generate any CSS class in order link AjaxFallbackOrderByBorder component does not generate any CSS class in order link. Non-ajax OrderByBorder works fine.\r\n\r\nVersions prior 7.1 generated CSS classes into ordering link:\r\nwicket_orderNone\r\nwicket_orderUp\r\nwicket_orderDown\r\n",
        "CLONE - AjaxFallbackOrderByBorder wicketOrder[Up|Down|None] class missing in 7.1.0 The class of the OrderByLink in the AjaxFallbackOrderByBorder is not set on the AjaxFallbackOrderByBorder in Wicket 7, this was the case in Wicket 6.\r\nI will include two quickstarts using Wicket 6 and 7 to demonstrate this."
    ]
]