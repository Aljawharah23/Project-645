[
    [
        "AMQ-220",
        "AMQ-206",
        "abstract Spring beans and JCAContainer Please update JCAContainer to use ListableBeanFactory.getBeanNamesForType(Class) rather than blindly trying to instantiate every single bean in the context.\n\nhttp://svn.activemq.org/trunk/activemq/modules/container/src/java/org/activemq/jca/JCAContainer.java?rev=1&view=auto\n\n\n    [junit] Error creating bean with name 'abstractInboxCommand': Bean definition is abstract\n    [junit] org.springframework.beans.factory.BeanIsAbstractException: Error creating bean with name\n 'abstractInboxCommand': Bean definition is abstract\n    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.checkMergedBeanDefinition(AbstractBeanFactory.java:653)\n    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:145)\n    [junit]     at org.codehaus.activemq.jca.JCAContainer.afterPropertiesSet(JCAContainer.java:77)\n    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1065)\n    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:343)\n    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:260)",
        "JCAContainer fails to check if beans are abstract before calling beanFactory.getBean() We have beans defined that are abstract and cannot be instantiated.  \n\nJCAContainer attempts to instantiate all beans with:\n\n            for (int i = 0; i < names.length; i++) {\n                // TODO one day we could be smart to only pre-load the correct\n                // types of bean, based on the definitions?\n                String name = names[i];\n                beanFactory.getBean(name);\n            }\n\nResult is a BeanIsAbstractException:\n\norg.springframework.beans.factory.BeanIsAbstractException: Error creating bean with name 'baseXlParser': Bean definition is abstract\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.checkMergedBeanDefinition(AbstractBeanFactory.java:653)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:145)\n\tat org.codehaus.activemq.jca.JCAContainer.afterPropertiesSet(JCAContainer.java:77)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1065)\n\nPerhaps something like:\n\n      } else if (!lazyLoad && beanFactory instanceof BeanDefinitionRegistry) {\n         BeanDefinitionRegistry registry = (BeanDefinitionRegistry) beanFactory;\n         String[] names = registry.getBeanDefinitionNames();\n         for (int i = 0; i < names.length; i++) {\n            String name = names[i];\n            BeanDefinition definition = registry.getBeanDefinition(name);\n            if (!definition.isAbstract())\n               beanFactory.getBean(name);\n         }\n      }\n\nThe TO-DO in the code is well stated, what logic can be implemented to selectively get the necesssay beans?  The end result is that lazy-init singletons will be instantiated as well, perhaps without cause.\n\nAlso, I believe the code should use BeanFactoryUtils.beanNamesIncludingAncestors(ListableBeanFactory) to account for a potential hierarchy.\n\nNote I found reference to this exact issue in the Spring Forum (http://forum.springframework.org/viewtopic.php?t=3064) but was unable to find an existing jira issue.\n\nThanks,\n\nAndrew\n\n\n"
    ],
    [
        "AMQ-273",
        "AMQ-238",
        "Memory leak in wire format See:\n\nhttp://permalink.gmane.org/gmane.comp.java.activemq.devel/534",
        "Broker Memory Leak We are using a Requestor for JMS RPC using a temporary queue.\n\nWe have a small number of clients, but each client potentially makes thousands of requests, and each request creates its own temporary queue.\n\nWe were seeing memory growth in 2.1 related to connections, this seems to be fixed in 3.0.\n\nHowever, we now see memory growth in a different place.  YourKit shows 70% of the 240mb (currently) memory used, is in o.a.service.boundedvm.TransientQueueBoundedMessageManager.destinationMap (1 million objects), there are around 10,000 objects in TransientQueueBoundedMessageManager.destinations and TransientQueueBoundedMessageManager.containers.\n\nWe are opening and closing a connection for each Requestor, so the temporary queue, should be closing, and there is also a queue.delete() as in o.a.bean.Requestor.\n\nIf you want a YourKit snapshot, let me know, and I'll attach one.\n\nWe are looking at using a single topic with selectors as a workaround, but that complicates the logic, in order not to miss the response, before you start listening.  i.e. another thread is required."
    ],
    [
        "AMQ-275",
        "AMQ-219",
        "Could not enqueue message and Too many open files Relaited to slow consumer condition.\n\nWARN 2005-06-22 12:55:44,135 - Queue is full, waiting for it to be dequeued.\n\n\n2005-06-22 11:51:09,678 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2024-1119453996333-6:0 is a slow consumer\n2005-06-22 11:51:09,678 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2024-1119453996333-6:0 is a slow consumer\n2005-06-22 11:51:09,694 [ocalport=61616]] INFO  DataContainer                  - making directory for temporary spooled data: ActiveMQTemp\n2005-06-22 11:51:11,069 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2005-1119453893347-6:0 is a slow consumer\n2005-06-22 11:51:11,069 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2005-1119453893347-6:0 is a slow consumer\n\n2005-06-22 11:51:17,288 [ocalport=61616]] DEBUG ientTopicBoundedMessageManager - Adding consumer: CONSUMER_INFO: id = 336 ConsumerInfo{ browser = false, destination = ActiveMQ.Advisory.TempDestinations.temp-queue.TemporaryQueue-{TD{ID:ny-cap-33-2150-1119455437835-16:0}TD}ID:ny-cap-33-2150-1119455437835-23:0, consumerIdentifier = 'ID:ny-cap-33-2024-1119453996333-16:0.27.53' , clientId = 'ID:ny-cap-33-2024-1119453996333-16:0' , sessionId = '27' , consumerName = '' , selector = '' , startTime = 1119455477008, started = true, consumerNo = 53, noLocal = false, prefetchNumber = 1000, consumerKey = '[ID:ny-cap-33-2024-1119453996333-16:0:]'  }\n2005-06-22 11:51:54,773 [ocalport=61616]] ERROR BrokerClientImpl               - Could not enqueue message ACTIVEMQ_OBJECT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:ny-cap-33-2005-1119453893347-68:121589, bodyAsBytes = org.activemq.io.util.ByteArray@1f07377, readOnlyMessage = false, jmsClientID = 'ID:ny-cap-33-2005-1119453893347-6:0' , jmsCorrelationID = 'null' , jmsDestination = Topic.sds.PropertyTemplatePublisher, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 1119455573508, jmsPriority = 4, jmsTimestamp = 1119455513508, properties = null, readOnlyProperties = false, entryBrokerName = 'ID:nyotc023-2882-1119382254093-0:0' , entryClusterName = 'default' , consumerNos = [I@12cb4ae, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'null' , messageConsumed = false, transientConsumed = false, sequenceNumber = 121589, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = null, jmsMessageIdentity = null, producerKey = ID:ny-cap-33-2005-1119453893347-68: } ActiveMQObjectMessage{ object = null } to SpooledBoundedQueue for this slow consumer\njavax.jms.JMSException: enqueNoBlock failed: Too many open files\n\tat org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueueNoBlock(SpooledBoundedActiveMQMessageQueue.java:121)\n\tat org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueue(SpooledBoundedActiveMQMessageQueue.java:91)\n\tat org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:198)\n\tat org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.dispatchToQueue(TransientTopicBoundedMessageContainer.java:223)\n\tat org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.targetAndDispatch(TransientTopicBoundedMessageContainer.java:155)\n\tat org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.doSendMessage(TransientTopicBoundedMessageManager.java:225)\n\tat org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.sendMessage(TransientTopicBoundedMessageManager.java:204)\n\tat org.activemq.broker.impl.DefaultBroker.doMessageSend(DefaultBroker.java:563)\n\tat org.activemq.broker.impl.DefaultBroker.sendMessage(DefaultBroker.java:305)\n\tat org.activemq.broker.impl.BrokerContainerImpl.sendMessage(BrokerContainerImpl.java:462)\n\tat org.activemq.broker.impl.BrokerConnectorImpl.sendMessage(BrokerConnectorImpl.java:271)\n\tat org.activemq.broker.impl.BrokerClientImpl.consumeActiveMQMessage(BrokerClientImpl.java:706)\n\tat org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:310)\n\tat org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)\n\tat org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)\n\tat org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)\n\tat java.lang.Thread.run(Thread.java:534)\n\n",
        "Too many open files caused by DataContainer.java Reported by: Cobus Combrink (ccombrink@astratagroup.com)\n\nThe implementation of class DataContainer maintains a list of classes with\nembedded OPEN file handles and runs the risk of exhausting the system file\nhandles.\n\nThis can be made visible by running a fast producer and a very slow\nconsumer.\nAn exception will be thrown after a large number of messages were queued\nusing the class SpooledBoundedActiveMQMessageQueue.\nThe server will be unable to queue further messages, subsequently dropping\nconnections."
    ],
    [
        "AMQ-337",
        "AMQ-334",
        "High priority message blocks low priority message being consumed by consumers, who is only interested in the message that happen to have low prority This is re-submission of bug AMQ-334, since the link to AMQ-334 is broken on Jira.\n \nA message consumer will not receive message that matches its message selector definition, until all other messages with higher priority have been consumerd from the queue.\n\nFor example, say our messages have a property which can have one of two values - 'S' and 'N'. We have a queue where, at the moment, there is only one consumer, who is set up to consume only 'S' messages.  We've tested\nthis with two scenarios:\n1)       Place an 'N' message in the queue, followed by an 'S'.  No\npriority is assigned to the messages.  The consumer is able to receive\nthe 'S' message, even though the 'N' message is ahead of it in the\nqueue.  This is the behavior that we find logical.\n\n2)       Place an 'N' message in the queue with a priority of 4,\n followed by an 'S' with a priority of 2.  Only difference from\nscenario 1 is that priorities have been assigned to messages.  Now the\nconsumer cannot receive any messages \u00a1V it blocks until we add a\nconsumer that consumes the 'N' type message.  This behavior seems to be a bug.\n\n\n--\nThis message is automatica",
        "High priority message blocks low priority message being consumed by consumers, who is only interested in the message that happen to have low prority A message consumer will not receive message that matches its message selector definition, until all other messages with higher priority have been consumerd from the queue.  \n\nFor example, say our messages have a property which can have one of two values - 'S' and 'N'. We have a queue where, at the moment, there is only one consumer, who is set up to consume only 'S' messages.  We've tested\nthis with two scenarios: \n1)       Place an 'N' message in the queue, followed by an 'S'.  No\npriority is assigned to the messages.  The consumer is able to receive\nthe 'S' message, even though the 'N' message is ahead of it in the\nqueue.  This is the behavior that we find logical.\n\n2)       Place an 'N' message in the queue with a priority of 4,\n followed by an 'S' with a priority of 2.  Only difference from\nscenario 1 is that priorities have been assigned to messages.  Now the\nconsumer cannot receive any messages \u00a1V it blocks until we add a\nconsumer that consumes the 'N' type message.  This behavior seems to be a bug. \n"
    ],
    [
        "AMQ-377",
        "AMQ-368",
        "Unbounded number of jdbc connections created to postgresql Scenarion:\n\n1. 10 consumer is created (each has its own connection) then closes the connection right away. The application is executed several times.\n\nExpected behaviour: A \"postgres process\" is created when a consumer creates a connection. Subsequently, when the consumer closes/stops the connection, the \"postgres process\" should also closes/stops.\nActual behaviour: Inconsistent, most of the time, postgres process remains active even though the consumer is already disconnected. So, creating new consumer eventually leads to exception where it disallows further connection to postgres. The solution here is to restart the broker to kill all \"postgres processes\" the was created by disconnected consumers.\n\n\"Failed to create transaction: org.postgresql.util.PSQLException: Backend start-up failed: FATAL: sorry, too many clients already.\" (see attached log file).\n",
        "Database Connection Leaks The activemq server seems to be leaking database connections:\n\n2005-09-22 19:01:51,109 [ocalport=61616]] WARN  BrokerClientImpl               - caught exception consuming packet: ACTIVEMQ_OBJECT_MESSAGE: id = 185 ActiveMQMessage{ , jmsMessageID = ID:AMT915-1611-1127395790823-44:19, bodyAsBytes = org.activemq.io.util.ByteArray@16de067, readOnlyMessage = false, jmsClientID = 'ID:AMT915-1611-1127395790823-9:0' , jmsCorrelationID = 'null' , jmsDestination = SmsGateway.OutboundQueue, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 0, jmsPriority = 4, jmsTimestamp = 1127395909844, properties = {esmeId=3, callId=70867}, readOnlyProperties = false, entryBrokerName = 'ID:AMT915-1055-1127393936629-0:0' , entryClusterName = 'default' , consumerNos = null, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'null' , messageConsumed = false, transientConsumed = false, sequenceNumber = 19, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = null, jmsMessageIdentity = null, producerKey = ID:AMT915-1611-1127395790823-44: } ActiveMQObjectMessage{ object = {destAddress=919811771123, userDataHeader=[B@15fb38, sourceAddress=111, charset=US-ASCII, userDataBinary=[B@120540c} }\njavax.jms.JMSException: Failed to broker message: ID:AMT915-1611-1127395790823-44:19 in container: org.postgresql.util.PSQLException: Backend start-up failed: FATAL: connection limit exceeded for non-superusers.\n\tat org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)\n\tat org.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:74)\n\tat org.activemq.store.vm.VMTransactionStore.addMessage(VMTransactionStore.java:230)\n\tat org.activemq.store.vm.VMTransactionStore$1.addMessage(VMTransactionStore.java:118)\n\tat org.activemq.store.cache.CacheMessageStore.addMessage(CacheMessageStore.java:51)\n\tat org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.enqueue(DurableQueueBoundedMessageContainer.java:218)\n\tat org.activemq.service.boundedvm.DurableQueueBoundedMessageManager.sendMessage(DurableQueueBoundedMessageManager.java:302)\n\tat org.activemq.broker.impl.DefaultBroker.doMessageSend(DefaultBroker.java:566)\n\tat org.activemq.broker.impl.DefaultBroker.sendMessage(DefaultBroker.java:305)\n\tat org.activemq.broker.impl.BrokerContainerImpl.sendMessage(BrokerContainerImpl.java:462)\n\tat org.activemq.broker.impl.BrokerConnectorImpl.sendMessage(BrokerConnectorImpl.java:272)\n\tat org.activemq.broker.impl.BrokerClientImpl.consumeActiveMQMessage(BrokerClientImpl.java:722)\n\tat org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:323)\n\tat org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)\n\tat org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)\n\tat org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)\n\tat java.lang.Thread.run(Thread.java:595)\nCaused by: org.postgresql.util.PSQLException: Backend start-up failed: FATAL: connection limit exceeded for non-superusers.\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.readStartupMessages(ConnectionFactoryImpl.java:443)\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:98)\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:65)\n\tat org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:117)\n\tat org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:30)\n\tat org.postgresql.jdbc3.Jdbc3Connection.<init>(Jdbc3Connection.java:24)\n\tat org.postgresql.Driver.connect(Driver.java:235)\n\tat org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)\n\tat org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)\n\tat org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)\n\tat org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)\n\tat org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)\n\tat org.activemq.store.jdbc.JDBCPersistenceAdapter.getConnection(JDBCPersistenceAdapter.java:312)\n\tat org.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:71)\n\t... 15 more\n2005-09-22 19:01:51,656 [ocalport=61616]] WARN  BrokerClientImpl               - caught exception consuming packet: TRANSACTION_INFO: id = 283 TransactionInfo{ transactionId = 'ID:AMT915-1611-1127395790823-30:9' , type = 103 }\njavax.jms.JMSException\n\tat org.activemq.broker.impl.DefaultBroker.commitTransaction(DefaultBroker.java:352)\n\tat org.activemq.broker.impl.BrokerContainerImpl.commitTransaction(BrokerContainerImpl.java:449)\n\tat org.activemq.broker.impl.BrokerConnectorImpl.commitTransaction(BrokerConnectorImpl.java:261)\n\tat org.activemq.broker.impl.BrokerClientImpl.consumeTransactionInfo(BrokerClientImpl.java:751)\n\tat org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:340)\n\tat org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)\n\tat org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)\n\tat org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)\n\tat java.lang.Thread.run(Thread.java:595)\nCaused by: javax.transaction.xa.XAException\n\tat org.activemq.store.vm.VMTransactionStore$Tx.commit(VMTransactionStore.java:100)\n\tat org.activemq.store.vm.VMTransactionStore.commit(VMTransactionStore.java:172)\n\tat org.activemq.service.impl.LocalTransactionCommand.commit(LocalTransactionCommand.java:66)\n\tat org.activemq.broker.impl.DefaultBroker.commitTransaction(DefaultBroker.java:348)\n\t... 8 more\nCaused by: javax.jms.JMSException: Failed to broker message: ID:AMT915-1611-1127395790823-47:9 in container: org.postgresql.util.PSQLException: Backend start-up failed: FATAL: connection limit exceeded for non-superusers.\n\tat org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)\n\tat org.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:151)\n\tat org.activemq.store.vm.VMTransactionStore$4.run(VMTransactionStore.java:249)\n\tat org.activemq.store.vm.VMTransactionStore$Tx.commit(VMTransactionStore.java:97)\n\t... 11 more\nCaused by: org.postgresql.util.PSQLException: Backend start-up failed: FATAL: connection limit exceeded for non-superusers.\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.readStartupMessages(ConnectionFactoryImpl.java:443)\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:98)\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:65)\n\tat org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:117)\n\tat org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:30)\n\tat org.postgresql.jdbc3.Jdbc3Connection.<init>(Jdbc3Connection.java:24)\n\tat org.postgresql.Driver.connect(Driver.java:235)\n\tat org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)\n\tat org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)\n\tat org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)\n\tat org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)\n\tat org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)\n\tat org.activemq.store.jdbc.JDBCPersistenceAdapter.getConnection(JDBCPersistenceAdapter.java:312)\n\tat org.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:148)\n\t... 13 more\n2005-09-22 19:01:51,765 [ocalport=61616]] WARN  BrokerClientImpl               - caught exception consuming packet: TRANSACTION_INFO: id = 286 TransactionInfo{ transactionId = 'ID:AMT915-1611-1127395790823-24:9' , type = 103 }\njavax.jms.JMSException\n\tat org.activemq.broker.impl.DefaultBroker.commitTransaction(DefaultBroker.java:352)\n\tat org.activemq.broker.impl.BrokerContainerImpl.commitTransaction(BrokerContainerImpl.java:449)\n\tat org.activemq.broker.impl.BrokerConnectorImpl.commitTransaction(BrokerConnectorImpl.java:261)\n\tat org.activemq.broker.impl.BrokerClientImpl.consumeTransactionInfo(BrokerClientImpl.java:751)\n\tat org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:340)\n\tat org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)\n\tat org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)\n\tat org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)\n\tat java.lang.Thread.run(Thread.java:595)\nCaused by: javax.transaction.xa.XAException\n\tat org.activemq.store.vm.VMTransactionStore$Tx.commit(VMTransactionStore.java:100)\n\tat org.activemq.store.vm.VMTransactionStore.commit(VMTransactionStore.java:172)\n\tat org.activemq.service.impl.LocalTransactionCommand.commit(LocalTransactionCommand.java:66)\n\tat org.activemq.broker.impl.DefaultBroker.commitTransaction(DefaultBroker.java:348)\n\t... 8 more\nCaused by: javax.jms.JMSException: Failed to broker message: ID:AMT915-1611-1127395790823-50:9 in container: org.postgresql.util.PSQLException: Backend start-up failed: FATAL: connection limit exceeded for non-superusers.\n\tat org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)\n\tat org.activemq.store.jdbc.JDBCMessageStore.getMessageSequenceId(JDBCMessageStore.java:134)\n\tat org.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:143)\n\tat org.activemq.store.vm.VMTransactionStore$4.run(VMTransactionStore.java:249)\n\tat org.activemq.store.vm.VMTransactionStore$Tx.commit(VMTransactionStore.java:97)\n\t... 11 more\nCaused by: org.postgresql.util.PSQLException: Backend start-up failed: FATAL: connection limit exceeded for non-superusers.\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.readStartupMessages(ConnectionFactoryImpl.java:443)\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:98)\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:65)\n\tat org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:117)\n\tat org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:30)\n\tat org.postgresql.jdbc3.Jdbc3Connection.<init>(Jdbc3Connection.java:24)\n\tat org.postgresql.Driver.connect(Driver.java:235)\n\tat org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)\n\tat org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)\n\tat org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)\n\tat org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)\n\tat org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)\n\tat org.activemq.store.jdbc.JDBCPersistenceAdapter.getConnection(JDBCPersistenceAdapter.java:312)\n\tat org.activemq.store.jdbc.JDBCMessageStore.getMessageSequenceId(JDBCMessageStore.java:127)\n\t... 14 more\n\nHere's the activemq config file:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE beans PUBLIC  \"-//ACTIVEMQ//DTD//EN\" \"http://activemq.org/dtd/activemq.dtd\">\n<beans>\n  \n  <!-- ==================================================================== -->\n  <!-- ActiveMQ Broker Configuration -->\n  <!-- ==================================================================== -->\n  <broker>\n    <connector>\n      <tcpServerTransport uri=\"tcp://localhost:61616\" backlog=\"1000\" maxOutstandingMessages=\"50\"/>\n    </connector>\n\n    <persistence>\n      <cachePersistence>\n          <jdbcPersistence dataSourceRef=\"postgres-ds\"/>\n      </cachePersistence>\n    </persistence>\n\n\t<!-- Approximately one day -->\n\t<redeliveryPolicy maximumRetryCount=\"100\" backOffMode=\"true\" backOffIncreaseRate=\"1.1\" initialRedeliveryTimeout=\"1000\"/>\n\n  </broker>\n\n  <!-- ==================================================================== -->\n  <!-- JDBC DataSource Configurations -->\n  <!-- ==================================================================== -->\n  <bean id=\"postgres-ds\"\n    class=\"org.apache.commons.dbcp.BasicDataSource\"\n    destroy-method=\"close\">\n    <property name=\"driverClassName\">\n      <value>org.postgresql.Driver</value>\n    </property>\n    <property name=\"url\">\n      <value>jdbc:postgresql://localhost:5432/activemq</value>\n    </property>\n    <property name=\"username\">\n      <value>username</value>\n    </property>\n    <property name=\"password\">\n      <value>password</value>\n    </property>\n    <property name=\"maxActive\">\n      <value>20</value>\n    </property>\n    <property name=\"maxIdle\">\n      <value>10</value>\n    </property>\n    <property name=\"maxWait\">\n      <value>120000</value>\n    </property>\n    <property name=\"testWhileIdle\">\n      <value>true</value>\n    </property>\n    <property name=\"validationQuery\">\n      <value>select 1</value>\n    </property>\n\n    <property name=\"poolPreparedStatements\">\n      <value>true</value>\n    </property>\n  </bean>\n\n</beans>\n\n\nIn case it might be relevant, I post JMS object messages concurrently from some Tomcat HTTP processor threads with 100 concurrent users and at the same time I have a message driven POJO consuming messages from the same persistent queue, in the same tomcat, in a different Tomcat context. Both use the same JMS connection factory configuration:\n\n  <Resource name=\"jms/MessagingGatewayJms\" auth=\"Container\"\n\ttype=\"org.activemq.ActiveMQConnectionFactory\"\n\tdescription=\"bla bla bla\"\n        factory=\"org.activemq.jndi.JNDIReferenceFactory\"\n\tbrokerURL=\"reliable://tcp://localhost:61616\"\n\tuseAsyncSend=\"false\"/> \n\n"
    ],
    [
        "AMQ-466",
        "AMQ-457",
        "The ActiveMQ Channel between two AMQ Server Cann't resume when network is after interrupted. The ActiveMQ networkchannel cann't resume when network is interrupt and rescume.",
        "The ActiveMQ  Channel between two AMQ Server Cann't  resume when network is after interrupted. If physics network is interrupted and resumed ,the two server channels cann't resume."
    ],
    [
        "AMQ-646",
        "AMQ-587",
        "Receiver hangs after receiving about 1000 messages I'm using ActiveMQ whith Jencks JCA container. After receiving about 1000 messages, my listener stops receiving any messages. If I restart client application, again about 1000 messages are received. It only happens inside Jencks container. If I'm using my own listener, everything works fine. Everything was working fine on ActiveMQ 3.2",
        "exception from broker while creating temporary topics Sometimes when creating a temporary topic I get:\n\nException in thread \"tcp:///127.0.0.1:39442\" java.lang.ClassCastException: org.apache.activemq.command.ActiveMQTempTopic\n        at org.apache.activemq.openwire.v1.DestinationInfoMarshaller.unmarshal(DestinationInfoMarshaller.java:67)\n        at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:214)\n        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)\n        at java.lang.Thread.run(Thread.java:595)\n\nThis only seems to happen if I try to create a lot of temp topics in a lot of different threads at the same time."
    ],
    [
        "AMQ-678",
        "AMQ-365",
        "MessageCleanup fails with mysql 4.1.x When ActiveMQ does a message cleanup using mysql-4.1 for jdbc persistence an error occurs.  ActiveMQ complains that the connection is already closed.  The nested exception however is an EOFException.  The exception is thrown by DefaultJDBCAdapter.doDeleteOldMessages(DefaultJDBCAdapter.java:544).  I poked around I found that the sql statement it produces causes mysql to crash.  It even causes mysqld to crash when entered in the mysql client console, so this is not a Connector/J issue.  Here is the statement\nDELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<1144326387433) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)\nIt can be found in Statements.java:220.\n\nI have tested this under mysql 4.1.12, 4.1.13 & 5.0.18.  The exceptions were only thrown in mysql 4.1.  5.0 behaved as would be expected.\n\nPossible solutions would be : \n - rewrite the delete statement so that it doesn't kill mysqld : \n    - I had a quick look into rewriting the statement but I haven't found how\n    - change the current delete into a select id from ... (this works) and delete records 1 by 1 using the resultSet ( which really sucks when there are lots of messages to be deleted )\n - not use mysql-4.1",
        "MySQL < 4.1 isn't supported because SQL for old messages uses subselects store.jdbc.adapter.getFindOldMessagesStatment()\nstore.jdbc.adapter.getDeleteOldMessagesStatment()\n\nBoth of these use subselects, which quite a few databases (including MySQL prior to version 4.1) don't support."
    ],
    [
        "AMQ-714",
        "AMQ-713",
        "Wildcard support for policy entries produces unexpected results When you define a policy Entry using a wildcard (eg. FOO.>) in the xml configuration it is not applied as expected.\n\nSpecifically I was attempting to use a lastImageSubscriptionRecoveryPolicy on all subtopics of FOO.>\n\nIf I publish three messages to each of FOO.a, FOO.b and FOO.c and then setup a consumer (retroactive = true) to each of the topics FOO.a, FOO.b and FOO.c I receive three copies of the last message sent to any of the topics  In this case the third message sent to FOO.c.\n\nExpected behaviour would be to receive the last message from each topic that is message three from FOO.a, FOO.b and FOO.c\n\nMore troubling is if I setup a new session with a consumer only to FOO.a and FOO.b I receive two copied of the third message sent to FOO.c.  Even though this session is not subscribed to FOO.c, presumably this is because the policy is only keeping the last message that matches the destination and returning it as the last image, regardless of if the topic matches the subscription.\n\nWith explicit policy entries for each topic (FOO.a, FOO.b) the broker returns the correct messages, so I believe the problem is with wildcard handling.  I need wildcard support here because I do not know my topic names upfront.  I would think that this would be a common scenario (like setting a last image recovery policy on all stock quotes Stock.> )",
        "possible bug with LastImageRecoveryPolicy investigate possible bug with LastImageRecoveryPolicy .  A unit test for this would also help. \n\nhttp://www.nabble.com/Special-Topic-Queue...-t1558344.html"
    ],
    [
        "AMQ-721",
        "AMQ-647",
        "Openwire client hangs after receiving 999 messages Openwire client hangs after receiving 999 messages\nchanging Session.Prefetch postpone the  problem...\n\nCurrent code is :\n   public class Session : ISession\n    {\n       :\n       :\n        private int prefetchSize = 1000;\n\nthis block at message #999\n\nchanging         private int prefetchSize = 2000 ==>  blocks at message #1999\n",
        "Openwire client hangs after receiving some hundred messages I'm currently testing the openwire .NET JMS implementation to communicate with a activemq java broker ; the aim of this test is to evaluate the possibilty to deploy the solution in live environment.\n\nMy test platform is quite simple :\n\n* A java JMS publisher publishes 100messages / 1s on a test topic\n* A java consumer is listening to this topic\n* A openwire consumer listens to the same topic\n\nAfter a few hundreds messages (about 10-20 seconds of publish), the openwire client hangs and receives no more message. Using the Visual Studio debugger, it appears that the client is waiting on a \"read\" from the socket. The side effect of this is that after a few more seconds, the publisher itself stops to emit messages as if some internal queue becomes full or someting.\n\nI'm fully aware that Openwire is always in a development process but I want to point out that this issue already existed in the previous versions I had tested. This problem prevents using the openwire implementation in a live environment in the current state."
    ],
    [
        "AMQ-738",
        "AMQ-734",
        "Broker does not recognize failed broker upon reconnect After normal shutdown of a broker and bring it back up, the first broker reports this error:\n\n[11:07:15.162] Establishing network connection between from vm://app1-test?network=true to tcp://10.xxx:49995\n[11:07:15.165] Starting a network connection between vm://app1-test#20 and tcp://null:0 has been established.\n[11:07:15.294] Async error occurred: javax.jms.InvalidClientIDException: Broker: app1-test - Client: NC_app2-test_inboundapp1-test already connected\n[11:07:15.294] javax.jms.InvalidClientIDException: Broker: app1-test - Client: NC_app2-test_inboundapp1-test already connected\n[11:07:15.294]  at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:176)\n[11:07:15.294]  at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:69)\n[11:07:15.294]  at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:69)\n[11:07:15.294]  at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:69)\n[11:07:15.294]  at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:82)\n[11:07:15.294]  at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:507)\n[11:07:15.294]  at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:118)\n[11:07:15.294]  at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)\n[11:07:15.294]  at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)\n[11:07:15.294]  at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)\n[11:07:15.294]  at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n[11:07:15.294]  at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)\n[11:07:15.294]  at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)\n[11:07:15.294]  at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n[11:07:15.294]  at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:192)\n[11:07:15.294]  at org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:162)\n[11:07:15.327] Network connection between vm://app1-test#20 and tcp://app2.xxx/10.xxx:49995(app2-test) has been established.\n[11:07:15.347] Unexpected local command: ConnectionError {commandId = 2, responseRequired = false, connectionId = null, exception = javax.jms.InvalidClientIDException: Broker: app1-test - Client: NC_app2-test_inboundapp1-test already connected}\n",
        "Network connections do not reconnect when using static: with failover=true If I pull out RJ45 port from net card ,waiting a time ,then put  RJ45 port net card .Network is resume.Other computer always throw errors and net channel can't work."
    ],
    [
        "AMQ-789",
        "AMQ-768",
        "WireFormatNegotiator could hang a client or server connection if the peer disconnects before sending the wire format info ",
        "Client and Broker hang trying to start a connection Every now and again a client hangs connecting to the broker. The broker is configured with the default activemq.xml. The stack dumps are as follows:\n\nACTIVEMQ_HOME: C:\\Java\\incubator-activemq-4.0\\bin\\..\nLoading message broker from: xbean:activemq.xml\nINFO  BrokerService                  - ActiveMQ 4.0 JMS Message Broker (localhos\nt) is starting\nINFO  BrokerService                  - For help or more information please see:\nhttp://incubator.apache.org/activemq/\nINFO  ManagementContext              - JMX consoles can connect to service:jmx:r\nmi:///jndi/rmi://localhost:1099/jmxrmi\nINFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby\n_embedded_jdbc_driver]\nINFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Jou\nrnal: using 5 x 20.0 Megs at: C:\\Java\\incubator-activemq-4.0\\activemq-data\\journ\nal\nINFO  JournalPersistenceAdapter      - Journal Recovered: 1 message(s) in transa\nctions recovered.\nINFO  TransportServerThreadSupport   - Listening for connections at: tcp://SIM-J\namesM:61616\nWARN  MulticastDiscoveryAgent        - brokerName not set\nINFO  TransportConnector             - Connector default Started\nINFO  TransportServerThreadSupport   - Listening for connections at: tcp://SIM-J\namesM:61613?wireFormat=stomp\nINFO  TransportConnector             - Connector stomp Started\nINFO  NetworkConnector               - Network Connector default Started\nINFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, I\nD:SIM-JamesM-2205-1149180591980-1:0) started\nWARN  ManagedTransportConnection     - Failed to unregister mbean: org.apache.ac\ntivemq:BrokerName=localhost,Type=Connection,ConnectorName=default,Connection=9\n\nthe stack dump is:\n\n\"main\" prio=6 tid=0x000379d0 nid=0x93d0 in Object.wait() [0x0007e000..0x0007fc40\n]\n       at java.lang.Object.wait(Native Method)\n       - waiting on <0x02b66278> (a edu.emory.mathcs.backport.java.util.concurr\nent.CountDownLatch)\n       at java.lang.Object.wait(Object.java:474)\n       at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(C\nountDownLatch.java:179)\n       - locked <0x02b66278> (a edu.emory.mathcs.backport.java.util.concurrent.\nCountDownLatch)\n       at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatN\negotiator.java:73)\n       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.ja\nva:44)\n       - locked <0x02b64098> (a java.lang.Object)\n       at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(Respons\neCorrelator.java:68)\n       at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorr\nelator.java:73)\n       at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnect\nion.java:1131)\n       at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(Activ\neMQConnection.java:1219)\n       - locked <0x02b602c0> (a org.apache.activemq.ActiveMQConnection)\n       at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:\n435)"
    ],
    [
        "AMQ-844",
        "AMQ-724",
        "tcp connections hang This problem readily occurs running the standard examples:\nant -Durl=tcp://10.10.3.73:61616?trace=true -Dmax=100 consumer  \nant -Durl=tcp://10.10.3.73:61616 -Dmax=10 producer \n...run the producer side for 2-5 iterations before is just hangs. Once it's in that state, all subsequent client connections hang (i.e. control-C out of either consumer or producer and restart the connection: hangs).\n\nUpping and lowering soTimeout and other connection parameters has so far proven fruitless. Switching JVMs, up'ing from 4.0.1 to 4.0.2-SNAPSHOT (on both client and server), and including/excluding \"-Ddurable=true\" made no difference (all orignal test attempts were with durable messages but in the end, not incluing that had no effect on whether or not the clients eventually hang). The config on the server looks like this:\n\n<beans xmlns=\"http://activemq.org/config/1.0\">\n  <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\"/>\n  <broker useJmx=\"true\">\n    <persistenceAdapter>\n      <journaledJDBC journalLogFiles=\"5\" dataDirectory=\"../activemq-data\" \n          dataSource=\"#postgres-ds\"/>\n    </persistenceAdapter>\n    <transportConnectors>\n       <transportConnector name=\"default\" uri=\"tcp://10.10.3.73:61616?trace=true\" />\n    </transportConnectors>\n  </broker>\n  <bean id=\"postgres-ds\" class=\"org.postgresql.ds.PGPoolingDataSource\">\n    <property name=\"serverName\" value=\"localhost\"/>\n    <property name=\"databaseName\" value=\"activemq\"/>\n    <property name=\"portNumber\" value=\"0\"/>\n    <property name=\"user\" value=\"activemq\"/>\n    <property name=\"password\" value=\"activemq\"/>\n    <property name=\"dataSourceName\" value=\"postgres\"/>\n    <property name=\"initialConnections\" value=\"5\"/>\n    <property name=\"maxConnections\" value=\"50\"/>\n  </bean>\n</beans> \n\nFWIW, this doesn't happen when running the same tests on a laptop (MacOS tiger) with clients on loopback. Bug is \"Minor\" but (since is't only exhibited by a small group of us)without being able validate the client connections, this is a not show-stopper for production use of activemq.",
        "Stomp client is not removed from the broker on client disconnect If Stomp client crashes (or disconnects unexpectedly) when there are unconsumed messages in the broker, the subscriptions are not removed from the broker and some phantom consumer is still consuming messages. If you connect other client, it receives only half messages (other half messages goes to that phantom consumer still left afrter client disconnect). There are no error logs in activemq logs. We are using stomp client, whith client acknowledge mode, so on broker restart, all messages are delivered properly. You can also see in jmx console, that subscription still exists whithout any connection left."
    ],
    [
        "AMQ-901",
        "AMQ-899",
        "Error executing build on activemq-core. Below is the exception thrown.\n\n--- Nested Exception ---\ncom.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/D:/l\nogicblaze/working-source/activemq/activemq-core/src/main/java/org/apache/activem\nq/network/jms/JmsConnector.java\n        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)\n        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)\n\nThis exception is due to the version of maven-xbean-plugin used.",
        "mvn test fails with \"com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:.../activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java >svn co https://svn.apache.org/repos/asf/incubator/activemq/trunk\n....\nA    trunk/README.txt\n U   trunk\nChecked out revision 437779.\nfateev@fateev:/workplace/fateev/activemq-head> ls\ntrunk/\nfateev@fateev:/workplace/fateev/activemq-head> cd trunk/activemq-core\nfateev@fateev:/workplace/fateev/activemq-head/trunk/activemq-core> mvn test\n[INFO] Scanning for projects...\n[INFO] ----------------------------------------------------------------------------\n[INFO] Building ActiveMQ :: Core\n[INFO]    task-segment: [test]\n[INFO] ----------------------------------------------------------------------------\n[INFO] artifact org.apache.maven.plugins:maven-resources-plugin: checking for updates from apache-snapshots\n[INFO] snapshot org.apache.maven.plugins:maven-resources-plugin:2.3-SNAPSHOT: checking for updates from apache-snapshots\n...\n...\n...\nDownloading: http://people.apache.org/maven-snapshot-repository/org/apache/activemq/maven-gram-plugin/4.1-incubator-SNAPSHOT/maven-gram-plugin-4.1-incubator-20060803.174437-6.jar\n6K downloaded\n[WARNING] While downloading javacc:javacc:3.2\n  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.\n\n\n[INFO] [javacc:javacc {execution: default}]\nJava Compiler Compiler Version 3.2 (Parser Generator)\n(type \"javacc\" with no arguments for help)\nReading from file /workplace/fateev/activemq-head/trunk/activemq-core/src/main/grammar/SelectorParser.jj . . .\nNote: UNICODE_INPUT option is specified. Please make sure you create the parser/lexer usig a Reader with the correct character encoding.\nFile \"TokenMgrError.java\" does not exist.  Will create one.\nFile \"ParseException.java\" does not exist.  Will create one.\nFile \"Token.java\" does not exist.  Will create one.\nFile \"SimpleCharStream.java\" does not exist.  Will create one.\nParser generated successfully.\nDownloading: http://people.apache.org/maven-snapshot-repository/qdox/qdox/1.6/qdox-1.6.pom\n[WARNING] Unable to get resource from repository apache-snapshots (http://people.apache.org/maven-snapshot-repository)\nDownloading: http://repository.codehaus.org/qdox/qdox/1.6/qdox-1.6.pom\n[WARNING] Unable to get resource from repository codehaus (http://repository.codehaus.org)\nDownloading: http://dse.amazon.com:8081/proximity/repository/qdox/qdox/1.6/qdox-1.6.pom\n4K downloaded\n[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from apache-snapshots\n[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from codehaus-snapshots\n[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from apache.snapshots\nDownloading: http://people.apache.org/maven-snapshot-repository/org/apache/xbean/xbean-spring/2.6-SNAPSHOT/xbean-spring-2.6-20060826.135020-8.pom\n3K downloaded\nDownloading: http://people.apache.org/maven-snapshot-repository/org/apache/xbean/xbean-spring/2.6-SNAPSHOT/xbean-spring-2.6-20060826.135020-8.jar\n143K downloaded\nDownloading: http://people.apache.org/maven-snapshot-repository/qdox/qdox/1.6/qdox-1.6.jar\n[WARNING] Unable to get resource from repository apache-snapshots (http://people.apache.org/maven-snapshot-repository)\nDownloading: http://repository.codehaus.org/qdox/qdox/1.6/qdox-1.6.jar\n[WARNING] Unable to get resource from repository codehaus (http://repository.codehaus.org)\nDownloading: http://dse.amazon.com:8081/proximity/repository/qdox/qdox/1.6/qdox-1.6.jar\n89K downloaded\n[INFO] [xbean:mapping {execution: default}]\n[INFO] ------------------------------------------------------------------------\n[ERROR] FATAL ERROR\n[INFO] ------------------------------------------------------------------------\n[INFO] com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java\n[INFO] ------------------------------------------------------------------------\n[INFO] Trace\ncom.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java\n        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:185)\n        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)\n        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)\n        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)\n        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)\nCaused by: com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java\n        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)\n        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)\n        at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:592)\n        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)\n        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)\n        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)\n        at org.apache.xbean.spring.generator.QdoxMappingLoader.loadNamespaces(QdoxMappingLoader.java:96)\n        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:153)\n        ... 18 more\n--- Nested Exception ---\ncom.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java\n        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)\n        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)\n        at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:592)\n        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)\n        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)\n        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)\n        at org.apache.xbean.spring.generator.QdoxMappingLoader.loadNamespaces(QdoxMappingLoader.java:96)\n        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:153)\n        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)\n        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)\n        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)\n        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)\n        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 31 seconds\n[INFO] Finished at: Mon Aug 28 12:00:40 PDT 2006\n[INFO] Final Memory: 9M/17M\n[INFO] ------------------------------------------------------------------------\nfateev@fateev:/workplace/fateev/activemq-head/trunk/activemq-core>\n"
    ],
    [
        "AMQ-1050",
        "AMQ-1048",
        "browse -QTopic=* does not seem to return anything... I think there's something funny going on in the regex stuff. I tried from the SimpleConsole typing\n\n  query -QTopic=*\n\nand I get nothing. \n\n  query \n\nreturns tons of stuff though.\n\nI wonder if it might be simpler to have specific arguments for topic and queues? \n\nquery -topic=*\nqueyr -queue=*\n\nto avoid the complex regex of ObjectName etc?",
        "Some tools from Command line not works properly Some command line not works properly, just return de prompt \nExample: \nquery -QQueue=* \n\nquery --objname Type=Connect,BrokerName=localhost -xQNetworkConnector=* \n\netc..."
    ],
    [
        "AMQ-1088",
        "AMQ-1054",
        "TransactionContext class cast exception The class org.apache.activemq.TransactionContext throws a class cast exception on the recover(int flag) method on the line (or at least it does with jdk1.4) return (XATransactionId[]) receipt.getData();\n \nIt cannot cast the list of DataStructure[] to XATransactionId[]. I just unpacked it locally as a fix (as seen below) and it worked fine. Have not checked it in though in case others with more experience on this one disagree.\n\nDataStructure[] x = receipt.getData(); \n \nif (x.length > 0)\n{\n      XATransactionId xaId[] = new XATransactionId[x.length];\n      int count = 0;\n      for (count =0; count < x.length; count++)\n                    xaId[count] = (XATransactionId)x[count]; \n                    \n      return xaId;\n}\nelse\n      return null;\n",
        "XA recover fails for 4.0.1 XAResource.recover seems to fail for 4.x of ActiveMQ:\n\nERROR IN RECOVERY [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 \n[Lorg.apache.activemq.command.DataStructure; [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 \nat: org.apache.activemq.TransactionContext.recover(TransactionContext.java:508) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 \nat: com.atomikos.datasource.xa.XATransactionalResource.recover(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 \nat: com.atomikos.datasource.xa.XATransactionalResource.endRecovery(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 \nat: com.atomikos.icatch.imp.TransactionServiceImp.recover(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 \nat: com.atomikos.datasource.xa.XATransactionalResource.setRecoveryService(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 \nat: com.atomikos.icatch.system.Configuration.addResource(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 \nat: com.atomikos.jms.QueueConnectionFactoryBean.checkSetup(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 \nat: com.atomikos.jms.QueueConnectionFactoryBean.createQueueConnection(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 \nat: com.atomikos.jms.QueueConnectionFactoryBean.createConnection(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 \n\nAlso see http://www.atomikos-support.com/forums/viewtopic.php?t=351 (where I borrowed this stack trace from). We have seen similar things in other applications that tried to use ActiveMQ. I think this is a class cast error in ActiveMQ...\n\nWith 3.1 there is no problem. "
    ],
    [
        "AMQ-1134",
        "AMQ-1067",
        "stomp connections in the broker don't get cleared up if the socket dies it looks like there's a bug causing the connection to keep around ",
        "Stomp consumer not removed if client does not send disconnect message. Run \"clearQueue.pl TEST.QUEUE\"\nCheck in jconsole. The client will still be marked as active even when the script is killed. This prevents any meaningful use of queues if any consumption is done via stomp."
    ],
    [
        "AMQ-1156",
        "AMQ-1137",
        "option \"wireFormat.tcpNoDelayEnabled=true\" is ignored *A. Description*\nSetting the wireFormat.tcpNoDelayEnabled flag to true in connection uri's (for example _\"tcp://localhost:61616?wireFormat.tcpNoDelayEnabled\"_) has no effect:\nThe sockets created in ActiveMQ do not have the TcpNoDelay flag set to true.\nYou can verify this for example in the following way: insert the line _System.err.println(sock.getTcpNoDelay());_ at the end of the method\n_org.apache.activemq.transport.tcp.TcpTransport.initialiseSocket_.\nAlso you can try my test at http://www.nabble.com/High-latency-for-small-messages-problem-t3159901.html which makes latency appear if Nagle's algorithm is not disabled.\nThis affects versions 4.0, 4.1.0, and 4.2.0 latest snapshot. I guess 4.0.2 is affected too.\n\n\n\n*B. Reason*\nAfter looking at the source code to understand how the options are set, i saw that in the method org.apache.activemq.transport.tcp.TcpTransportFactory.compositeConfigure the following line appears:\n_Map socketOptions = IntrospectionSupport.extractProperties(options, \"socket.\")_; \n\nand also that the method to set the TcpNoDelay option in class _org.apache.activemq.transport.tcp.TcpTransport_ is called _setTcpNoDelay_ and not _setTcpNoDelayEnabled_\n\nTherefore, I tried to write _\"socket.tcpNoDelay=true\"_ instead of _\"wireFormat.tcpNoDelayEnabled=true\"_ and it *worked!* This is a *workaround*.\n\nBut, _\"wireFormat.tcpNoDelayEnabled\"_ option is not refused (as _\"wireFormat.tcpNoDelayTypoEnabled\"_ would be). The option _\"tcpNoDelay=true\"_ is not refused either, but DOES NOT work either.\n\n\n\n*C. Fix*\nSo, please, for the sake of the poor soul who's next going to try to disable Nagle's algorithm without noticing any effect, and will start looking for the problem elsewhere (and for the sake of consistency also):\n-Either change the documentation (http://www.activemq.org/site/tcp-transport-reference.html and http://www.activemq.org/site/configuring-wire-formats.html) to say that one should use the _socket.tcpNoDelay_ option, or\n-Change the code to obey the documentation (and make it refuse old options like just _\"tcpNoDelay\"_ who have no effect).\n\nPersonally I would change the documentation ASAP so that people know about the _\"socket.tcpNoDelay=true\"_ workaround until next version, and then change the code to recognize the _\"wireFormat.tcpNoDelayTypoEnabled\"_ option. I'd like to point out that the own ActiveMQ test cases use _\"wireFormat.tcpNoDelayTypoEnabled\"_ .\n\n\n\n*D. Related issues*\nThis is related to a previous post of mine: http://www.nabble.com/High-latency-for-small-messages-problem-t3159901.html\nDoing quick synchronized sends showed a 39ms latency if the broker is running in Linux, and a 200ms latency if the broker is in Windows (by the way, if someone knows the bottom reason for this exact latency times, please tell me). Putting the _\"wireFormat.tcpNoDelayTypoEnabled\"_ to true in order to disable Nagle's algorithm had no effect (because ActiveMQ does not recognize it).\n\nVery probably this is also related to issues https://issues.apache.org/activemq/browse/AMQ-1143 and https://issues.apache.org/activemq/browse/AMQ-1137 (in this one probably Helmutt tried to set the wireFormat.tcpNoDelayTypoEnabled without success because of this).",
        "Transactional, non persistent queing very slow under Linux h2. USE CASE\n# Take 4.1.0 Release from http://people.apache.org/repo/m2-incubating-repository/org/apache/activemq/apache-activemq/4.1.0-incubator/apache-activemq-4.1.0-incubator.zip and unzip on a Linux box (SuSE 10.1, Kernel 2.6.16 with 2GB RAM and  Xeon(TM) CPU 2.80GHz\n# Edit {{conf/activemq.xml}} and disable ssl and stomp transport\n# Start broker: {{apache-activemq-4.1.0-incubator/bin> java -jar run.jar}}\n# Edit {{example/build.xml}} and set max=1000 (send 1000 messages to queue) and *transacted=true*\n# Run producer: {{ant producer}}\n\nh2. Results\n\n{code:title=broker logfile}\nACTIVEMQ_HOME: /home/janknecht/tmp/apache-activemq-4.1.0-incubator\nLoading message broker from: xbean:activemq.xml\nINFO  BrokerService                  - ActiveMQ 4.1.0-incubator JMS Message Broker (localhost) is starting\nINFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/\nINFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi\nINFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]\nINFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker\nINFO  DefaultDatabaseLocker          - Becoming the master on dataSource: org.apache.derby.jdbc.EmbeddedDataSource@14627a\nINFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: /home/janknecht/tmp/apache-activemq-4.1.0-incubator/activemq-data/journal\nINFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.\nINFO  TransportServerThreadSupport   - Listening for connections at: tcp://acxlin.wu.ssn:61616\nINFO  TransportConnector             - Connector openwire Started\nINFO  NetworkConnector               - Network Connector default-nc Started\nINFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:acxlin.wu.ssn-60609-1169619821670-1:0) started\n{code} \n\n\n{code:title=producer output}\nproducer:\n     [echo] Running producer against server at $url = tcp://localhost:61616 for subject $subject = TEST.FOO\n     [java] Connecting to URL: tcp://localhost:61616\n     [java] Publishing a Message with size 1000 to queue: TEST.FOO\n     [java] Using non-persistent messages\n     [java] Sleeping between publish 0 ms\n     [java] Sending message: Message: 0 sent at: Wed Jan 24 07:28:14 CET 2007  ...\n     [java] Sending message: Message: 1 sent at: Wed Jan 24 07:28:14 CET 2007  ...\n     [java] Sending message: Message: 2 sent at: Wed Jan 24 07:28:14 CET 2007  ...\n     [java] Sending message: Message: 3 sent at: Wed Jan 24 07:28:15 CET 2007  ...\n     [java] Sending message: Message: 4 sent at: Wed Jan 24 07:28:15 CET 2007  ...\n     [java] Sending message: Message: 5 sent at: Wed Jan 24 07:28:15 CET 2007  ...\n...\n     [java] Sending message: Message: 998 sent at: Wed Jan 24 07:28:55 CET 2007...\n     [java] Sending message: Message: 999 sent at: Wed Jan 24 07:28:55 CET 2007...\n     [java] Done.\n     [java] connection {\n     [java]   session {\n     [java]     messageCount{ count: 1000 unit: count startTime: 1169620094893 lastSampleTime: 1169620135606 description: Number of messages exchanged }\n     [java]     messageRateTime{ count: 1000 maxTime: 126 minTime: 4 totalTime: 40688 averageTime: 40.688 averageTimeExMinMax: 40.63927855711423 averagePerSecond: 24.57727093983484 averagePerSecondExMinMax: 24.606736032348735 unit: millis startTime: 1169620094893 lastSampleTime: 1169620135606 description: Time taken to process a message (thoughtput rate) }\n     [java]     pendingMessageCount{ count: 0 unit: count startTime: 1169620094893 lastSampleTime: 1169620094893 description: Number of pending messages }\n     [java]     expiredMessageCount{ count: 0 unit: count startTime: 1169620094893 lastSampleTime: 1169620094893 description: Number of expired messages }\n     [java]     messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1169620094893 lastSampleTime: 1169620094893 description: Time spent by a message before being delivered }\n     [java]     durableSubscriptionCount{ count: 0 unit: count startTime: 1169620094893 lastSampleTime: 1169620094893 description: The number of durable subscriptions }\n\n     [java]     producers {\n     [java]       producer queue://TEST.FOO {\n     [java]         messageCount{ count: 1000 unit: count startTime: 1169620094918 lastSampleTime: 1169620135606 description: Number of messages processed }\n     [java]         messageRateTime{ count: 1000 maxTime: 126 minTime: 4 totalTime: 40688 averageTime: 40.688 averageTimeExMinMax: 40.63927855711423 averagePerSecond: 24.57727093983484 averagePerSecondExMinMax: 24.606736032348735 unit: millis startTime: 1169620094918 lastSampleTime: 1169620135606 description: Time taken to process a message (thoughtput rate) }\n     [java]         pendingMessageCount{ count: 0 unit: count startTime: 1169620094918 lastSampleTime: 1169620094918 description: Number of pending messages }\n     [java]         messageRateTime{ count: 1000 maxTime: 126 minTime: 4 totalTime: 40688 averageTime: 40.688 averageTimeExMinMax: 40.63927855711423 averagePerSecond: 24.57727093983484 averagePerSecondExMinMax: 24.606736032348735 unit: millis startTime: 1169620094918 lastSampleTime: 1169620135606 description: Time taken to process a message (thoughtput rate) }\n     [java]         expiredMessageCount{ count: 0 unit: count startTime: 1169620094918 lastSampleTime: 1169620094918 description: Number of expired messages }\n     [java]         messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1169620094918 lastSampleTime: 1169620094918 description: Time spent by a message before being delivered }\n     [java]       }\n     [java]     }\n     [java]     consumers {\n     [java]     }\n     [java]   }\n     [java] }\n{code} \n\nAs you can see very bad performace, ot took about 40s to send this 1000 transacted queue messages :-(\n"
    ],
    [
        "AMQ-1226",
        "AMQ-1201",
        "durable topic messages received in reverse order after consumer restart Setup:\n1 Publisher (single thread)\n1 Subscriber\n1 DurableTopic\n1 Broker (Default configuration)\n\nSteps to reproduce:\n1) Publisher sends MapMessages that include a message number (1, 2, 3, ...)\n\n2) Subscriber receives messages and makes sure the message numbers are in order\n\n3) Stop the subscriber and let some messages accumulate on the broker.  Let's assume the last message received was number 11.\n\n4) Restart the subscriber.\n\n5) First several messages can be in reverse order.  I.E.  16, 15, 14, 13, 12\n\n6) Then messages start coming in order.  I.E.   17, 18, 19, ...\n\nCause:\norg.apache.activemq.broker.region.DurableTopicSubscription.deactivate()\nWhen the consumer stops, the deactivate method moves messages that have been dispatched but not acknowledged from the \"dispatched\" LinkedList to the \"pending\"  PendingMessageCursor (which is backed by a LinkedList).  These messages must be placed at the beginning of the \"pending\" list because the dispatched messages are chronologically before the pending messages already in the list.  The deactivate method iterates over the \"dispatched\" list and adds each message to the beginning of the \"pending\" list one at a time.  This reverses the order of the messages.\n\nIf the messages in question get written to JDBC, the problem can be hidden because the messages get queried in the correct order.\n\nIf the prefetch size is set to 1 the problem does not present because there will only be 1 message in the \"dispatched\" list.\n\nSolution:\nIn the deactivate method, iterate the \"dispatched\" list in reverse order.\n\nPatch against 4.1.1 attached.\n",
        "Durable topic message delivery to restarted consumer results in messages out of order. While testing AMQ 4.2 SNAPSHOT from 3/9, I can create the situation wherein a consumer that was killed and then restarted will get the \"prefetchLimit\" # of messages last, which means they are out of order.\n\nsetup:\n1 Broker\nConsumer on Durable topic, prefetchSize=20\nPublisher publishes to Durable topic\n\nLet some messages flow, then kill off Consumer.  Let a few thousand messages queue up, then restart the consumer.\n\nThe Broker begins redelivery of messages, and then when it gets down to the end of the queue, the very first 20 messages from when the Consumer first went down are delivered.  This means that those messages come out of order.\n"
    ],
    [
        "AMQ-1228",
        "AMQ-895",
        "CLONE -JMS to JMS Bridge never reconnects under remote broker restarts and connections are not closed. \nI'm using ActiveMQ (4.0.1) JMS to JMS Bridge functionality to connect to a  SunMQ JMS Broker (3.6 SP3  (Build 02-A)). I'm using two queues, an input and an output one, with the following configuration:\n\n\n    <jmsBridgeConnectors>\n      <jmsQueueConnector outboundQueueConnectionFactory=\"#REMOTE\">\n      <outboundQueueBridges>\n        <outboundQueueBridge outboundQueueName=\"SUNRECV\"/>\n      </outboundQueueBridges>\n      <inboundQueueBridges>\n        <inboundQueueBridge inboundQueueName=\"SUNSEND\"/>\n      </inboundQueueBridges>\n      </jmsQueueConnector>\n    </jmsBridgeConnectors>\n\n\nThe system works really well until the SunMQ broker needed to be restarted. This is what I found:\n1.-ActiveMQ is not aware of the remote broker shutdown. I waited for a while, but no log on ActiveMQ indicates knowledge about the new situation.\n2.-When I send a message to the output queue SUNRECV, ActiveMQ complains that the producer is closed:\n\n[ERROR][2006/08/25.09:47:12.039][ActiveMQ Session Task]failed to forward message: ActiveMQTextMessage {commandId = 5, responseRequired = false, messageId = ID:trabucco-43457-1156491843149-3:4:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:trabucco-43457-1156491843149-3:4:1:1, destination = queue://SUNRECV, transactionId = null, expiration = 0, timestamp = 1156492032027, arrival = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 2, properties = null, readOnlyProperties = true, readOnlyBody = true, text = 1}([C4064]: Cannot perform operation, producer is closed.)\n\n After this, it is automatically queueing messages without sending them, showing the log:\n\n[DEBUG][2006/08/25.09:47:42.721][RMI TCP Connection(4)-10.95.89.20]No subscriptions registered, will not dispatch message at this time.\n\n Even if SunMQ is started again, ActiveMQ is not detecting the new situation, and continues queueing messages sent to SUNRECV.\n\nPlease, make me know if more information is needed to understand the situation.\n",
        "JMS to JMS Bridge never reconnects under remote broker restarts. I'm using ActiveMQ (4.0.1) JMS to JMS Bridge functionality to connect to a  SunMQ JMS Broker (3.6 SP3  (Build 02-A)). I'm using two queues, an input and an output one, with the following configuration:\n\n\n    <jmsBridgeConnectors>\n      <jmsQueueConnector outboundQueueConnectionFactory=\"#REMOTE\">\n      <outboundQueueBridges>\n        <outboundQueueBridge outboundQueueName=\"SUNRECV\"/>\n      </outboundQueueBridges>\n      <inboundQueueBridges>\n        <inboundQueueBridge inboundQueueName=\"SUNSEND\"/>\n      </inboundQueueBridges>\n      </jmsQueueConnector>\n    </jmsBridgeConnectors>\n\n\nThe system works really well until the SunMQ broker needed to be restarted. This is what I found:\n1.-ActiveMQ is not aware of the remote broker shutdown. I waited for a while, but no log on ActiveMQ indicates knowledge about the new situation.\n2.-When I send a message to the output queue SUNRECV, ActiveMQ complains that the producer is closed:\n\n[ERROR][2006/08/25.09:47:12.039][ActiveMQ Session Task]failed to forward message: ActiveMQTextMessage {commandId = 5, responseRequired = false, messageId = ID:trabucco-43457-1156491843149-3:4:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:trabucco-43457-1156491843149-3:4:1:1, destination = queue://SUNRECV, transactionId = null, expiration = 0, timestamp = 1156492032027, arrival = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 2, properties = null, readOnlyProperties = true, readOnlyBody = true, text = 1}([C4064]: Cannot perform operation, producer is closed.)\n\n After this, it is automatically queueing messages without sending them, showing the log:\n\n[DEBUG][2006/08/25.09:47:42.721][RMI TCP Connection(4)-10.95.89.20]No subscriptions registered, will not dispatch message at this time.\n\n Even if SunMQ is started again, ActiveMQ is not detecting the new situation, and continues queueing messages sent to SUNRECV.\n\nPlease, make me know if more information is needed to understand the situation.\n"
    ],
    [
        "AMQ-1381",
        "AMQ-1330",
        "Client Certificates do not work due to incorrectly overriden method in SslTransport.java The peer certificates never get added to the {{ConnectionInfo}} ({{setTransportContext}})\nsince {{doConsume()}} in {{SslTransport}} has the wrong signature.\n\nThe correct signature is:\n\n{{doConsume(Object command)}}\n\nbut SslTransport defines a method with the following signature:\n\n{{doConsume(Command command)}}\n\nWhich will obviously never get called.\n\nIn its current state, it is impossible for client certificates to work.\n\nSee attached patch for fix. Apply with {{patch -p0 < activemq-clientcert.patch}} or simply change {{Command}} to {{Object}}\nin {{SslTransport.java}}",
        "SslTransport doesn't set the client certificate chain as transportContext org.apache.activemq.transport.tcp.SslTransport is supposed to override the doConsume() method of TransportSupport and set the client certificate chain as transportContext. \n\nHowever the method signature is incorrect - instead of overriding:\n\npublic void doConsume(Object command)\n\nit defines a new method:\n\npublic void doConsume(Command command)\n\nwhich is never called.\n\nSo it is fixed very easily - just change Command to Object in the method signature."
    ],
    [
        "AMQ-1534",
        "AMQ-1013",
        "Unescaped text messages in message detail The new HTTP based queue view is very useful. However it has one really annoying bug that cost me some hours of debugging. Send a TextMessage to the queue containing a typical HTML or XML document such as \n\n<result></result>\n\nThen look at that message in the web browser and look at the message detail to see the text of the message. The text appears to be blank, especially if the message only contains tags and white space as was the case for me. Even if it isn't completely blank, the tags will be missing.\n\nThe problem is that the text of the message is displayed raw and added to the HTML. This could even be a vector for XSS attacks since no escaping is performed.\n\nBefore displaying the text it should be escaped. That is, & should be converted to &amp; and < to &lt;. That should fix the critical problems. \n\n",
        "Web console does not escape message details (/activemq-web-console/message.jsp) The web console does not html-escape the message contents on the /message.jsp page which makes it difficult to see a xml test message."
    ],
    [
        "AMQ-1695",
        "AMQ-1520",
        "activeio-core SNAPSHOT version in 5.0.0 release There is SNAPSHOT version of activeio-core in activemq-parent-5.0.0.pom.\nI have difficulties when using activemq-core 5.0 . Please,  change it to 3.1 version ASAP.\n\n <dependency>\n        <groupId>org.apache.activemq</groupId>\n        <artifactId>activeio-core</artifactId>\n        <version>3.1-SNAPSHOT</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.activemq</groupId>\n        <artifactId>activeio-core</artifactId>\n        <version>3.1-SNAPSHOT</version>\n        <type>test-jar</type>\n</dependency>",
        "release 5.0.0 depends on SNAPSHOT version of activeio (from $HOME/.m2/repository/org/apache/activemq/activemq-parent/5.0.0/activemq-parent-5.0.0.pom)\n\nThe release 5.0.0 of ActiveMQ, as published on Maven Central Repository, depends on activeio version 3.1-SNAPSHOT\n\nThis is probably result of a bug in maven release plugin that allows such obscurity.\n\nIt makes the library difficult to use and is also logically a nonsense. Please fix this in a next release. \nThanks"
    ],
    [
        "AMQ-1695",
        "AMQ-1561",
        "activeio-core SNAPSHOT version in 5.0.0 release There is SNAPSHOT version of activeio-core in activemq-parent-5.0.0.pom.\nI have difficulties when using activemq-core 5.0 . Please,  change it to 3.1 version ASAP.\n\n <dependency>\n        <groupId>org.apache.activemq</groupId>\n        <artifactId>activeio-core</artifactId>\n        <version>3.1-SNAPSHOT</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.activemq</groupId>\n        <artifactId>activeio-core</artifactId>\n        <version>3.1-SNAPSHOT</version>\n        <type>test-jar</type>\n</dependency>",
        "remove activeio snapshot dependency See this thread...\nhttp://www.nabble.com/ActiveMQ-5.0.0-depends-on-SNAPSHOT--tp14986087s2354p15009680.html\n"
    ],
    [
        "AMQ-1743",
        "AMQ-1740",
        "Xtream is not in the binary release of 5.1 The 5.1.0 distribution does not include the xstream jars, which are needed for the new JSON / XML to Java Map translation that is part of the Stomp transport.",
        "ActiveMQ 5.1.0 - Web Console fails while browsing queues through atom or RSS The Web console fails with java.lang.NoClassDefFoundError: com/thoughtworks/xstream/XStream while browsing the queues through atom or rss. Please refer to the attached screeshot.\n\nResolution - \nCopied the latest xstream jar, xstream-1.3.jar, into the lib directory of the activemq distribution (apache-activemq-5.1.0\\lib) and restarted activemq. This resolved the issue and now the queues can be browsed through atom or rss."
    ],
    [
        "AMQ-1800",
        "AMQ-1730",
        "Redilivery counter increase incredible I have some transacted session. Each session has one consumer which recive messages in parallel from one queue.\nAlso I use redeliveryPolicy. When I restart my application and close connection which close sessions which close consumers, message jumps from one closing consumer to another while all consumers will be stopped and rediliveryCounter++ executes every time when message is redispatched\n\nYou have to add any flag to connection which says: if connection.stop() is executed then forbore any message redispatching",
        "Bad use of Jms field JMSXDeliveryCount. Related to RedeliveryCount and message prefetch  JMSXDeliveryCount  has to be incremented only on transactional delivery failure ( RuntimeException on processing message, ... ).\n\nJMSXDeliveryCount  is actualy used in correlation with Message.java field: 'redeliveryCounter'.\n\nBut RedeliveryCounter  field is used to be incremented each time the message is preteched or sent to a consumer => It does not mean that message has been processed by business in transaction with a failure. It just has been prefetched by consumer ou subscriber. \nA 'not consumed message' can be give back to the broker when the consumer is closed by user, because it has been prefetched but not really consumed!\n\nIt does not match the meaning of the JMS field JMSXDeliveryCount  :\n\"If a failure occurs within transactional processing then the JMSXDeliveryCount is incremented\".\n\n\nJMSXDeliveryCount  field only has to be incremented on rollback (isn't it? ). This is why Message.redeliveryCount can not be used. Or the behavour of field Message.redeliveryCount has to be changed.\n\nYou can either :\n* create a new counter on message incremented only on rollback, or\n* modify classes : PrefetchSubscription.java and Queue.java to remove redeliveryCount increment and increment it only on rollback.\n\n\n* PrefetchSubscription.java:\n\n                    if (inAckRange) {\n//                        node.incrementRedeliveryCounter();\n                        if (ack.getLastMessageId().equals(messageId)) {\n                            destination = node.getRegionDestination();\n                            callDispatchMatched = true;\n                            break;\n                        }\n                    }\n\n\n\n* Queue.java:\n\n                for (MessageReference ref : sub.remove(context, this)) {\n                    QueueMessageReference qmr = (QueueMessageReference)ref;\n//                    qmr.incrementRedeliveryCounter();\n                    if( qmr.getLockOwner()==sub ) {\n                        qmr.unlock();\n//                        if (!qmr.isDropped() && !qmr.isAcked()) {\n//                        \tqmr.incrementRedeliveryCounter();\n//                        }\n                    }\n                    list.add(qmr);\n                }\n\n\nBTW, In this code it seems there is a second bug, in case of  test \"qmr.getLockOwner()==sub\" is true qmr is incremented a second time ?! Is it right ?\n\n\n\nThe result of this problem is the following: \n\nWith Spring and DefaultMessageListenerContainer, a message is consumed one by one. This is why a message prefteched many times, on first real consuming has a JMSXDeliveryCount  with high value not reflecting the reality."
    ],
    [
        "AMQ-1936",
        "AMQ-1693",
        "Duplicate message received when producing and consuming concurrently Hello,\n\nWe are receiving duplicate messages when processing a moderate numbers of messages ( ~60,000 ), I have attached a JUNIT test which re-produces the issue on my machine with the broker configuration file used. Please note that It does take a few minutes to generate the test failure.\n\nThe test needs to be run with increased heap memory using the JMV option -Xmx512m\n\nWe initially found the issue using the IONA Fuse version 5.1.0.0 which would produce the same issue at 30,000 messages and without persistence storage. I later downloaded the ActiveMQ 5.1.0 version which would pass at 30,000 but fail at 60,000.\n\nIt is causing major issues for our project and hindering our application from going to production.\n\n",
        "Nagitive Number Of Pending Messages  After purged messege from queue, ActiveMQ admin console gives Nagitive Number Of Pending Messages "
    ],
    [
        "AMQ-1940",
        "AMQ-1693",
        "Negative queue size (reproducible) When you \"purge\" queue from web admin console, it zeroes queue message\ncounter. But if you have an active consumer at that time which\npre-fetched messages than your consumer will keep sending ack as it\nprocess messages from its buffer. ActiveMQ will keep decrement counter\nupon receiving each ack. So when consumer is done queue will show\nMINUS<consumer buffer size>.\n\n",
        "Nagitive Number Of Pending Messages  After purged messege from queue, ActiveMQ admin console gives Nagitive Number Of Pending Messages "
    ],
    [
        "AMQ-1940",
        "AMQ-1936",
        "Negative queue size (reproducible) When you \"purge\" queue from web admin console, it zeroes queue message\ncounter. But if you have an active consumer at that time which\npre-fetched messages than your consumer will keep sending ack as it\nprocess messages from its buffer. ActiveMQ will keep decrement counter\nupon receiving each ack. So when consumer is done queue will show\nMINUS<consumer buffer size>.\n\n",
        "Duplicate message received when producing and consuming concurrently Hello,\n\nWe are receiving duplicate messages when processing a moderate numbers of messages ( ~60,000 ), I have attached a JUNIT test which re-produces the issue on my machine with the broker configuration file used. Please note that It does take a few minutes to generate the test failure.\n\nThe test needs to be run with increased heap memory using the JMV option -Xmx512m\n\nWe initially found the issue using the IONA Fuse version 5.1.0.0 which would produce the same issue at 30,000 messages and without persistence storage. I later downloaded the ActiveMQ 5.1.0 version which would pass at 30,000 but fail at 60,000.\n\nIt is causing major issues for our project and hindering our application from going to production.\n\n"
    ],
    [
        "AMQ-2087",
        "AMQ-1601",
        "Redelivery after rollback does not seem to work well  ",
        "maximumRedeliveries not honoured when transacted session is closed without explicit rollback 1) Unzip attachment into a directory\n2) Edit build.xml and change activemq.home to point to your ActiveMQ distribution\n3) Run \"ant\" and observe that one of the 2 JUnit tests fail\n4) Refer to test-report for information about the failure\n\nThe first JUnit test creates a temporary broker and submits a single message to the queue \"test.queue\".  It then creates a transacted message consumer that retrieves the message, prints out details about it, and then rollsback and closes the session.  Subsequent retries by the consumer verify that the message is redelivered up to the MAX_REDELIVERIES constant in RedeliveryRollbackTest.java.  Finally, the test verifies that after MAX_REDELIVERIES, test.queue is empy (i.e., the message has been recognized as a poison pill).\n\nThe second JUnit test performs the same sequence of operations, but instead of explicitly rolling back the session, it just closes the session.  According to the JavaDoc for javax.jms.session#close():\n\nhttp://java.sun.com/j2ee/sdk_1.3/techdocs/api/index.html\n\n\"Closing a transacted session must roll back the transaction in progress. \"\n\nIn other words, I was expecting the behaviour to be the same for both test cases.  However, although the delivery count is updated on the message, it continues to get delivered regardless of the MAX_REDELIVERIES setting.\n\nADDITIONAL CONCERN\n---------------------------------\nObserve the console output of the tests and note how the delivery count increments by two for the test that works, but only by one for the test that doesn't:\n\nAttempt 1\nReceived message id=ID:schow-desktop-4347-1203977945999-2:0:1:1:1, redelivered=false, delivery count=1\nAttempt 2\nReceived message id=ID:schow-desktop-4347-1203977945999-2:0:1:1:1, redelivered=true, delivery count=3\nAttempt 3\nReceived message id=ID:schow-desktop-4347-1203977945999-2:0:1:1:1, redelivered=true, delivery count=5\nAttempt 4\nReceived message id=ID:schow-desktop-4347-1203977945999-2:0:1:1:1, redelivered=true, delivery count=7\nAttempt 5\nNo message available.\nAttempt 1\nReceived message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=false, delivery count=1\nAttempt 2\nReceived message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=true, delivery count=2\nAttempt 3\nReceived message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=true, delivery count=3\nAttempt 4\nReceived message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=true, delivery count=4\nAttempt 5\nReceived message id=ID:schow-desktop-4347-1203977945999-2:1:1:1:1, redelivered=true, delivery count=5"
    ],
    [
        "AMQ-2154",
        "AMQ-1588",
        "trying to access an ObjectMessage in the AMQ web console results in java.io.IOException: com.myclass... The web console can be used to drill into individual message and display both their properties as well as payload. \nDisplaying the payload generally works fine for TextMessages, etc but fails for ObjectMessages and probably other binary payload formats.\nThis is okay and kind of expected but rather than throwing an exception with a large stack trace back to the browser client, we should capture the ex and display at least the message properties and also a short message that the content cannot be displayed due to its binary content.\n\nError msg and stack trace that is thrown:\n{code}\njava.io.IOException: com.myclass\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)\n\tat org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:78)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:261)\n\tat javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)\n\tat com.sun.el.parser.AstValue.getValue(AstValue.java:138)\n\tat com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)\n\tat org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:984)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_out_0(org.apache.jsp.message_jsp:400)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:334)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:151)\n\tat org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:92)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:806)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:477)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:371)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:806)\n\tat org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)\n\tat org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)\n\tat org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)\n\tat com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)\n\tat com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)\n\tat org.mortbay.jetty.Server.handle(Server.java:324)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:829)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381)\n\tat org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)\n\tat org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)\n{code}",
        "Serialized ObjectMessages throw javax.jms.JMSException: Failed to build body from bytes when ID is clicked in admin servlet Producing and sending ObjectMessages such as..\n\\\\\n{code}\npackage com.test;\n\nimport java.io.Serializable;\n\npublic class TestEvent implements Serializable {\n\n\tprivate static final long serialVersionUID = 1L;\n\tprivate String test;\n\t\n\tpublic TestEvent() {\n\t}\n\t\n\tpublic String getTest() {\n\t return test;\n\t}\n\t\n\tpublic void setTest(String test) {\n\t this.test = test;\n\t}\n\t\n}\n{code}\n\nand then clicking the ID displayed by browse.jsp creates the following error everytime..\n\nI have tried setting the VM argument -Djava.rmi.server.codebase set in my producer and same thing happens\n\n{code}\nHTTP ERROR: 500\n\njavax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.test.TestEvent\n\nRequestURI=/admin/message.jsp\nCaused by:\n\njavax.el.ELException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.test.TestEvent\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:266)\n\tat javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)\n\tat com.sun.el.parser.AstValue.getValue(AstValue.java:125)\n\tat com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:195)\n\tat org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1008)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:329)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:147)\n\tat org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:89)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:80)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:464)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:358)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n\tat org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1098)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)\n\tat com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)\n\tat org.mortbay.jetty.Server.handle(Server.java:295)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)\n\tat org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)\n\tat org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)\nCaused by: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.test.TestEvent\n\tat org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)\n\tat org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:78)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:261)\n\t... 40 more\nCaused by: java.io.IOException: com.test.TestEvent\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)\n\t... 46 more\n\nCaused by:\n\njavax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.test.TestEvent\n\tat org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)\n\tat org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:78)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:261)\n\tat javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)\n\tat com.sun.el.parser.AstValue.getValue(AstValue.java:125)\n\tat com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:195)\n\tat org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1008)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:329)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:147)\n\tat org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:89)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:80)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:464)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:358)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n\tat org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1098)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)\n\tat com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)\n\tat org.mortbay.jetty.Server.handle(Server.java:295)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)\n\tat org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)\n\tat org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)\nCaused by: java.io.IOException: com.test.TestEvent\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)\n\t... 46 more\n\nCaused by:\n\njava.io.IOException: com.test.TestEvent\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)\n\tat org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:78)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:585)\n\tat javax.el.BeanELResolver.getValue(BeanELResolver.java:261)\n\tat javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)\n\tat com.sun.el.parser.AstValue.getValue(AstValue.java:125)\n\tat com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:195)\n\tat org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1008)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:329)\n\tat org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:147)\n\tat org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:89)\n\tat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:80)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:464)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:358)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n\tat org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1098)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)\n\tat com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)\n\tat org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)\n\tat org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)\n\tat org.mortbay.jetty.Server.handle(Server.java:295)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)\n\tat org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)\n\tat org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)\n\nPowered by Jetty://\n{code}"
    ],
    [
        "AMQ-2166",
        "AMQ-1437",
        "MemoryLeak in the ResourceAdapter (ManagedConnectionProxy) The ActiveMQ JCA Resource Adapter leaks about 1Kb of memory when opening and closing sessions on the same connection. As soon as the connection is closed this memory is released, but it's a common use case to keep the connection for a very long time (ie aquire at startup and relase at shutdown).\n\nThe leak happens because the ManagedConnectionProxy holds a list of sessions that have been openend, but there's no code that removes a closed session from the list.\n",
        "Memory Leak in Resource Adapator? I think it is a memory leak that calling close() on a org.apache.activemq.ra.ManagedSessionProxy does not remove it from the session list of the org.apache.activemq.ra.ManagedConnectionProxy that created it.  Some programs (like mine) run on a Jboss bean thats generating messages every few seconds and I like to keep a Connection open to ActiveMQ and create a new session for each new batch of messages.  When I close these sessions (which are really ManagedSessionProxy's), the actual ActiveMQSession wrapped inside closes but a lot of its data remains referenced inside it.   Also, the reference to the ManagedSessionProxy stays in the ManagedConnectionProxy's session list.  So since the ManagedSessionProxy has to stay in the ManagedConnectionproxy's session list, it stays in memory and so does the ActiveMQSession, and so all these sessions (thousands of them) stay in memory until the ManagedConnectionProxy is closed which my program only calls when the server shuts down.\n\nTo generate this, create a simple message producing program that uses the resource adaptor's ActiveMQConnectionFactory to generate one connection.  Then run a loop that creates a session on that connection, sends a message or two, and closes the session.  May need to run this loop at least 100 times appreciate what I'm saying and how quickly it affects things.\n\nI think this will be a simple fix and hopefully will be resolved soon."
    ],
    [
        "AMQ-2211",
        "AMQ-1132",
        "activemq-core activeio-core test-jar activemq-core has the following 2 dependecies to activeio-core:\n\n    <dependency>\n      <groupId>${pom.groupId}</groupId>\n      <artifactId>activeio-core</artifactId>\n      <optional>false</optional>\n    </dependency>\n...\n\n    <dependency>\n      <groupId>${pom.groupId}</groupId>\n      <artifactId>activeio-core</artifactId>\n      <optional>false</optional>\n      <type>test-jar</type>\n    </dependency>\n\n\nThe <type>test-jar</type>dependency should also be <scope>test</test>. With the current setting, you get the test-jar bundled (transitively) when including activemq-core. \n\nCorrect me if i'm wrong...",
        "activeio test package inclusion and logging properties When you include activemq-core as a dependency on an empty project, even simplest examples fails with\n\njava.io.FileNotFoundException: /target/test.log (No such file or directory)\n\nexception.\n\nFirst of all, the core package includes dependency on activeio-core test jar \n\n    <dependency>\n      <groupId>${pom.groupId}</groupId>\n      <artifactId>activeio-core</artifactId>\n      <optional>false</optional>\n      <type>test-jar</type>\n    </dependency>\n\nfor which I'm not sure is needed.\nSecond, in this test activeio package logging.properties is configured so that root logger writes into ${basedir}/target/test.log, which causes application to fail. It would be better to set it to write to stdout by default.\n"
    ],
    [
        "AMQ-2319",
        "AMQ-2094",
        "Specifying an IP in a transport URI doesn't make the resulting listen socket use that IP only The following configuration\n\n<transportConnector name=\"openwire\" uri=\"tcp://127.0.0.1:61616\" />\n\nyields the following output from netstat:\n\ntcp6       0      0 :::61616                :::*                    LISTEN     6528/java\n\nInstead of listening on :: (the ipv6 equivalent of 0.0.0.0), it should only listen on 127.0.0.1",
        "Can't bind the connector to localhost or actuall IP correctly. ActiveMQ server socket created with TcpTransportServer  can't bind to localhost or actuall IP correctly.  \n\n* expected result:\n** localhost  ---> bind to 127.0.0.1\n** actual IP  ----> bind to  actual IP\n\n* actual result:\n** localhost  ---> bind to 0.0.0.0\n** actual IP  ----> bind to 0.0.0.0\n\n\n{code:title=\"org.apache.activemq.transport.tcp.TcpTransportServer\"}  \n      InetAddress addr = InetAddress.getByName(host);\n\n       try {\n           if (host.trim().equals(\"localhost\") || \\\naddr.equals(InetAddress.getLocalHost())) {  //#1 start the socket with 0.0.0.0\n            this.serverSocket = \\\nserverSocketFactory.createServerSocket(bind.getPort(), backlog);  }\n           else {\n            //#2  start the socket with the ip spcified in addr.\n            this.serverSocket = \\\nserverSocketFactory.createServerSocket(bind.getPort(), backlog, addr);  }\n{code}\nSince if you config the real IP as a host setting, \\\naddr.equals(InetAddress.getLocalHost()) will allways be true so that the #1 will be used to start the socket with 0.0.0.0 by default.  Which causes a defect of geronimo: https://issues.apache.org/jira/browse/GERONIMO-4404\n"
    ],
    [
        "AMQ-2494",
        "AMQ-2352",
        "activemq-web-console: SystemPropertiesConfiguration bug! in the SystemPropertiesConfiguration class, the method getJmxPassword will return the username while the getJmxUser return the password.",
        "it should be possible to specify userName and password in the webconsole-properties.xml file to adapt src\\activemq-web-console\\src\\main\\webapp\\WEB-INF\\webconsole-properties.xml\n\n<bean id=\"connectionFactory\" class=\"org.apache.activemq.ActiveMQConnectionFactory\">\n<property name=\"brokerURL\" value=\"${webconsole.jms.url}\"/>\n*<property name=\"userName\" value=\"${webconsole.jms.userName}\"/>*\n*<property name=\"password\" value=\"${webconsole.jms.password}\"/>*\n  </bean>  "
    ],
    [
        "AMQ-2497",
        "AMQ-1780",
        "Message broker won't come back when the databse goes offline and comes back online - deployed ActiveMQ 5.3.0 as RAR on JBoss\n- broker comes up fine\n- at some point database goes offline\n- broker can't communicate with database and shuts down\n- now database comes back online\n- borker will never come back again and will have to restart the JBoss manually again to start the broker\n\nThis will be a blocker for us to go to production as there is no availability of broker when database goes offline and comes back.\n\nHere is my broker-config.xml, let me know if any configuration is missing :\n\n<beans xmlns=\"http://activemq.apache.org/schema/core\">\n\n<bean xmlns=\"\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\"/>\n\n<bean xmlns=\"\" id=\"my-ds\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n<property name=\"driverClassName\" value=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\"/>\n<property name=\"url\" value=\"jdbc:sqlserver://mydb:1433;databaseName=myds\"/>\n<property name=\"username\" value=\"sql\"/>\n<property name=\"password\" value=\"sql\"/>\n<property name=\"initialSize\" value=\"10\"/>\n<property name=\"poolPreparedStatements\" value=\"true\"/>\n</bean>\n\n<!-- shutdown hook is disabled as RAR classloader may be gone at shutdown -->\n<broker useJmx=\"true\" brokerName=\"sample.broker1\" useShutdownHook=\"false\">\n\n<destinations>\n<topic physicalName=\"pocket\" />\n</destinations>\n\n<managementContext>\n<!-- use appserver provided context instead of creating one,\nfor jboss use: -Djboss.platform.mbeanserver -->\n<managementContext createConnector=\"false\"/>\n</managementContext>\n\n<persistenceAdapter>\n<!-- <amqPersistenceAdapter syncOnWrite=\"false\" directory=\"${jboss.server.data.dir}/activemq\" maxFileLength=\"20 mb\"/> -->\n<!-- <journaledJDBC journalLogFiles=\"5\" dataDirectory=\"${jboss.server.data.dir}/activemq\"/> -->\n<!-- To use a different datasource, use th following syntax : -->\n\n<!-- <kahaPersistenceAdapter directory=\"${jboss.server.data.dir}/activemq\" maxDataFileLength=\"33554432\"/> -->\n\n<journaledJDBC journalLogFiles=\"5\" dataDirectory=\"${jboss.server.data.dir}/activemq\" dataSource=\"#my-ds\" useDatabaseLock=\"false\" />\n\n</persistenceAdapter>\n\n<transportConnectors>\n<transportConnector name=\"sample.broker1\" uri=\"tcp://localhost:3030\" discoveryUri=\"multicast://default\"/>\n</transportConnectors>\n\n</broker>\n</beans>\n\n",
        "ActiveMQ broker does not automatically reconnect if the connection to the database is lost hi\n\nWe are noticing that after any SQL Server restart or network blip between ActiveMQ and the database, after the connection or the database comes back online activeMQ broker needs to be restarted as well i.e it doesn't automatically re-establish connection to the database as result any message send fails because the broker is still using the stale connection to the database. \n\nIs this designed behaviour or a bug? we are using ActiveMQ 5.0.0 and the latest version of the JSQLConnect database driver: version 5.7. The database we are using is MS SQL Server 2005 \n\nRight now, in our production environment any time we have network maintenance or database restart we also have to restart the ActiveMQ broker which is not a good option for us. \n\nAlso, We are using a single ActiveMQ broker and not the JDBC(Master/Slave) set up.\n\nIssue details in\n\nhttp://www.nabble.com/Database-connection-between-ActiveMQ-and-broker-td17321330s2354.html\n\nPlease let me know if I need to give more information\n\nthanks\njaya\n"
    ],
    [
        "AMQ-2596",
        "AMQ-2530",
        "Memory leak in network of brokers - the number of ConsumerInfo objects increases I'd like to report a reproducible memory leak in network of brokers.\n\nThis is the scenario you can reproduce it (tried out with 4.1.1, 5.3.0 and 5.3.1):\n1. start two brokers using attached configuration.\n    Lets call one of it BE (for backend) another FE (for frontend) - accordingly: be_activemq.xml and fe_activemq.xml are attached.\n    The BE broker contains following configuration: \n        <transportConnectors>\n            <transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:61616\"/>\n        </transportConnectors>\n        <networkConnectors>\n           <networkConnector name=\"FE_connector\" dynamicOnly=\"true\" uri=\"static://(tcp://localhost:61617)\"/>\n        </networkConnectors>\n\n    The FE broker contains just:\n        <transportConnectors>\n            <transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:61617\"/>\n        </transportConnectors>\n\n2. now start a client that opens and close permanently topic subscriptions (see attached tests)\n    to the FE broker\n\n3. after a while you will see (e.g. verbose gc) that the heap usage of the BE broker will increase,\n    but on FE not\n\nIf you analyze the heap dump of BE you will see that the memory leak consist of a large number of ConsumerInfo\nobjects. Easy way to find the objects when you use MAT is to use the OQL query e.g.:\n    SELECT c.destination.physicalName.toString() FROM \".*ConsumerInfo\" c WHERE (c.destination.physicalName.toString() LIKE \"TEST_TOPIC\")\n\nI noticed that basically for each subscription on FE two ConsumerInfo objects are created on BE, which will never be closed.\nThere are however some special cases that only 4, 8 .. 12 objects per connection are created. This happens when the client just opens sessions/subscriptions without closing  (see appropriate junit test with comments in it).\n\nWe have it currently a P1 ticket at our customer site (running 3*FE + BE using 4.1.1) because of OoM that occurs periodically (in fact we now restart  every n-days the system). \n\nAnother strange issue that happens at our customer site is something that I cannot reproduce at all.\nThe ConsumerInfo objects on BE contains there non empty selector strings, which makes the memory leak more critical.\nIn my test environment however selector strings are only set in ConsumerInfo on FE, but in BE broker the selectorin ConsumerInfo is always null!\nI compared the customer configuration with my and I could not find any difference.\n\nAny idea what could influence this behavior?\n\nThanks in advance for any feedback and help on this issue.\nBest Regards,\nMark",
        "memory leak in ConduitBridge (subscriptionMapByRemoteId) I believe there is a memory leak in ConduitBridge - looks like DemandSubscriptions are not removed from subscriptionMapByRemoteId when remote RemoveInfo is received.\n\nremoveDemandSubscription normally removes subscription from subscriptionMapByRemoteId in DemanForwardingBridgeSupport, but method is overriden in ConduitBridge and only removes subscription from subscriptionMapByLocalId.\n\nLeak becomes more significant when consumers are connecting very often (i.e. few connections per second), and bridge connection is stable (lasts for couple of days without reconnecting). MessageConsumer's are not pooled and subscriptions are created and removed often (and forwarded via bridge).\n\n"
    ],
    [
        "AMQ-2609",
        "AMQ-1308",
        "HTTP transport fails with java.io.UTFDataFormatException exception for messages larger than 64k When using activemq with http transport and trying to receive large messages (~100KB),  the operation fails and the following exception is in the log file:\n\njava.io.UTFDataFormatException: encoded string too long: 219486 bytes\n\tat java.io.DataOutputStream.writeUTF(DataOutputStream.java:347)\n\tat java.io.DataOutputStream.writeUTF(DataOutputStream.java:306)\n\tat org.apache.activemq.transport.util.TextWireFormat.marshal(TextWireFormat.java:44)\n\tat org.apache.activemq.transport.http.HttpTunnelServlet.doGet(HttpTunnelServlet.java:86)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:693)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:806)\n\tat org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)\n\tat org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n\tat org.mortbay.jetty.Server.handle(Server.java:320)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)\n\tat org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)\n\tat org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)\n\tat org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)\n\tat org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)\n\tat org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)\n\nIt may be caused by DataOutputStream.writeUTF implementation being limited to 64k string length.",
        "Messages delivered from HttpTunnelServlet connected broker are limited to 64K bytes. In TextWireFormat.java: the methods writeUTF/readUTF are used in the code path to deliver messages from an HTTP connected broker.\n\n    public void marshal(Object command, DataOutput out) throws IOException {\n        out.writeUTF(marshalText(command));\n    }\n\n    public Object unmarshal(DataInput in) throws IOException {\n        String text = in.readUTF();\n        return unmarshalText(text);\n\t}\n\nThese methods limit the max message size to 64K. Messages sent to an HTTP connected broker do not have the same limitation.\n\nProblem first reported in activemq-users with the subject \"UTFDataFormatException in broker when using a http transportConnector\".\n\nTHanks,\nEddie"
    ],
    [
        "AMQ-2745",
        "AMQ-2217",
        "Deadlock or Performance Bottleneck when reading messages with Correlation We have a situation where we are posting messages to a queue with two different correlation ids specifically intended to reach two different clients who subscribe with message selectors for the appropriate correlation.  The clients are reading with message listeners.  When one client stops reading the expected behavior, and the behavior we saw on 5.3.0, is that the messages with the correlation for the stopped client will backup on the queue and will not effect the performance of the second client who is still reading the messages with the other correlation.  With our memory config messages can backup into the hundreds of thousands before noticing any performance impact on the active client.\r\n\r\nHowever this is not the case in 5.3.1 or 5.3.2.  With 5.3.1 once enough messages backup for the stopped client, suddenly the active client's performance drops drastically 20 ms reads to 30,000ms reads.  We will see this within a few hundred messages.  I believe there is some kind of deadlock, or buffering bottleneck that was introduced on the client side.",
        "Message delivery to selector based consumers pauses if selector leaves messages on the queue. I have written a test case which will demonstrate the difference between the following two scenarios:\n\n1. Producer sending dissimilar JMSType messages to a queue, with a client consuming all messages (no selector).\n2. Producer sending dissimilar JMSType messages to a queue, with a client consuming every other message (using selector).\n\nWith a large enough size of test messages (for my environment about 5k), scenario 2 will fail with delivery to the consumer halted, while scenario 1 will not.\n\nTest Output:\n\nwaiting for consumer to pause ... consumer: 0, producer: 0\nwaiting for consumer to pause ... consumer: 200, producer: 5000\nwaiting for consumer to pause ... consumer: 200, producer: 5000\nwaiting for consumer to pause ... consumer: 200, producer: 5000\nwaiting for consumer to pause ... consumer: 200, producer: 5000\nwaiting for consumer to pause ... consumer: 200, producer: 5000"
    ],
    [
        "AMQ-2800",
        "AMQ-2756",
        "JDBCMessageStore message audit suppresses composite destination and DLQ messages as duplicates With the audit enabled, messages send to composite destinations are suppressed as duplicates so the will not survive a restart. In addition, persistent DLQ messages are suppressed (depending on the audit depth).\nDisabling the audit on the persistence adapter works around this issue. It is ok to disable the audit. The audit is needed to close a small window where duplicate message sends can occur with the non transactional use of the failover: transport. It can happen if a send is in progress when a failover reconnection occurs back o the same broker (as if there was a temp network partition) and the send reply is not received. A non transactional client will resend the message which needs to be suppressed by the audit. Disabling the audit leaves the possibility of having a duplicate message in the database that will not be dispatched.",
        "Persistent  DLQ messages are NOT persisting in the DB We are using ActiveMQ 5.3.2  and defined persistence adaptor as below:\n \n  <persistenceAdapter>\n                <jdbcPersistenceAdapter dataSource=\"#mysql-ds\"/>\n        </persistenceAdapter>\n\nOnce the producer sends persistent messages, they are  persisting FINE in the 'activemq_msgs' table in the DB (verified by select statement). We also see the messages thru the Web console.\n\nWhile Consuming, after 6 failure read attempts;\n When we check the web Console; the messages are moved from our Queue to  \"ActiveMQ.DLQ\"  queue.\nBUT when we check the DB, the messages are NOT exist in the 'activemq_msgs' table. They are removed completely.  We expect those need to be exist with the  container name \"queue://ActiveMQ.DLQ\".\n\nSince the DLQ messages are not persisted in DB,  We are loosing them for Broker restart.\n\nThis happens in 5.4-SNAPSHOT & 5.3.1 & 5.3.2 releases.\nThis works as expected in 5.3.0,  i mean, the DLQ messages are persisting in the permanent DB storage.\n\nsee this:\nhttp://old.nabble.com/Dead-letter-queue-not-being-created-td28576004.html\n\nThank you,\nKrishna. "
    ],
    [
        "AMQ-2877",
        "AMQ-2612",
        "Failover and prefetch=0 can result in hung consumers if the MessagePull command is lost With prefetch=0,  a consumer that has no messages sends an async message to the broker to have it dispatch a single message and waits for the dispatch to ocurr. prefetch=0 makes the consumer a pull consumer, in that it has to ask for a message each time.\n\nthere is a possibility that failover occurs just after the send of the messagePull command such that the consumer  is blocked waiting for a message but a failover connection or broker does not know about the outstanding pull command. The connection state tracker is the normal mechanism for command replay after failover. This needs to be extended to track messagePull commands, keeping one outstanding reference for each consumer/destination pair that can be replayed after failover.\nIt makes sense to reuse the messageCache for this. ",
        "Polling consumer (prefetch size = 0) fails to reconnect Scenario:\n1. Configure polling consumer (prefetch=0), with onMessage()-style processing, e.g. with Spring's DefaultMessageListenerContainer.\n2. Restart broker.\n3. Notice consumer does not consumer messages anymore.\n\nIn client application this may show up during short network interruptions as reconnect message in logs/console + processing stoppage.\n\nSee http://old.nabble.com/ActiveMQ-reconnect-issue-with-consumer.prefetchSize%3D0-td27574923.html for more context."
    ],
    [
        "AMQ-2939",
        "AMQ-2709",
        "Disable Spring 3 schema validation With Activemq 5.3.2, I had this in my activemq.xml:\n \n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:amq=\"http://activemq.apache.org/schema/core\" \n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"\n    http://activemq.apache.org/schema/core\n        http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd\n    http://camel.apache.org/schema/spring\n    http://camel.apache.org/schema/spring/camel-spring.xsd\n    http://www.springframework.org/schema/beans\n\thttp://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n\t\">\n\n<bean id=\"myPlugin\" class=\"com.yahoo.MyPlugin\">\n\t<property name=\"disabled\">\n\t\t<value>false</value>\n\t</property>\n</bean>\n\n<broker xmlns=\"http://activemq.apache.org/schema/core\"\n\tbrokerName=\"broker1\" dataDirectory=\"${activemq.base}/data\" plugins=\"#myPlugin\">\n\t<transportConnectors>\n\t\t<transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:61616\" />\n\t</transportConnectors>\n</broker>\n</beans>\n\nRelevant email thread.\n\n-----Original Message-----\nFrom: chubrilo@gmail.com [mailto:chubrilo@gmail.com] On Behalf Of Dejan Bosanac\nSent: Thursday, September 23, 2010 4:19 AM\nTo: users@activemq.apache.org\nSubject: Re: configuring plugins with activemq 5.4.1\n\nHi Allen,\n\ncan you raise an issue for this, as it is an obvious regression? It's probably due the fact that in 5.4 we're back to autogenerating schema.\n\nCheers\n--\nDejan Bosanac - http://twitter.com/dejanb\n\nOpen Source Integration - http://fusesource.com/ ActiveMQ in Action - http://www.manning.com/snyder/ Blog - http://www.nighttale.net\n\n\n\nOn Wed, Sep 22, 2010 at 10:58 PM, Allen Reese <areese@yahoo-inc.com> wrote:\n> The problem is plugins as an attribute of broker seems to be removed in the 5.4.1 xsd.\n>\n> I want to configure the plugin once outside of the brokers, the reason is, I use an <import resource=\"brokers.xml\">, and want to allow other people to reuse the plugin configuration without having to have it as part of their broker definition.\n>\n> I guess I'll keep playing around as I have some other ideas of how to do this, but I'm still confused if I setup my own xsd with an element for the plugin, how do I tie that to the plugin bean?\n>\n> --Allen\n>\n>\n> -----Original Message-----\n> From: Stan Lewis [mailto:slewis@fusesource.com]\n> Sent: Wednesday, September 22, 2010 3:10 PM\n> To: users@activemq.apache.org\n> Subject: Re: configuring plugins with activemq 5.4.1\n>\n> Should be able to do something like:\n>\n> <plugins>\n> \u00a0 <bean xmlns=\"http://www.springframework.org/schema/beans\"\n> id=\"myPlugin\" class=\"com.yahoo.MyPlugin\">\n> \u00a0 \u00a0 \u00a0 \u00a0<property name=\"disabled\">\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<value>false</value>\n> \u00a0 \u00a0 \u00a0 \u00a0</property>\n> \u00a0 </bean>\n> </plugins>\n>\n> for this, there's some other examples here:\n>\n> http://activemq.apache.org/developing-plugins.html#DevelopingPlugins-C\n> onfiguringpluginswithoutcustomXML\n>\n> On Wed, Sep 22, 2010 at 3:48 PM, Allen Reese <areese@yahoo-inc.com> wrote:\n>> With Activemq 5.3.2, I had this in my activemq.xml:\n>>\n>> <beans xmlns=\"http://www.springframework.org/schema/beans\"\n>> \u00a0 \u00a0 \u00a0 \u00a0xmlns:amq=\"http://activemq.apache.org/schema/core\"\n>> \u00a0 \u00a0 \u00a0 \u00a0xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n>> \u00a0 \u00a0 \u00a0 \u00a0xsi:schemaLocation=\"\n>> \u00a0 \u00a0http://activemq.apache.org/schema/core\n>> \u00a0 \u00a0 \u00a0 \u00a0http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd\n>> \u00a0 \u00a0http://camel.apache.org/schema/spring\n>> \u00a0 \u00a0http://camel.apache.org/schema/spring/camel-spring.xsd\n>> \u00a0 \u00a0http://www.springframework.org/schema/beans\n>>\n>> http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n>> \u00a0 \u00a0 \u00a0 \u00a0\">\n>>\n>> <bean id=\"myPlugin\" class=\"com.yahoo.MyPlugin\">\n>> \u00a0 \u00a0 \u00a0 \u00a0<property name=\"disabled\">\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<value>false</value>\n>> \u00a0 \u00a0 \u00a0 \u00a0</property>\n>> </bean>\n>>\n>> <broker xmlns=\"http://activemq.apache.org/schema/core\"\n>> \u00a0 \u00a0 \u00a0 \u00a0brokerName=\"broker1\" dataDirectory=\"${activemq.base}/data\"\n>> plugins=\"#myPlugin\">\n>> \u00a0 \u00a0 \u00a0 \u00a0<transportConnectors>\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<transportConnector name=\"openwire\"\n>> uri=\"tcp://0.0.0.0:61616\" />\n>> \u00a0 \u00a0 \u00a0 \u00a0</transportConnectors>\n>> </broker>\n>> </beans>\n>>\n>> However, when I upgrade to 5.4.1, this no longer works as plugins is no longer supported as an attribute of the broker element.\n>>\n>> I'm not really certain how to wire in a custom plugin any more, can anyone provide some information on how to do this with the 5.4.1 schema?\n>>\n>> Here was my first shot at it, but I know I'm missing how to tie the bean to the namespace.\n>>\n>> <beans xmlns=\"http://www.springframework.org/schema/beans\"\n>> \u00a0 \u00a0 \u00a0 \u00a0xmlns:amq=\"http://activemq.apache.org/schema/core\"\n>> \u00a0 \u00a0 \u00a0 \u00a0xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n>> \u00a0 \u00a0 \u00a0 \u00a0xsi:schemaLocation=\"\n>> \u00a0 \u00a0http://activemq.apache.org/schema/core\n>> \u00a0 \u00a0 \u00a0 \u00a0http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd\n>> \u00a0 \u00a0http://camel.apache.org/schema/spring\n>> \u00a0 \u00a0http://camel.apache.org/schema/spring/camel-spring.xsd\n>> \u00a0 \u00a0http://www.springframework.org/schema/beans\n>> \u00a0 \u00a0 \u00a0 \u00a0http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\"\n>> \u00a0 \u00a0 \u00a0>\n>>\n>> <bean id=\"myPlugin\" class=\"com.yahoo.MyPlugin\">\n>> \u00a0 \u00a0 \u00a0 \u00a0<property name=\"disabled\">\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<value>false</value>\n>> \u00a0 \u00a0 \u00a0 \u00a0</property>\n>> </bean>\n>>\n>> \u00a0 \u00a0 \u00a0 \u00a0<broker xmlns=\"http://activemq.apache.org/schema/core\"\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0brokerName=\"broker1\"\n>> dataDirectory=\"${activemq.base}/data\">\n>> \u00a0 \u00a0 \u00a0 \u00a0<plugins><myPlugin\n>> xmlns=\"http://yahoo.com/schema/java\"/></plugins>\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<transportConnectors>\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<transportConnector name=\"stomp\"\n>> uri=\"tcp://0.0.0.0:61616\" />\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0</transportConnectors>\n>> \u00a0 \u00a0 \u00a0 \u00a0</broker>\n>> </beans>\n>>\n>> Thanks.\n>>\n>> --Allen Reese\n>\n",
        "Refactor core XML schema to use xs:all types in place of xs:sequence It is much more convenient to use xs:all instead of xs:sequence in a schema that describes a configuration file. In a configuration file, it normally does not matter what order you insert child elements inside a parent element. Having to remember the arbitrary sequence in which the elements appear in the schema is a pain!\n\nFor example, when I went to insert a <networkConnectors> element inside a <broker> element, I was surprised to find that my XML editor complaining that this was not schema compliant. It turns out that I have to insert the <networkConnectors> element in *exactly* the right spot in order to comply with the schema.\n\nThis change would also be backward compatible with existing XML files."
    ],
    [
        "AMQ-2956",
        "AMQ-2696",
        "ActiveMQ broker fails to start due to java.lang.NullPointerException Broker fails to restart due to a java.lang.NullPointerException. It looks like it has to do with the JDBC persistance adapter. \nI'm using: \n\n<journaledJDBC journalLogFiles=\"5\" dataDirectory=\"${activemq.base}/activemq-data\" dataSource=\"#mysql-ds\"/>\n        <bean id=\"mysql-ds\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n                <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n                <property name=\"url\" value=\"jdbc:mysql://myhostname.com/activemq?relaxAutoCommit=true\"/>\n                <property name=\"username\" value=\"myusername\"/>\n                <property name=\"password\" value=\"mypassword\"/>\n                <property name=\"poolPreparedStatements\" value=\"true\"/>\n\nI can solve this by emptying the table ACTIVEMQ_ACKS. It looks like there are some acks that exist for messages that aren't in the database.\n\nDetails below:\n\nRunning ActiveMQ Broker...\nwrapper  | --> Wrapper Started as Console\nwrapper  | Launching a JVM...\njvm 1    | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org\njvm 1    |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.\njvm 1    | \njvm 1    | \njvm 1    | WARNING - Unable to load the Wrapper's native library because none of the\njvm 1    |           following files:\njvm 1    |             libwrapper-linux-x86-64.so\njvm 1    |             libwrapper.so\njvm 1    |           could be located on the following java.library.path:\njvm 1    |             /var/lib/activemq/bin/linux-x86-64/../../bin/linux\njvm 1    |           Please see the documentation for the wrapper.java.library.path\njvm 1    |           configuration property.\njvm 1    |           System signals will not be handled correctly.\njvm 1    | \njvm 1    | Java Runtime: Sun Microsystems Inc. 1.6.0_21 /usr/java/jdk1.6.0_21/jre\njvm 1    |   Heap sizes: current=117888k  free=111741k  max=466048k\njvm 1    |     JVM args: -Dactivemq.home=../.. -Dactivemq.base=../.. -Djavax.net.ssl.keyStorePassword=password -Djavax.net.ssl.trustStorePassword=password -Djavax.net.ssl.keyStore=../../conf/broker.ks -Djavax.net.ssl.trustStore=../../conf/broker.ts -Dcom.sun.management.jmxremote -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote.port=1616 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Xmx512m -Djava.library.path=../../bin/linux/ -Dwrapper.key=dafM8UrD_1bFGoNX -Dwrapper.port=32000 -Dwrapper.jvm.port.min=31000 -Dwrapper.jvm.port.max=31999 -Dwrapper.pid=24752 -Dwrapper.version=3.2.3 -Dwrapper.native_library=wrapper -Dwrapper.cpu.timeout=10 -Dwrapper.jvmid=1\njvm 1    | ACTIVEMQ_HOME: ../..\njvm 1    | ACTIVEMQ_BASE: ../..\njvm 1    | Loading message broker from: xbean:activemq.xml\njvm 1    |  INFO | Using Persistence Adapter: JournalPersistenceAdapator(JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@4762d950))\njvm 1    |  INFO | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi\njvm 1    |  INFO | Database adapter driver override recognized for : [mysql-ab_jdbc_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.MySqlJDBCAdapter\njvm 1    |  INFO | Database lock driver override not found for : [mysql-ab_jdbc_driver].  Will use default implementation.\njvm 1    |  INFO | Attempting to acquire the exclusive lock to become the Master broker\njvm 1    |  INFO | Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@4762d950\njvm 1    |  INFO | ActiveMQ 5.3.2 JMS Message Broker (apollo) is starting\njvm 1    |  INFO | For help or more information please see: http://activemq.apache.org/\njvm 1    | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException\njvm 1    | java.lang.NullPointerException\njvm 1    | \tat org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)\njvm 1    | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)\njvm 1    | \tat org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)\njvm 1    | \tat org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)\njvm 1    | \tat org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)\njvm 1    | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)\njvm 1    | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)\njvm 1    | \tat org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\njvm 1    | \tat java.security.AccessController.doPrivileged(Native Method)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)\njvm 1    | \tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\njvm 1    | \tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)\njvm 1    | \tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)\njvm 1    | \tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)\njvm 1    | \tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\njvm 1    | \tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)\njvm 1    | \tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\njvm 1    | \tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\njvm 1    | \tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\njvm 1    | \tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\njvm 1    | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\njvm 1    | \tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)\njvm 1    | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\njvm 1    | \tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\njvm 1    | \tat org.apache.activemq.console.Main.main(Main.java:107)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)\njvm 1    | \tat java.lang.Thread.run(Thread.java:619)\njvm 1    |  INFO | ActiveMQ Message Broker (apollo, null) is shutting down\njvm 1    |  INFO | Connector openwire Stopped\njvm 1    |  INFO | Connector stomp Stopped\njvm 1    |  INFO | ActiveMQ JMS Message Broker (apollo, null) stopped\njvm 1    | ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException\njvm 1    | java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException\njvm 1    | \tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)\njvm 1    | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\njvm 1    | \tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)\njvm 1    | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\njvm 1    | \tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\njvm 1    | \tat org.apache.activemq.console.Main.main(Main.java:107)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)\njvm 1    | \tat java.lang.Thread.run(Thread.java:619)\njvm 1    | Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\njvm 1    | \tat java.security.AccessController.doPrivileged(Native Method)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)\njvm 1    | \tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\njvm 1    | \tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)\njvm 1    | \tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)\njvm 1    | \tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)\njvm 1    | \tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\njvm 1    | \tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)\njvm 1    | \tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\njvm 1    | \tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\njvm 1    | \tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\njvm 1    | \tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\njvm 1    | \t... 16 more\njvm 1    | Caused by: java.lang.NullPointerException\njvm 1    | \tat org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)\njvm 1    | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)\njvm 1    | \tat org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)\njvm 1    | \tat org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)\njvm 1    | \tat org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)\njvm 1    | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)\njvm 1    | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)\njvm 1    | \tat org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)\njvm 1    | \t... 36 more\njvm 1    | ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException\njvm 1    | java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException\njvm 1    | \tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)\njvm 1    | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\njvm 1    | \tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)\njvm 1    | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\njvm 1    | \tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\njvm 1    | \tat org.apache.activemq.console.Main.main(Main.java:107)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)\njvm 1    | \tat java.lang.Thread.run(Thread.java:619)\njvm 1    | Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.lang.NullPointerException\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1338)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\njvm 1    | \tat java.security.AccessController.doPrivileged(Native Method)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)\njvm 1    | \tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\njvm 1    | \tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)\njvm 1    | \tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)\njvm 1    | \tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)\njvm 1    | \tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\njvm 1    | \tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)\njvm 1    | \tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\njvm 1    | \tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\njvm 1    | \tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\njvm 1    | \tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\njvm 1    | \t... 16 more\njvm 1    | Caused by: java.lang.NullPointerException\njvm 1    | \tat org.apache.activemq.util.ByteSequence.<init>(ByteSequence.java:29)\njvm 1    | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getLastMessageBrokerSequenceId(JDBCPersistenceAdapter.java:232)\njvm 1    | \tat org.apache.activemq.store.journal.JournalPersistenceAdapter.getLastMessageBrokerSequenceId(JournalPersistenceAdapter.java:222)\njvm 1    | \tat org.apache.activemq.broker.region.DestinationFactoryImpl.getLastMessageBrokerSequenceId(DestinationFactoryImpl.java:140)\njvm 1    | \tat org.apache.activemq.broker.region.RegionBroker.<init>(RegionBroker.java:106)\njvm 1    | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.<init>(ManagedRegionBroker.java:94)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)\njvm 1    | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:276)\njvm 1    | \tat org.apache.activemq.store.journal.JournalPersistenceAdapter.start(JournalPersistenceAdapter.java:265)\njvm 1    | \tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)\njvm 1    | \tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njvm 1    | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\njvm 1    | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\njvm 1    | \tat java.lang.reflect.Method.invoke(Method.java:597)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)\njvm 1    | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)\njvm 1    | \t... 36 more\nwrapper  | <-- Wrapper Stopped\n",
        "DefaultJDBCAdapter returns incorrect value that prevents ActiveMQ from starting. org.apache.activemq.store.jdbcJDBCPersistenceAdapter.getLastMessageBrokerSequenceId() calls:\n\norg.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter:\n\nThe call to doGetLastMessageStoreSequenceId will return the max acks table id if the max msgs id is less.\n\nThe result is used to seed the sequenceGenerator:\n\nlong seq =  getAdapter().doGetLastMessageStoreSequenceId(c);\nsequenceGenerator.setLastSequenceId(seq);\n\nHowever the next call to set the brokerSeq variable will fail if the seq variable has been seeded with the max acks id, as 'doGetMessageById' expects a valid msgs id.\n\nlong brokerSeq = 0;\n            if (seq != 0) {\n            \tMessage last = (Message)wireFormat.unmarshal(new ByteSequence(getAdapter().doGetMessageById(c, seq)));\n            \tbrokerSeq = last.getMessageId().getBrokerSequenceId();\n            }\n            return brokerSeq;\n\nIf 'seq' is not a valid msgs id (I presume because the message has expired and/or been removed) then this causes a NullPointerException in ByteSequence, which is not caught, and this leads to a complete failure to start ActiveMQ.\n\nThe solution is not simple if the tables are in production, and is compounded even further by durable subscribers that cannot simply be deleted from the acks table."
    ],
    [
        "AMQ-3547",
        "AMQ-3529",
        "Calling Connection.close() on interrupted thread generates InterruptedIOException and leaks Connection Similar to https://issues.apache.org/jira/browse/AMQ-3529\r\n\r\ncall close() method on connection raise JMSException with InterruptedIOException as cause\r\n\r\nSample program:\r\n\r\npublic static void main(String[] args) throws Exception {\r\n\tConnectionFactory connectionFactory = new ActiveMQConnectionFactory(\"tcp://localhost:61616\");\r\n\tConnection connection = connectionFactory.createConnection();\r\n\tSession session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\r\n\tfinal Thread mainThread = Thread.currentThread();\r\n\tnew Thread() {\r\n\r\n\t\tpublic void run() {\r\n\t\t\t// this thread interrupt main thread after 1s\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(1000);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t}\r\n\t\t\tmainThread.interrupt();\r\n\t\t};\r\n\t}.start();\r\n\r\n\ttry {\r\n\t\t//wait for interrupt\r\n\t\tThread.sleep(10000);\r\n\t} catch (InterruptedException e) {\r\n\t\tThread.currentThread().interrupt();\r\n\t}\r\n\r\n\ttry {\r\n\t\t// this generate exception - bug???\r\n\t\tconnection.close();\r\n\t} catch (JMSException e) {\r\n\t\te.printStackTrace();\r\n\t}\r\n\t// non-daemon thread responsible for connection still running, program\r\n\t// will not terminate\r\n}\r\n\r\n\r\nwhen I remove line with Session obtain, everything works OK",
        "Calling Thread.interrupt while in MessageConsumer#receive(timeout) generates java.io.InterruptedIOException and leaks Connection  Hello,\r\nWhile running tests with JMeter and calling stop while test is running, I see that Transport thread stays open and all close() on Connection, MessageConsumer, Session calls fails with exception:\r\n2011/10/08 17:16:59 ERROR - jmeter.protocol.jms.client.ReceiveSubscriber: Error during close:  javax.jms.JMSException: java.io.InterruptedIOException\r\n\tat org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)\r\n\tat org.apache.activemq.ActiveMQConnection.doSyncSendPacket(ActiveMQConnection.java:1342)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:660)\r\n\tat org.apache.jmeter.protocol.jms.Utils.close(Utils.java:65)\r\n\tat org.apache.jmeter.protocol.jms.client.ReceiveSubscriber.close(ReceiveSubscriber.java:236)\r\n\tat org.apache.jmeter.protocol.jms.sampler.SubscriberSampler.threadFinished(SubscriberSampler.java:305)\r\n\tat org.apache.jmeter.threads.JMeterThread$ThreadListenerTraverser.addNode(JMeterThread.java:579)\r\n\tat org.apache.jorphan.collections.HashTree.traverseInto(HashTree.java:986)\r\n\tat org.apache.jorphan.collections.HashTree.traverse(HashTree.java:969)\r\n\tat org.apache.jmeter.threads.JMeterThread.threadFinished(JMeterThread.java:554)\r\n\tat org.apache.jmeter.threads.JMeterThread.run(JMeterThread.java:328)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: java.io.InterruptedIOException\r\n\tat org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:102)\r\n\tat org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)\r\n\tat org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)\r\n\tat org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:91)\r\n\tat org.apache.activemq.ActiveMQConnection.doSyncSendPacket(ActiveMQConnection.java:1329)\r\n\t... 10 more\r\n\r\n\r\nI opened an issue in JMeter with all details but I think issue is in ActiveMQ, see:\r\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=51997\r\n\r\nIssue contains a Test Plan, and all details.\r\n\r\nRegards\r\nPhilippe\r\n"
    ],
    [
        "AMQ-3552",
        "AMQ-3247",
        "activemq:list doesn't use the correct Karaf JMX URL by default After a fresh ActiveMQ installation on Karaf, the activemq:list command doesn't use the correct JMX URL by default:\r\n\r\nConnecting to JMX URL: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi\r\nERROR: java.lang.RuntimeException: Failed to execute list task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.NameNotFoundException: jmxrmi\r\njava.lang.RuntimeException: Failed to execute list task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.NameNotFoundException: jmxrmi\r\n        at org.apache.activemq.console.command.ListCommand.runTask(ListCommand.java:53)\r\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\n        at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:316)\r\n        at org.apache.activemq.karaf.commands.ActiveMQCommandSupport.doExecute(ActiveMQCommandSupport.java:46)\r\n        at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:38)\r\n        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:35)\r\n        at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)\r\n        at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:474)\r\n        at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:400)\r\n        at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)\r\n        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)\r\n        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)\r\n        at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)\r\n        at org.apache.karaf.shell.console.jline.Console.run(Console.java:218)\r\n        at java.lang.Thread.run(Thread.java:662)\r\n\r\n\r\nWhereas it should use service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-root\r\n\r\nMore over, ActiveMQ should use the Karaf serviceURL property.\r\n\r\nI'm gonna submit a patch.",
        "ensure that activemq-console command like activemq:list/activemq:query/activemq:bstat can work in servicemix container out-of-box This issue is actually in Servicemix4 we can't use activemq-console command like activemq:list/activemq:query/activemq:bstat out-of-box with default option, more details from SMX4-784[1]\r\n\r\n[1]https://issues.apache.org/jira/browse/SMX4-784"
    ],
    [
        "AMQ-3593",
        "AMQ-2860",
        "Messages with empty marshalledProperties Sometimes messages arrive on the client with an empty \"marshalledProperties\" field. This causes an exception trying to unmarshall them.\r\nThis happens very rarely, but we've got at least 2-3 cases a day per subscriber in our production environment.\r\nWe use a broker embedded with a server component that publishes messages on topics. The subscribers are remote.\r\nI was unable to replicate the problem on my Windows workstation, nor to reproduce it precisely.\r\n\r\nAttached you can find a simple pair of programs (the publisher and the subscriber) that can reproduce the issue within 5 minutes at most on my environment. This happens only if at least one of the subscribers runs on a remote machine and it seems to happen quickly with more clients connected.\r\nThe publishing program has a command line arguments that allows to adjust the publishing rate, in my case with 10,000 messages per second and 2 clients the problem happens within a couple of minutes.\r\n\r\nI also found a workaround for this problem: as far as I can understand, my original message is copied as a Java object to the broker (the broker is embedded, so there is no need to serialize it), then it is copied using its copy method to one or more new ActiveMQMessage instances and these are pushed into the consumer queues and then serialized to be sent over tcp.\r\nI think that under some particular conditions the properties are not serialized into the marshalledProperties field or this happens after the message has been actually sent.\r\nMy workaround is to force the marshalling of properties into the marshalledProperties field when the message is copied using the copy method.\r\nThis is not very clean, but still acceptable. The problem is that, in order for this to work, I need to create messages of a subclass of ActiveMqBytesMessage using an explicit constructor call rather that session.createBytesMessage() and I need to set the connection into them.\r\nHere is the code of my redefined class (this is the BytesMessage version, but the same is applicable to other kinds of messages):\r\n\r\n{noformat}\r\nimport java.io.DataOutputStream;\r\nimport java.io.IOException;\r\n\r\nimport javax.jms.Session;\r\n\r\nimport org.apache.activemq.ActiveMQSession;\r\nimport org.apache.activemq.command.ActiveMQBytesMessage;\r\nimport org.apache.activemq.command.Message;\r\nimport org.apache.activemq.util.ByteArrayOutputStream;\r\nimport org.apache.activemq.util.MarshallingSupport;\r\n\r\npublic class EarlySerializingBytesMessage extends ActiveMQBytesMessage\r\n{\r\n    private static final org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(EarlySerializingBytesMessage.class);\r\n    \r\n    public EarlySerializingBytesMessage(Session session)\r\n    {\r\n        ActiveMQSession activeMqSession = (ActiveMQSession)session;\r\n        setConnection(activeMqSession.getConnection());\r\n    }\r\n    \r\n    /*\r\n     * We redefine <code>copy</code> to force the marshalling of properties here and avoid a problem we've found with serialized properties \r\n     * arriving empty on the client side.\r\n     * This is a workaround to make sure the properties are already serialized when ActiveMQ actually sends the message to\r\n     * the client.\r\n     * This happens very rarely and it is very difficult to spot this error in a \"normal\" testing session.\r\n     * To have reasonable changes to reproduce it, we use a stress test tool that sends 5000 messages a second and at that rate\r\n     * the error happens usually within 10 minutes, so we can say that one message every million is typically affected.\r\n     * The actual problem is probably due to a bug in the ActiveMQ broker. Basically, it serializes every message just before\r\n     * sending it and it happens that the marshalled properties are missing the resulting message, so we get an error on the client\r\n     * as soon as we try to read them.\r\n     * Since we use an embedded broker, our original message is never serialized, it is passed into the publishing queue as a Java object,\r\n     * then it is copied into a new message of the same base type (ActiveMQBytesMessage, in this case) and pushed into the subscribers' \r\n     * queues (a topic is actually implemented as a series of queues, one for each subscriber). In order to do this, the <code>copy</code>\r\n     * method is invoked, we redefine it to early serialize the properties and make sure that this step is not skipped.\r\n     */\r\n    @Override\r\n    public Message copy()\r\n    {\r\n        try\r\n        {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            DataOutputStream os = new DataOutputStream(baos);\r\n            MarshallingSupport.marshalPrimitiveMap(properties, os);\r\n            os.close();\r\n            marshalledProperties = baos.toByteSequence();\r\n        }\r\n        catch(IOException exc)\r\n        {\r\n            logger.error(\"Error marhalling message properties, message was \" + this, exc);\r\n        }\r\n        \r\n        return super.copy();\r\n    }\r\n}\r\n{noformat}\r\n\r\n\r\nThe problem happens both on Java and C# clients, with the following stacktraces:\r\n\r\nJava:\r\n{noformat}\r\njavax.jms.JMSException: java.io.EOFException\r\n        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)\r\n        at org.apache.activemq.filter.PropertyExpression.evaluate(PropertyExpression.java:199)\r\n        at org.apache.activemq.command.ActiveMQMessage.getObjectProperty(ActiveMQMessage.java:509)\r\n        at org.apache.activemq.command.ActiveMQMessage.getStringProperty(ActiveMQMessage.java:604)\r\n        at activemq.emptypropertiestest.Subscriber$1.onMessage(Subscriber.java:65)\r\n        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1230)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n        at java.lang.Thread.run(Thread.java:619)\r\nCaused by: java.io.EOFException\r\n        at java.io.DataInputStream.readInt(DataInputStream.java:375)\r\n        at org.apache.activemq.util.MarshallingSupport.unmarshalPrimitiveMap(MarshallingSupport.java:83)\r\n        at org.apache.activemq.util.MarshallingSupport.unmarshalPrimitiveMap(MarshallingSupport.java:73)\r\n        at org.apache.activemq.command.Message.unmarsallProperties(Message.java:202)\r\n        at org.apache.activemq.command.Message.getProperty(Message.java:159)\r\n        at org.apache.activemq.filter.PropertyExpression.evaluate(PropertyExpression.java:197)\r\n        ... 11 more\r\n{noformat}\r\n\r\nC#:\r\n\r\n{noformat}\r\nSystem.IO.EndOfStreamException: Unable to read beyond the end of the stream.\r\n   at System.IO.MemoryStream.InternalReadInt32()\r\n   at System.IO.BinaryReader.ReadInt32()\r\n   at Apache.NMS.Util.EndianBinaryReader.ReadInt32()\r\n   at Apache.NMS.Util.PrimitiveMap.UnmarshalPrimitiveMap(BinaryReader dataIn)\r\n   at Apache.NMS.Util.PrimitiveMap.UnmarshalPrimitiveMap(Byte[] data)\r\n   at Apache.NMS.Util.PrimitiveMap.Unmarshal(Byte[] data)\r\n   at Apache.NMS.ActiveMQ.Commands.ActiveMQMessage.get_Properties()\r\n...\r\n{noformat}",
        "EOFException and ActiveMQMapMessage with null properties I am getting an error once in a while (see the log below).\nI have an impression that the EOFException is caused by the fact that the message has \"properties = null\". This looks like corrupt message. My sender sends messages of the ActiveMQMapMessage type and they all have some properties.\nThis happens to a small number of messages (compare to overall traffic), but very consistently. I handle the exception, but the information is lost.\n\n[2010-08-04 00:01:53.810] ERROR  Thread-36                    com.moon.data.rtfeed.client.ClientSubscription                    Problem reading message ActiveMQMapMessage {commandId = 2797499, responseRequired = true, messageId = ID:mcny9.mooncapital.corp-55291-1280869129156-2:1:1:1:2797495, originalDestination = null, originalTransactionId = null, producerId = ID:mcny9.mooncapital.corp-55291-1280869129156-2:1:1:1, destination = topic://MKTDATA, transactionId = null, expiration = 0, timestamp = 1280894513809, arrival = 0, brokerInTime = 1280894513809, brokerOutTime = 1280894513809, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@6f539d49, marshalledProperties = org.apache.activemq.util.ByteSequence@5a7b5cb8, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQMapMessage{ theTable = {} } javax.jms.JMSException: java.io.EOFException\n        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)\n        at org.apache.activemq.command.ActiveMQMessage.propertyExists(ActiveMQMessage.java:274)\n        at com.moon.data.rtfeed.client.ClientSubscription$DataTransformer.onMessage(ClientSubscription.java:463)\n        at com.moon.data.rtfeed.jms.JmsReceiver$MessageDispatcher.run(JmsReceiver.java:71)\nCaused by: java.io.EOFException: null\n        at java.io.DataInputStream.readInt(DataInputStream.java:375)\n        at org.apache.activemq.util.MarshallingSupport.unmarshalPrimitiveMap(MarshallingSupport.java:83)\n        at org.apache.activemq.util.MarshallingSupport.unmarshalPrimitiveMap(MarshallingSupport.java:73)\n        at org.apache.activemq.command.Message.unmarsallProperties(Message.java:189)\n        at org.apache.activemq.command.Message.getProperties(Message.java:162)\n        at org.apache.activemq.command.ActiveMQMessage.propertyExists(ActiveMQMessage.java:272)\n        ... 2 common frames omitted\n"
    ],
    [
        "AMQ-3602",
        "AMQ-3465",
        "javax.jms.JMSException: The resource is allready being used in transaction context.  My error code:\r\n{quote}javax.ejb.EJBException: nested exception is: javax.jms.JMSException: The resource is allready being used in transaction context.\r\njavax.jms.JMSException: The resource is allready being used in transaction context.\r\n        at org.apache.activemq.ra.ManagedTransactionContext.setUseSharedTxContext(ManagedTransactionContext.java:47)\r\n        at org.apache.activemq.ra.ManagedSessionProxy.setUseSharedTxContext(ManagedSessionProxy.java:67)\r\n        at org.apache.activemq.ra.ManagedConnectionProxy.createSessionProxy(ManagedConnectionProxy.java:122)\r\n        at org.apache.activemq.ra.ManagedConnectionProxy.createSession(ManagedConnectionProxy.java:105)\r\n        at ch.no.prod.mdb.ToProdMDB.publish(ToProdMDB.java:163)\r\n        at ch.no.prod.mdb.ToProdMDB.onMessage(ToProdMDB.java:107)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n        at java.lang.reflect.Method.invoke(Method.java:597)\r\n        at com.sun.enterprise.security.application.EJBSecurityManager.runMethod(EJBSecurityManager.java:1011)\r\n        at com.sun.enterprise.security.SecurityUtil.invoke(SecurityUtil.java:175)\r\n        at com.sun.ejb.containers.BaseContainer.invokeTargetBeanMethod(BaseContainer.java:2929)\r\n        at com.sun.ejb.containers.BaseContainer.intercept(BaseContainer.java:4020)\r\n        at com.sun.ejb.containers.MessageBeanContainer.deliverMessage(MessageBeanContainer.java:1111)\r\n        at com.sun.ejb.containers.MessageBeanListenerImpl.deliverMessage(MessageBeanListenerImpl.java:74)\r\n        at com.sun.enterprise.connectors.inflow.MessageEndpointInvocationHandler.invoke(MessageEndpointInvocationHandler.java:179)\r\n        at $Proxy62.onMessage(Unknown Source)\r\n        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:123)\r\n        at org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:64)\r\n        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:833)\r\n        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)\r\n        at com.sun.enterprise.connectors.work.OneWork.doWork(OneWork.java:77)\r\n        at com.sun.corba.ee.impl.orbutil.threadpool.ThreadPoolImpl$WorkerThread.run(ThreadPoolImpl.java:555)\r\njavax.ejb.EJBException: nested exception is: javax.jms.JMSException: The resource is allready being used in transaction context.\r\n        at ch.no.prod.mdb.ToProdMDB.publish(ToProdMDB.java:279)\r\n        at ch.no.prod.mdb.ToProdMDB.onMessage(ToProdMDB.java:107)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n        at java.lang.reflect.Method.invoke(Method.java:597)\r\n        at com.sun.enterprise.security.application.EJBSecurityManager.runMethod(EJBSecurityManager.java:1011)\r\n        at com.sun.enterprise.security.SecurityUtil.invoke(SecurityUtil.java:175)\r\n        at com.sun.ejb.containers.BaseContainer.invokeTargetBeanMethod(BaseContainer.java:2929)\r\n        at com.sun.ejb.containers.BaseContainer.intercept(BaseContainer.java:4020)\r\n        at com.sun.ejb.containers.MessageBeanContainer.deliverMessage(MessageBeanContainer.java:1111)\r\n        at com.sun.ejb.containers.MessageBeanListenerImpl.deliverMessage(MessageBeanListenerImpl.java:74)\r\n        at com.sun.enterprise.connectors.inflow.MessageEndpointInvocationHandler.invoke(MessageEndpointInvocationHandler.java:179)\r\n        at $Proxy62.onMessage(Unknown Source)\r\n        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:123)\r\n        at org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:64)\r\n        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:833)\r\n        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)\r\n        at com.sun.enterprise.connectors.work.OneWork.doWork(OneWork.java:77)\r\n        at com.sun.corba.ee.impl.orbutil.threadpool.ThreadPoolImpl$WorkerThread.run(ThreadPoolImpl.java:555){quote}\r\n \r\nAnd more informations found on web : http://osdir.com/ml/general/2011-11/msg29999.html and http://activemq.2283324.n4.nabble.com/Suspect-a-race-condition-in-TransactionContext-td3780046.html",
        "TransactionContext produces errors in concurrent environment Method \"isInXATransaction\" of class org.apache.activemq.TransactionContext seems to be implemeted incorrectly. Here is the code:\r\n\r\npublic boolean isInXATransaction() {\r\n    return (transactionId != null && transactionId.isXATransaction()) || !ENDED_XA_TRANSACTION_CONTEXTS.isEmpty();\r\n}\r\n\r\nMap \"ENDED_XA_TRANSACTION_CONTEXTS\" is a static field. TransactionContext instances are used for both outbound and inbound communications. Suppose a thread creating a new non-transactional session. It calls isInXATransaction and gets true, just because another thread is completing transactional message delivery at the same time. After XAResource.end() call but before XAResource.commit() call the map is not empty and it results in a JMSException in the first thread (see org.apache.activemq.ra.ManagedTransactionContext.setUseSharedTxContext(boolean)\").\r\n\r\n"
    ],
    [
        "AMQ-3648",
        "AMQ-2935",
        "ActiveMQ crashed with an error: Chunk stream does not exist at page... I tried to do a performance testing of AMQ 5.5.1, I generated 1 million of message, when I try to consume it, the AMQ service crashed with below error message, as I googled, this bug has been fixed in 5.4.X(http://apache-geronimo.328035.n3.nabble.com/Problem-starting-geronimo-ActiveMQ-td1563093.html), I'm not sure why I still get this bug.\r\n\r\nAMQ is running on /tmp, there're roughly 10G disk space left.\r\n\r\n[wcharry@grid03 kahadb]$ ls -sh\r\ntotal 1.2G\r\n 33M db-10.log   33M db-14.log   33M db-18.log   33M db-22.log   33M db-4.log   33M db-8.log     0 lock\r\n 33M db-11.log   33M db-15.log   33M db-19.log   33M db-24.log   33M db-5.log   33M db-9.log\r\n 33M db-12.log   33M db-16.log   33M db-20.log   33M db-25.log   33M db-6.log  511M db.data\r\n 33M db-13.log   33M db-17.log   33M db-21.log  7.4M db-43.log   33M db-7.log  3.2M db.redo\r\n\r\n\r\nError Log:\r\n2012-01-04 14:25:24,659 | INFO  | Transport failed: java.io.EOFException: Chunk stream does not exist at page: 59068 | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///165.204.233.33:62756\r\n2012-01-04 14:25:24,660 | INFO  | ActiveMQ Message Broker (localhost, ID:peogrid03-39307-1325646129035-0:1) is shutting down | org.apache.activemq.broker.BrokerService | Stopping the broker due to IO exception\r\n2012-01-04 14:25:24,716 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | Stopping the broker due to IO exception\r\n@                                ",
        "java.io.EOFException: Chunk stream does not exist at page on broker start I am seeing this regularly upon restarts in all versions from 5.4.x - I cannot downgrade due to breaking issues in previous versions.\nThe broker was shutdown cleanly with no logged issues.\nDeleting the activemq-data directory seems to be the only recovery solution (which is not an option in production)\n\n2010-09-23 13:54:30,997 [Starting ActiveMQ Broker] ERROR org.apache.activemq.broker.BrokerService - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.EOFException: Chunk stream does not exist at page: 0\njava.io.EOFException: Chunk stream does not exist at page: 0\n\tat org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)\n\tat org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)\n\tat org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)\n\tat org.apache.kahadb.page.Transaction.load(Transaction.java:404)\n\tat org.apache.kahadb.page.Transaction.load(Transaction.java:361)\n\tat org.apache.activemq.broker.scheduler.JobSchedulerStore$3.execute(JobSchedulerStore.java:250)\n\tat org.apache.kahadb.page.Transaction.execute(Transaction.java:728)\n\tat org.apache.activemq.broker.scheduler.JobSchedulerStore.doStart(JobSchedulerStore.java:239)\n\tat org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)\n\tat org.apache.activemq.broker.scheduler.SchedulerBroker.getStore(SchedulerBroker.java:198)\n\tat org.apache.activemq.broker.scheduler.SchedulerBroker.getInternalScheduler(SchedulerBroker.java:185)\n\tat org.apache.activemq.broker.scheduler.SchedulerBroker.start(SchedulerBroker.java:85)\n\tat org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)\n\tat org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)\n\tat org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)\n\tat org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1786)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:496)\n\tat org.apache.activemq.ra.ActiveMQResourceAdapter$1.run(ActiveMQResourceAdapter.java:85)"
    ],
    [
        "AMQ-3655",
        "AMQ-3526",
        "No information of destinations is present on web console or jconsole even my activemq_msgs, have lots of destinations when broker starts up I have just noted that there is no information about existing destinations on web console or jconsole after my broker starts up.These destinations exist on my message table activemq_msgs and they are present again when some producers or consumers are active.\r\nI'm sure this works well on 5.2 because I had used this to inspect my destinations before 2 years ago.\r\nI also check the source code of class Statements and find that the query statement of 5.5 is different from the old one.\r\nThe statement of 5.5 likes this:\r\nfindAllDestinationsStatement = \"SELECT DISTINCT CONTAINER FROM \" + getFullAckTableName();\r\nwhile 5.2 is the following:\r\nfindAllDestinationsStatement = \"SELECT DISTINCT CONTAINER FROM \" + getFullMessageTableName();\r\nIn my option,JDBCAdapter should fetch all destinations from the message table,not ack table.\r\nIs it a mistake or what's the reason about this changing?",
        "JDBC persistence adapter, destination mbeans not visible on restart till producers or consumers  reattach With the jdbc store, if there are pending messages on a restart, the destinations do not appear in jmx till they are reused. So inactive destinations are not recreated on restart.\r\nAny use of the destination will get the mbean to be created, new producer/consumer etc."
    ],
    [
        "AMQ-3666",
        "AMQ-3660",
        "Javascript AMQ Connector XML response truncated in Firefox Firefox has a 4096 byte text node content limit, if this limit is reached, Firefox splits text node and then Javascript adapter sends those truncated nodes to handler function.\r\nI've been able to overcome this issue, please see patch.",
        "amq.js breaks messages longer than 4KB in Firefox Hello,\r\n\r\nI report a small glitch that affects the client-side Ajax script {{amq.js}} and Firefox with big messages. It is very easy to reproduce: \r\n* start the ActiveMQ broker locally\r\n* open Firefox (I am using version 8.0.1) and another browser of your choice, \r\n* point both of them to the chat example and join the chat,\r\n* send a BIG string (more than 4096 chars) from the second browser,\r\n* check the length of the string that appears on Firefox: exactly *4096 chars*.\r\n\r\nAfter a bit of googling I found out that [Firefox limits the size of XML nodes to 4K|http://www.coderholic.com/firefox-4k-xml-node-limit/], while in {{amq.js}} every node is handled as a separate message:\r\n{code:javascript}\r\n// Loop thru and handle each <message>\r\nfor (var j = 0; j < responseElement.childNodes.length; j++) {\r\n    handler(responseElement.childNodes[j]);\r\n}\r\n{code}\r\n\r\nI found out about the bug while sending rather large JSON strings, that obviously could not be parsed. I fixed that in my code with a quite naive patch for {{amq.js}} that \"glues\" nodes together in a string and handles them as a single message, but that is not always enough (e.g. the message handler in {{chat.js}} does not accept strings).\r\n\r\nIf you guys have clever hints I will be happy to work on a patch for this.\r\n\r\nCiao,\r\nClaudio"
    ],
    [
        "AMQ-3677",
        "AMQ-3634",
        "NullPointerException in MessageDatabase leaves message stuck in KahaDB A message appears to have gotten into a stuck state where it cannot be expired from KahaDB.\r\n\r\nEach expiry pass (every 30 seconds) is failing, presumably on the same message as the destination/expiration/timestamp/brokerInTime/etc are all identical:\r\n\r\n{code}\r\n2012-01-23 14:02:48,191 ERROR ranteed.2] Scheduler BrokerLauncher                                 org.apache.activemq.broker.ConnectionContext@7c0e6709: Persistent message has expired: ActiveMQBytesMessage {commandId = 1611, responseRequired = true, messageId = ID:broker1-59818-1327207516246-2:1:1:2:1, originalDestination = null, originalTransactionId = null, producerId = ID:broker-38443-1327100544854-21:1:1:1, destination = topic://TOPIC, transactionId = null, expiration = 1327294033981, timestamp = 1327207633981, arrival = 0, brokerInTime = 1327207633998, brokerOutTime = 1327207633993, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@35fa419, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = false, readOnlyBody = false, droppable = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null } for DurableTopicSubscription-NC_broker.1_inbound_broker.1.SystemGuaranteed.2:NC-DS_broker.1.SystemGuaranteed.2_TOPIC, id=OFFLINE:1:17, active=false, destinations=1, total=9, pending=9, dispatched=0, inflight=0, prefetchExtension=0\r\n2012-01-23 14:02:48,191 ERROR ranteed.2] Scheduler BrokerLauncher                                 Sent to DLQ: ActiveMQBytesMessage {commandId = 1611, responseRequired = true, messageId = ID:broker1-59818-1327207516246-2:1:1:2:1, originalDestination = null, originalTransactionId = null, producerId = ID:broker-38443-1327100544854-21:1:1:1, destination = topic://TOPIC, transactionId = null, expiration = 1327294033981, timestamp = 1327207633981, arrival = 0, brokerInTime = 1327207633998, brokerOutTime = 1327207633993, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@35fa419, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = false, readOnlyBody = false, droppable = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null } DurableTopicSubscription-NC_broker.1_inbound_broker.2:NC-DS_broker.2_TOPIC, id=OFFLINE:1:17, active=false, destinations=1, total=9, pending=9, dispatched=0, inflight=0, prefetchExtension=0 org.apache.activemq.broker.ConnectionContext@7c0e6709\r\n2012-01-23 14:02:48,192 ERROR ranteed.2] Scheduler o.a.a.broker.region.Topic                                Failed to remove expired Message from the store \r\njava.lang.NullPointerException: null\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.removeAckLocation(MessageDatabase.java:1920) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1197) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:990) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:760) ~[kahadb-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:988) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:923) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:915) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:827) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:693) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:679) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.acknowledge(KahaDBTransactionStore.java:492) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.KahaDBTransactionStore$2.acknowledge(KahaDBTransactionStore.java:201) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:494) [activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.Topic.messageExpired(Topic.java:686) [activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:568) [activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.Topic.access$100(Topic.java:63) [activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.Topic$6.run(Topic.java:667) [activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33) [activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at java.util.TimerThread.mainLoop(Unknown Source) [na:1.6.0_30]\r\n        at java.util.TimerThread.run(Unknown Source) [na:1.6.0_30]\r\n{code}\r\n\r\nRestarting the broker does not help. Restarting the client causes the same exception to be serialised to the client:\r\n\r\n{code}\r\n2012-01-23 01:40:49,903 ERROR true&soTimeout=60000 ErrorListener                           Error\r\njavax.jms.JMSException: java.lang.NullPointerException\r\n        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1855) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.ActiveMQConnection$2$1.run(ActiveMQConnection.java:1776) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source) [na:1.6.0_30]\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.6.0_30]\r\n        at java.lang.Thread.run(Unknown Source) [na:1.6.0_30]\r\nCaused by: java.lang.NullPointerException: null\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.removeAckLocation(MessageDatabase.java:1920) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1197) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:990) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:760) ~[kahadb-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:988) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:923) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:915) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:827) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:693) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:679) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.acknowledge(KahaDBTransactionStore.java:492) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.store.kahadb.KahaDBTransactionStore$2.acknowledge(KahaDBTransactionStore.java:201) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:494) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:270) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:229) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:427) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:568) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:276) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:477) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:229) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:138) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:69) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119) ~[activemq-core-5.5.1-fuse-01-13.jar:5.5.1-fuse-01-13]\r\n        ... 3 common frames omitted\r\n{code}\r\n\r\nIs there any mechanism to purge the stuck message (without blowing away the whole database), or deal with the situation automatically?",
        "Automatic recovery on startup when index is corrupted When index is corrupted broker won't start up. Index files need to be deleted and broker restarted. This leads to unnecessary downtime and manual intervention which is prone to error. It'd be better to automatically delete (archive) the index and start recovering in those situations."
    ],
    [
        "AMQ-3712",
        "AMQ-3526",
        "ActiveMQ browser shows negative message count with messages dequeued count greater than messages enqueued It happened in regular activemq environment.\r\nIt seems messages are rightly consumed but messages dequeued count is greater than messages enqueued.",
        "JDBC persistence adapter, destination mbeans not visible on restart till producers or consumers  reattach With the jdbc store, if there are pending messages on a restart, the destinations do not appear in jmx till they are reused. So inactive destinations are not recreated on restart.\r\nAny use of the destination will get the mbean to be created, new producer/consumer etc."
    ],
    [
        "AMQ-3712",
        "AMQ-3655",
        "ActiveMQ browser shows negative message count with messages dequeued count greater than messages enqueued It happened in regular activemq environment.\r\nIt seems messages are rightly consumed but messages dequeued count is greater than messages enqueued.",
        "No information of destinations is present on web console or jconsole even my activemq_msgs, have lots of destinations when broker starts up I have just noted that there is no information about existing destinations on web console or jconsole after my broker starts up.These destinations exist on my message table activemq_msgs and they are present again when some producers or consumers are active.\r\nI'm sure this works well on 5.2 because I had used this to inspect my destinations before 2 years ago.\r\nI also check the source code of class Statements and find that the query statement of 5.5 is different from the old one.\r\nThe statement of 5.5 likes this:\r\nfindAllDestinationsStatement = \"SELECT DISTINCT CONTAINER FROM \" + getFullAckTableName();\r\nwhile 5.2 is the following:\r\nfindAllDestinationsStatement = \"SELECT DISTINCT CONTAINER FROM \" + getFullMessageTableName();\r\nIn my option,JDBCAdapter should fetch all destinations from the message table,not ack table.\r\nIs it a mistake or what's the reason about this changing?"
    ],
    [
        "AMQ-3793",
        "AMQ-3764",
        "common use of activemq with failover transport causes deadlock I just use jmsAppender as below:\r\n\r\n\tlog.info(\"testsetstsettset\");\r\n\r\nwhile the log4j.properties :\r\n\r\nlog4j.category.test = jms\r\n\r\nlog4j.appender.jms=org.apache.log4j.net.JMSAppender\r\nlog4j.appender.jms.InitialContextFactoryName=org.apache.activemq.jndi.ActiveMQInitialContextFactory\r\nlog4j.appender.jms.ProviderURL=failover://(tcp://localhost:61616)\r\nlog4j.appender.jms.TopicBindingName=topic\r\nlog4j.appender.jms.TopicConnectionFactoryBindingName=ConnectionFactory\r\n\r\n\r\nwhen I run this program, it will causes a deadlock hanging. \r\n\r\nstack:\r\n\r\n\"ActiveMQ Task-1\" daemon prio=10 tid=0x00002aaab442a000 nid=0x7b13 in Object.wait() [0x000000004367e000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat org.apache.log4j.LogManager.getLoggerRepository(LogManager.java:196)\r\n\tat org.apache.log4j.LogManager.getLogger(LogManager.java:228)\r\n\tat org.slf4j.impl.Log4jLoggerFactory.getLogger(Log4jLoggerFactory.java:73)\r\n\t- locked <0x00000000eb35cfc8> (a org.slf4j.impl.Log4jLoggerFactory)\r\n\tat org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:249)\r\n\tat org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:261)\r\n\tat org.apache.activemq.transport.tcp.TcpTransportFactory.<clinit>(TcpTransportFactory.java:48)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:513)\r\n\tat java.lang.Class.newInstance0(Class.java:355)\r\n\tat java.lang.Class.newInstance(Class.java:308)\r\n\tat org.apache.activemq.util.FactoryFinder$StandaloneObjectFactory.create(FactoryFinder.java:61)\r\n\tat org.apache.activemq.util.FactoryFinder.newInstance(FactoryFinder.java:146)\r\n\tat org.apache.activemq.transport.TransportFactory.findTransportFactory(TransportFactory.java:201)\r\n\tat org.apache.activemq.transport.TransportFactory.compositeConnect(TransportFactory.java:92)\r\n\tat org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:857)\r\n\t- locked <0x00000000eb47fff8> (a java.lang.Object)\r\n\tat org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:136)\r\n\t- locked <0x00000000eb480008> (a java.lang.Object)\r\n\tat org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)\r\n\tat org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\n\r\n----\r\n\"main\" prio=10 tid=0x000000004d9e5800 nid=0x7aea waiting for monitor entry [0x00000000417ca000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:482)\r\n\t- waiting to lock <0x00000000eb47fff8> (a java.lang.Object)\r\n\tat org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)\r\n\t- locked <0x00000000eb514470> (a java.lang.Object)\r\n\tat org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)\r\n\tat org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)\r\n\tat org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1284)\r\n\tat org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1392)\r\n\t- locked <0x00000000eb5962a8> (a java.lang.Object)\r\n\tat org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:309)\r\n\tat org.apache.activemq.ActiveMQConnection.createTopicSession(ActiveMQConnection.java:1087)\r\n\tat org.apache.log4j.net.JMSAppender.activateOptions(JMSAppender.java:218)\r\n\tat org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:307)\r\n\tat org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:172)\r\n\tat org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:104)\r\n\tat org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:809)\r\n\tat org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:735)\r\n\tat org.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(PropertyConfigurator.java:639)\r\n\t- locked <0x00000000eb285bf8> (a org.apache.log4j.Logger)\r\n\tat org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:504)\r\n\tat org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:547)\r\n\tat org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:483)\r\n\tat org.apache.log4j.LogManager.<clinit>(LogManager.java:127)\r\n\tat org.apache.log4j.Logger.getLogger(Logger.java:104)\r\n\tat org.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:229)\r\n\tat org.apache.commons.logging.impl.Log4JLogger.<init>(Log4JLogger.java:65)\r\n\r\n\r\n\r\nIf I put the logic in JMSAppender.activateOption into another method and invoke this method in append method, the problem will no longer appear. \r\nIs there something mistake when I use activemq and jmsAppender ?",
        "JMSAppender cannot connect to activemq using failover Hi All, \r\n\r\nI tried to use Log4jJMSAppenderExample.java and set failover:(localhost:61616) property ProvierURL in log4j.properties file.\r\n\r\nBut I can not connect to activemq and stop below line.\r\n\r\n log4j: Creating TopicSession, non-transactional, in AUTO_ACKNOWLEDGE mode.\r\n\r\ntrace:\r\nlog4j: Parsing appender named \"jms\".\r\nlog4j: Setting property [initialContextFactoryName] to [org.apache.activemq.jndi.ActiveMQInitialContextFactory].\r\nlog4j: Setting property [topicBindingName] to [logTopic].\r\nlog4j: Setting property [topicConnectionFactoryBindingName] to [ConnectionFactory].\r\nlog4j: Setting property [providerURL] to [failover:(tcp://localhost:61616)].\r\nlog4j: Getting initial context.\r\nlog4j: Looking up [ConnectionFactory]\r\nlog4j: About to create TopicConnection.\r\n2012-03-13 14:28:29,900 DEBUG org.apache.activemq.transport.failover.FailoverTransport - Reconnect was triggered but transport is not started yet. Wait for start to connect the transport.\r\n2012-03-13 14:28:30,045 DEBUG org.apache.activemq.transport.failover.FailoverTransport - Started.\r\n2012-03-13 14:28:30,046 DEBUG org.apache.activemq.transport.failover.FailoverTransport - Waking up reconnect task\r\nlog4j: Creating TopicSession, non-transactional, in AUTO_ACKNOWLEDGE mode.\r\n\r\n\r\nlog4j.properties:\r\nlog4j.appender.jms=org.apache.log4j.net.JMSAppender\r\nlog4j.appender.jms.InitialContextFactoryName=org.apache.activemq.jndi.ActiveMQInitialContextFactory\r\nlog4j.appender.jms.ProviderURL=failover:(tcp://localhost:61616)\r\nlog4j.appender.jms.TopicBindingName=logTopic\r\nlog4j.appender.jms.TopicConnectionFactoryBindingName=ConnectionFactory\r\n\r\n\r\nPlease help and any advise."
    ],
    [
        "AMQ-3794",
        "AMQ-3284",
        "The body of StompFrame is truncated to 64 chars The method \r\n{code:title=org.apache.activemq.transport.ws.StompSocket.java}\r\npublic void sendToStomp(StompFrame command) throws IOException {\r\n   outbound.sendMessage(WebSocket.SENTINEL_FRAME, command.toString());\r\n}\r\n{code}\r\n\r\n calls {{toString()}} method of the {{StompFrame}} instance instead of the {{format()}} method. The message body is truncated by the {{toString()}} to 64 chars.",
        "WebSockets and truncated body In WebSocket transport, StompSocket class calls StompFrame.toString() instead StompFrame.format(). Because of this, some frames can be truncated."
    ],
    [
        "AMQ-3818",
        "AMQ-3801",
        "Delayed persistent messages are lost if the broker is hard killed during the delay. Persistent messages that are sent with a delay are lost by the ActiveMQ 5.5.1 broker if the broker is hard killed before the scheduler finishes its work at the end of the delay.  This isn't a problem if the broker is gracefully shutdown or if the broker continues to run beyond the delay, even if a consumer isn't waiting to immediately consume the message.  If the broker goes down hard during the delay, even if the broker isn't busy, then it will lose 100% of the persistent messages that are waiting for their delay to come to an end.\r\n\r\nA simple test case that reproduces this issue can be made by having a producer send one thousand messages that each have a one minute delay.  As soon as the last message has been sent by the producer wait an addtional second or two and then hard kill the broker.  The hard kill should happen before the one minute delay has passed for the first message.  Immediately restart the broker and then start a consumer that is looking for those one thousand messages.  Even after a couple of minutes, the messages will not have made it to the consumer.",
        "Job scheduler can lose data on forced kill The page file that keeps the index of jobs to be scheduled is using default write batch size of 1000. That means that index could get into incorrect state when broker is killed (and there's no recovery for this index). Turning off batching (as it's not needed for this low-volume index) will ensure that changes are always persisted immediately. "
    ],
    [
        "AMQ-3912",
        "AMQ-3444",
        "Durable subs store messages in error with broker attribute persistent=\"false\" persistent=\"false\" means use only the memory persistence adapter, ignore the persistence attribute of a message or durable sub.\r\nIf a <persistenceAdapter /> element is specified in xml config, durable subs do get persistence of messages that will survive a restart. This is not the intent of persistent=\"false\"",
        "Fail Fast or Warn on using fileCursors/fileQueueCursors when <broker persistent=\"false\"> When working with a broker config for a client, we attempted to use fileCursors and fileQueueCursors on all destinations.  What we noticed when monitoring JMX for specific queues was behavior of vmCursors.  Once the memoryLimit for an individual destination hit 100%, the broker then tried to spool the messages to disk but instead failed and the following exceptions were written to log:\r\n\r\n2011-08-09 13:50:22,892 [Usage Async Task                   ] ERROR FilePendingMessageCursor       - Caught an IO Exception getting the DiskList 315_PendingCursor:FLEXNET-RX-REALTIME-QUEUE\r\njava.lang.NullPointerException\r\n\tat org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:454)\r\n\tat org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:432)\r\n\tat org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.onUsageChanged(FilePendingMessageCursor.java:385)\r\n\tat org.apache.activemq.usage.Usage$1.run(Usage.java:268)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n\tat java.lang.Thread.run(Thread.java:662)\r\n\r\n\r\nAfter eyeing the config a little more we noticed that <broker persistent=\"false\">.  Turning that back to \"true\" caused messages to spool to disk as expected.\r\n\r\nThis was obviously a misconfiguration, but there was no warning or indication that our configuration was basically invalid and destined to fail.  At a minimum it would be useful to have a message at WARN log level that states that fileCursor/fileQueueCursors will fail if <broker persistent=\"false\">.  "
    ],
    [
        "AMQ-3925",
        "AMQ-3907",
        "Advisory messages/topics not generated for ActiveMQ.Advisory.FULL or ActiveMQ.Advisory.FastProducer.Queue Two problems relating to advisory messages\r\n\r\n# Advisory messages and topics are not being created for {{ActiveMQ.Advisory.FULL}} or {{ActiveMQ.Advisory.FastProducer.\\{Queue,Topic}}}\\\\\r\n\\\\\r\n# The {{PolicyEntry}} property for {{ActiveMQ.Advisory.FastProducer.\\{Queue,Topic}}} is misspelled as advis{color:red}d{color}oryForFastProducers.\\\\\r\n\\\\\r\nNote that it is spelled with an extra 'd' (advisDory....) Moreover, the configuration XML expects the 'd' in this name. I tried spelling it correctly and activemq 5.6.0 failed when I used the corrected name of advisoryForFastProducers.\\\\\r\n\\\\\r\n\r\n\r\nI have customized the {{{color:blue}activemq.xml{color}}} configuration file so that advisory support is enabled, and I added a policy entry to turn on {{ActiveMQ.Advisory.FULL}} and {{ActiveMQ.Advisory.FastProducer.Queue}}. Moreover, {{systemUsage}} has been configured to send an exception to the producer if memory, storage or temp usage exceeds certain amounts.\r\n\r\nI have attached my {{{color:blue}activemq.xml{color}}} file.\r\n\r\n\r\nI have expanded the {{{color:blue}simple_producer.cpp{color}}} example file to use the AMQ client interface that our product has. Essentially it creates a connection and all the scaffolding to send messages to the broker. Then it sits in a loop and sends messages. It has some parameters to allow control such as exiting on the first exception (such as when the broker sends its flow control exception when the producer causes the broker to reach it's configured limits, or limiting the number of messages to send).\r\n\r\nThis is attached as the {{{color:blue}simple_producer.cpp{color}}} file.\r\n\r\n\r\nI have expanded the {{{color:blue}simple_consumer.cpp{color}}} example file to display message/queue names and work with advisory messages too. It has options to allow the user to indicate which queues/topics to connect too, where the default is the queues that our product uses.\r\n\r\nThis is attached as the {{{color:blue}simple_consumer.cpp{color}}} file.\r\n\r\n\r\nThe test/problem are as follows:\r\n\r\n# Start the broker in console mode, validating that no errors occurred, it's current system usage limit configuration is small enough that it doesn't take long to reach the limit.\\\\\r\n\\\\\r\n# Start the *producer* so that it will send messages to it's default queue ({{c.c.p.v.ms.events}}) and terminate as soon as the broker sends it a flow control exception.\\\\\r\n\\\\\r\n{{env EX_LIMIT=1 ./simple_producer.exe}}\\\\\r\n\\\\\r\nThis will run for 2-5 minutes. It usually gets an exception around 25,223 messages.\\\\\r\n\\\\\r\n# When the producer terminates, use the WebConsole to view the broker, navigating to the Topics screen and we see the Advisory topics that are created.\\\\\r\n\\\\\r\nThere is only: {{ActiveMQ.Advisory.Connection}}, {{ActiveMQ.Advisory.Producer.Queue.c.c.p.v.ms.events}} and {{ActiveMQ.Advisory.Queue}}.\\\\\r\n\\\\\r\nSince the producer was terminated due to flow control caused by the disk/memory usage limit being reached, we should also see the advisory queues for {{ActiveMQ.Advisory.FULL}} and {{ActiveMQ.Advisory.FastProducer.Queue}}.\\\\\r\n\\\\\r\n# Start the *consumer* so that it will monitor all advisory topics.\\\\\r\n\\\\\r\n{{env DEST=\"ActiveMQ.Advisory.>\" TOPIC=1 simple_consumer.exe}}\\\\\r\n\\\\\r\n# Refresh the WebConsole screen. Each of the advisory topics will now show a consumer.\\\\\r\n\\\\\r\n# Use the producer to send in one message. The broker is at its usage limits so that send will be flow controlled, causing an exception to be sent to the producer.\\\\\r\n\\\\\r\n{{env MSG_LIMIT=1 simple_producer.exe}}\\\\\r\n\\\\\r\nThe consumer will now accept and display the advisory messages it has received. There will be two for {{ActiveMQ.Advisory.Connection}} for the producers connection start and stop, and two for the {{ActiveMQ.Advisory.Producer.Queue.c.c.p.v.ms.events}} as the producerCount goes to 1 and then to zero as the producer connects and disconnects to the topic.\\\\\r\n\\\\\r\nThere is no FastConsumer or FULL advisory generated even though their conditions have been triggered.\\\\\r\n\\\\\r\n\r\n\r\nDetailed test output for the summary listed above is attached.\r\n",
        "Restful HTTP MessageServlet causing trouble.  May be a garbage collection issue. I am developing a C-based client that uses the RESTful HTTP protocol to POST and GET messages to and from an ActiveMQ broker.  I have seen my test run successfully.  However, if I run it multiple times back to back in succession, it will usually encounter failures.  The test has two steps, where the first POSTs a number of messages on the queue, then the second step GETs them back off.  When it encounters trouble, it is usually in the first step when posting messages.  When that encounters failures, it appears to be having trouble re-connecting, and kicks-out of that first step, proceeding on to the second step where it GETs the messages off of the queue.  When the first step encounters trouble, the second step usually just gets a portion of the messages before getting a 204(No content).  The 204 notifies my test that it is time to terminate.  I have seen the following in some of the server debug logs:\r\n-------------------------------------\r\n2012-06-27 07:44:04,007 | DEBUG | Async client internal exception occurred with no exception listener registered: java.lang.IllegalStateException: REDISPATCHING,initial,resumed | org.apache.activemq.ActiveMQConnection | ActiveMQ Session Task-2 \r\njava.lang.IllegalStateException: REDISPATCHING,initial,resumed \r\n        at org.eclipse.jetty.server.AsyncContinuation.dispatch(AsyncContinuation.java:403) \r\n        at org.eclipse.jetty.server.AsyncContinuation.resume(AsyncContinuation.java:810) \r\n        at org.apache.activemq.web.MessageServlet$Listener.onMessageAvailable(MessageServlet.java:368) \r\n        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1320) \r\n        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131) \r\n        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202) \r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) \r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) \r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) \r\n        at java.lang.Thread.run(Thread.java:619) \r\n-------------------------------------\r\n\r\nI am thinking that the garbage collector is not able to keep-up, and the broker has trouble when running out of memory.\r\n\r\nI have also seen messages like this:\r\n-------------------------------------\r\n2012-06-27 07:33:01,435 | DEBUG | Main:memory:queue://myqueue:memory: usage change from: 67% of available memory, to: 68% of available memory | org.apache.activemq.usage.Usage | VMTransport: vm://localhost#71 \r\n-------------------------------------\r\n\r\nWhen the second step terminates prematurely due to the 204 status, the rest of the messages are gone.  Maybe my \"consumer.prefetchSize=1\" is ignored, and the consumer on the server-side grabs the rest of the messages.  Any ideas?\r\n\r\nAnother thing I notice, is that the HTTP client code I use reports the following for every message it posts: \r\n\"Web server requires that we close the current connection and obtain a new connection to continue.\"  Is that normal, or can I change some configuration setting to prevent that?\r\n\r\nMy test program is a SAS program.  Note: since my client code in question is not yet production, you will not be able to run the test even if you do have a current version of SAS.  Here is my test program:\r\n-------------------------------------\r\ndata _null_;\r\n    file '' device=activemq lrecl=54\r\n        url='http://d22275:8161/demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTimeToLive=100000'\r\n        ;\r\n    do i = 1 to 2000;\r\n        d = datetime();\r\n        put i z5. +1 'This is a test msg sent at' +1 d datetime21.2;\r\n    end;\r\nrun;\r\n\r\ndata _null_;\r\n    infile '' device=activemq lrecl=54 timeout=1000\r\n        url='http://d22275:8161/demo/message/myqueue?type=queue&consumer.prefetchSize=1'\r\n        ;\r\n    input;\r\nrun;\r\n-------------------------------------\r\n\r\nThat first DATA step POSTs 2000 messages to a queue, and the second DATA step GETs them back off.  If I change the write loop to just POST 2 messages and I turn on some client-side debug/trace logging, you can see what I am sending and receiving across the wire.  Here is an excerpt from the log: \r\n-------------------------------------\r\nINFO 1          data _null_;\r\nINFO 2              file '' device=activemq lrecl=54\r\nINFO 3                  url='http://d22275:8161/demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PE\r\nINFO 3        ! RSISTENT&JMSTimeToLive=100000'\r\nINFO 4                  ;\r\nINFO 5              do i = 1 to 2;\r\nINFO 6                  d = datetime();\r\nINFO 7                  put i z5. +1 'This is a test msg sent at' +1 d datetime21.2;\r\nINFO 8              end;\r\nINFO 9          run;\r\nINFO \r\nDEBUG Attempting to connect to Web server 10.23.11.16:8161.\r\nINFO NOTE: The file '' is:\r\nINFO       \r\nINFO       URL=http://d22275:8161/demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTi\r\nINFO       meToLive=100000&clientId=839E8906-E338-4FDE-9818-665B14944874,\r\nINFO       LRECL=54,TIMEOUT=-1\r\nINFO \r\nDEBUG Executing POST request.\r\nDEBUG >>> POST /demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTimeToLive=100000&clientId=839E8906-E338-4FDE-9818-665B14944874 HTTP/1.1\r\nDEBUG >>> Content-Type: APPLICATION/X-WWW-FORM-URLENCODED\r\nDEBUG Cache file name used is C:\\DOCUME~1\\sav\\LOCALS~1\\Temp\\SAS Temporary Files\\SAS_util000100001004_d22275\\ut1004000002.utl\r\nDEBUG >>> Content-Length: 59\r\nDEBUG >>> Host: d22275:8161\r\nDEBUG >>> User-Agent: SAS/9\r\nDEBUG >>> \r\nTRACE >>> 341c000: 62 6f 64 79 3d 30 30 30 30 31 20 54 68 69 73 20 |body=00001 This |\r\nTRACE >>> 341c010: 69 73 20 61 20 74 65 73 74 20 6d 73 67 20 73 65 |is a test msg se|\r\nTRACE >>> 341c020: 6e 74 20 61 74 20 30 31 4a 55 4c 32 30 31 32 3a |nt at 01JUL2012:|\r\nTRACE >>> 341c030: 31 38 3a 32 36 3a 34 33 2e 36 39                |18:26:43.69     |\r\nDEBUG <<< HTTP/1.1 200 OK\r\nDEBUG <<< Set-Cookie: JSESSIONID=1f4dfw7mbb4611ilhiznnkifi3;Path=/demo\r\nDEBUG <<< Expires: Thu, 01 Jan 1970 00:00:00 GMT\r\nDEBUG <<< messageID: ID:d22275-1028-1341175648962-3:24:1:1:1\r\nDEBUG <<< Content-Length: 0\r\nDEBUG <<< Server: Jetty(7.6.1.v20120215)\r\nDEBUG <<< \r\nDEBUG Request POST returns status 200.\r\nDEBUG Executing POST request.\r\nDEBUG Web server requires that we close the current connection and obtain a new connection to continue.\r\nDEBUG Attempting to connect to Web server 10.23.11.16:8161.\r\nDEBUG >>> POST /demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTimeToLive=100000&clientId=839E8906-E338-4FDE-9818-665B14944874 HTTP/1.1\r\nDEBUG >>> Content-Type: APPLICATION/X-WWW-FORM-URLENCODED\r\nDEBUG Cache file name used is C:\\DOCUME~1\\sav\\LOCALS~1\\Temp\\SAS Temporary Files\\SAS_util000100001004_d22275\\ut1004000003.utl\r\nDEBUG >>> Content-Length: 59\r\nDEBUG >>> Host: d22275:8161\r\nDEBUG >>> Cookie: $Version=1;JSESSIONID=1f4dfw7mbb4611ilhiznnkifi3;$Path=/demo\r\nDEBUG >>> User-Agent: SAS/9\r\nDEBUG >>> \r\nTRACE >>> 3422000: 62 6f 64 79 3d 30 30 30 30 32 20 54 68 69 73 20 |body=00002 This |\r\nTRACE >>> 3422010: 69 73 20 61 20 74 65 73 74 20 6d 73 67 20 73 65 |is a test msg se|\r\nTRACE >>> 3422020: 6e 74 20 61 74 20 30 31 4a 55 4c 32 30 31 32 3a |nt at 01JUL2012:|\r\nTRACE >>> 3422030: 31 38 3a 32 36 3a 34 33 2e 37 30                |18:26:43.70     |\r\nDEBUG <<< HTTP/1.1 200 OK\r\nDEBUG <<< messageID: ID:d22275-1028-1341175648962-3:24:1:1:2\r\nDEBUG <<< Content-Length: 0\r\nDEBUG <<< Server: Jetty(7.6.1.v20120215)\r\nDEBUG <<< \r\nDEBUG Request POST returns status 200.\r\nDEBUG Attempting to connect to Web server 10.23.11.16:8161.\r\nDEBUG Executing POST request.\r\nDEBUG >>> POST /demo/message/myqueue?type=queue&JMSDeliveryMode=NON_PERSISTENT&JMSTimeToLive=100000&clientId=839E8906-E338-4FDE-9818-665B14944874&action=unsubscribe HTTP/1.1\r\nDEBUG >>> Content-Type: application/x-www-form-urlencoded\r\nDEBUG Cache file name used is C:\\DOCUME~1\\sav\\LOCALS~1\\Temp\\SAS Temporary Files\\SAS_util000100001004_d22275\\ut1004000004.utl\r\nDEBUG >>> Content-Length: 0\r\nDEBUG >>> Host: d22275:8161\r\nDEBUG >>> Cookie: $Version=1;JSESSIONID=1f4dfw7mbb4611ilhiznnkifi3;$Path=/demo\r\nDEBUG >>> User-Agent: SAS/9\r\nDEBUG >>> \r\nDEBUG <<< HTTP/1.1 200 OK\r\nDEBUG <<< Content-Length: 0\r\nDEBUG <<< Server: Jetty(7.6.1.v20120215)\r\nDEBUG <<< \r\nDEBUG Request POST returns status 200.\r\nDEBUG Destroying connection to Web server d22275:8161.\r\nINFO NOTE: 2 records were written to the file ''.\r\nINFO       The minimum record length was 54.\r\nINFO       The maximum record length was 54.\r\nDEBUG Destroying connection to Web server d22275:8161.\r\nINFO NOTE: DATA statement used (Total process time):\r\nINFO       real time           0.17 seconds\r\nINFO       cpu time            0.00 seconds\r\nINFO       \r\nINFO \r\nINFO 10         \r\nINFO 11         data _null_;\r\nINFO 12             infile '' device=activemq lrecl=54 timeout=1000\r\nINFO 13                 url='http://d22275:8161/demo/message/myqueue?type=queue&consumer.prefetchSize=\r\nINFO 13       ! 1'\r\nINFO 14                 ;\r\nINFO 15             input;\r\nINFO 16         run;\r\nINFO \r\nDEBUG Attempting to connect to Web server 10.23.11.16:8161.\r\nINFO NOTE: The infile '' is:\r\nINFO       \r\nINFO       URL=http://d22275:8161/demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BA\r\nINFO       B771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000,\r\nINFO 2                                        The SAS System                18:26 Sunday, July 1, 2012\r\nINFO \r\nINFO       LRECL=54,TIMEOUT=1000\r\nINFO \r\nDEBUG Executing GET request.\r\nDEBUG >>> GET /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BAB771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000 HTTP/1.1\r\nDEBUG >>> Host: d22275:8161\r\nDEBUG >>> Accept: */*\r\nDEBUG >>> Accept-Charset: iso-8859-1,*,utf-8\r\nDEBUG >>> Accept-Encoding: identity\r\nDEBUG >>> Accept-Language: en\r\nDEBUG >>> User-Agent: SAS/9\r\nDEBUG >>> \r\nDEBUG <<< HTTP/1.1 200 OK\r\nDEBUG <<< Set-Cookie: JSESSIONID=171xnui5b43xz1wpgghnpgtiws;Path=/demo\r\nDEBUG <<< Expires: Thu, 01 Jan 1970 00:00:00 GMT\r\nDEBUG <<< Content-Type: text/xml;charset=UTF-8\r\nDEBUG <<< destination: queue://myqueue\r\nDEBUG <<< id: ID:d22275-1028-1341175648962-3:24:1:1:1\r\nDEBUG <<< Content-Length: 54\r\nDEBUG <<< Server: Jetty(7.6.1.v20120215)\r\nDEBUG <<< \r\nTRACE <<< 415a740: 30 30 30 30 31 20 54 68 69 73 20 69 73 20 61 20 |00001 This is a |\r\nTRACE <<< 415a750: 74 65 73 74 20 6d 73 67 20 73 65 6e 74 20 61 74 |test msg sent at|\r\nTRACE <<< 415a760: 20 30 31 4a 55 4c 32 30 31 32 3a 31 38 3a 32 36 | 01JUL2012:18:26|\r\nTRACE <<< 415a770: 3a 34 33 2e 36 39                               |:43.69          |\r\nDEBUG Request GET returns status 200.\r\nDEBUG Executing GET request.\r\nDEBUG >>> GET /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BAB771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000 HTTP/1.1\r\nDEBUG >>> Host: d22275:8161\r\nDEBUG >>> Accept: */*\r\nDEBUG >>> Accept-Charset: iso-8859-1,*,utf-8\r\nDEBUG >>> Accept-Encoding: identity\r\nDEBUG >>> Accept-Language: en\r\nDEBUG >>> Cookie: $Version=1;JSESSIONID=171xnui5b43xz1wpgghnpgtiws;$Path=/demo\r\nDEBUG >>> User-Agent: SAS/9\r\nDEBUG >>> \r\nDEBUG <<< HTTP/1.1 200 OK\r\nDEBUG <<< Content-Type: text/xml;charset=UTF-8\r\nDEBUG <<< destination: queue://myqueue\r\nDEBUG <<< id: ID:d22275-1028-1341175648962-3:24:1:1:2\r\nDEBUG <<< Content-Length: 54\r\nDEBUG <<< Server: Jetty(7.6.1.v20120215)\r\nDEBUG <<< \r\nTRACE <<< 415a740: 30 30 30 30 32 20 54 68 69 73 20 69 73 20 61 20 |00002 This is a |\r\nTRACE <<< 415a750: 74 65 73 74 20 6d 73 67 20 73 65 6e 74 20 61 74 |test msg sent at|\r\nTRACE <<< 415a760: 20 30 31 4a 55 4c 32 30 31 32 3a 31 38 3a 32 36 | 01JUL2012:18:26|\r\nTRACE <<< 415a770: 3a 34 33 2e 37 30                               |:43.70          |\r\nDEBUG Request GET returns status 200.\r\nDEBUG Executing GET request.\r\nDEBUG >>> GET /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BAB771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000 HTTP/1.1\r\nDEBUG >>> Host: d22275:8161\r\nDEBUG >>> Accept: */*\r\nDEBUG >>> Accept-Charset: iso-8859-1,*,utf-8\r\nDEBUG >>> Accept-Encoding: identity\r\nDEBUG >>> Accept-Language: en\r\nDEBUG >>> Cookie: $Version=1;JSESSIONID=171xnui5b43xz1wpgghnpgtiws;$Path=/demo\r\nDEBUG >>> User-Agent: SAS/9\r\nDEBUG >>> \r\nDEBUG <<< HTTP/1.1 204 No Content\r\nDEBUG <<< Content-Type: text/xml;charset=UTF-8\r\nDEBUG <<< Server: Jetty(7.6.1.v20120215)\r\nDEBUG <<< \r\nDEBUG Request GET returns status 204.\r\nDEBUG Attempting to connect to Web server 10.23.11.16:8161.\r\nDEBUG Executing POST request.\r\nDEBUG >>> POST /demo/message/myqueue?type=queue&consumer.prefetchSize=1&clientId=7BAB771E-AF44-4597-B603-FC018C1069B3&READTIMEOUT=1000&action=unsubscribe HTTP/1.1\r\nDEBUG >>> Content-Type: application/x-www-form-urlencoded\r\nDEBUG Cache file name used is C:\\DOCUME~1\\sav\\LOCALS~1\\Temp\\SAS Temporary Files\\SAS_util000100001004_d22275\\ut1004000005.utl\r\nDEBUG >>> Content-Length: 0\r\nDEBUG >>> Host: d22275:8161\r\nDEBUG >>> Cookie: $Version=1;JSESSIONID=171xnui5b43xz1wpgghnpgtiws;$Path=/demo\r\nDEBUG >>> User-Agent: SAS/9\r\nDEBUG >>> \r\nDEBUG <<< HTTP/1.1 200 OK\r\nDEBUG <<< Content-Length: 0\r\nDEBUG <<< Server: Jetty(7.6.1.v20120215)\r\nDEBUG <<< \r\nDEBUG Request POST returns status 200.\r\nDEBUG Destroying connection to Web server d22275:8161.\r\nINFO NOTE: 2 records were read from the infile ''.\r\nINFO       The minimum record length was 54.\r\nINFO       The maximum record length was 54.\r\nDEBUG Destroying connection to Web server d22275:8161.\r\n-------------------------------------\r\n\r\n\r\n"
    ],
    [
        "AMQ-3952",
        "AMQ-2971",
        "ActiveMQ 5.5.1 Java API Reset Statistic reset everything I'm using \r\norg.apache.activemq.broker.jmx.DestinationView.resetStatistics() \r\nto reset statistics I get from the JMX Java API, but I was expected that only the \"statistic numbers\" would be reseted, and not the state of my queue (number of pending messages for instance) \r\n\r\nI'm wondering why the super.reset() method is called in org.apache.activemq.broker.region.DestinationStatistics.reset() method. \r\n\r\n{code} \r\n public void reset() { \r\n        if (this.isDoReset()) { \r\n            super.reset(); \r\n            enqueues.reset(); \r\n            dequeues.reset(); \r\n            dispatched.reset(); \r\n            inflight.reset(); \r\n            expired.reset(); \r\n        } \r\n    } \r\n{code}\u00a0\r\nProblem is, after a reset, if I lookup some queue size, I get 0, even if there are still some message pending to be dequeued. The \"number of pending message\" is apparently reseted in the \"super.reset()\" call. \r\n\r\n",
        "DestinationStatistics.getMessages() returns 0 after reset with messages still in queue A call to org.apache.activemq.broker.jmx.DestinationView.resetStatistics() is implemented as a call to org.apache.activemq.broker.region.DestinationStatistics.reset(). This call sets the DestinationStatistics.messages counter to 0 even if there are messages currently in the queue.\n\nThis is functionally the same issue that was resolved for the \"producers\" and \"consumers\" counters in AMQ-1946.\n\nThe fix should be as easy as setting the doReset to false for the messages counter.\n{code}\nmessages.setDoReset(false); \n{code}"
    ],
    [
        "AMQ-3959",
        "AMQ-3797",
        "Memory leak caused by org.apache.activemq.util.StringArrayEditor Create a web application which connects to an ActiveMQ standalone server, package activemq-core.jar into WAR under WEB-INF/lib.\r\nDeploy the WAR to a Tomcat 7. Then undeploy. In Tomcat manager press \"Find leaks\" button in \"Diagnostics\" section. Tomcat will complain that after undeployment some classes are still in memory.\r\nUse profiler to locate WebAppClassLoader, see the screenshot.\r\n\r\n",
        "org.apache.activemq.util.StringArrayEditor causes classloader leaks A static block in org.apache.activemq.util.IntrospectionSupport registers org.apache.activemq.util.StringArrayEditor with java.beans.PropertyEditorManager. In a web application environment, this will cause classloader leaks, since java.beans.PropertyEditorManager keeps a strong reference to the editor class.\r\n\r\nActiveMQ should at least provide a graceful means of deregistering org.apache.activemq.util.StringArrayEditor (by calling java.beans.PropertyEditorManager.registerEditor() again with editor class null)."
    ],
    [
        "AMQ-4040",
        "AMQ-3586",
        "there are two queues with the same name There are two queues with the same name when i browse the queues list page;My listener just connect one queue;The pending message number of this queue is 0;The pending message number of other queue is 5;When i browse queue page, each of the same name queue show 5 message. I want to konw why two queues can have the same name?  ",
        "spaces in queue name Creating a queue that's name contains trailing blanks leads to several problems.\r\nTry the following within amq web console to reproduce:\r\n- create a queue with name '123  ' (without quotes)\r\n- create a second queue with name '123 ' (without quotes)\r\n- send a message to one of them\r\n\r\n--> amq creates a third queue, all three of them seem to have the same name within the browser, at jmx-level you see that there are three (with spaces)\r\n--> Number of Pending messages is 1 for the queue I've send the message and 0 for the other two\r\n--> if you click on the queue name within the amq browser, you see the same message within all three queues\r\n--> adding a consumer to one queue adds the same consumer to all of them\r\n"
    ],
    [
        "AMQ-4072",
        "AMQ-3857",
        "RESTful HTTP interface responses do not contain a correlation ID header When using a RESTful HTTP client to GET a message that has a correlation ID, the correlation ID is not sent as a header in the response from the broker.  This inhibits my RESTful HTTP client from performing request-response.",
        "MessageServlet get messages does not return JMS Message Properties When using GET to get a message it does not return any of the JMS message properties.\r\n\r\nI can easily see how to add that code, but I'm not sure what the correct way to return them is.  They could go into the response headers via setResponseHeaders or the returned XML format could be changed to support properties and the header.  Sadly this would likely break most existing clients.  \r\n\r\nWe'd like to use the REST API to enable some web clients to fully participate in a messaging system that is primarily Java based.  \r\n\r\nIf we can come to agreement on how we want to return properties then I'd be happy to code up a patch.  "
    ],
    [
        "AMQ-4259",
        "AMQ-4118",
        "ClassCastException on Durable topic ERROR | TopicStorePrefetch(dawid,MakeItLast) ID:LE111851-3194-1358355851041-1:1:1:1 - org.apache.activemq.broker.region.cursors.TopicStorePrefetch@53ed8f:jms/To\r\npic,batchResetNeeded=false,storeHasMessages=true,size=118,cacheEnabled=false,maxBatchSize:118 - Failed to fill batch\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String\r\n        at java.lang.String.compareTo(String.java:108)\r\n        at java.util.Arrays.binarySearch0(Arrays.java:1481)\r\n        at java.util.Arrays.binarySearch(Arrays.java:1423)\r\n        at org.apache.kahadb.index.BTreeNode.contains(BTreeNode.java:699)\r\n        at org.apache.kahadb.index.BTreeIndex.containsKey(BTreeIndex.java:179)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.setBatch(MessageDatabase.java:2534)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.setBatch(MessageDatabase.java:2550)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore$5.execute(KahaDBStore.java:858)\r\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.recoverNextMessages(KahaDBStore.java:847)\r\n        at org.apache.activemq.store.ProxyTopicMessageStore.recoverNextMessages(ProxyTopicMessageStore.java:115)\r\n        at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.doFillBatch(TopicStorePrefetch.java:109)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)\r\n        at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.reset(StoreDurableSubscriberCursor.java:287)\r\n        at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:619)\r\n        at org.apache.activemq.broker.region.DurableTopicSubscription.dispatchPending(DurableTopicSubscription.java:248)\r\n        at org.apache.activemq.broker.region.DurableTopicSubscription.activate(DurableTopicSubscription.java:167)\r\n        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:158)\r\n        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:421)\r\n        at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:257)\r\n        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)\r\n        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:92)\r\n        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)\r\n        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)\r\n        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)\r\n        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:562)\r\n        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:332)\r\n        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)\r\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:152)\r\n        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\n        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:256)\r\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\n        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)\r\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)\r\n        at java.lang.Thread.run(Thread.java:722)",
        "Index page overflow (when a value does not fit in a page) can lead to duplicate calls to free An overflowed chain is release when it is no longer needed, but the new end page was not stored in the cache, the old value as a part page is reused and freed again. boom. Keeping the cache in sync sorts this.\r\nA workaround is to disable the index page cache with a small indexCacheSize.\r\nDurable subs make this more visible, but the failure symptoms vary with usage. A typical scenario is a classcast when the page is reused in the wrong context or a npe when the free page is loaded from disk.\r\nWith durable subs with selectors and large backlogs, the sequence set expansion and shrinkage produces values that can overflow easily. This scenario produced a nice test.\r\n\r\nSome resultant stack traces that are symptomatic:\r\n{code}2012-10-19 22:25:11,928 [exPageUsage#5-2] - ERROR MessageDatabase                - KahaDB failed to store to Journal\r\njava.io.EOFException: Chunk stream does not exist, page: 1344 is marked free\r\n\tat org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:481)\r\n\tat org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:458)\r\n\tat org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:455)\r\n\tat org.apache.kahadb.page.Transaction.load(Transaction.java:431)\r\n\tat org.apache.kahadb.page.Transaction.load(Transaction.java:388)\r\n\tat org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)\r\n\tat org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)\r\n\tat org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:680)\r\n\tat org.apache.kahadb.index.BTreeNode.get(BTreeNode.java:562)\r\n\tat org.apache.kahadb.index.BTreeIndex.get(BTreeIndex.java:184)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.get(MessageDatabase.java:2616)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1210)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1002)\r\n\tat org.apache.kahadb.page.Transaction.execute(Transaction.java:790)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1000)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:933)\r\n\tat org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:925)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:837)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:819)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:723)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:706)\r\n\tat org.apache.activemq.store.kahadb.KahaDBTransactionStore.acknowledge(KahaDBTransactionStore.java:519)\r\n\tat org.apache.activemq.store.kahadb.KahaDBTransactionStore$2.acknowledge(KahaDBTransactionStore.java:222)\r\n\tat org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:528)\r\n\tat org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:279)\r\n\tat ..{code}\r\n{code}java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String\r\n        at java.lang.String.compareTo(String.java:92)\r\n        at java.util.Arrays.binarySearch0(Arrays.java:2001)\r\n        at java.util.Arrays.binarySearch(Arrays.java:1943)\r\n        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:371)\r\n        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)       \r\n        at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)        \r\nat org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)        at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)        at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)\r\n        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)\r\n        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)\r\n        at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)\r\n...{code}\r\n{code}java.lang.NullPointerException\r\n        at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)\r\n        at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)\r\n        at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:676)\r\n        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)\r\n        at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)\r\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)\r\n        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)\r\n        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267){code}"
    ],
    [
        "AMQ-4287",
        "AMQ-3465",
        "REOPEN - javax.jms.JMSException: The resource is allready being used in transaction context.  I had to reopen the previous issue as the problem is still existing.\r\nI am using activemq-5.5 with activemq-rar-5.7.0.rar and I am getting\r\n\r\n{quote}\r\nCaused by: javax.jms.JMSException: The resource is already being used in transaction context.\r\n        at org.apache.activemq.ra.ManagedTransactionContext.setUseSharedTxContext(ManagedTransactionContext.java:47)\r\n        at org.apache.activemq.ra.ManagedSessionProxy.setUseSharedTxContext(ManagedSessionProxy.java:67)\r\n        at org.apache.activemq.ra.ManagedConnectionProxy.createSessionProxy(ManagedConnectionProxy.java:122)\r\n        at org.apache.activemq.ra.ManagedConnectionProxy.createSession(ManagedConnectionProxy.java:105)\r\n{quote}\r\nunder high load. This is certainly critical issue as it prevents from using rar adapter for any serious applications.",
        "TransactionContext produces errors in concurrent environment Method \"isInXATransaction\" of class org.apache.activemq.TransactionContext seems to be implemeted incorrectly. Here is the code:\r\n\r\npublic boolean isInXATransaction() {\r\n    return (transactionId != null && transactionId.isXATransaction()) || !ENDED_XA_TRANSACTION_CONTEXTS.isEmpty();\r\n}\r\n\r\nMap \"ENDED_XA_TRANSACTION_CONTEXTS\" is a static field. TransactionContext instances are used for both outbound and inbound communications. Suppose a thread creating a new non-transactional session. It calls isInXATransaction and gets true, just because another thread is completing transactional message delivery at the same time. After XAResource.end() call but before XAResource.commit() call the map is not empty and it results in a JMSException in the first thread (see org.apache.activemq.ra.ManagedTransactionContext.setUseSharedTxContext(boolean)\").\r\n\r\n"
    ],
    [
        "AMQ-4287",
        "AMQ-3602",
        "REOPEN - javax.jms.JMSException: The resource is allready being used in transaction context.  I had to reopen the previous issue as the problem is still existing.\r\nI am using activemq-5.5 with activemq-rar-5.7.0.rar and I am getting\r\n\r\n{quote}\r\nCaused by: javax.jms.JMSException: The resource is already being used in transaction context.\r\n        at org.apache.activemq.ra.ManagedTransactionContext.setUseSharedTxContext(ManagedTransactionContext.java:47)\r\n        at org.apache.activemq.ra.ManagedSessionProxy.setUseSharedTxContext(ManagedSessionProxy.java:67)\r\n        at org.apache.activemq.ra.ManagedConnectionProxy.createSessionProxy(ManagedConnectionProxy.java:122)\r\n        at org.apache.activemq.ra.ManagedConnectionProxy.createSession(ManagedConnectionProxy.java:105)\r\n{quote}\r\nunder high load. This is certainly critical issue as it prevents from using rar adapter for any serious applications.",
        "javax.jms.JMSException: The resource is allready being used in transaction context.  My error code:\r\n{quote}javax.ejb.EJBException: nested exception is: javax.jms.JMSException: The resource is allready being used in transaction context.\r\njavax.jms.JMSException: The resource is allready being used in transaction context.\r\n        at org.apache.activemq.ra.ManagedTransactionContext.setUseSharedTxContext(ManagedTransactionContext.java:47)\r\n        at org.apache.activemq.ra.ManagedSessionProxy.setUseSharedTxContext(ManagedSessionProxy.java:67)\r\n        at org.apache.activemq.ra.ManagedConnectionProxy.createSessionProxy(ManagedConnectionProxy.java:122)\r\n        at org.apache.activemq.ra.ManagedConnectionProxy.createSession(ManagedConnectionProxy.java:105)\r\n        at ch.no.prod.mdb.ToProdMDB.publish(ToProdMDB.java:163)\r\n        at ch.no.prod.mdb.ToProdMDB.onMessage(ToProdMDB.java:107)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n        at java.lang.reflect.Method.invoke(Method.java:597)\r\n        at com.sun.enterprise.security.application.EJBSecurityManager.runMethod(EJBSecurityManager.java:1011)\r\n        at com.sun.enterprise.security.SecurityUtil.invoke(SecurityUtil.java:175)\r\n        at com.sun.ejb.containers.BaseContainer.invokeTargetBeanMethod(BaseContainer.java:2929)\r\n        at com.sun.ejb.containers.BaseContainer.intercept(BaseContainer.java:4020)\r\n        at com.sun.ejb.containers.MessageBeanContainer.deliverMessage(MessageBeanContainer.java:1111)\r\n        at com.sun.ejb.containers.MessageBeanListenerImpl.deliverMessage(MessageBeanListenerImpl.java:74)\r\n        at com.sun.enterprise.connectors.inflow.MessageEndpointInvocationHandler.invoke(MessageEndpointInvocationHandler.java:179)\r\n        at $Proxy62.onMessage(Unknown Source)\r\n        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:123)\r\n        at org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:64)\r\n        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:833)\r\n        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)\r\n        at com.sun.enterprise.connectors.work.OneWork.doWork(OneWork.java:77)\r\n        at com.sun.corba.ee.impl.orbutil.threadpool.ThreadPoolImpl$WorkerThread.run(ThreadPoolImpl.java:555)\r\njavax.ejb.EJBException: nested exception is: javax.jms.JMSException: The resource is allready being used in transaction context.\r\n        at ch.no.prod.mdb.ToProdMDB.publish(ToProdMDB.java:279)\r\n        at ch.no.prod.mdb.ToProdMDB.onMessage(ToProdMDB.java:107)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n        at java.lang.reflect.Method.invoke(Method.java:597)\r\n        at com.sun.enterprise.security.application.EJBSecurityManager.runMethod(EJBSecurityManager.java:1011)\r\n        at com.sun.enterprise.security.SecurityUtil.invoke(SecurityUtil.java:175)\r\n        at com.sun.ejb.containers.BaseContainer.invokeTargetBeanMethod(BaseContainer.java:2929)\r\n        at com.sun.ejb.containers.BaseContainer.intercept(BaseContainer.java:4020)\r\n        at com.sun.ejb.containers.MessageBeanContainer.deliverMessage(MessageBeanContainer.java:1111)\r\n        at com.sun.ejb.containers.MessageBeanListenerImpl.deliverMessage(MessageBeanListenerImpl.java:74)\r\n        at com.sun.enterprise.connectors.inflow.MessageEndpointInvocationHandler.invoke(MessageEndpointInvocationHandler.java:179)\r\n        at $Proxy62.onMessage(Unknown Source)\r\n        at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:123)\r\n        at org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:64)\r\n        at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:833)\r\n        at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)\r\n        at com.sun.enterprise.connectors.work.OneWork.doWork(OneWork.java:77)\r\n        at com.sun.corba.ee.impl.orbutil.threadpool.ThreadPoolImpl$WorkerThread.run(ThreadPoolImpl.java:555){quote}\r\n \r\nAnd more informations found on web : http://osdir.com/ml/general/2011-11/msg29999.html and http://activemq.2283324.n4.nabble.com/Suspect-a-race-condition-in-TransactionContext-td3780046.html"
    ],
    [
        "AMQ-4296",
        "AMQ-4268",
        "Unit tests fail intermittently when using LevelDB adapter A couple of the unit tests that have be modified to run with LevelDB as the persistence adapter fail intermittently.\r\n\r\nAMQ2870Test\r\nAMQ2584Test#testSize\r\nDuranleSubscriptionOfflineTest#testConsumeOnlyMatchedMessages\r\nLevelDBXARecoveryBrokerTest#testTopicPersistentPreparedAcksAvailableAfterRestartAndRollback",
        "DurableSubscriptionOfflineTest has several failures testRedeliveryFlag fails intermittently, and testOfflineSubscriptionWithSelectorAfterRestart fails regularly\r\ntestNoDuplicateOnConcurrentSendTranCommitAndActivate and testCleanupDeletedSubAfterRestart fail, but very rarely"
    ],
    [
        "AMQ-4308",
        "AMQ-4307",
        "HttpsTransportBrokerTest hangs occasionally This test occasionally hangs, causing the build to hang. I haven't been able to reproduce it yet, but have seen it several times on the Fuse Hudson instance. I'll attach a patch which adds a timeout.",
        "org.apache.activemq.transport.http.HttpClientReconnectTest hangs occasionally This test occasionally hangs, causing the build to hang.  I haven't been able to reproduce it yet, but have seen it several times on the Fuse Hudson instance.  I'll attach a patch which adds a timeout.\r\n"
    ],
    [
        "AMQ-4329",
        "AMQ-4268",
        "AMQ2149Test  Note: The KahaDB version of this test (AMQ2149KahaDBTest) is working correctly.\r\n\r\nThis test has two cases that fail, testQueueTransactionalOrderWithRestart, and testOrderWithRestart.  testQueueTransactionalOrderWithRestart fails after the server is restarted with the following exception\r\n\r\n\r\njunit.framework.AssertionFailedError: queue://test.dest.0 received 6 expected 5681\r\n        at junit.framework.Assert.fail(Assert.java:57)\r\n        at junit.framework.TestCase.fail(TestCase.java:227)\r\n        at org.apache.activemq.bugs.AMQ2149Test$Receiver.onMessage(AMQ2149Test.java:201)\r\n        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1321)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n\r\n\r\nThe testOrderWithRestart case works correctly when run on it's own, and only fails if run after testQueueTransactionalOrderWithRestart with messages like the following:\r\n\r\n2013-02-18 15:41:25,528 [ Session Task-1] - WARN  AMQ2149Test                    - queue://test.dest.0 received 6082 in msg: ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1:6083 expected 0, l\\\r\nastId: null, message:ActiveMQTextMessage {commandId = 6087, responseRequired = true, messageId = ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1:6083, originalDestination = null, originalTran\\\r\nsactionId = null, producerId = ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1, destination = queue://test.dest.0, transactionId = null, expiration = 0, timestamp = 1361220082802, arrival = 0\\\r\n, brokerInTime = 1361220085522, brokerOutTime = 1361220085522, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId \\\r\n= null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@d3bf5f8, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {s\\\r\neqNum=6082}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = 186704152740050035096258373992406547145203959...321183574477}\r\n2013-02-18 15:41:25,528 [ Session Task-1] - ERROR AMQ2149Test                    - queue://test.dest.0 onMessage error\r\njunit.framework.AssertionFailedError: queue://test.dest.0 received 6082 expected 0\r\n        at junit.framework.Assert.fail(Assert.java:57)\r\n        at junit.framework.TestCase.fail(TestCase.java:227)\r\n        at org.apache.activemq.bugs.AMQ2149Test$Receiver.onMessage(AMQ2149Test.java:201)\r\n        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1321)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n\r\nIt looks like messages send by testQueueTransactionalOrderWithRestart are not cleaned up when that test fails.\r\n",
        "DurableSubscriptionOfflineTest has several failures testRedeliveryFlag fails intermittently, and testOfflineSubscriptionWithSelectorAfterRestart fails regularly\r\ntestNoDuplicateOnConcurrentSendTranCommitAndActivate and testCleanupDeletedSubAfterRestart fail, but very rarely"
    ],
    [
        "AMQ-4329",
        "AMQ-4296",
        "AMQ2149Test  Note: The KahaDB version of this test (AMQ2149KahaDBTest) is working correctly.\r\n\r\nThis test has two cases that fail, testQueueTransactionalOrderWithRestart, and testOrderWithRestart.  testQueueTransactionalOrderWithRestart fails after the server is restarted with the following exception\r\n\r\n\r\njunit.framework.AssertionFailedError: queue://test.dest.0 received 6 expected 5681\r\n        at junit.framework.Assert.fail(Assert.java:57)\r\n        at junit.framework.TestCase.fail(TestCase.java:227)\r\n        at org.apache.activemq.bugs.AMQ2149Test$Receiver.onMessage(AMQ2149Test.java:201)\r\n        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1321)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n\r\n\r\nThe testOrderWithRestart case works correctly when run on it's own, and only fails if run after testQueueTransactionalOrderWithRestart with messages like the following:\r\n\r\n2013-02-18 15:41:25,528 [ Session Task-1] - WARN  AMQ2149Test                    - queue://test.dest.0 received 6082 in msg: ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1:6083 expected 0, l\\\r\nastId: null, message:ActiveMQTextMessage {commandId = 6087, responseRequired = true, messageId = ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1:6083, originalDestination = null, originalTran\\\r\nsactionId = null, producerId = ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1, destination = queue://test.dest.0, transactionId = null, expiration = 0, timestamp = 1361220082802, arrival = 0\\\r\n, brokerInTime = 1361220085522, brokerOutTime = 1361220085522, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId \\\r\n= null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@d3bf5f8, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {s\\\r\neqNum=6082}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = 186704152740050035096258373992406547145203959...321183574477}\r\n2013-02-18 15:41:25,528 [ Session Task-1] - ERROR AMQ2149Test                    - queue://test.dest.0 onMessage error\r\njunit.framework.AssertionFailedError: queue://test.dest.0 received 6082 expected 0\r\n        at junit.framework.Assert.fail(Assert.java:57)\r\n        at junit.framework.TestCase.fail(TestCase.java:227)\r\n        at org.apache.activemq.bugs.AMQ2149Test$Receiver.onMessage(AMQ2149Test.java:201)\r\n        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1321)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n\r\nIt looks like messages send by testQueueTransactionalOrderWithRestart are not cleaned up when that test fails.\r\n",
        "Unit tests fail intermittently when using LevelDB adapter A couple of the unit tests that have be modified to run with LevelDB as the persistence adapter fail intermittently.\r\n\r\nAMQ2870Test\r\nAMQ2584Test#testSize\r\nDuranleSubscriptionOfflineTest#testConsumeOnlyMatchedMessages\r\nLevelDBXARecoveryBrokerTest#testTopicPersistentPreparedAcksAvailableAfterRestartAndRollback"
    ],
    [
        "AMQ-4349",
        "AMQ-4346",
        "ActiveMQ 5.8.0 thows nullpointer exception while shutting down (NIO + LevelDB + pending Non Peristent Messages) I am not sure whether I have to post this in the mailling list first or open a ticket. \r\n\r\nWe updated our activemq broker to version 5.8.0 and replaced the persistent store from kahadb to leveldb. The persistent write performance increased by 10 times but at the same time the non persistent message write and read performance is decreased. Especially the read performance is decreased a lot.\r\n\r\nWhen there are not persistent messages on the broker and if we do graceful shutdown, the broker throws a null pointer exception. This is happening only if we use leveldb. Here is the stack trace.\r\n\r\n2013-02-26 06:06:58,956 | INFO  | Stopped LevelDB[/opt/activemq/data/leveldb] | org.apache.activemq.leveldb.LevelDBStore | Thread-16\r\n2013-02-26 06:06:58,957 | ERROR | Could not stop service: QueueRegion: destinations=1, subscriptions=0, memory=0%. Reason: java.lang.NullPointerException | org.apache.activemq.broker.jmx.Ma\r\nnagedQueueRegion | Thread-16\r\njava.lang.NullPointerException\r\n        at org.fusesource.hawtdispatch.package$RichExecutor.execute(hawtdispatch.scala:171)\r\n        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.apply(hawtdispatch.scala:68)\r\n        at org.fusesource.hawtdispatch.package$RichExecutor.apply(hawtdispatch.scala:169)\r\n        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.future(hawtdispatch.scala:116)\r\n        at org.fusesource.hawtdispatch.package$RichExecutor.future(hawtdispatch.scala:169)\r\n        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.sync(hawtdispatch.scala:107)\r\n        at org.fusesource.hawtdispatch.package$RichExecutor.sync(hawtdispatch.scala:169)\r\n        at org.apache.activemq.leveldb.DBManager.destroyPList(DBManager.scala:773)\r\n        at org.apache.activemq.leveldb.LevelDBStore.removePList(LevelDBStore.scala:454)\r\n        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroyDiskList(FilePendingMessageCursor.java:168)\r\n        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroy(FilePendingMessageCursor.java:163)\r\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:82)\r\n        at org.apache.activemq.broker.region.Queue.stop(Queue.java:910)\r\n        at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:117)\r\n        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)\r\n        at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:574)\r\n        at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:126)\r\n        at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:194)\r\n        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)\r\n        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)\r\n        at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:204)\r\n        at org.apache.activemq.broker.BrokerService$5.stop(BrokerService.java:2070)\r\n        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)\r\n        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:715)\r\n        at org.apache.activemq.xbean.XBeanBrokerService.stop(XBeanBrokerService.java:96)\r\n        at org.apache.activemq.console.command.StartCommand$1.run(StartCommand.java:148)\r\n",
        "Activemq-5.8.0 Shutdown failing when using NIO + LevelDB I configured activemq 5.8.0 with nio connector and leveldb. When ./activemq stop is issued shutdown process is throwing an exception. Its a standalone installation.\r\n\r\nHere is the exception.\r\n\r\n2013-02-25 12:15:07,431 | INFO  | Connector amqp Stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ ShutdownHook\r\n2013-02-25 12:15:07,549 | INFO  | Stopped LevelDB[/opt/activemq/data/leveldb] | org.apache.activemq.leveldb.LevelDBStore | ActiveMQ Sh\r\nutdownHook\r\n2013-02-25 12:15:07,550 | ERROR | Could not stop service: QueueRegion: destinations=1, subscriptions=0, memory=0%. Reason: java.lang.N\r\nullPointerException | org.apache.activemq.broker.jmx.ManagedQueueRegion | ActiveMQ ShutdownHook\r\njava.lang.NullPointerException\r\n        at org.fusesource.hawtdispatch.package$RichExecutor.execute(hawtdispatch.scala:171)\r\n        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.apply(hawtdispatch.scala:68)\r\n        at org.fusesource.hawtdispatch.package$RichExecutor.apply(hawtdispatch.scala:169)\r\n        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.future(hawtdispatch.scala:116)\r\n        at org.fusesource.hawtdispatch.package$RichExecutor.future(hawtdispatch.scala:169)\r\n        at org.fusesource.hawtdispatch.package$RichExecutorTrait$class.sync(hawtdispatch.scala:107)\r\n        at org.fusesource.hawtdispatch.package$RichExecutor.sync(hawtdispatch.scala:169)\r\n        at org.apache.activemq.leveldb.DBManager.destroyPList(DBManager.scala:773)\r\n        at org.apache.activemq.leveldb.LevelDBStore.removePList(LevelDBStore.scala:454)\r\n        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroyDiskList(FilePendingMessageCursor.java:168)\r\n        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.destroy(FilePendingMessageCursor.java:163)\r\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.stop(StoreQueueCursor.java:82)\r\n        at org.apache.activemq.broker.region.Queue.stop(Queue.java:910)\r\n        at org.apache.activemq.broker.region.AbstractRegion.stop(AbstractRegion.java:117)\r\n        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)\r\n        at org.apache.activemq.broker.region.RegionBroker.doStop(RegionBroker.java:574)\r\n        at org.apache.activemq.broker.jmx.ManagedRegionBroker.doStop(ManagedRegionBroker.java:126)\r\n        at org.apache.activemq.broker.region.RegionBroker.stop(RegionBroker.java:194)\r\n        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)\r\n        at org.apache.activemq.broker.BrokerFilter.stop(BrokerFilter.java:161)\r\n        at org.apache.activemq.broker.TransactionBroker.stop(TransactionBroker.java:204)\r\n        at org.apache.activemq.broker.BrokerService$5.stop(BrokerService.java:2070)\r\n        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)\r\n        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:715)\r\n        at org.apache.activemq.xbean.XBeanBrokerService.stop(XBeanBrokerService.java:96)\r\n        at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:2282)\r\n        at org.apache.activemq.broker.BrokerService$6.run(BrokerService.java:2249)\r\n"
    ],
    [
        "AMQ-4368",
        "AMQ-4295",
        "Using a policy.setUseCache(false) /w KahaDB causes 'java.io.IOException: Could not locate data file' errors. ",
        "Kahadb and activemq delete files unexpectedly After a while we see this message in the logs. It appears that activemq loses the pointers or accidently deletes the file.\r\n\r\n2013-02-03 08:54:49,890 | ERROR | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@637aff2f:eventsEndpoint,batchResetNeeded=false,storeHasMessages=true,size=13985,cacheEnabled=false,maxBatchSize:200 - Failed to fill batch | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ BrokerService[pprddaamq304.ie.intuit.net] Task-2076\r\njava.io.IOException: Could not locate data file /app/data/pprddaamq304.ie.intuit.net/kahadb/db-13872267.log\r\n        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:353)\r\n        at org.apache.kahadb.journal.Journal.read(Journal.java:600)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:879)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1030)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:558)\r\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:547)\r\n        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)\r\n        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)\r\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)\r\n        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1765)\r\n        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1993)\r\n        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1486)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n        at java.lang.Thread.run(Thread.java:662)\r\n2013-02-03 08:54:49,890 | ERROR | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@637aff2f:eventsEndpoint,batchResetNeeded=false,storeHasMessages=true,size=13985,cacheEnabled=false,maxBatchSize:200 - Failed to fill batch | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ BrokerService[pprddaamq304.ie.intuit.net] Task-2076\r\njava.lang.RuntimeException: java.io.IOException: Could not locate data file /app/data/pprddaamq304.ie.intuit.net/kahadb/db-13872267.log\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)\r\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)\r\n        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1765)\r\n        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1993)\r\n        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1486)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n        at java.lang.Thread.run(Thread.java:662)\r\nCaused by: java.io.IOException: Could not locate data file /app/data/pprddaamq304.ie.intuit.net/kahadb/db-13872267.log\r\n        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:353)\r\n        at org.apache.kahadb.journal.Journal.read(Journal.java:600)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:879)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1030)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:558)\r\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:547)\r\n        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)\r\n        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)\r\n        ... 10 more\r\n"
    ],
    [
        "AMQ-4393",
        "AMQ-4314",
        "Web console do not show connections info The url:http://localhost:8161/admin/connections.jsp\r\nActiveMQ5.5.0, this page will show then connections info. \r\nActiveMQ5.8.0, this page will show nothing. \r\n\r\nBecause the objectname of MBean have changed. \r\n5.5.0: \r\norg.apache.activemq:BrokerName=localhost,Type=Connector,ConnectorName=openwire \r\n5.5.8: \r\norg.apache.activemq:type=Broker,brokerName=localhost,connector=clientConnectors,connectorName=openwire \r\n\r\nSo, to fix this, org.apache.activemq.web.BrokerFacadeSupport: \r\n\r\n{code}\r\n\r\n    public Collection<String> getConnections(String connectorName) throws Exception { \r\n        String brokerName = getBrokerName(); \r\n//        ObjectName query = new ObjectName(\"org.apache.activemq:type=Broker,brokerName=\" + brokerName \r\n//                + \",connector=clientConnectors,connectorName=\" + connectorName + \",connectionName=*\"); \r\n\r\n      ObjectName query = new ObjectName(\"org.apache.activemq:type=Broker,brokerName=\" + brokerName \r\n      + \",connector=clientConnectors,connectorName=\" + connectorName + \",connectionViewType=clientId\" + \",connectionName=*\");   \r\n    ... \r\n} \r\n\r\n{code}",
        "Client Connections Not Displayed on Admin Webpage On the Web Admin Connections page, my NMS Openwire client connection does not show up.  The client is actually connected and sending/receiving messages.\r\n\r\nSteps to duplicate:\r\n1. Install fresh ActiveMQ 5.8.0 (to verify that custom configuration did not introduce the problem).\r\n2. Launch the broker.\r\n3. Connect Openwire client.  (I use C# NMS).\r\n4. In the web admin, navigate to the Connections page.\r\n\r\nResults:\r\nThe Openwire section of the page does not list the client.\r\n\r\nExpected:\r\nThe client connection should be listed.\r\n\r\nNotes:\r\nI have not verified other types of connections (e.g., STOMP) to see if they are experiencing the same problem.  This is a critical feature for our use case."
    ],
    [
        "AMQ-4436",
        "AMQ-4251",
        "LevelDB compilation warnings When compiling the ActiveMQ trunk using Java 7, I get:\r\n\r\n{quote}\r\n[INFO] --- scala-maven-plugin:3.1.0:compile (default) @ activemq-leveldb-store ---\r\n[INFO] ~activemq/activemq-leveldb-store/src/main/java:-1: info: compiling\r\n[INFO] ~activemq/activemq-leveldb-store/target/generated-sources/proto:-1: info: compiling\r\n[INFO] ~activemq/activemq-leveldb-store/src/main/scala:-1: info: compiling\r\n[INFO] Compiling 21 source files to ~activemq/activemq-leveldb-store/target/classes at 1365083049736\r\n[INFO] compiler plugin: BasicArtifact(org.fusesource.jvmassert,jvmassert,1.4,null)\r\n[WARNING] ~activemq/activemq-leveldb-store/src/main/scala/org/apache/activemq/leveldb/DBManager.scala:255: warning: non-variable type argument Long in type pattern (Long, Int) is unchecked since it is eliminated by erasure\r\n[WARNING]       case x:(Long, Int) =>\r\n[WARNING]              ^\r\n[WARNING] ~activemq/activemq-leveldb-store/src/main/scala/org/apache/activemq/leveldb/LevelDBClient.scala:1103: warning: non-variable type argument Long in type pattern (Long, Int) is unchecked since it is eliminated by erasure\r\n[WARNING]                     case x:(Long, Int) => x\r\n[WARNING]                            ^\r\n[WARNING] ~activemq/activemq-leveldb-store/src/main/scala/org/apache/activemq/leveldb/LevelDBClient.scala:1124: warning: non-variable type argument Long in type pattern (Long, Int) is unchecked since it is eliminated by erasure\r\n[WARNING]                     case x:(Long, Int) => x\r\n[WARNING]                            ^\r\n[WARNING] ~activemq/activemq-leveldb-store/src/main/scala/org/apache/activemq/leveldb/LevelDBClient.scala:1167: warning: non-variable type argument Long in type pattern (Long, Int) is unchecked since it is eliminated by erasure\r\n[WARNING]                     case x:(Long, Int) => x\r\n[WARNING]                            ^\r\n[WARNING] warning: there were 6 feature warnings; re-run with -feature for details\r\n[WARNING] 5 warnings found\r\n{quote}\r\n\r\nThis is probably something that is worth fixing...",
        "Scala compile warnings - Compiling activemq-leveldb-store Noticed a bunch of warnings from the scala compiler\r\n\r\n[INFO] compiler plugin: BasicArtifact(org.fusesource.jvmassert,jvmassert,1.4,null)\r\n[WARNING] /Users/davsclaus/workspace/activemq/activemq-leveldb-store/src/main/scala/org/apache/activemq/leveldb/DBManager.scala:255: warning: non-variable type argument Long in type pattern (Long, Int) is unchecked since it is eliminated by erasure\r\n[WARNING]       case x:(Long, Int) =>\r\n[WARNING]              ^\r\n[WARNING] /Users/davsclaus/workspace/activemq/activemq-leveldb-store/src/main/scala/org/apache/activemq/leveldb/LevelDBClient.scala:1103: warning: non-variable type argument Long in type pattern (Long, Int) is unchecked since it is eliminated by erasure\r\n[WARNING]                     case x:(Long, Int) => x\r\n[WARNING]                            ^\r\n[WARNING] /Users/davsclaus/workspace/activemq/activemq-leveldb-store/src/main/scala/org/apache/activemq/leveldb/LevelDBClient.scala:1124: warning: non-variable type argument Long in type pattern (Long, Int) is unchecked since it is eliminated by erasure\r\n[WARNING]                     case x:(Long, Int) => x\r\n[WARNING]                            ^\r\n[WARNING] /Users/davsclaus/workspace/activemq/activemq-leveldb-store/src/main/scala/org/apache/activemq/leveldb/LevelDBClient.scala:1167: warning: non-variable type argument Long in type pattern (Long, Int) is unchecked since it is eliminated by erasure\r\n[WARNING]                     case x:(Long, Int) => x\r\n[WARNING]                            ^\r\n[WARNING] warning: there were 6 feature warnings; re-run with -feature for details\r\n[WARNING] 5 warnings found"
    ],
    [
        "AMQ-4478",
        "AMQ-4477",
        "ActiveMQ as WebSphere JMS Provider does not reconnect after AMQ server restart I have ActiveMQ defined as WebSphere 7 JMS Provider (see configuration script below).\r\nI expose ActiveMQ queues to my MDBs through Message Listener Port (MLP).\r\n\r\nMDB immediately consume arriving messages until something happens to the AMQ server connection (e.g. AMQ server is restarted due to maintenance activities).\r\nAccording to WebSphere policy MLP attempts to reestablish connection 5 times, every one minute. In most of the cases AMQ server is back again running within 5 min and WebSphere does not report any problem - status of MLP is \"running\".\r\nUnfortunately MBD does not consume any arriving messages until MLP is manually restarted. \r\nAfter restart everything starts to work as it should.\r\n\r\n\r\nActiveMQ JMS Provider configuration script (JACL):\r\n{code}\r\nimport sys\r\n\r\njmsProviderUrl = \"tcp://x.x.x.x:61616\"    \r\n# Retrieve cell name\r\ncell = AdminControl.getCell()\r\nscope = \"Cell=\" + cell\r\njmsProviderName = \"ActiveMQ\"\r\nnode = sys.argv[0]\r\nserver = sys.argv[1]\r\n\r\n# ----------------\r\n# Add JMS Provider\r\n# ----------------\r\nattributes = [[\"description\", \"ActiveMQ JMS Provider\"], \\\r\n              [\"propertySet\", [[\"resourceProperties\", [ \\\r\n                                                       [[\"name\", \"java.naming.connectionFactoryNames\"], [\"type\", \"java.lang.String\"], [\"value\", \"ConnectionFactory,XAConnectionFactory\"]], \\\r\n                                                       [[\"name\", \"java.naming.queue.MXITEMIN\"], [\"type\", \"java.lang.String\"], [\"value\", \"MX.ITEM.IN\"]] \\\r\n                                                       ] \\\r\n                                ]] \\\r\n               ]]\r\nAdminJMS.createJMSProviderAtScope(scope, jmsProviderName, \\\r\n                                  \"org.apache.activemq.jndi.ActiveMQWASInitialContextFactory\", \\\r\n                                  jmsProviderUrl, attributes)\r\n\r\n# ----------------------\r\n# Add Connection Factory\r\n# ----------------------\r\nattributes = [[\"description\", \"ActiveMQ Queue Connection Factory\"], \\\r\n              [\"type\", \"UNIFIED\"], \\\r\n              [\"connectionPool\", [ \\\r\n                                  [\"connectionTimeout\", \"1800\"], \\\r\n                                  [\"maxConnections\", \"6\"], \\\r\n                                  [\"minConnections\", \"0\"], \\\r\n                                  [\"reapTime\", \"180\"], \\\r\n                                  [\"unusedTimeout\", \"1800\"], \\\r\n                                  [\"agedTimeout\", \"1800\"], \\\r\n                                  [\"purgePolicy\", \"EntirePool\"] \\\r\n                                  ] \\\r\n               ], \\\r\n              [\"sessionPool\", [ \\\r\n                                  [\"connectionTimeout\", \"1800\"], \\\r\n                                  [\"maxConnections\", \"1\"], \\\r\n                                  [\"minConnections\", \"0\"], \\\r\n                                  [\"reapTime\", \"10\"], \\\r\n                                  [\"unusedTimeout\", \"1800\"], \\\r\n                                  [\"agedTimeout\", \"1800\"], \\\r\n                                  [\"purgePolicy\", \"EntirePool\"] \\\r\n                                  ] \\\r\n            ]]\r\nAdminJMS.createGenericJMSConnectionFactoryAtScope(scope, jmsProviderName, \"ACTIVEMQCF\", \\\r\n                                                  \"if/maximo/activemq/cf\", \"XAConnectionFactory\", \\\r\n                                                  attributes)\r\n\r\n# ----------------------\r\n# Add Queues\r\n# ----------------------\r\n# 1. MX.ASSET.IN\r\nattributes = [[\"description\", \"ActiveMQ ASSET Queue\"], [\"type\", \"QUEUE\"]]\r\nAdminJMS.createGenericJMSDestinationAtScope(scope, jmsProviderName, \"MAXIMO04IN\", \\\r\n                                            \"if/maximo/activemq/q04cin\", \"MXASSETIN\", \\\r\n                                            attributes) \r\n\r\n\r\n# ---------------------------------------\r\n# Create IF-server Message Listener Ports \r\n# ---------------------------------------\r\n# PORTMAXIMO01IN\r\nattributes = [[\"description\", \"ActiveMQ Item\"]]\r\nAdminServerManagement.configureListenerPortForMessageListenerService(node, server, \"PORTMAXIMO01IN\", \\\r\n                                                                     \"if/maximo/activemq/cf\", \\\r\n                                                                     \"if/maximo/activemq/q01cin\", \\\r\n                                                                     1, 5, 1, attributes)\r\n{code}\r\n\r\n------------------\r\nExpected behavior:\r\n------------------\r\nAMQ client should properly reestablish connection to AMQ server and pass through incoming messages or at least report back that connection is not working properly.",
        "ActiveMQ as WebSphere JMS Provider does not reconnect after AMQ server restart I have ActiveMQ defined as WebSphere 7 JMS Provider (see configuration script below).\r\nI expose ActiveMQ queues to my MDBs through Message Listener Port (MLP).\r\n\r\nMDB immediately consume arriving messages until something happens to the AMQ server connection (e.g. AMQ server is restarted due to maintenance activities).\r\nAccording to WebSphere policy MLP attempts to reestablish connection 5 times, every one minute. In most of the cases AMQ server is back again running within 5 min and WebSphere does not report any problem - status of MLP is \"running\".\r\nUnfortunately MBD does not consume any arriving messages until MLP is manually restarted. \r\nAfter restart everything starts to work as it should.\r\n\r\n\r\nActiveMQ JMS Provider configuration script (JACL):\r\n{code}\r\nimport sys\r\n\r\njmsProviderUrl = \"tcp://x.x.x.x:61616\"    \r\n# Retrieve cell name\r\ncell = AdminControl.getCell()\r\nscope = \"Cell=\" + cell\r\njmsProviderName = \"ActiveMQ\"\r\nnode = sys.argv[0]\r\nserver = sys.argv[1]\r\n\r\n# ----------------\r\n# Add JMS Provider\r\n# ----------------\r\nattributes = [[\"description\", \"ActiveMQ JMS Provider\"], \\\r\n              [\"propertySet\", [[\"resourceProperties\", [ \\\r\n                                                       [[\"name\", \"java.naming.connectionFactoryNames\"], [\"type\", \"java.lang.String\"], [\"value\", \"ConnectionFactory,XAConnectionFactory\"]], \\\r\n                                                       [[\"name\", \"java.naming.queue.MXITEMIN\"], [\"type\", \"java.lang.String\"], [\"value\", \"MX.ITEM.IN\"]] \\\r\n                                                       ] \\\r\n                                ]] \\\r\n               ]]\r\nAdminJMS.createJMSProviderAtScope(scope, jmsProviderName, \\\r\n                                  \"org.apache.activemq.jndi.ActiveMQWASInitialContextFactory\", \\\r\n                                  jmsProviderUrl, attributes)\r\n\r\n# ----------------------\r\n# Add Connection Factory\r\n# ----------------------\r\nattributes = [[\"description\", \"ActiveMQ Queue Connection Factory\"], \\\r\n              [\"type\", \"UNIFIED\"], \\\r\n              [\"connectionPool\", [ \\\r\n                                  [\"connectionTimeout\", \"1800\"], \\\r\n                                  [\"maxConnections\", \"6\"], \\\r\n                                  [\"minConnections\", \"0\"], \\\r\n                                  [\"reapTime\", \"180\"], \\\r\n                                  [\"unusedTimeout\", \"1800\"], \\\r\n                                  [\"agedTimeout\", \"1800\"], \\\r\n                                  [\"purgePolicy\", \"EntirePool\"] \\\r\n                                  ] \\\r\n               ], \\\r\n              [\"sessionPool\", [ \\\r\n                                  [\"connectionTimeout\", \"1800\"], \\\r\n                                  [\"maxConnections\", \"1\"], \\\r\n                                  [\"minConnections\", \"0\"], \\\r\n                                  [\"reapTime\", \"10\"], \\\r\n                                  [\"unusedTimeout\", \"1800\"], \\\r\n                                  [\"agedTimeout\", \"1800\"], \\\r\n                                  [\"purgePolicy\", \"EntirePool\"] \\\r\n                                  ] \\\r\n            ]]\r\nAdminJMS.createGenericJMSConnectionFactoryAtScope(scope, jmsProviderName, \"ACTIVEMQCF\", \\\r\n                                                  \"if/maximo/activemq/cf\", \"XAConnectionFactory\", \\\r\n                                                  attributes)\r\n\r\n# ----------------------\r\n# Add Queues\r\n# ----------------------\r\n# 1. MX.ASSET.IN\r\nattributes = [[\"description\", \"ActiveMQ ASSET Queue\"], [\"type\", \"QUEUE\"]]\r\nAdminJMS.createGenericJMSDestinationAtScope(scope, jmsProviderName, \"MAXIMO04IN\", \\\r\n                                            \"if/maximo/activemq/q04cin\", \"MXASSETIN\", \\\r\n                                            attributes) \r\n\r\n\r\n# ---------------------------------------\r\n# Create IF-server Message Listener Ports \r\n# ---------------------------------------\r\n# PORTMAXIMO01IN\r\nattributes = [[\"description\", \"ActiveMQ Item\"]]\r\nAdminServerManagement.configureListenerPortForMessageListenerService(node, server, \"PORTMAXIMO01IN\", \\\r\n                                                                     \"if/maximo/activemq/cf\", \\\r\n                                                                     \"if/maximo/activemq/q01cin\", \\\r\n                                                                     1, 5, 1, attributes)\r\n{code}\r\n\r\n------------------\r\nExpected behavior:\r\n------------------\r\nAMQ client should properly reestablish connection to AMQ server and pass through incoming messages or at least report back that connection is not working properly."
    ],
    [
        "AMQ-4494",
        "AMQ-4467",
        "Cursor hasSpace() doesn't check system usage When checking for space, every cursor checks its destinations memory usage. Unfortunately, that doesn't check the parent (system usage) so with large number of destinations when total sum of per destination limits is larger than total system memory usage, we can brake the system usage memory limit.",
        "Memory usage percent can be exceeded much if PFC is disabled If PFC is disabled, when the store cursor checks limits, it checks only the memory percentage of its own MemoryUsage and compares it to the high water mark. Otherwise if PFC is enabled, it checks whether the MemoryUsage is \"full\" but the \"isFull\" method also checks its parents.\r\nThis issue arrises when you have memory limits set on queues higher than the overall system limit, as well as if you have multiple queues who's memory limits combined are higher than the overall system limit. These settings must be taken into account.\r\nThe original form can be found at \r\nhttp://activemq.2283324.n4.nabble.com/What-can-be-reason-of-460-memory-usage-limit-td4665651.html"
    ],
    [
        "AMQ-4581",
        "AMQ-4382",
        "JDBCPersistenceAdapter can ignore statements settings depending on configuration order. When a jdbcPersistenceAdapter is configured using the \"adapter\" attribute (as below), the tablePrefix specified in the statements element is ignored during table creation.\r\n\r\n{code}\r\n<jdbcPersistenceAdapter createTablesOnStartup=\"true\" dataSource=\"#mysql-ds\" adapter=\"#sybase-adapter\"  useDatabaseLock=\"true\">\r\n  <statements>\r\n    <statements tablePrefix=\"myprefix_\"/>\r\n  </statements>\r\n</jdbcPersistenceAdapter>\r\n\r\n  .....\r\n<bean id=\"sybase-adapter\" class=\"org.apache.activemq.store.jdbc.adapter.SybaseJDBCAdapter\"/>\r\n\r\n{code}\r\n\r\nIt seems spring is calling the org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.setAdapter() method before org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.setStatements() is called. The setAdapter() triggers the table creation - hence no *tablePrefix\" is used.\r\n\r\nThis problems can be worked around if the adapter is configured as an element (as below) however this isn't the most ideal fix.\r\n\r\n{code}\r\n<persistenceAdapter>\r\n  <jdbcPersistenceAdapter>\r\n    <statements>\r\n      <statements tablePrefix=\"myprefix_\"/>\r\n    </statements>\r\n    <adapter>\r\n      <sybase-jdbc-adapter/>\r\n    </adapter>\r\n  </jdbcPersistenceAdapter>\r\n</persistenceAdapter>\r\n{code}\r\n",
        "jdbcPersistenceAdapter does not use lockCreateStatement value When using a jdbcPersistenceAdaptor and adapter with lockCreateStatements set, this is not used by org.apache.activemq.store.jdbc.DefaultDatabaseLocker.\r\n\r\n        <persistenceAdapter>\r\n            <jdbcPersistenceAdapter createTablesOnStartup=\"false\" \r\n                                    lockKeepAlivePeriod=\"10000\"\r\n                                    lockAcquireSleepInterval=\"5000\"\r\n                                    cleanupPeriod=\"0\"\r\n                                    dataSource=\"#oracle-ds-tomcat-dbcp\"  \r\n                                    maxRows=\"200\">\r\n                <statements>\r\n                    <statements lockCreateStatement=\"SELECT * FROM ACTIVEMQ_LOCK FOR UPDATE NOWAIT\" />\r\n                </statements>\r\n            </jdbcPersistenceAdapter>\r\n        </persistenceAdapter>\r\n\r\nIn activemq.log:\r\n\r\nDEBUG | Locking Query is SELECT * FROM ACTIVEMQ_LOCK | org.apache.activemq.store.jdbc.DefaultDatabaseLocker | main"
    ],
    [
        "AMQ-4616",
        "AMQ-3405",
        "Message moved from ActiveMQ.DLQ to another queue can be lost This is the same issue as https://fusesource.com/issues/browse/ENTMQ-341.\r\n\r\n---\r\n\r\nA persistent message can be lost by the broker.\r\nHow to reproduce:\r\n1. Put a persistent message onto queue A.\r\n2. A consumer (using XA transactions) receives the message. The consumer always throws an exception, so after predefined number of redelivery attempts the message goes to ActiveMQ.DLQ.\r\n3. Using web console move the message from ActiveMQ.DLQ back to queue A.\r\n4. Consumer receives the message and again throws exceptions in its onMessage method. \r\n4a. Expected behaviour: message lands on ActiveMQ.DLQ again.\r\n4b. Actual behaviour: message dissappears - it's neither on queue A nor ActiveMQ.DLQ.",
        "DLQ messages moved/copied into original queue disappear after failing processing for a second time 1. Message in queue A fails enough times to be moved to the DLQ.\r\n2. We move/copy the message back to queue A to attempt reprocessing. Invoking the retry operation from JMX can also be used.\r\n3. The consumer once again fails to consume the message greater than the max number of times.\r\n4. The message is not put back into the DLQ. If it was moved rather than copied, it means we have a message that was never successfully consumed, but has nevertheless disappeared.\r\n\r\nThis is all with the default ActiveMQ settings, though I tried adjusted the DLQ configuration to support both expired and non-persistent messages.\r\n\r\nI found this posting which seems to indicate the same issue I am seeing: http://www.mail-archive.com/users@activemq.apache.org/msg09683.html. One difference that I am seeing is that restarting ActiveMQ does not cause the message to show up in the DLQ again. Once it is lost, it is lost forever.\r\n\r\nTo replicate this, I believe you can use a consumer that just fails on every invocation.\r\n\r\nOne interesting thing is that if I put a message into the DLQ directly, then move it to a queue with a consumer, it will end up in the DLQ again as you would expect. If I then move the DLQ message back to the original queue, it will then show the bevahiour outlined above."
    ],
    [
        "AMQ-4654",
        "AMQ-4375",
        "JoramJmsTest TopicConnectionTest hangs when run with amqp+ssl This test case hangs in PubSubTestCase.tearDown when run with amqp+ssl\r\n",
        "JoramJmsTest UnifiedSessionTest and TopicConnectionTest hang when run with SSL, or on windows. This test suite results in a hang when run on windows.  I'll attach a patch which excludes it on Windows for now.\r\n"
    ],
    [
        "AMQ-4683",
        "AMQ-4550",
        "Scheduler discards overdue messages on startup When message is scheduled for a delivery (using AMQ_SCHEDULED_PERIOD property) it is not posted to the queue, but saved to the scheduler\u2019s repository instead. If Broker instance is shut down at the time for which the message is scheduled for a delivery, the scheduler will try to process the message at the next time broker is started up. Due to a bug in the scheduler implementation such messages may be dismissed rather than posted to the queue depending on the racing conditions inside the JVM.\r\n\r\nActual bug resides in org.apache.activemq.broker.scheduler.SchedulerBroker.getInternalScheduler() method. \r\nThis method first calls JobSchedulerStoreImpl. getJobScheduler(String name) method which in turn creates an instance of runnable JobSchedulerImpl class and starts it.\r\nThen SchedulerBroker registers itselfas a listener of the newly created JobSchedulerImpl.\r\nUnfortunately this may happen after the JobSchedulerImpl have dismissed all the \u201cmissed\u201d tasks as \u201cfired\u201d as there were no listeners configured.\r\n",
        "Allow messages scheduled for retry by the broker to be sent post-restart if the broker is not running at the jobs scheduled time In the current implementation, it appears that messages scheduled for retry by the broker may be lost if the broker is not running at the time the job is scheduled to execute.  If, for example, a message fails and is scheduled for retry at 1:30, with a 5 minute delay, the job will be scheduled to execute at 1:35. If the broker is running at 1:35, whether continuously or after a restart, the job will execute as expected and the message will arrive at the specified target destination.  However, if the broker is shutdown before the scheduled time and then started again after that time, say at 1:40, the message appears to be discarded and is not sent.  The same behavior appears to apply as well to messages sent originally with a delay.\r\n\r\nThis may result in loss of a message that needed to be processed.  While there may be scenarios where precise execution time of a job is critical (i.e. a job scheduled for 1:35 should not run at any time other than 1:35), it is also possible, and in the case of retries probably likely, that the job should execute regardless.  Message loss is generally \"bad\" and it would likely be preferable that the retried message be sent at the scheduled time or the next available opportunity in the case of a broker that is not running at the scheduled time.\r\n\r\n"
    ],
    [
        "AMQ-4698",
        "AMQ-4676",
        "Failed to deploy AMQ to Glassfish 4 When deploying AMQ to Glassfish 4, got the following exception and failed:\r\n\r\n[2013-08-29T10:25:35.489+0800] [glassfish 4.0] [SEVERE] [NCLS-CORE-00026] [javax.enterprise.system.core] [tid: _ThreadID=53 _ThreadName=admin-listener(3)] [timeMillis: 1377743135489] [levelValue: 1000] [[\r\n  Exception during lifecycle processing\r\njava.lang.IllegalStateException: The lifecycle method [afterPropertiesSet] must not throw a checked exception. Related annotation information: annotation [@javax.annotation.PostConstruct()] on annotated element [public void org.apache.activemq.security.AuthorizationEntry.afterPropertiesSet() throws java.lang.Exception] of type [METHOD]\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.readAnnotations(Archivist.java:518)\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.readAnnotations(Archivist.java:446)\r\n\tat org.glassfish.web.deployment.archivist.WebArchivist.postAnnotationProcess(WebArchivist.java:338)\r\n\tat org.glassfish.web.deployment.archivist.WebArchivist.postAnnotationProcess(WebArchivist.java:91)\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.readRestDeploymentDescriptors(Archivist.java:420)\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.readDeploymentDescriptors(Archivist.java:396)\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.open(Archivist.java:271)\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.open(Archivist.java:280)\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.open(Archivist.java:241)\r\n\tat com.sun.enterprise.deployment.archivist.ApplicationFactory.openArchive(ApplicationFactory.java:161)\r\n\tat org.glassfish.javaee.core.deployment.DolProvider.processDOL(DolProvider.java:198)\r\n\tat org.glassfish.javaee.core.deployment.DolProvider.load(DolProvider.java:222)\r\n\tat org.glassfish.javaee.core.deployment.DolProvider.load(DolProvider.java:96)\r\n\tat com.sun.enterprise.v3.server.ApplicationLifecycle.loadDeployer(ApplicationLifecycle.java:878)\r\n\tat com.sun.enterprise.v3.server.ApplicationLifecycle.setupContainerInfos(ApplicationLifecycle.java:818)\r\n\tat com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:374)\r\n\tat com.sun.enterprise.v3.server.ApplicationLifecycle.deploy(ApplicationLifecycle.java:219)\r\n\tat org.glassfish.deployment.admin.DeployCommand.execute(DeployCommand.java:491)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$2$1.run(CommandRunnerImpl.java:527)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$2$1.run(CommandRunnerImpl.java:523)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat javax.security.auth.Subject.doAs(Subject.java:356)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$2.execute(CommandRunnerImpl.java:522)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:546)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl.doCommand(CommandRunnerImpl.java:1423)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl.access$1500(CommandRunnerImpl.java:108)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1762)\r\n\tat com.sun.enterprise.v3.admin.CommandRunnerImpl$ExecutionContext.execute(CommandRunnerImpl.java:1674)\r\n\tat com.sun.enterprise.v3.admin.AdminAdapter.doCommand(AdminAdapter.java:534)\r\n\tat com.sun.enterprise.v3.admin.AdminAdapter.onMissingResource(AdminAdapter.java:224)\r\n\tat org.glassfish.grizzly.http.server.StaticHttpHandler.service(StaticHttpHandler.java:297)\r\n\tat com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:246)\r\n\tat org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:191)\r\n\tat org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:168)\r\n\tat org.glassfish.grizzly.http.server.HttpServerFilter.handleRead(HttpServerFilter.java:189)\r\n\tat org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:288)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:206)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:136)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:114)\r\n\tat org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)\r\n\tat org.glassfish.grizzly.portunif.PUFilter.handleRead(PUFilter.java:231)\r\n\tat org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:288)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:206)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:136)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:114)\r\n\tat org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)\r\n\tat org.glassfish.grizzly.portunif.PUFilter.handleRead(PUFilter.java:231)\r\n\tat org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:288)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:206)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:136)\r\n\tat org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:114)\r\n\tat org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:77)\r\n\tat org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:838)\r\n\tat org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:113)\r\n\tat org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:115)\r\n\tat org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:55)\r\n\tat org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:135)\r\n\tat org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:564)\r\n\tat org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:544)\r\n\tat java.lang.Thread.run(Thread.java:724)\r\nCaused by: The lifecycle method [afterPropertiesSet] must not throw a checked exception. Related annotation information: annotation [@javax.annotation.PostConstruct()] on annotated element [public void org.apache.activemq.security.AuthorizationEntry.afterPropertiesSet() throws java.lang.Exception] of type [METHOD]\r\n\tat org.glassfish.apf.impl.AnnotationProcessorImpl.process(AnnotationProcessorImpl.java:367)\r\n\tat org.glassfish.apf.impl.AnnotationProcessorImpl.process(AnnotationProcessorImpl.java:375)\r\n\tat org.glassfish.apf.impl.AnnotationProcessorImpl.processAnnotations(AnnotationProcessorImpl.java:289)\r\n\tat org.glassfish.apf.impl.AnnotationProcessorImpl.process(AnnotationProcessorImpl.java:217)\r\n\tat org.glassfish.apf.impl.AnnotationProcessorImpl.process(AnnotationProcessorImpl.java:134)\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.processAnnotations(Archivist.java:626)\r\n\tat com.sun.enterprise.deployment.archivist.Archivist.readAnnotations(Archivist.java:462)\r\n\t... 62 more\r\nCaused by: java.lang.IllegalArgumentException: The lifecycle method [afterPropertiesSet] must not throw a checked exception\r\n\tat com.sun.enterprise.deployment.annotation.handlers.AbstractResourceHandler.validateAnnotatedLifecycleMethod(AbstractResourceHandler.java:186)\r\n\tat com.sun.enterprise.deployment.annotation.handlers.PostConstructHandler.processAnnotation(PostConstructHandler.java:72)\r\n\tat com.sun.enterprise.deployment.annotation.handlers.AbstractResourceHandler.processAnnotation(AbstractResourceHandler.java:142)\r\n\tat com.sun.enterprise.deployment.annotation.factory.SJSASFactory$LazyAnnotationHandler.processAnnotation(SJSASFactory.java:148)\r\n\tat org.glassfish.apf.impl.AnnotationProcessorImpl.process(AnnotationProcessorImpl.java:344)\r\n\t... 68 more\r\n]]\r\n",
        "ActiveMQ not compliant with JSR-250 (@PostConstruct, @PreDestroy) ActiveMQ is not compliant with JSR-250, which states:\r\n2.5 javax.annotation.PostConstruct:\r\n [...]\r\n - The method MUST NOT throw a checked exception.\r\n - If the method throws an unchecked exception the class MUST NOT be put into\r\nservice. In the case of EJBs the method annotated with PostConstruct can\r\nhandle exceptions and cleanup before the bean instance is discarded.\r\n\r\n2.6 javax.annotation.PreDestroy\r\n(same as above)\r\n\r\nAn exception was thrown when attempting to deploy an application using the activemq-rar-5.8 on GF 4.0, but I believe it's safe to say that this can occur in different containers - if not now, potentially between container releases.  \r\n\r\nIncluded are patches that fix this in all ActiveMQ components.  Most check exceptions thrown were Exception, which was changed to RuntimeException (trapped and wrapped).  There were also IOExceptions being thrown, in which case ActiveMQ-broker now has an IORuntimeException class that is thrown.  Any downstream catches that handled the check exceptions have been converted to catch the RuntimeExceptions.\r\n\r\nThis was also reported under AMQ-4673, but the scope of that issue was a lot more limited.\r\n"
    ],
    [
        "AMQ-4707",
        "AMQ-4641",
        "AMQP unit tests fail Running org.apache.activemq.transport.amqp.joram.JoramJmsNioTest\r\nTests run: 189, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 387.208 sec <<< FAILURE!\r\n\r\ndue to:\r\n\r\ntestSenderBrowser(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest): expected:<2> but was:<0>  testBrowserWithMessageSelector(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest): expected:<1> but was:<0>\r\n",
        "JoramJmsTest QueryBrowserTest fails when run with amqp+nio If you run QueryBrowserTest using amqp+nio, you get the following:\r\n\r\n\r\nTests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 5.166 sec <<< FAILURE!\r\ntestSenderBrowser(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest)  Time elapsed: 3.053 sec  <<< FAILURE!\r\njunit.framework.AssertionFailedError: null\r\n\tat junit.framework.Assert.fail(Assert.java:55)\r\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\r\n\tat junit.framework.Assert.assertTrue(Assert.java:31)\r\n\tat org.objectweb.jtests.jms.conform.queue.QueueBrowserTest.testSenderBrowser(QueueBrowserTest.java:103)\r\n\r\ntestBrowserWithMessageSelector(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest)  Time elapsed: 2.051 sec  <<< FAILURE!\r\njunit.framework.AssertionFailedError: expected:<1> but was:<0>\r\n\tat junit.framework.Assert.fail(Assert.java:57)\r\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\r\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\r\n\tat junit.framework.Assert.assertEquals(Assert.java:234)\r\n\tat junit.framework.Assert.assertEquals(Assert.java:241)\r\n\tat org.objectweb.jtests.jms.conform.queue.QueueBrowserTest.testBrowserWithMessageSelector(QueueBrowserTest.java:142)\r\n\r\n\r\nThis may be similar to: https://issues.apache.org/jira/browse/AMQ-4376\r\n"
    ],
    [
        "AMQ-4770",
        "AMQ-4769",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads\r\n\r\n{quote}\r\nClosing a closed connection must NOT throw an exception.\r\n{quote}\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads\r\n\r\n{quote}\r\nClosing a closed connection must NOT throw an exception.\r\n{quote}\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4771",
        "AMQ-4769",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads: \"Closing a closed connection must NOT throw an exception.\"\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads\r\n\r\n{quote}\r\nClosing a closed connection must NOT throw an exception.\r\n{quote}\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4771",
        "AMQ-4770",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads: \"Closing a closed connection must NOT throw an exception.\"\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads\r\n\r\n{quote}\r\nClosing a closed connection must NOT throw an exception.\r\n{quote}\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4772",
        "AMQ-4769",
        "Connection.close() throws exception if already closed. ",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads\r\n\r\n{quote}\r\nClosing a closed connection must NOT throw an exception.\r\n{quote}\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4772",
        "AMQ-4770",
        "Connection.close() throws exception if already closed. ",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads\r\n\r\n{quote}\r\nClosing a closed connection must NOT throw an exception.\r\n{quote}\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4772",
        "AMQ-4771",
        "Connection.close() throws exception if already closed. ",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads: \"Closing a closed connection must NOT throw an exception.\"\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4773",
        "AMQ-4769",
        "Connection.close() throws exception if already closed. The Javadoc for {{Connection.close()}} reads: \"[...] Closing a closed connection must NOT throw an exception. [...]\"\r\n\r\nYet, I get this:\r\n\r\n{code}\r\n\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads\r\n\r\n{quote}\r\nClosing a closed connection must NOT throw an exception.\r\n{quote}\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4773",
        "AMQ-4770",
        "Connection.close() throws exception if already closed. The Javadoc for {{Connection.close()}} reads: \"[...] Closing a closed connection must NOT throw an exception. [...]\"\r\n\r\nYet, I get this:\r\n\r\n{code}\r\n\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads\r\n\r\n{quote}\r\nClosing a closed connection must NOT throw an exception.\r\n{quote}\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4773",
        "AMQ-4771",
        "Connection.close() throws exception if already closed. The Javadoc for {{Connection.close()}} reads: \"[...] Closing a closed connection must NOT throw an exception. [...]\"\r\n\r\nYet, I get this:\r\n\r\n{code}\r\n\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n",
        "Connection.close() throws exception if already closed. The Javadoc for Connection.close() reads: \"Closing a closed connection must NOT throw an exception.\"\r\n\r\nYet, I get this:\r\n\r\n{code}\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n\r\n"
    ],
    [
        "AMQ-4773",
        "AMQ-4772",
        "Connection.close() throws exception if already closed. The Javadoc for {{Connection.close()}} reads: \"[...] Closing a closed connection must NOT throw an exception. [...]\"\r\n\r\nYet, I get this:\r\n\r\n{code}\r\n\r\nException in thread \"TrueUpdate Manager JMS / Receiver\" java.lang.IllegalStateException: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:105)\r\n\tat java.lang.Thread.run(Thread.java:680)\r\nCaused by: org.apache.activemq.ConnectionClosedException: The connection is already closed\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1477)\r\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1464)\r\n\tat org.apache.activemq.ActiveMQConnection.stop(ActiveMQConnection.java:566)\r\n\tat org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:630)\r\n\tat net.java.trueupdate.jms.JmsReceiver.run(JmsReceiver.java:97)\r\n\t... 1 more\r\n{code}\r\n",
        "Connection.close() throws exception if already closed. "
    ],
    [
        "AMQ-4781",
        "AMQ-4780",
        "Update QPID Client version to 0.24 ",
        "Upgrade to qpid 0.24 We should upgrade to recent 0.24 release which Camel also uses."
    ],
    [
        "AMQ-4783",
        "AMQ-4550",
        "Scheduled messages lost if broker is shut down during the scheduled time of the message a.\tSend a scheduled message to broker , let us say to deliver in 60 sec\r\nb.\tImmediately shut down the broker and keep it down for 60 seconds (down at the time the message is scheduled to deliver) \r\nOn coming up , the message is not queued .\r\n\r\nWhen the broker starts , it adds listeners to it\u2019s store \r\n            2013-04-18 19:35:42,184  INFO Broker starter  activemq.broker.BrokerService:633 - Apache ActiveMQ 5.8.0 (authorizerBroker, ID:Joycomp-4951-1366328140528-1:1) is starting\r\n2013-04-18 19:35:42,199 DEBUG Broker starter  kahadb.scheduler.JobSchedulerImpl:82 - Joy - Adding job listener\r\n2013-04-18 19:35:42,215 DEBUG Broker starter  kahadb.scheduler.JobSchedulerImpl:85 - Joy - Added Listener is scheduler broker\r\n\r\nAfter that when message\u2019s scheduld time comes , it fires the message to queue as below -:\r\n\r\n2013-04-18 19:37:41,012 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:442 - Firing Job [id=ID:Joycomp-4951-1366328140528-5:1:1:1:1, startTime=Thu Apr 18 19:37:36 EDT 2013, delay=5000, period=0, repeat=0, nextTime=Thu Apr 18 19:37:41 EDT 2013]\r\n2013-04-18 19:37:41,012 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:445 - byte sequnce = org.apache.activemq.util.ByteSequence@f0c67\r\n2013-04-18 19:37:41,012 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:446 - Job listeners list=1\r\n\r\nNow , for my case , on a restart , if it finds that a message\u2019s scheduled time is past the time of start of the broker , during the initialization it fires the message even before the broker is started \r\n\r\n2013-04-18 19:40:57,387  INFO Broker starter  kahadb.plist.PListStoreImpl:331 - PListStore:[C:\\Joy\\servers\\tomcat\\7.0.37\\dist\\bin\\activemq-data\\authorizerBroker\\tmp_storage] started\r\n2013-04-18 19:40:58,356 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:445 - byte sequnce = org.apache.activemq.util.ByteSequence@10ee5b8\r\n2013-04-18 19:40:58,356 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:446 - Job listeners list=0\r\n// Broker started later -:\r\n2013-04-18 19:40:59,199  INFO Broker starter  activemq.broker.BrokerService:633 - Apache ActiveMQ 5.8.0 (authorizerBroker, ID:Joycomp-1494-1366328458231-1:1) is starting\r\n2013-04-18 19:40:59,246 DEBUG Broker starter  kahadb.scheduler.JobSchedulerImpl:82 - Joy - Adding job listener\r\n2013-04-18 19:40:59,246 DEBUG Broker starter  kahadb.scheduler.JobSchedulerImpl:85 - Joy - Added Listener is scheduler broker\r\n",
        "Allow messages scheduled for retry by the broker to be sent post-restart if the broker is not running at the jobs scheduled time In the current implementation, it appears that messages scheduled for retry by the broker may be lost if the broker is not running at the time the job is scheduled to execute.  If, for example, a message fails and is scheduled for retry at 1:30, with a 5 minute delay, the job will be scheduled to execute at 1:35. If the broker is running at 1:35, whether continuously or after a restart, the job will execute as expected and the message will arrive at the specified target destination.  However, if the broker is shutdown before the scheduled time and then started again after that time, say at 1:40, the message appears to be discarded and is not sent.  The same behavior appears to apply as well to messages sent originally with a delay.\r\n\r\nThis may result in loss of a message that needed to be processed.  While there may be scenarios where precise execution time of a job is critical (i.e. a job scheduled for 1:35 should not run at any time other than 1:35), it is also possible, and in the case of retries probably likely, that the job should execute regardless.  Message loss is generally \"bad\" and it would likely be preferable that the retried message be sent at the scheduled time or the next available opportunity in the case of a broker that is not running at the scheduled time.\r\n\r\n"
    ],
    [
        "AMQ-4783",
        "AMQ-4683",
        "Scheduled messages lost if broker is shut down during the scheduled time of the message a.\tSend a scheduled message to broker , let us say to deliver in 60 sec\r\nb.\tImmediately shut down the broker and keep it down for 60 seconds (down at the time the message is scheduled to deliver) \r\nOn coming up , the message is not queued .\r\n\r\nWhen the broker starts , it adds listeners to it\u2019s store \r\n            2013-04-18 19:35:42,184  INFO Broker starter  activemq.broker.BrokerService:633 - Apache ActiveMQ 5.8.0 (authorizerBroker, ID:Joycomp-4951-1366328140528-1:1) is starting\r\n2013-04-18 19:35:42,199 DEBUG Broker starter  kahadb.scheduler.JobSchedulerImpl:82 - Joy - Adding job listener\r\n2013-04-18 19:35:42,215 DEBUG Broker starter  kahadb.scheduler.JobSchedulerImpl:85 - Joy - Added Listener is scheduler broker\r\n\r\nAfter that when message\u2019s scheduld time comes , it fires the message to queue as below -:\r\n\r\n2013-04-18 19:37:41,012 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:442 - Firing Job [id=ID:Joycomp-4951-1366328140528-5:1:1:1:1, startTime=Thu Apr 18 19:37:36 EDT 2013, delay=5000, period=0, repeat=0, nextTime=Thu Apr 18 19:37:41 EDT 2013]\r\n2013-04-18 19:37:41,012 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:445 - byte sequnce = org.apache.activemq.util.ByteSequence@f0c67\r\n2013-04-18 19:37:41,012 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:446 - Job listeners list=1\r\n\r\nNow , for my case , on a restart , if it finds that a message\u2019s scheduled time is past the time of start of the broker , during the initialization it fires the message even before the broker is started \r\n\r\n2013-04-18 19:40:57,387  INFO Broker starter  kahadb.plist.PListStoreImpl:331 - PListStore:[C:\\Joy\\servers\\tomcat\\7.0.37\\dist\\bin\\activemq-data\\authorizerBroker\\tmp_storage] started\r\n2013-04-18 19:40:58,356 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:445 - byte sequnce = org.apache.activemq.util.ByteSequence@10ee5b8\r\n2013-04-18 19:40:58,356 DEBUG JobScheduler:JMS  kahadb.scheduler.JobSchedulerImpl:446 - Job listeners list=0\r\n// Broker started later -:\r\n2013-04-18 19:40:59,199  INFO Broker starter  activemq.broker.BrokerService:633 - Apache ActiveMQ 5.8.0 (authorizerBroker, ID:Joycomp-1494-1366328458231-1:1) is starting\r\n2013-04-18 19:40:59,246 DEBUG Broker starter  kahadb.scheduler.JobSchedulerImpl:82 - Joy - Adding job listener\r\n2013-04-18 19:40:59,246 DEBUG Broker starter  kahadb.scheduler.JobSchedulerImpl:85 - Joy - Added Listener is scheduler broker\r\n",
        "Scheduler discards overdue messages on startup When message is scheduled for a delivery (using AMQ_SCHEDULED_PERIOD property) it is not posted to the queue, but saved to the scheduler\u2019s repository instead. If Broker instance is shut down at the time for which the message is scheduled for a delivery, the scheduler will try to process the message at the next time broker is started up. Due to a bug in the scheduler implementation such messages may be dismissed rather than posted to the queue depending on the racing conditions inside the JVM.\r\n\r\nActual bug resides in org.apache.activemq.broker.scheduler.SchedulerBroker.getInternalScheduler() method. \r\nThis method first calls JobSchedulerStoreImpl. getJobScheduler(String name) method which in turn creates an instance of runnable JobSchedulerImpl class and starts it.\r\nThen SchedulerBroker registers itselfas a listener of the newly created JobSchedulerImpl.\r\nUnfortunately this may happen after the JobSchedulerImpl have dismissed all the \u201cmissed\u201d tasks as \u201cfired\u201d as there were no listeners configured.\r\n"
    ],
    [
        "AMQ-4810",
        "AMQ-4684",
        "LevelDB store does not seem to garbage collect its files Trying the LevelDB store on a recent ActiveMQ 5.9 snapshot, it seems that the broker does not remove useless files.\r\n\r\nI currently have a broker with no messages at all (all queues are empty and the TotalMessageCount is at 0) but plenty of LevelDB files:\r\n\r\n# du -ks leveldb\r\n1388380\tleveldb\r\n# find leveldb -type f | wc -l\r\n2419\r\n\r\nMaybe this is related to https://issues.apache.org/jira/browse/APLO-245?",
        "LevelDB on NFS created .nfs files We are currently testing levelDB on NFS for failover. We did this test with only one ActiveMQ running.\r\n\r\nWe filled one queue with 10.000 messages via the admin console, and then purged the queue.\r\n\r\nAfter this, the LevelDB directory was filled with .nfsxxxxxx files. These seem to be old version of the LevelDB log file. They are removed when you stop the ActiceMQ process. You also appear to be able to remove the files manually.\r\n\r\nFrom what we can deduce, these files mean that they were still open for io, while they were removed from the filesystem. A local filesystem will cope with this in the background, on a NFS share however that can't be done, so these .nfs files are created.\r\n\r\nSo it seems that the LevelDB store keeps the old logfiles open after they were deleted."
    ],
    [
        "AMQ-4870",
        "AMQ-4869",
        "Bug in the WebConsole RemoteJMX connectivity We are using a standalone ActiveMQ WebConsole that connects remotely to the broker using JMX.\r\n\r\nI have noticed that a bug has been introduced by the JMX MBean naming changes that came with ActiveMQ 5.8. It prevents the webconsole to connect to the remote broker as it doesn't \"see\" the broker MBean.\r\n\r\nBug affects ActiveMQ 5.8/5.9.\r\n\r\nFaulty code in activemq-web module in class org.apache.activemq.web.RemoteJMXBrokerFacade\r\n{code}\r\nprotected Set<ObjectName> findBrokers(MBeanServerConnection connection) throws IOException, MalformedObjectNameException {\r\nif (this.brokerName == null) {\r\n    name = new ObjectName(\"org.apache.activemq:type=Broker,brokerName=*\");\r\n  } else {\r\n    name = new ObjectName(\"org.apache.activemq:brokerName=\"\r\n\t\t\t\t\t+ this.brokerName + \",Type=broker\");\r\n  }\r\n...\r\n{code}\r\n}\r\n\r\nWhen brokerName hasn't been specified, the remote JMX connection works OK.\r\n\r\nWhen the brokerName has been specified, the remote JMX connection fails.\r\n\r\nFix is to replace the second name definition with the proper ObjectName :\r\n{code}\r\nname = new ObjectName(\"org.apache.activemq:type=Broker,brokerName=\" + this.brokerName);\r\n{code}\r\n",
        "Wrong JMX object name created in RemoteJMXBrokerFacade When a broker name is given the console code create the wrong broker object name"
    ],
    [
        "AMQ-4892",
        "AMQ-4692",
        "MQTT clients disconnecting due to socket error do not publish the configured last will and testament message. ",
        "ActiveMQ broker does not publish last will messages When I run a MQTT client\uff08paho or fuse\uff09to connect ActiveMQ broker. if i terminate this client and can not receive LWT messages from broker.\r\n\r\nI changed broker from ActiveMQ to Mosquitto broker , everything is ok.\r\n\r\nbelow is my test class:\r\n\r\npackage com.paho;\r\n\r\nimport org.eclipse.paho.client.mqttv3.MqttCallback;\r\nimport org.eclipse.paho.client.mqttv3.MqttClient;\r\nimport org.eclipse.paho.client.mqttv3.MqttConnectOptions;\r\nimport org.eclipse.paho.client.mqttv3.MqttDeliveryToken;\r\nimport org.eclipse.paho.client.mqttv3.MqttException;\r\nimport org.eclipse.paho.client.mqttv3.MqttMessage;\r\nimport org.eclipse.paho.client.mqttv3.MqttSecurityException;\r\nimport org.eclipse.paho.client.mqttv3.MqttTopic;\r\n\r\npublic class Sub {\r\n\tprivate MqttClient mqttClient;\r\n\t\r\n\tpublic void subscriber(){\r\n\t\ttry {\r\n\t\t\tmqttClient = new MqttClient(\"tcp://192.168.100.80:1883\", MqttClient.generateClientId());\r\n\t\t\t\r\n\r\n\t\t\tMqttConnectOptions connectOptions = new  MqttConnectOptions();\r\n\r\n\t\t\t//set will\r\n\t\t\tconnectOptions.setWill(mqttClient.getTopic(\"lastwill\"), new String(\"I am offline\").getBytes(), 1, false);\r\n\t\t\tmqttClient.connect(connectOptions);\r\n\t\t\tmqttClient.setCallback(new MqttCallback(){\r\n\r\n\t\t\t\tpublic void connectionLost(Throwable paramThrowable) {\r\n\t\t\t\t\tSystem.out.println(\"Connection Exist. \\nCause: \" + paramThrowable);\r\n\t\t\t\t\twhile(true){\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tThread.sleep(20000);\r\n\t\t\t\t\t\t\tif(!mqttClient.isConnected()){\r\n\t\t\t\t\t\t\t\tsubscriber();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpublic void messageArrived(MqttTopic paramMqttTopic,\r\n\t\t\t\t\t\tMqttMessage paramMqttMessage) throws Exception {\r\n\r\n\t\t\t\t\tSystem.out.println(\"Message arrived From The Topic:\\t\"+paramMqttTopic.toString() +\" \\nMessage: \" + paramMqttMessage.toString());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpublic void deliveryComplete(\r\n\t\t\t\t\t\tMqttDeliveryToken paramMqttDeliveryToken) {\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tmqttClient.subscribe(\"durable\",1);\r\n//\t\t\tmqttClient.subscribe(\"durable1\",1);\r\n\r\n\t\t\t\r\n\t\t} catch (MqttException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * @param args\r\n\t */\r\n\tpublic static void main(String[] args) {\r\n\t\tSub sub = new Sub();\r\n\t\tsub.subscriber();\r\n\t}\r\n\r\n}\r\n"
    ],
    [
        "AMQ-4906",
        "AMQ-4731",
        "advisory producerCount = 0 is not received on temporary queue i notice i never receive producer advisory messages (ActiveMQ.Advisory.Producer.Queue .[...]) with producerCount=0 when the client message producers on temporary queue are closed. i do receive producerCount > 0. \r\n\r\nHowever, the consumerCount (from ActiveMQ.Advisory.Consumer.Queue.[...]) appears to work as expected.\r\n\r\nFrom looking into org.apache.activemq.advisory.AdvisoryBroker.java\r\n{code}\r\n@Override\r\n    public void removeProducer(ConnectionContext context, ProducerInfo info) throws Exception {\r\n        super.removeProducer(context, info);\r\n\r\n        // Don't advise advisory topics.\r\n        ActiveMQDestination dest = info.getDestination();\r\n        if (info.getDestination() != null && !AdvisorySupport.isAdvisoryTopic(dest)) {\r\n            ActiveMQTopic topic = AdvisorySupport.getProducerAdvisoryTopic(dest);\r\n            producers.remove(info.getProducerId());\r\n            if (!dest.isTemporary() || destinations.contains(dest)) { // PLEASE NOTE: <== could this actually be destinations.containsKey(dest)\r\n                fireProducerAdvisory(context, dest,topic, info.createRemoveCommand());\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\nas reference, the \"working\" removeConsumer method:\r\n{code}\r\n@Override\r\n    public void removeConsumer(ConnectionContext context, ConsumerInfo info) throws Exception {\r\n        super.removeConsumer(context, info);\r\n\r\n        // Don't advise advisory topics.\r\n        ActiveMQDestination dest = info.getDestination();\r\n        if (!AdvisorySupport.isAdvisoryTopic(dest)) {\r\n            ActiveMQTopic topic = AdvisorySupport.getConsumerAdvisoryTopic(dest);\r\n            consumers.remove(info);\r\n            if (!dest.isTemporary() || destinations.containsKey(dest)) {\r\n                fireConsumerAdvisory(context,dest, topic, info.createRemoveCommand());\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\nPlease note the destinations.containsKey(dest) vs destinations.contains(dest) (for concurrentHashMaps this is identical to containsValue()). I'm assuming the logic is to make sure the producer destination do exist in both cases\r\n\r\nI tested this with 5.7.0. the code is similar in 5.9.0\r\n\r\n",
        "TempQueueMemoryTest started failing recently. TempQueueMemoryTest test is failing.  Fails after changes made for AMQ-2327 because of the way the ConcurrentSkipListMap does its sorting and searching and the implementation of ConsumerIdKey.  The key comparison depends on creation time but later removals will always have a later creation time which causes the search for the element to fails most of the time since it will compare greater than even to a key with the same consumer Id.  Result is that items are left in the consumers map causing a memory leak."
    ],
    [
        "AMQ-5048",
        "AMQ-2832",
        "Unexpected message redelivery after KahaDB metadata recovery It was an accident when our system ran out of free disk space. ActiveMQ broker was shut down but after disk clean it failed to start with throwing an exception:\r\n\r\n2014-01-31 07:59:46,297 | ERROR | Failed to page in more queue messages  | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[CORE_FuseMQ] Task-149\r\njava.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Could not locate data file /opt/broker/data/kahadb/db-97203.log\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)\r\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)\r\n        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1775)\r\n        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2003)\r\n        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1491)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\r\n        at java.lang.Thread.run(Thread.java:662)st\r\nCaused by: java.lang.RuntimeException: java.io.IOException: Could not locate data file /opt/broker/data/kahadb/db-97203.log\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)\r\n        ... 9 more\r\nCaused by: java.io.IOException: Could not locate data file /opt/broker/data/kahadb/db-97203.log\r\n        at org.apache.activemq.store.kahadb.disk.journal.Journal.getDataFile(Journal.java:353)\r\n        at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:600)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:939)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1029)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:557)\r\n        at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:546)\r\n        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)\r\n        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)\r\n        ... 10 more\r\n2014-01-31 07:59:47,305 | ERROR | Looking for key 97203 but not found in fileMap: {55354=db-55354.log number = 55354 , length = 33563112, 93728=db-93728.log number = 93728 , length = 33554796, 9373\r\n2014-01-31 07:59:47,307 | ERROR | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@3a252a17:mdm.kis,batchResetNeeded=false,storeHasMessages=true,size=157,cacheEnabled=false,maxBatchSize\r\njava.io.IOException: Could not locate data file /opt/broker/data/kahadb/db-97203.log\r\n        at org.apache.activemq.store.kahadb.disk.journal.Journal.getDataFile(Journal.java:353)\r\n        at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:600)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:939)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1029)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:557)\r\n        at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:546)\r\n        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)\r\n        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)\r\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)\r\n        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1775)\r\n        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2003)\r\n        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1491)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\r\n[...]\r\n\r\nWe rebuilt metadata as described here: https://access.redhat.com/site/documentation/en-US/Fuse_MQ_Enterprise/7.1/html/Configuring_Broker_Persistence/files/KahaDB-Recovery.html \r\n\r\nPerformed steps to rebuild:\r\n1. Stop broker\r\n2. Delete db.data\r\n3. Start broker\r\n\r\nAfterwards broker started correctly without exceptions. Problem is that some new messages appeared in queues. Those queues had zero messages before metadata recovery. Appeared messages were quite outdated and already delivered several months ago. This is dangerous behaviour because unexpected redelivery in some cases may bring harm to consumers. ",
        "Possible replay of old messages post index recovery from journal - data files containing acks reclaimed/cleaned up in error With long lived messages and outstanding acks, ack distribution can be sparse across data files. If a data file is in use (still has unreferenced messages, the data files containing acks for all those messages also need to be maintained to ensure a replay of the journal replays the corresponding acks. Currently it is possible that data files with no unreferenced messages but with acks pertinent to an in use data file can get deleted. The result is duplicate or relay of old messages after journal recovery (following a crash/restart)"
    ],
    [
        "AMQ-5169",
        "AMQ-4147",
        "CLONE - heart-beat is disabled when connecting to web socket If I use the stomp.js library to connect to ActiveMQ over its WebSocket url (ws://localhost:61614), the CONNECTED frame returns with disabled heart-beat:\r\n\r\nCONNECTED\r\nheart-beat:0,0\r\nsession:ID:retsina.local-63633-1380117269290-2:1\r\nserver:ActiveMQ/5.8.0\r\nversion:1.1\r\n\r\nIf I connect to its TCP socket (localhost:61613), the CONNECT frame will have heart-beat:\r\n\r\nCONNECTED\r\nheart-beat:10000,10000\r\nsession:ID:retsina.local-63384-1380115729700-2:12\r\nserver:ActiveMQ/5.8.0\r\nversion:1.1\r\n\r\nIn both case, the stomp.js send the same CONNECT frame with heart-beat:\r\n\r\nCONNECT\r\nlogin:user\r\npasscode:password\r\naccept-version:1.1,1.0\r\nheart-beat:10000,10000\r\n\r\nIs heart-beat disabled on purpose for Web Socket? Please note that the stomp.js does support heart-beat (using window.setInterval in a Web browser)\r\n",
        "Memory usage incorrectly updated across network of brokers when VMTransport is used. Symptom\r\n=======\r\nI was writing some unit tests based on {{org.apache.activemq.JmsMultipleBrokersTestSupport}}, and noticed the following issue:\r\n\r\nWhen brokers are connected in a network using VMTransport (i.e., VMTransport on both the local and remote ends of a bridge), and a message moves from broker1 to broker2, the memory usage of the message continues to be accounted for on broker1 until the message is actually consumed on broker2.  \r\n\r\nIf the brokers are bridged using a non-VM transport (e.g., TCP), memory usage on broker1 is reduced as soon as the message is bridged to broker2, and broker2's memory usage increases until the message is consumed.\r\n\r\nCause\r\n=====\r\nThe cause is the same as in AMQ-4116: {{Message.copy()}} copies the {{memoryUsage}} object.  As a result, when the message moves from broker1 to broker2, the original {{memoryUsage}} object, which refers to broker1 is copied through to broker2 and never updated to broker2's {{memoryUsage}} object.\r\n\r\nSpecifically, the message is copied from the local transport before being sent to the remote transport by this code:\r\n\r\n{code:title=DemandForwardingBridgeSupport.java}\r\nprotected void serviceLocalCommand(Command command) {\r\n    if (!disposed.get()) {\r\n        try {\r\n            if (command.isMessageDispatch()) {\r\n                enqueueCounter.incrementAndGet();\r\n                final MessageDispatch md = (MessageDispatch) command;\r\n                final DemandSubscription sub = subscriptionMapByLocalId.get(md.getConsumerId());\r\n                if (sub != null && md.getMessage() != null && sub.incrementOutstandingResponses()) {\r\n\r\n                    if (suppressMessageDispatch(md, sub)) {\r\n                        if (LOG.isDebugEnabled()) {\r\n                            LOG.debug(configuration.getBrokerName() + \" message not forwarded to \" + remoteBrokerName + \" because message came from there or fails networkTTL, brokerPath: \" + Arrays.toString(md.getMessage().getBrokerPath()) + \", message: \" + md.getMessage());\r\n                        }\r\n                        // still ack as it may be durable\r\n                        try {\r\n                            localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));\r\n                        } finally {\r\n                            sub.decrementOutstandingResponses();\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    Message message = configureMessage(md);\r\n...\r\n\r\nprotected Message configureMessage(MessageDispatch md) {\r\n    Message message = md.getMessage().copy();\r\n...\r\n\r\n{code}\r\n\r\nThis bug is not present when a non-VM transport is used for the bridge because {{Message.memoryUsage}} is marked transient *not* copied during serialization/deserialization over the transport.\r\n\r\nSolution\r\n========\r\nSince this is at least the second bug to result from the current {{Message.copy()}} behaviour, I think \"Solution 1\" proposed from AMQ-4116 is starting to look attractive as both a solution to AMQ-4116 and this bug:\r\n\r\nModify {{Message.copy()}} so that it sets the resulting message's {{memoryUsage}} object to {{null}}.  This would make {{Message.copy()}} behave more similarly to serialization/deserialization.\r\n\r\n"
    ],
    [
        "AMQ-5220",
        "AMQ-2098",
        "Advisory messages are still empty when received with a Stomp subscription The subject of this task similiar as AMQ-2098. Bug still exists, and it can be reproduced according to steps below.\r\n\r\nThis simple script written in PHP uses standard Stomp client\r\n{code}\r\n$stomp       = new \\Stomp('tcp://localhost:61613', 'admin', 'admin');\r\n$stomp->subscribe('/topic/stats');\r\n\r\n$stomp->begin($transaction = microtime(true));\r\n$status = $stomp->send('/queue/ActiveMQ.Statistics.Destination.testqueue', '', Array('reply-to' => '/topic/stats', 'persistent' => 'true'));\r\n\r\n$message = $stomp->readFrame();\r\n$stomp->ack($message->headers['message-id']);\r\n$stomp->commit($transaction);\r\n{code}\r\nAnd in $message we'll have empty body paramter. It's because ActiveMQ returned message without body that's show in a captured packets between ActiveMQ and PHP communication below\r\n{code}\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\nCONNECT\r\nlogin:admin\r\npasscode:admin\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\n.\r\n\r\nT 127.0.0.1:61613 -> 127.0.0.1:53988 [AP]\r\nCONNECTED\r\nheart-beat:0,0\r\nsession:ID:amneziac-59996-1402320672417-5:8\r\nserver:ActiveMQ/5.9.1\r\nversion:1.0\r\n.\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\nSUBSCRIBE\r\nack:client\r\ndestination:/topic/stats\r\nactivemq.prefetchSize:1\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\n.\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\nBEGIN\r\ntransaction:1402321825.9952\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\n.\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\nSEND\r\nreply-to:/topic/stats\r\npersistent:true\r\ndestination:/queue/ActiveMQ.Statistics.Destination.testqueue\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\n.\r\n\r\nT 127.0.0.1:61613 -> 127.0.0.1:53988 [AP]\r\nMESSAGE\r\nmessage-id:ID:amneziac-59996-1402320672417-2:1:0:0:8\r\ntype:Advisory\r\ndestination:/topic/stats\r\ntimestamp:1402321826311\r\nexpires:0\r\npriority:4\r\n.\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\nACK\r\nmessage-id:ID:amneziac-59996-1402320672417-2:1:0:0:8\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\n.\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]\r\nCOMMIT\r\ntransaction:1402321825.9952\r\n\r\nT 127.0.0.1:53988 -> 127.0.0.1:61613 [AFP]\r\n.\r\nDISCONNECT\r\n{code}",
        "Advisory messages are empty when received with a Stomp subscription We need advisory messages for client connections, and we are stomp when connecting to ActiveMQ.  When we subscribe to ActiveMQ.Advisory.Connection, we get messages when clients connect of disconnect, but the messages are empty.  I suspect the information is lost when converting the ActiveMQMessage to a Stomp message.\n\nSome sort of simple serialization (like key: value pairs) of the ConnectionInfo object in ActiveMQMessage.getDataStructure would solve the problem.\n"
    ],
    [
        "AMQ-5255",
        "AMQ-5254",
        "Hangs the Application if activeMQ is down i am using Topic to publish the message\r\nwhile publishing if activeMQ is down, the application/ control hangs at producer.Send() \r\nThe control is not coming out of it.\r\nIt comes when ever activeMQ up again.\r\n\r\ni am using the below ActiveMQ URI\r\n\r\nactivemq:failover://(ssl://localhost:61617?transport.serverName=someX)?transport.randomize=false&amp;transport.startupMaxReconnectAttempts=0&amp;transport.timeout=5000",
        "Hangs the Application if activeMQ is down i am using Topic to publish the message\r\nwhile publishing if activeMQ is down, the application/ control hangs at producer.Send() \r\nThe control is not coming out of it.\r\nIt comes when ever activeMQ up again.\r\n\r\ni am using the below ActiveMQ URI\r\n\r\nactivemq:failover://(ssl://localhost:61617?transport.serverName=someX)?transport.randomize=false&amp;transport.startupMaxReconnectAttempts=0&amp;transport.timeout=5000"
    ],
    [
        "AMQ-5257",
        "AMQ-5105",
        "5.10.0 cannot startup with leveldb Are configured as follows\uff1a(I used this configuration in version of 5.9.1 is ok.)\r\n\r\n<persistenceAdapter>\r\n            <replicatedLevelDB directory=\"${activemq.data}/leveldb\" replicas=\"3\" bind=\"tcp://0.0.0.0:0\" zkAddress=\"192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181\" zkPath=\"/activemq/leveldb-stores\" weight=\"2\"/>\r\n            <!-- <kahaDB directory=\"${activemq.data}/kahadb\"/> -->\r\n        </persistenceAdapter>\r\n\r\n\r\nstartup log: \r\n[amq@lin-mongo-65-181 bin]$ ./activemq console\r\nINFO: Using default configuration\r\n(you can configure options in one of these file: /etc/default/activemq /home/amq/.activemqrc)\r\n\r\nINFO: Invoke the following command to create a configuration file\r\n./activemq setup [ /etc/default/activemq | /home/amq/.activemqrc ]\r\n\r\nINFO: Using java '/usr/bin/java'\r\nINFO: Starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+C)\r\nJava Runtime: Oracle Corporation 1.7.0_60 /usr/java/jdk1.7.0_60/jre\r\n  Heap sizes: current=2010624k  free=1979104k  max=5592576k\r\n    JVM args: -Xms2G -Xmx6G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/home/amq/apache-activemq-5.10.0/conf/login.config -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/home/amq/apache-activemq-5.10.0/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/home/amq/apache-activemq-5.10.0/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/home/amq/apache-activemq-5.10.0/tmp -Dactivemq.classpath=/home/amq/apache-activemq-5.10.0/conf; -Dactivemq.home=/home/amq/apache-activemq-5.10.0 -Dactivemq.base=/home/amq/apache-activemq-5.10.0 -Dactivemq.conf=/home/amq/apache-activemq-5.10.0/conf -Dactivemq.data=/amq_data\r\nExtensions classpath:\r\n  [/home/amq/apache-activemq-5.10.0/lib,/home/amq/apache-activemq-5.10.0/lib/camel,/home/amq/apache-activemq-5.10.0/lib/optional,/home/amq/apache-activemq-5.10.0/lib/web,/home/amq/apache-activemq-5.10.0/lib/extra]\r\nACTIVEMQ_HOME: /home/amq/apache-activemq-5.10.0\r\nACTIVEMQ_BASE: /home/amq/apache-activemq-5.10.0\r\nACTIVEMQ_CONF: /home/amq/apache-activemq-5.10.0/conf\r\nACTIVEMQ_DATA: /amq_data\r\nLoading message broker from: xbean:activemq.xml\r\n INFO |AbstractApplicationContext.java:510| Refreshing org.apache.activemq.xbean.XBeanBrokerFactory$1@781efa43: startup date [Wed Jul 02 14:43:11 CST 2014]; root of context hierarchy\r\n INFO |BrokerService.java:636| Using Persistence Adapter: Replicated LevelDB[/amq_data/leveldb, 192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181//activemq/leveldb-stores]\r\n INFO |ZKClient.java:343| Starting StateChangeDispatcher\r\n INFO |Environment.java:100| Client environment:zookeeper.version=3.4.5-1392090, built on 09/30/2012 17:52 GMT\r\n INFO |Environment.java:100| Client environment:host.name=lin-mongo-65-181.ofcardnis\r\n INFO |Environment.java:100| Client environment:java.version=1.7.0_60\r\n INFO |Environment.java:100| Client environment:java.vendor=Oracle Corporation\r\n INFO |Environment.java:100| Client environment:java.home=/usr/java/jdk1.7.0_60/jre\r\n INFO |Environment.java:100| Client environment:java.class.path=/home/amq/apache-activemq-5.10.0/bin/activemq.jar\r\n INFO |Environment.java:100| Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib\r\n INFO |Environment.java:100| Client environment:java.io.tmpdir=/home/amq/apache-activemq-5.10.0/tmp\r\n INFO |Environment.java:100| Client environment:java.compiler=<NA>\r\n INFO |Environment.java:100| Client environment:os.name=Linux\r\n INFO |Environment.java:100| Client environment:os.arch=amd64\r\n INFO |Environment.java:100| Client environment:os.version=2.6.32-431.el6.x86_64\r\n INFO |Environment.java:100| Client environment:user.name=amq\r\n INFO |Environment.java:100| Client environment:user.home=/home/amq\r\n INFO |Environment.java:100| Client environment:user.dir=/home/amq/apache-activemq-5.10.0/bin\r\n INFO |ZooKeeper.java:438| Initiating client connection, connectString=192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181 sessionTimeout=2000 watcher=org.apache.activemq.leveldb.replicated.groups.ZKClient@63a06d20\r\n WARN |ClientCnxn.java:949| SASL configuration failed: javax.security.auth.login.LoginException: No JAAS configuration section named 'Client' was found in specified JAAS configuration file: '/home/amq/apache-activemq-5.10.0/conf/login.config'. Will continue connection to Zookeeper server without SASL authentication, if Zookeeper server allows it.\r\n INFO |ClientCnxn.java:966| Opening socket connection to server 192.168.65.185/192.168.65.185:2181\r\n WARN |ZKClient.java:222| unprocessed event state: AuthFailed\r\n INFO |ClientCnxn.java:849| Socket connection established to 192.168.65.185/192.168.65.185:2181, initiating session\r\n INFO |ClientCnxn.java:1207| Session establishment complete on server 192.168.65.185/192.168.65.185:2181, sessionid = 0x346e18687c1164c, negotiated timeout = 4000\r\n INFO |Log.scala:93| Not enough cluster members connected to elect a master.\r\n INFO |Log.scala:93| Not enough cluster members connected to elect a master.\r\n INFO |Log.scala:93| Not enough cluster members have reported their update positions yet.\r\n INFO |Log.scala:93| Promoted to master\r\n WARN |ChangeListener.scala:102| listeners are taking too long to process the events\r\n WARN |ChangeListener.scala:102| listeners are taking too long to process the events\r\n INFO |Log.scala:93| Using the pure java LevelDB implementation.\r\n INFO |BrokerService.java:2561| No IOExceptionHandler registered, ignoring IO exception\r\njava.io.IOException: com.google.common.base.Objects.firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\r\n\tat org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)[activemq-client-5.10.0.jar:5.10.0]\r\n\tat org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:552)[activemq-leveldb-store-5.10.0.jar:5.10.0]\r\n\tat org.apache.activemq.leveldb.LevelDBClient.replay_init(LevelDBClient.scala:657)[activemq-leveldb-store-5.10.0.jar:5.10.0]\r\n\tat org.apache.activemq.leveldb.LevelDBClient.start(LevelDBClient.scala:558)[activemq-leveldb-store-5.10.0.jar:5.10.0]\r\n\tat org.apache.activemq.leveldb.DBManager.start(DBManager.scala:648)[activemq-leveldb-store-5.10.0.jar:5.10.0]\r\n\tat org.apache.activemq.leveldb.LevelDBStore.doStart(LevelDBStore.scala:235)[activemq-leveldb-store-5.10.0.jar:5.10.0]\r\n\tat org.apache.activemq.leveldb.replicated.MasterLevelDBStore.doStart(MasterLevelDBStore.scala:110)[activemq-leveldb-store-5.10.0.jar:5.10.0]\r\n\tat org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)[activemq-client-5.10.0.jar:5.10.0]\r\n\tat org.apache.activemq.leveldb.replicated.ElectingLevelDBStore$$anonfun$start_master$1.apply$mcV$sp(ElectingLevelDBStore.scala:226)[activemq-leveldb-store-5.10.0.jar:5.10.0]\r\n\tat org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:330)[hawtdispatch-scala-2.11-1.21.jar:1.21]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_60]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_60]\r\n\tat java.lang.Thread.run(Thread.java:745)[:1.7.0_60]\r\n INFO |Log.scala:93| Stopped LevelDB[/amq_data/leveldb]",
        "leveldb fails to startup because of NoSuchMethodError leveldb persistence fails to start due to errors as given below \r\n\r\n Caused by: java.lang.NoSuchMethodError: com.google.common.base.Objects.firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\r\n        at com.google.common.cache.CacheBuilder.getKeyStrength(CacheBuilder.java:530)\r\n        at com.google.common.cache.LocalCache.<init>(LocalCache.java:238)\r\n        at com.google.common.cache.LocalCache$LocalLoadingCache.<init>(LocalCache.java:4861)\r\n        at com.google.common.cache.CacheBuilder.build(CacheBuilder.java:803)\r\n        at org.iq80.leveldb.impl.TableCache.<init>(TableCache.java:46)\r\n        at org.iq80.leveldb.impl.DbImpl.<init>(DbImpl.java:155)\r\n        at org.iq80.leveldb.impl.Iq80DBFactory.open(Iq80DBFactory.java:59)\r\n        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$replay_init$2.apply$mcV$sp(LevelDBClient.scala:661)\r\n        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$replay_init$2.apply(LevelDBClient.scala:657)\r\n        at org.apache.activemq.leveldb.LevelDBClient$$anonfun$replay_init$2.apply(LevelDBClient.scala:657)\r\n        at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:549)\r\n\r\nThe problem seems to be because of multiple jars having the same classes\r\n\r\nguava-12.jar\r\npax-url-aether-1.5.2.jar\r\n\r\nThe class present in pax-url-aether-1.5.2.jar gets loaded causing level db to fail."
    ],
    [
        "AMQ-5273",
        "AMQ-5256",
        "Problem handling connections from multiple AMQP clients in ActiveMQ When multiple AMQP clients try to connect to the broker at exactly the same time, the broker can end up in a state where it gets an AMQP parsing error during the connection handshake and then all future AMQP connections fail until the broker is stopped.  This was reproduced with C proton clients and QPID JMS clients but it seemed to depend on the speed of the machine where the broker was running and the network speed to ensure that the timing window would be hit.  Turning on remote debugging in the ActiveMQ startup script made it happen much more frequently.  The QPID JMS clients end up staying hung in the ConnectionEndpoint.open function and the C proton clients return a SASL error.  Code analysis in the broker appeared to point to an incorrect use of static for the list data structure in the AMQPProtocolDiscriminator class.  I am planning to attach  a patch and unit test that demonstrate the behavior as well as some logs.  The unit test fails with a \"timeout\" as all of the threads get hung when attempting to make connection and seems to require the following MAVEN_OPTS to be set to see it fail consistently:\r\nexport MAVEN_OPTS=\"-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005\"\r\n\r\nWhen running the broker in console mode, the following would be output for each failed client connection attempt:\r\nCould not decode AMQP frame: hex: 0000002102010000005341d00000001100000002a309414e4f4e594d4f5553a000\r\n",
        "AMQP WARN  Transport Connection failed: java.io.IOException concurrent AMQP connection, client hung on half closed connection, waiting for response to open.{code}   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(Native Method)\r\n\t- waiting on <7df15ba78> (a org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint)\r\n\tat java.lang.Object.wait(Object.java:485)\r\n\tat org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint.open(ConnectionEndpoint.java:154)\r\n\t- locked <7df15ba78> (a org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint)\r\n\t- locked <7df15ba78> (a org.apache.qpid.amqp_1_0.transport.ConnectionEndpoint)\r\n\tat org.apache.qpid.amqp_1_0.client.Connection.<init>(Connection.java:284)\r\n\tat org.apache.qpid.amqp_1_0.client.Connection.<init>(Connection.java:143)\r\n\tat org.apache.qpid.amqp_1_0.jms.impl.ConnectionImpl.connect(ConnectionImpl.java:115)\r\n\t- locked <7df8bd048> (a java.lang.Object)\r\n\tat org.apache.qpid.amqp_1_0.jms.impl.ConnectionImpl.start(ConnectionImpl.java:284){code}\r\nBroker log contains:{code}\r\n[ActiveMQ Transport: tcp:///127.0.0.1:64496@64488            ] - WARN  Transport     - Transport Connection to: tcp://127.0.0.1:64496 failed: java.io.IOException{code}\r\n"
    ],
    [
        "AMQ-5281",
        "AMQ-5280",
        "Incorrect handling of unknown values in selectors Due to JmsMessage specification :\r\nhttp://docs.oracle.com/javaee/1.4/api/javax/jms/Message.html\r\nThere are rules how unknown Values evaluates. \r\n\r\nI found 4 violations of specificatoion:\r\n1) Equals expression \"=\".\r\n\"unknownProp = 0\" should evaluate to UNKNOWN.\r\nIn AMQ it evaluates to FALSE instead.\r\n2) Not equals expression \"<>\".\r\n\"unknownProp <> 0\" should evaluate to UNKNOWN, it evaluates to FALSE instead.\r\n3) Or expression \"or\".\r\n\"unknown or false\" should evaluate to UNKNOWN. It evaluates to FALSE instead.\r\n4) And expression \"and\".\r\n\"unknown and false\" should evaluate to FALSE. It evaluates to UNKNOWN instead.\r\n",
        "Incorrect handling of unknown values in selectors Due to JmsMessage specification :\r\nhttp://docs.oracle.com/javaee/1.4/api/javax/jms/Message.html\r\nThere are rules how unknown Values evaluates. \r\nThere how AND operator should handle unknown:\r\n    UNKNOWN AND FALSE => FALSE \r\n    FALSE AND UNKNOWN => FALSE \r\nAnd that's how it is handled in ActiveMQ:\r\n    UNKNOWN AND FALSE => UNKNOWN (!!!)\r\n    FALSE AND UNKNOWN => FALSE \r\n\r\nI've wrote test to reproduce this:\r\n{code}\r\npackage org.activemq.test;\r\n\r\nimport org.apache.activemq.command.ActiveMQMessage;\r\nimport org.apache.activemq.command.ActiveMQTopic;\r\nimport org.apache.activemq.filter.BooleanExpression;\r\nimport org.apache.activemq.filter.MessageEvaluationContext;\r\nimport org.apache.activemq.selector.SelectorParser;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\n\r\nimport javax.jms.JMSException;\r\nimport javax.jms.Message;\r\n\r\nimport static org.junit.Assert.assertEquals;\r\nimport static org.junit.Assert.assertTrue;\r\n\r\npublic class SelectorUnknownHandlingTest {\r\n\r\n    private Message message;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        message = createMessage();\r\n    }\r\n\r\n    @Test\r\n    public void testUnknown() throws Exception {\r\n        // Some unset property with gt operator => unknown\r\n        assertSelectorEvaluatesToUnknown(message, \"(unknownProp > 0)\");\r\n\r\n    }\r\n\r\n    @Test\r\n    public void testUnknownAndFalse() throws Exception {\r\n        // false and unknown => false\r\n        assertSelectorEvaluatesToFalse(message, \"(falseProp AND unknownProp > 0)\");\r\n\r\n        // THIS ASSERTION FAILS !! IT EVALUATES TO UNKNOWN INSTEAD\r\n        // unknown and false => false\r\n        assertSelectorEvaluatesToFalse(message, \"(unknownProp > 0 AND falseProp)\");\r\n\r\n    }\r\n\r\n    @Test\r\n    public void testUnknownOrTrue() throws Exception {\r\n\r\n        // unknown or true => true\r\n        assertSelectorEvaluatesToTrue(message, \"(unknownProp > 0 OR trueProp)\");\r\n\r\n        // true or unknown => true\r\n        assertSelectorEvaluatesToTrue(message, \"(trueProp OR unknownProp > 0)\");\r\n\r\n    }\r\n\r\n    private void assertSelectorEvaluatesToUnknown(Message message, String selector) throws JMSException {\r\n        assertSelector(message, selector, false);\r\n        assertSelector(message, \"not(\" + selector + \")\", false);\r\n    }\r\n\r\n    private void assertSelectorEvaluatesToFalse(Message message, String selector) throws JMSException {\r\n        assertSelector(message, selector, false);\r\n        assertSelector(message, \"not(\" + selector + \")\", true);\r\n    }\r\n\r\n    private void assertSelectorEvaluatesToTrue(Message message, String selector) throws JMSException {\r\n        assertSelector(message, selector, true);\r\n        assertSelector(message, \"not(\" + selector + \")\", false);\r\n    }\r\n\r\n\r\n    protected Message createMessage() throws JMSException {\r\n        Message message = createMessage(\"FOO.BAR\");\r\n        message.setJMSType(\"selector-test\");\r\n        message.setJMSMessageID(\"connection:1:1:1:1\");\r\n        message.setBooleanProperty(\"trueProp\", true);\r\n        message.setBooleanProperty(\"falseProp\", false);\r\n        return message;\r\n    }\r\n\r\n    protected void assertSelector(Message message, String text, boolean expected) throws JMSException {\r\n        BooleanExpression selector = SelectorParser.parse(text);\r\n        assertTrue(\"Created a valid selector\", selector != null);\r\n        MessageEvaluationContext context = new MessageEvaluationContext();\r\n        context.setMessageReference((org.apache.activemq.command.Message)message);\r\n        boolean value = selector.matches(context);\r\n        assertEquals(\"Selector for: \" + text, expected, value);\r\n    }\r\n\r\n    protected Message createMessage(String subject) throws JMSException {\r\n        ActiveMQMessage message = new ActiveMQMessage();\r\n        message.setJMSDestination(new ActiveMQTopic(subject));\r\n        return message;\r\n    }\r\n}\r\n{code}\r\n"
    ],
    [
        "AMQ-5326",
        "AMQ-3300",
        "SslTransport doesn't support soWriteTimeout ActimveMQ 5.5.1 doesn't support soWriteTimeout for SslTransport. \r\n\r\nssl://0.0.0.0:61616?transport.soWriteTimeout=2000\r\nwill throw IllegalArgumentException.\r\n\r\n",
        "Add support for soWriteTimeout and soTimeout to ssl transport SSLTransport overrides compositeConfigure and misses out on some of the base class implementation options. The override needs to delegate to super."
    ],
    [
        "AMQ-5328",
        "AMQ-4832",
        "Store limit reset to a smaller value than the current size   We have a cluster setup using \"Shared File System Master Slave\". The kahadb database is stored on a 20 GB shared filesystem. The last weeks we have had a couple of times where producers where stopped because the persistent store usage was at 100%. I found that where about 8 GB of disk available, so the persistent store usage shouldn't be more than around 60%.\r\n\r\nI found that when starting up or failing over the max size of the persistent store is adjusted to be no more then the available disk space. Found this in the log:\r\nINFO   | jvm 1    | 2014/07/27 06:36:09 |  WARN | Store limit is 20480 mb, whilst the data directory: \\\\pulbrscbfs1\\ActiveMQ\\kahadb only has 7945 mb of usable space - resetting to maximum available disk space: 7945 mb\r\n\r\nAnd then this occurs:\r\nINFO   | jvm 1    | 2014/07/27 06:40:03 |  INFO | Usage(default:store:queue://PCIS.SCH.Notes.Jobs:store) percentUsage=153%, usage=12813873606, limit=8331595776, percentUsageMinDelta=1%;Parent:Usage(default:store) percentUsage=153%, usage=12813873606, limit=8331595776, percentUsageMinDelta=1%: Persistent store is Full, 100% of 8331595776. Stopping producer (ID:PULBRSCBMULE2-49430-1406435872187-1:1:4:1) to prevent flooding queue://PCIS.SCH.Notes.Jobs. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 2s)\r\n\r\nAs you can see the percentUsage is 153%!\r\nSo the reset of the store limit to 7945 mb is wrong and should have been 12220 mb + 7945 mb = 20165 mb\r\n",
        "Broker limits store space, not taking into account what it's already using https://issues.apache.org/jira/browse/AMQ-4638 sets the usage limit of a store to only the available disk space. It does not take into account that the store itself is using space on the disk.\r\n\r\nIn our environment the store was taking 30 GB of space and there was 17 GB free on disk. Therefore, on startup the store was limited to 17 GB; where it should have been limited to 47 GB. Because of this, by design, no new message can be added to the queue."
    ],
    [
        "AMQ-5337",
        "AMQ-4731",
        "Bug in ConcurrentLinkedQueue leads to excessive CPU-consumption by ActiveMQ process The AdvisoryBroker use a ConcurrentLinkedQueue to store consumers.\r\nThis standard JDK class has a bug which can lead to an OutOfMemory : https://bugs.openjdk.java.net/browse/JDK-8054446\r\n\r\nIn our environment we observe that ActiveMQ process cpu usage is continually climbing and that the ConcurrentLinkedQueue in the AdvisoryBroker grows indefinitely.\r\n\r\nThe ConcurrentLinkedQueue is a non-blocking concurrent FIFO datastructure provided by the core Java Development Kit API starting from Java 5. \r\nAdvisoryBroker use offer() method to add a new consumer in the ConcurrentLinkedQueue, and remove() method to remove it.\r\nWhen the consumer removed is the last element of the queue, the Consumer object is nulled but a node remain in the queue. The null node is then never garbage collected. This is true only for the last element of the queue. Any other element is removed safely.\r\n\r\nRelated bug : https://issues.apache.org/jira/browse/AMQ-4853\r\n",
        "TempQueueMemoryTest started failing recently. TempQueueMemoryTest test is failing.  Fails after changes made for AMQ-2327 because of the way the ConcurrentSkipListMap does its sorting and searching and the implementation of ConsumerIdKey.  The key comparison depends on creation time but later removals will always have a later creation time which causes the search for the element to fails most of the time since it will compare greater than even to a key with the same consumer Id.  Result is that items are left in the consumers map causing a memory leak."
    ],
    [
        "AMQ-5337",
        "AMQ-4906",
        "Bug in ConcurrentLinkedQueue leads to excessive CPU-consumption by ActiveMQ process The AdvisoryBroker use a ConcurrentLinkedQueue to store consumers.\r\nThis standard JDK class has a bug which can lead to an OutOfMemory : https://bugs.openjdk.java.net/browse/JDK-8054446\r\n\r\nIn our environment we observe that ActiveMQ process cpu usage is continually climbing and that the ConcurrentLinkedQueue in the AdvisoryBroker grows indefinitely.\r\n\r\nThe ConcurrentLinkedQueue is a non-blocking concurrent FIFO datastructure provided by the core Java Development Kit API starting from Java 5. \r\nAdvisoryBroker use offer() method to add a new consumer in the ConcurrentLinkedQueue, and remove() method to remove it.\r\nWhen the consumer removed is the last element of the queue, the Consumer object is nulled but a node remain in the queue. The null node is then never garbage collected. This is true only for the last element of the queue. Any other element is removed safely.\r\n\r\nRelated bug : https://issues.apache.org/jira/browse/AMQ-4853\r\n",
        "advisory producerCount = 0 is not received on temporary queue i notice i never receive producer advisory messages (ActiveMQ.Advisory.Producer.Queue .[...]) with producerCount=0 when the client message producers on temporary queue are closed. i do receive producerCount > 0. \r\n\r\nHowever, the consumerCount (from ActiveMQ.Advisory.Consumer.Queue.[...]) appears to work as expected.\r\n\r\nFrom looking into org.apache.activemq.advisory.AdvisoryBroker.java\r\n{code}\r\n@Override\r\n    public void removeProducer(ConnectionContext context, ProducerInfo info) throws Exception {\r\n        super.removeProducer(context, info);\r\n\r\n        // Don't advise advisory topics.\r\n        ActiveMQDestination dest = info.getDestination();\r\n        if (info.getDestination() != null && !AdvisorySupport.isAdvisoryTopic(dest)) {\r\n            ActiveMQTopic topic = AdvisorySupport.getProducerAdvisoryTopic(dest);\r\n            producers.remove(info.getProducerId());\r\n            if (!dest.isTemporary() || destinations.contains(dest)) { // PLEASE NOTE: <== could this actually be destinations.containsKey(dest)\r\n                fireProducerAdvisory(context, dest,topic, info.createRemoveCommand());\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\nas reference, the \"working\" removeConsumer method:\r\n{code}\r\n@Override\r\n    public void removeConsumer(ConnectionContext context, ConsumerInfo info) throws Exception {\r\n        super.removeConsumer(context, info);\r\n\r\n        // Don't advise advisory topics.\r\n        ActiveMQDestination dest = info.getDestination();\r\n        if (!AdvisorySupport.isAdvisoryTopic(dest)) {\r\n            ActiveMQTopic topic = AdvisorySupport.getConsumerAdvisoryTopic(dest);\r\n            consumers.remove(info);\r\n            if (!dest.isTemporary() || destinations.containsKey(dest)) {\r\n                fireConsumerAdvisory(context,dest, topic, info.createRemoveCommand());\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\nPlease note the destinations.containsKey(dest) vs destinations.contains(dest) (for concurrentHashMaps this is identical to containsValue()). I'm assuming the logic is to make sure the producer destination do exist in both cases\r\n\r\nI tested this with 5.7.0. the code is similar in 5.9.0\r\n\r\n"
    ],
    [
        "AMQ-5356",
        "AMQ-5272",
        "Unable to see message contents from the web UI When browsing the messages from a queue I'm unable to go into the message's content. Does Jetty need to be upgraded?\r\n\r\nThe URL I'm trying to reach (/admin/message.jsp):\r\n\r\nhttp://192.168.220.188:8161/admin/message.jsp?id=ID%3avcms1-53950-1410478946965-7%3a1%3a2%3a1%3a1&JMSDestination=contactupdatequeue\r\n\r\nI'm using JDK8, tried with 8u11 and 8u20.\r\n\r\nThe output from ps:\r\n\r\n/usr/local/jdk1.8.0_20/bin/java -Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/opt/activemq-5.10.0/conf/login.config -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/opt/activemq-5.10.0/tmp -Dactivemq.classpath=/opt/activemq-5.10.0/conf; -Dactivemq.home=/opt/activemq-5.10.0 -Dactivemq.base=/opt/activemq-5.10.0 -Dactivemq.conf=/opt/activemq-5.10.0/conf -Dactivemq.data=/opt/activemq-5.10.0/data -jar /opt/activemq-5.10.0/bin/activemq.jar start\r\n\r\nI get the following exception:\r\n\r\n2014-09-15 00:07:07,442 | INFO  | ActiveMQ WebConsole available at http://0.0.0.0:8161/ | org.apache.activemq.web.WebConsoleStarter | main\r\n2014-09-15 00:07:07,482 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main\r\n2014-09-15 00:07:07,808 | INFO  | jolokia-agent: No access restrictor found at classpath:/jolokia-access.xml, access to all MBeans is allowed | /api | main\r\n2014-09-15 01:25:58,377 | INFO  | Connector vm://localhost started | org.apache.activemq.broker.TransportConnector | qtp693267461-37\r\n2014-09-15 01:25:59,870 | WARN  |  | org.eclipse.jetty.servlet.ServletHandler | qtp693267461-39\r\norg.apache.jasper.JasperException: PWC6033: Unable to compile class for JSP\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n\r\n\r\n        at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:261)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:683)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:88)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:739)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2347)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Root.accept(Node.java:498)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:757)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:222)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:435)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:360)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)[geronimo-servlet_2.5_spec-1.2.jar:1.2]\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)[activemq-web-5.10.0.jar:5.10.0]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)[file:/opt/activemq-5.10.0/webapps/admin/WEB-INF/classes/:]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:367)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at java.lang.Thread.run(Thread.java:745)[:1.8.0_11]\r\n",
        "Implement JSR 356 based WebSocket transport The present WS transport boots up an embedded Jetty instance on its own port, which does not make sense when embedding ActiveMQ in a container-hosted application.\r\n\r\nAlthough not that difficult to hack together manually, there should be a supported first-party mechanism to configure a WS Stomp/MQTT endpoint when embedded in a JSR 356 compatible container.\r\n"
    ],
    [
        "AMQ-5384",
        "AMQ-4566",
        "Deadlock on DB connections in JDBCMessageStore.removeMessage AMQ 5.9 gets stuck under 30-50 req/second load when using JDBC persistence - this affects our application as it hangs during performance testing (this happens almost every night).\r\nFollowing stacktraces indicate that there's a deadlock on DB connection:\r\n\r\nStack logged by C3P0, showing when first DB connection has been picked from the pool:\r\n{noformat}\r\n2014-10-06 08:44:40,646 | INFO  | Logging the stack trace by which the overdue resource was checked-out. | com.mchange.v2.resourcepool.BasicResourcePool | C3P0PooledConnectionPoolManager[identityToken->2x1e6s941raztn6mju110\r\njava.lang.Exception: DEBUG STACK TRACE: Overdue resource check-out stack trace.\r\n        at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:555)\r\n        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:756)\r\n        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:683)\r\n        at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\n        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\n        at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:163)\r\n        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:510)\r\n        at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\n        at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\n        at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)\r\n        at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:75)\r\n        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)\r\n        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)\r\n        at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:433)\r\n        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)\r\n        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)\r\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)\r\n        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\n        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)\r\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\n        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\n        at java.lang.Thread.run(Thread.java:662)\r\n{noformat}\r\n\r\nFollowing stack shows the same thread pending for second DB connection (without releasing the first one):\r\n{noformat}\r\n\"ActiveMQ Transport: tcp:///10.132.7.20:36431@5445\" daemon prio=10 tid=0x000000004119d000 nid=0x61bf in Object.wait() [0x00007f41120d7000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(Native Method)\r\n\t- waiting on <0x00000000fabdd2c0> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\n\tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\n\tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\n\t- locked <0x00000000fabdd2c0> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\n\tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\n\tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:756)\r\n\tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:683)\r\n\tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\n\tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\n\tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:290)\r\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:840)\r\n\tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\n\tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\n\tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\n\tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\n\tat org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)\r\n\tat org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:69)\r\n\tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)\r\n\tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)\r\n\tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:424)\r\n\tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\n\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)\r\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)\r\n\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\n\tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\n\tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)\r\n\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\n\tat java.lang.Thread.run(Thread.java:662) \r\n{noformat}\r\n\r\nProblem seems to be related with JDBCMessageStore.removeMessage method:\r\n{code:java}\r\n    public void removeMessage(ConnectionContext context, MessageAck ack) throws IOException {\r\n    \tlong seq = persistenceAdapter.getStoreSequenceIdForMessageId(ack.getLastMessageId(), destination)[0];\r\n...\r\n{code}\r\n\r\nCall to {{removeMessage}} already has one DB connection passed in {{context}} method parameter, but calling {{persistenceAdapter.getStoreSequenceIdForMessageId}} creates another DB connection in the same transaction.\r\n\r\nDeadlock occurs when all DB connections are used by {{context}}, so that  {{removeMessage}} can't fetch its own connection.\r\n\r\nPossible solution would be to pass {{ConnectionContext}} object to {{persistenceAdapter.getStoreSequenceIdForMessageId}} method, so that the method would reuse same connection.",
        "Broker hangs when forced to wait for DB connection from pool Broker hangs within a few seconds after starting a performance test using the ActiveMQ performance module.  It appears that if the combination of producer send rate and  DB connection pool size is such that the broker must wait for a connection from the pool, the broker hangs indefinitely and doesn't accept any new messages from the producer.  \r\n\r\nThe hang is easily reproduced.  In my setup I have two producer activemq-perf instances and two consumer activemq-perf instances.  The broker, producer instances, and consumer instances each execute on a distinct host.  Each producer instance has 5 clients sending to a queue (two queues total in the setup), message size=3KB, and send delay=12ms.  Each consumer instance has 20 clients consuming from a queue.  The DB connection pool is configured for a max of 5 connections.  The hang also occurs with a max of 20 connections but it takes about 10 minutes.  The hang also occurs using 5.7.0 broker.  The 5.4.3 broker seems more resilient to the hang but with the max pool size reduced to 3, the hang occurred after ~7 minutes.  To determine if the producer is sending rapidly enough to trigger the hang, observe the C3P0 JMX stats via JConsole.  The send rate is sufficiently rapid if the maxBusyConnections count equals the maxPoolSize.  When the hang occurs, maxBusyConnections count remains at the maxPoolSize after the test clients are terminated.  After a successful test (no hang), the maxBusyConnections count returns to zero after the test clients are terminated.\r\n\r\nObserving the broker JMX stats via JConsole following a hang, five producers remain on each of the two queues and six consumers remain on one of the queues after the test clients are terminated.  After a successful test, there are no producers or consumers remaining after the clients are terminated.\r\n\r\nC3P0 has a pair of configuration parameters that will destroy a checked-out DB connection within a configured timeout and dump a stack trace of the thread that had checked-out the connection.   The parameters are unreturnedConnectionTimeout and  debugUnreturnedConnectionStackTraces.  With the unreturnedConnectionTimeout set to 60 seconds and debugUnreturnedConnectionStackTraces set to true, the following stack trace is dumped to wrapper.log about 60 seconds after the broker hangs.  The stack trace suggests the presence of a DB connection leak:\r\n{noformat}\r\nNFO | Logging the stack trace by which the overdue resource was checked-out.\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 | java.lang.Exception: DEBUG STACK TRACE: Overdue resource check-out stack trace.\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:555)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 21:24:27 |       at java.lang.Thread.run(Thread.java:619)\r\n{noformat}\r\n\r\nh4.Broker Config:\r\n{noformat}\r\n <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\r\n      <property name=\"locations\">\r\n          <value>file:${activemq.conf}/credentials.properties</value>\r\n      </property>\r\n  </bean>\r\n\r\n  <broker brokerName=\"jdbcBroker\" xmlns=\"http://activemq.apache.org/schema/core\">\r\n\r\n\t<managementContext>\r\n            <managementContext createConnector=\"false\"/>\r\n        </managementContext>\r\n    <!--\r\n        See more database locker options at http://activemq.apache.org/pluggable-storage-lockers.html\r\n    -->\r\n    <persistenceAdapter>\r\n                <jdbcPersistenceAdapter createTablesOnStartup=\"false\" useDatabaseLock=\"false\" dataSource=\"#mssql-ds\">\r\n                <adapter>\r\n                        <transact-jdbc-adapter/>\r\n                </adapter>\r\n                </jdbcPersistenceAdapter>\r\n    </persistenceAdapter>\r\n\r\n\t<systemUsage>\r\n            <systemUsage sendFailIfNoSpaceAfterTimeout=\"5000\">\r\n                <memoryUsage>\r\n                    <memoryUsage limit=\"3500mb\"/>\r\n                </memoryUsage>\r\n                <tempUsage>\r\n                    <tempUsage limit=\"500mb\"/>\r\n                </tempUsage>\r\n\t\t<storeUsage>\r\n\t\t    <storeUsage limit=\"500mb\"/>\r\n\t\t</storeUsage>\r\n            </systemUsage>\r\n     </systemUsage>\r\n\r\n    <transportConnectors>\r\n       <transportConnector name=\"default\" uri=\"tcp://0.0.0.0:61616\"/>\r\n    </transportConnectors>\r\n  </broker>\r\n\r\n  <bean id=\"mssql-ds\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\" destroy-method=\"close\">\r\n        <property name=\"driverClass\" value=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\"/>\r\n        <property name=\"jdbcUrl\" value=\"jdbc:sqlserver://;serverName=********;instanceName=*******;databaseName=ActiveMQ;sendStringParametersAsUnicode=false\"/>\r\n        <property name=\"user\" value=\"********\"/>\r\n        <property name=\"password\" value=\"*******\"/>\r\n        <property name=\"minPoolSize\" value=\"1\" />\r\n        <property name=\"maxPoolSize\" value=\"5\" />\r\n        <property name=\"acquireIncrement\" value=\"1\" />\r\n        <property name=\"acquireRetryAttempts\" value=\"100\"/>\r\n        <property name=\"acquireRetryDelay\" value=\"5000\"/>\r\n        <property name=\"maxIdleTime\" value=\"3600\" />\r\n        <property name=\"numHelperThreads\" value=\"6\" />\r\n  </bean>\r\n \r\n\t<import resource=\"jetty.xml\"/>\r\n</beans>\r\n{noformat}\r\nh4.wrapper.conf:\r\n{noformat}\r\n#********************************************************************\r\n# Wrapper Properties\r\n#********************************************************************\r\n\r\n#wrapper.debug=TRUE\r\nset.default.ACTIVEMQ_HOME=../..\r\nset.default.ACTIVEMQ_BASE=../..\r\nset.default.ACTIVEMQ_CONF=%ACTIVEMQ_BASE%/conf\r\nset.default.ACTIVEMQ_DATA=%ACTIVEMQ_BASE%/data\r\nwrapper.working.dir=.\r\n\r\n# Java Application\r\nwrapper.java.command=java\r\n\r\n# Java Main class.  This class must implement the WrapperListener interface\r\n#  or guarantee that the WrapperManager class is initialized.  Helper\r\n#  classes are provided to do this for you.  See the Integration section\r\n#  of the documentation for details.\r\nwrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp\r\n\r\n# Java Classpath (include wrapper.jar)  Add class path elements as\r\n#  needed starting from 1\r\nwrapper.java.classpath.1=%ACTIVEMQ_HOME%/bin/wrapper.jar\r\nwrapper.java.classpath.2=%ACTIVEMQ_HOME%/bin/activemq.jar\r\n\r\n# Java Library Path (location of Wrapper.DLL or libwrapper.so)\r\nwrapper.java.library.path.1=%ACTIVEMQ_HOME%/bin/linux-x86-64/\r\n\r\n# Java Additional Parameters\r\n# note that n is the parameter number starting from 1.\r\nwrapper.java.additional.1=-Dactivemq.home=%ACTIVEMQ_HOME%\r\nwrapper.java.additional.2=-Dactivemq.base=%ACTIVEMQ_BASE%\r\nwrapper.java.additional.3=-Djavax.net.ssl.keyStorePassword=password\r\nwrapper.java.additional.4=-Djavax.net.ssl.trustStorePassword=password\r\nwrapper.java.additional.5=-Djavax.net.ssl.keyStore=%ACTIVEMQ_CONF%/broker.ks\r\nwrapper.java.additional.6=-Djavax.net.ssl.trustStore=%ACTIVEMQ_CONF%/broker.ts\r\nwrapper.java.additional.7=-Dcom.sun.management.jmxremote\r\nwrapper.java.additional.8=-Dorg.apache.activemq.UseDedicatedTaskRunner=false\r\nwrapper.java.additional.9=-Djava.util.logging.config.file=logging.properties\r\nwrapper.java.additional.10=-Dactivemq.conf=%ACTIVEMQ_CONF%\r\nwrapper.java.additional.11=-Dactivemq.data=%ACTIVEMQ_DATA%\r\nwrapper.java.additional.12=-verbose:gc\r\nwrapper.java.additional.13=-XX:+PrintGCTimeStamps\r\nwrapper.java.additional.14=-XX:+PrintGCDetails\r\n\r\n# Uncomment to enable jmx\r\nwrapper.java.additional.15=-Dcom.sun.management.jmxremote.port=1099\r\nwrapper.java.additional.16=-Dcom.sun.management.jmxremote.authenticate=false\r\nwrapper.java.additional.17=-Dcom.sun.management.jmxremote.ssl=false\r\nwrapper.java.additional.18=-Xms4000m\r\nwrapper.java.additional.19=-Xmx4000m\r\nwrapper.java.additional.20=-Xss192k\r\nwrapper.java.additional.21=-XX:MaxPermSize=128m\r\n\r\n# Uncomment to enable YourKit profiling\r\n#wrapper.java.additional.n=-Xrunyjpagent\r\n\r\n# Uncomment to enable remote debugging\r\n#wrapper.java.additional.n=-Xdebug -Xnoagent -Djava.compiler=NONE\r\n#wrapper.java.additional.n=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005\r\n\r\n# Initial Java Heap Size (in MB)\r\n#wrapper.java.initmemory=2048\r\n\r\n# Maximum Java Heap Size (in MB)\r\n#wrapper.java.maxmemory=4600\r\n\r\n# Application parameters.  Add parameters as needed starting from 1\r\nwrapper.app.parameter.1=org.apache.activemq.console.Main\r\nwrapper.app.parameter.2=start\r\n\r\n#********************************************************************\r\n# Wrapper Logging Properties\r\n#********************************************************************\r\n# Format of output for the console.  (See docs for formats)\r\nwrapper.console.format=PM\r\n\r\n# Log Level for console output.  (See docs for log levels)\r\nwrapper.console.loglevel=INFO\r\n\r\n# Log file to use for wrapper output logging.\r\nwrapper.logfile=%ACTIVEMQ_DATA%/wrapper.log\r\n\r\n# Format of output for the log file.  (See docs for formats)\r\nwrapper.logfile.format=LPTM\r\n\r\n# Log Level for log file output.  (See docs for log levels)\r\nwrapper.logfile.loglevel=INFO\r\n\r\n# Maximum size that the log file will be allowed to grow to before\r\n#  the log is rolled. Size is specified in bytes.  The default value\r\n#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or\r\n#  'm' (mb) suffix.  For example: 10m = 10 megabytes.\r\nwrapper.logfile.maxsize=100m\r\n\r\n# Maximum number of rolled log files which will be allowed before old\r\n#  files are deleted.  The default value of 0 implies no limit.\r\nwrapper.logfile.maxfiles=5\r\n\r\n# Log Level for sys/event log output.  (See docs for log levels)\r\nwrapper.syslog.loglevel=INFO\r\n\r\n#********************************************************************\r\n# Wrapper Windows Properties\r\n#********************************************************************\r\n# Title to use when running as a console\r\nwrapper.console.title=ActiveMQ\r\n\r\n#********************************************************************\r\n# Wrapper Windows NT/2000/XP Service Properties\r\n#********************************************************************\r\n# WARNING - Do not modify any of these properties when an application\r\n#  using this configuration file has been installed as a service.\r\n#  Please uninstall the service before modifying this section.  The\r\n#  service can then be reinstalled.\r\n\r\n# Name of the service\r\nwrapper.ntservice.name=ActiveMQ\r\n\r\n# Display name of the service\r\nwrapper.ntservice.displayname=ActiveMQ\r\n\r\n# Description of the service\r\nwrapper.ntservice.description=ActiveMQ Broker\r\n\r\n# Service dependencies.  Add dependencies as needed starting from 1\r\nwrapper.ntservice.dependency.1=\r\n\r\n# Mode in which the service is installed.  AUTO_START or DEMAND_START\r\nwrapper.ntservice.starttype=AUTO_START\r\n\r\n# Allow the service to interact with the desktop.\r\nwrapper.ntservice.interactive=false\r\n{noformat}\r\n\r\n\r\nh4.ActiveMQ Performance Module Producer Config (there are two executing instances, each sending to a distinct queue):\r\n{noformat}\r\n# Consumer System Settings\r\nsysTest.spiClass=org.apache.activemq.tool.spi.ActiveMQReflectionSPI\r\nsysTest.reportType=xml\r\nsysTest.destDistro=all\r\nsysTest.samplers=tp\r\nsysTest.numClients=5\r\nsysTest.totalDests=1\r\nsysTest.reportDir=./\r\n\r\n# Consumer Client Settings\r\nproducer.deliveryMode=persistent\r\n#producer.messageSize=3000\r\nproducer.msgFileName=/home/*****/3K.txt\r\nproducer.destName=queue://test.1\r\nproducer.sessTransacted=false\r\nproducer.sessAckMode=autoAck\r\nproducer.createNewMsg=false\r\nproducer.destComposite=false\r\n# 5 mins send duration\r\nproducer.sendType=time\r\nproducer.sendDuration=660000\r\nproducer.sendDelay=25\r\n# 1 million messages send\r\n# producer.sendType=count\r\n# producer.sendCount=1000000\r\n\r\n# Throughput Sampler Settings\r\n# 5 mins sampling duration\r\n# 1 min ramp up and ramp down time\r\n# 1 sec sampling interval\r\ntpSampler.duration=660000\r\ntpSampler.rampUpTime=30000\r\ntpSampler.rampDownTime=30000\r\ntpSampler.interval=1000\r\n\r\n# CPU Sampler Settings\r\n# 5 mins sampling duration\r\n# 1 min ramp up and ramp down time\r\n# 1 sec sampling interval\r\n# cpuSampler.duration=300000\r\n# cpuSampler.rampUpTime=60000\r\n# cpuSampler.rampDownTime=60000\r\n# cpuSampler.interval=1000\r\n\r\n# AMQ Connection Factory Settings\r\n# Use default settings\r\nfactory.brokerURL=tcp://**********:61616?wireFormat.maxInactivityDuration=5000\r\nfactory.useAsyncSend=false\r\n# factory.asyncDispatch=false \r\n#factory.alwaysSessionAsync=true\r\n# factory.useCompression=false \r\n# factory.optimizeAcknowledge=false \r\n# factory.objectMessageSerializationDefered=false \r\n# factory.disableTimeStampsByDefault=false \r\n# factory.optimizedMessageDispatch=true \r\n# factory.useRetroactiveConsumer=false \r\n# factory.copyMessageOnSend=true \r\n# factory.closeTimeout=15000 \r\n\r\n# factory.userName=null \r\n# factory.clientID=null \r\n# factory.password=null \r\n\r\n# factory.prefetchPolicy.durableTopicPrefetch=100 \r\n# factory.prefetchPolicy.topicPrefetch=32766 \r\n# factory.prefetchPolicy.queueBrowserPrefetch=500 \r\n# factory.prefetchPolicy.queuePrefetch=1000 \r\n# factory.prefetchPolicy.inputStreamPrefetch=100 \r\n# factory.prefetchPolicy.maximumPendingMessageLimit=0 \r\n# factory.prefetchPolicy.optimizeDurableTopicPrefetch=1000 \r\n\r\n# factory.redeliveryPolicy.initialRedeliveryDelay=1000 \r\n# factory.redeliveryPolicy.maximumRedeliveries=5 \r\n# factory.redeliveryPolicy.useCollisionAvoidance=false \r\n# factory.redeliveryPolicy.useExponentialBackOff=false \r\n# factory.redeliveryPolicy.collisionAvoidancePercent=15 \r\n# factory.redeliveryPolicy.backOffMultiplier=5 \r\n{noformat}\r\n\r\n\r\nh4.ActiveMQ Performance Module Consumer Config (there are two executing instances, each consuming from a distinct queue):\r\n{noformat}\r\n# Consumer System Settings\r\nsysTest.spiClass=org.apache.activemq.tool.spi.ActiveMQReflectionSPI\r\nsysTest.reportType=xml\r\nsysTest.destDistro=all\r\nsysTest.samplers=tp\r\nsysTest.numClients=20\r\nsysTest.totalDests=1\r\nsysTest.reportDir=./\r\n\r\n# Consumer Client Settings\r\nconsumer.durable=false\r\nconsumer.asyncRecv=true\r\nconsumer.destName=queue://test.1\r\nconsumer.sessTransacted=true\r\nconsumer.sessAckMode=transacted\r\nconsumer.commitAfterXMsgs=10\r\nconsumer.destComposite=false\r\nconsumer.unsubscribe=true\r\n# 5 mins receive duration\r\nconsumer.recvType=time\r\nconsumer.recvDuration=660000\r\n# 1 million messages receive\r\n# consumer.recvType=count\r\n# consumer.recvCount=1000000\r\n\r\n# Throughput Sampler Settings\r\n# 5 mins sampling duration\r\n# 1 min ramp up and ramp down time\r\n# 1 sec sampling interval\r\ntpSampler.duration=660000\r\ntpSampler.rampUpTime=30000\r\ntpSampler.rampDownTime=30000\r\ntpSampler.interval=1000\r\n\r\n# CPU Sampler Settings\r\n# 5 mins sampling duration\r\n# 1 min ramp up and ramp down time\r\n# 1 sec sampling interval\r\n# cpuSampler.duration=300000\r\n# cpuSampler.rampUpTime=60000\r\n# cpuSampler.rampDownTime=60000\r\n# cpuSampler.interval=1000\r\n\r\n# AMQ Connection Factory Settings\r\n# Use default settings\r\nfactory.brokerURL=tcp://*********:61616?wireFormat.maxInactivityDuration=5000\r\n# factory.useAsyncSend=false\r\n# factory.asyncDispatch=false \r\nfactory.alwaysSessionAsync=true\r\n# factory.useCompression=false \r\n# factory.optimizeAcknowledge=false \r\n# factory.objectMessageSerializationDefered=false \r\n# factory.disableTimeStampsByDefault=false \r\n# factory.optimizedMessageDispatch=true \r\n# factory.useRetroactiveConsumer=false \r\n# factory.copyMessageOnSend=true \r\n# factory.closeTimeout=15000 \r\n\r\n# factory.userName=null \r\n# factory.clientID=null \r\n# factory.password=null \r\n\r\n# factory.prefetchPolicy.durableTopicPrefetch=100 \r\n# factory.prefetchPolicy.topicPrefetch=32766 \r\n# factory.prefetchPolicy.queueBrowserPrefetch=500 \r\nfactory.prefetchPolicy.queuePrefetch=100\r\n# factory.prefetchPolicy.inputStreamPrefetch=100 \r\n# factory.prefetchPolicy.maximumPendingMessageLimit=0 \r\n# factory.prefetchPolicy.optimizeDurableTopicPrefetch=1000 \r\n\r\n# factory.redeliveryPolicy.initialRedeliveryDelay=1000 \r\n# factory.redeliveryPolicy.maximumRedeliveries=5 \r\n# factory.redeliveryPolicy.useCollisionAvoidance=false \r\n# factory.redeliveryPolicy.useExponentialBackOff=false \r\n# factory.redeliveryPolicy.collisionAvoidancePercent=15 \r\n# factory.redeliveryPolicy.backOffMultiplier=5 \r\n{noformat}\r\n\r\nh4.ActiveMQ Performance Module Producer 1 Command Line:\r\n mvn activemq-perf:producer -DsysTest.clientPrefix=prod1 -DsysTest.propsConfigFile=./src/main/resources/producer-conf/AMQ-setup-validation-prod-1.properties\r\n\r\nh4.ActiveMQ Performance Module Producer 2 Command Line:\r\n mvn activemq-perf:producer -DsysTest.clientPrefix=prod2 -DsysTest.propsConfigFile=./src/main/resources/producer-conf/AMQ-setup-validation-prod-2.properties\r\n\r\nh4.ActiveMQ Performance Module Consumer 1 Command Line:\r\nmvn activemq-perf:consumer -DsysTest.clientPrefix=cons1 -DsysTest.propsConfigFile=./src/main/resources/consumer-conf/AMQ-setup-validation-cons-1.properties\r\n\r\nh4.ActiveMQ Performance Module Consumer 2 Command Line:\r\n mvn activemq-perf:consumer -DsysTest.clientPrefix=cons2 -DsysTest.propsConfigFile=./src/main/resources/consumer-conf/AMQ-setup-validation-cons-2.properties\r\n\r\n\r\nh4.Thread dump with test clients executing after hang:\r\n{noformat}\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | Full thread dump Java HotSpot(TM) 64-Bit Server VM (14.3-b01 mixed mode):\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ce8c800 nid=0x4292 waiting on condition [0x00002b36e2eda000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ce37000 nid=0x4291 waiting on condition [0x00002b36e2ea9000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ce35000 nid=0x428e waiting on condition [0x00002b36e2e78000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"RMI TCP Connection(17)-10.1.82.158\" daemon prio=10 tid=0x000000004ce33000 nid=0x428d runnable [0x00002b36e2e47000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.io.BufferedInputStream.fill(BufferedInputStream.java:218)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.io.BufferedInputStream.read(BufferedInputStream.java:237)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- locked <0x00002b36a624b948> (a java.io.BufferedInputStream)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.io.FilterInputStream.read(FilterInputStream.java:66)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:517)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ce30800 nid=0x428c waiting on condition [0x00002b36e2e16000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004c253000 nid=0x428b waiting on condition [0x00002b36e2de5000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004c251800 nid=0x428a waiting on condition [0x00002b36e2db4000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004cae1000 nid=0x4289 waiting on condition [0x00002b36e2d83000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004cb3f000 nid=0x4288 waiting on condition [0x00002b36e2d52000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004cb3d800 nid=0x4287 waiting on condition [0x00002b36e2d21000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c78e4468> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \"ActiveMQ Transport: tcp:///172.19.9.162:54197@61616\" daemon prio=10 tid=0x000000004d42e800 nid=0x4286 waiting on condition [0x00002b36e2cef000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \t- parking to wait for  <0x00002b36c73ac850> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:38 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54199@61616\" daemon prio=10 tid=0x000000004d42c800 nid=0x4285 waiting on condition [0x00002b36e2cbe000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- parking to wait for  <0x00002b36c73ac850> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54198@61616\" daemon prio=10 tid=0x000000004d42a800 nid=0x4284 waiting on condition [0x00002b36e2c8e000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- parking to wait for  <0x00002b36c73ac850> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54196@61616\" daemon prio=10 tid=0x000000004d428800 nid=0x4283 waiting on condition [0x00002b36e2c5d000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- parking to wait for  <0x00002b36c73ac850> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54195@61616\" daemon prio=10 tid=0x000000004d33a000 nid=0x4282 in Object.wait() [0x00002b36e2c2b000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:216)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:123)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:327)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$1.asyncAddQueueMessage(MemoryTransactionStore.java:154)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:748)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54194@61616\" daemon prio=10 tid=0x000000004c53a000 nid=0x4281 runnable [0x00002b36e2bfb000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54192@61616\" daemon prio=10 tid=0x000000004c521000 nid=0x4280 waiting on condition [0x00002b36e2bc9000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- parking to wait for  <0x00002b36c73bf418> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54193@61616\" daemon prio=10 tid=0x000000004c387000 nid=0x427f waiting on condition [0x00002b36e2b98000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- parking to wait for  <0x00002b36c73bf418> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54190@61616\" daemon prio=10 tid=0x000000004d421800 nid=0x427e waiting on condition [0x00002b36e2b67000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- parking to wait for  <0x00002b36c73bf418> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54189@61616\" daemon prio=10 tid=0x000000004d41f800 nid=0x427d in Object.wait() [0x00002b36e2b36000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:216)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:123)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:327)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$1.asyncAddQueueMessage(MemoryTransactionStore.java:154)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:748)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54191@61616\" daemon prio=10 tid=0x000000004c2ed800 nid=0x427c waiting on condition [0x00002b36e2b06000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \t- parking to wait for  <0x00002b36c73bf418> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.162:54188@61616\" daemon prio=10 tid=0x000000004c2ec000 nid=0x427b runnable [0x00002b36e2ad5000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \"ActiveMQ Transport: tcp:///172.19.9.163:37366@61616\" daemon prio=10 tid=0x000000004d433000 nid=0x427a runnable [0x00002b36e2aa4000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:40 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37365@61616\" daemon prio=10 tid=0x000000004d430800 nid=0x4279 runnable [0x00002b36e2a73000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37368@61616\" daemon prio=10 tid=0x000000004c1e4000 nid=0x4278 runnable [0x00002b36e2a42000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37360@61616\" daemon prio=10 tid=0x000000004c1e2000 nid=0x4277 runnable [0x00002b36e2a11000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37367@61616\" daemon prio=10 tid=0x000000004c1dd800 nid=0x4275 runnable [0x00002b36e29af000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37364@61616\" daemon prio=10 tid=0x000000004c233800 nid=0x4274 runnable [0x00002b36e297e000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37362@61616\" daemon prio=10 tid=0x000000004c231000 nid=0x4273 runnable [0x00002b36e294d000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37363@61616\" daemon prio=10 tid=0x000000004c22f000 nid=0x4272 runnable [0x00002b36e291c000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37361@61616\" daemon prio=10 tid=0x000000004d39e000 nid=0x4270 runnable [0x00002b36e28ba000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37358@61616\" daemon prio=10 tid=0x000000004ca27000 nid=0x426a runnable [0x00002b36e2794000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37354@61616\" daemon prio=10 tid=0x000000004c1f2000 nid=0x4267 runnable [0x00002b36e2701000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37352@61616\" daemon prio=10 tid=0x000000004c1f0000 nid=0x4266 runnable [0x00002b36e26d0000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37356@61616\" daemon prio=10 tid=0x000000004c1ee000 nid=0x4265 runnable [0x00002b36e269f000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37357@61616\" daemon prio=10 tid=0x000000004cb1c000 nid=0x4264 runnable [0x00002b36e266e000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37359@61616\" daemon prio=10 tid=0x000000004cb1a000 nid=0x4263 runnable [0x00002b36e263d000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37355@61616\" daemon prio=10 tid=0x000000004cb18000 nid=0x4262 runnable [0x00002b36e260c000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37346@61616\" daemon prio=10 tid=0x000000004cb16800 nid=0x4261 runnable [0x00002b36e25db000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37350@61616\" daemon prio=10 tid=0x000000004c409800 nid=0x425e runnable [0x00002b36e2548000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37345@61616\" daemon prio=10 tid=0x000000004c407800 nid=0x425d runnable [0x00002b36e2517000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37347@61616\" daemon prio=10 tid=0x000000004c405800 nid=0x425c in Object.wait() [0x00002b36e24e6000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37348@61616\" daemon prio=10 tid=0x000000004c449000 nid=0x425b runnable [0x00002b36e24b5000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37344@61616\" daemon prio=10 tid=0x000000004c447000 nid=0x425a runnable [0x00002b36e2484000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37349@61616\" daemon prio=10 tid=0x000000004d419800 nid=0x4258 runnable [0x00002b36e2422000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37353@61616\" daemon prio=10 tid=0x000000004d445000 nid=0x4257 runnable [0x00002b36e23f1000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37351@61616\" daemon prio=10 tid=0x000000004d416800 nid=0x4256 runnable [0x00002b36e23c0000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ BrokerService[jdbcBroker] Task-21\" daemon prio=10 tid=0x00002b36e80ed800 nid=0x4250 waiting on condition [0x00002b36e229a000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37343@61616\" daemon prio=10 tid=0x000000004c43f800 nid=0x424d runnable [0x00002b36e2207000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37338@61616\" daemon prio=10 tid=0x000000004c43c000 nid=0x424b runnable [0x00002b36e21a5000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37342@61616\" daemon prio=10 tid=0x000000004cb32800 nid=0x4249 in Object.wait() [0x00002b36e2142000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37341@61616\" daemon prio=10 tid=0x000000004cb30000 nid=0x4248 runnable [0x00002b36e2112000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37339@61616\" daemon prio=10 tid=0x000000004cb2e000 nid=0x4247 in Object.wait() [0x00002b36e20e0000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37340@61616\" daemon prio=10 tid=0x000000004cb2a000 nid=0x4245 runnable [0x00002b36e207f000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37334@61616\" daemon prio=10 tid=0x000000004ce95800 nid=0x4240 in Object.wait() [0x00002b36e1f89000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37337@61616\" daemon prio=10 tid=0x000000004cb45800 nid=0x423e in Object.wait() [0x00002b36e1f27000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37336@61616\" daemon prio=10 tid=0x000000004cb43800 nid=0x423d in Object.wait() [0x00002b36e1ef6000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37335@61616\" daemon prio=10 tid=0x000000004cb40800 nid=0x423c in Object.wait() [0x00002b36e1ec5000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37332@61616\" daemon prio=10 tid=0x000000004cae9800 nid=0x423b in Object.wait() [0x00002b36e1e94000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37333@61616\" daemon prio=10 tid=0x000000004c318800 nid=0x423a in Object.wait() [0x00002b36e1e63000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37331@61616\" daemon prio=10 tid=0x000000004c315000 nid=0x4236 in Object.wait() [0x00002b36e1d9f000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37329@61616\" daemon prio=10 tid=0x000000004cb34000 nid=0x4233 runnable [0x00002b36e1d0d000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37330@61616\" daemon prio=10 tid=0x000000004c303800 nid=0x4230 in Object.wait() [0x00002b36e1c79000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37328@61616\" daemon prio=10 tid=0x00002b36e8142800 nid=0x422f runnable [0x00002b36e1c49000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ InactivityMonitor WriteCheckTimer\" daemon prio=10 tid=0x000000004c301800 nid=0x422d in Object.wait() [0x00002b36e1be7000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c748c9b0> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c748c9b0> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ InactivityMonitor ReadCheckTimer\" daemon prio=10 tid=0x000000004c25a000 nid=0x422c in Object.wait() [0x00002b36e192d000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c748d010> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c748d010> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport: tcp:///172.19.9.163:37327@61616\" daemon prio=10 tid=0x000000004cc5e000 nid=0x422b runnable [0x00002b36e1a90000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readInt(DataInputStream.java:370)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#5\" daemon prio=10 tid=0x000000004cf1b000 nid=0x417a in Object.wait() [0x00002b36e12d1000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#4\" daemon prio=10 tid=0x000000004cf1a800 nid=0x4179 in Object.wait() [0x00002b36e1364000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#3\" daemon prio=10 tid=0x000000004cf1a000 nid=0x4178 in Object.wait() [0x00002b36e126f000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#2\" daemon prio=10 tid=0x000000004c2e0800 nid=0x4177 in Object.wait() [0x00002b36e1333000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#1\" daemon prio=10 tid=0x000000004c2e0000 nid=0x4176 in Object.wait() [0x00002b36e12a0000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#0\" daemon prio=10 tid=0x000000004cf46000 nid=0x4175 in Object.wait() [0x00002b36e1302000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-AdminTaskTimer\" daemon prio=10 tid=0x000000004cc5f000 nid=0x4174 in Object.wait() [0x00002b36e123e000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c7264c68> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c7264c68> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"RMI TCP Connection(15)-10.1.82.158\" daemon prio=10 tid=0x000000004c2c1000 nid=0x4158 runnable [0x00002b36e1b54000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.BufferedInputStream.fill(BufferedInputStream.java:218)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.BufferedInputStream.read(BufferedInputStream.java:237)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36a0c325a0> (a java.io.BufferedInputStream)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.FilterInputStream.read(FilterInputStream.java:66)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:517)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"RMI TCP Connection(5)-10.1.82.158\" daemon prio=10 tid=0x000000004c2bd000 nid=0x4157 in Object.wait() [0x00002b36e1b22000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c6fad5d0> (a com.sun.jmx.remote.internal.ArrayNotificationBuffer)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.sun.jmx.remote.internal.ArrayNotificationBuffer.fetchNotifications(ArrayNotificationBuffer.java:417)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c6fad5d0> (a com.sun.jmx.remote.internal.ArrayNotificationBuffer)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.sun.jmx.remote.internal.ArrayNotificationBuffer$ShareBuffer.fetchNotifications(ArrayNotificationBuffer.java:209)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.sun.jmx.remote.internal.ServerNotifForwarder.fetchNotifs(ServerNotifForwarder.java:258)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat javax.management.remote.rmi.RMIConnectionImpl$2.run(RMIConnectionImpl.java:1227)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat javax.management.remote.rmi.RMIConnectionImpl$2.run(RMIConnectionImpl.java:1225)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(RMIConnectionImpl.java:1231)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.reflect.Method.invoke(Method.java:597)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.Transport$1.run(Transport.java:159)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.security.AccessController.doPrivileged(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.Transport.serviceCall(Transport.java:155)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"RMI TCP Connection(idle)\" daemon prio=10 tid=0x000000004c2bb800 nid=0x4156 waiting on condition [0x00002b36e1af2000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c70fb7f8> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"JMX server connection timeout 49\" daemon prio=10 tid=0x00002b36e81d1800 nid=0x4155 in Object.wait() [0x00002b36e1ac1000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c710f7b0> (a [I)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:150)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c710f7b0> (a [I)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"RMI Scheduler(0)\" daemon prio=10 tid=0x000000004c9e8800 nid=0x4153 waiting on condition [0x00002b36e1a5f000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c71111e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.DelayQueue.take(DelayQueue.java:164)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:583)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:576)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"qtp1580588181-44\" prio=10 tid=0x00002b36e81c3000 nid=0x4151 waiting on condition [0x00002b36e17f4000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"qtp1580588181-43\" prio=10 tid=0x00002b36e81c2000 nid=0x4150 waiting on condition [0x00002b36e17c3000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"qtp1580588181-42\" prio=10 tid=0x00002b36e81c6000 nid=0x414f waiting on condition [0x00002b36e1792000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"qtp1580588181-41\" prio=10 tid=0x00002b36e81be800 nid=0x414e waiting on condition [0x00002b36e1761000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"qtp1580588181-40\" prio=10 tid=0x00002b36e81be000 nid=0x414d waiting on condition [0x00002b36e1730000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"qtp1580588181-39\" prio=10 tid=0x00002b36e807d000 nid=0x414c waiting on condition [0x00002b36e16ff000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"qtp1580588181-38 Acceptor0 SelectChannelConnector@0.0.0.0:8161\" prio=10 tid=0x00002b36e8046000 nid=0x414b runnable [0x00002b36e16ce000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.nio.ch.ServerSocketChannelImpl.accept0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:145)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c74c5f18> (a java.lang.Object)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.server.nio.SelectChannelConnector.accept(SelectChannelConnector.java:109)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.server.AbstractConnector$Acceptor.run(AbstractConnector.java:938)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"qtp1580588181-37 Selector0\" prio=10 tid=0x00002b36e805f800 nid=0x414a runnable [0x00002b36e169d000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:215)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c74c5890> (a sun.nio.ch.Util$1)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c74c5878> (a java.util.Collections$UnmodifiableSet)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c74c54d8> (a sun.nio.ch.EPollSelectorImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:569)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.io.nio.SelectorManager$1.run(SelectorManager.java:290)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"HashSessionScavenger-2\" daemon prio=10 tid=0x00002b36e805a800 nid=0x4149 in Object.wait() [0x00002b36e166c000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c750fcf0> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c750fcf0> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"HashSessionScavenger-1\" daemon prio=10 tid=0x00002b36e8059800 nid=0x4148 in Object.wait() [0x00002b36e163b000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c75af9d8> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c75af9d8> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"HashSessionScavenger-0\" daemon prio=10 tid=0x00002b36e8024000 nid=0x4147 in Object.wait() [0x00002b36e160a000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c76a7828> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c76a7828> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport Server: tcp://0.0.0.0:61616\" daemon prio=10 tid=0x00002b36e800d000 nid=0x4146 runnable [0x00002b36e15d9000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.PlainSocketImpl.socketAccept(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c7480720> (a java.net.SocksSocketImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.ServerSocket.accept(ServerSocket.java:421)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:274)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Transport Server Thread Handler: tcp://0.0.0.0:61616\" daemon prio=10 tid=0x00002b36e800c000 nid=0x4145 runnable [0x00002b36e15a8000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c7482098> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:395)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.transport.tcp.TcpTransportServer$1.run(TcpTransportServer.java:346)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Cleanup Timer\" daemon prio=10 tid=0x00002b36e44a7800 nid=0x413d waiting on condition [0x00002b36e0d9b000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- parking to wait for  <0x00002b36c72ddaa8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDeleteOldMessages(DefaultJDBCAdapter.java:813)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.cleanup(JDBCPersistenceAdapter.java:330)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:311)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"ActiveMQ Broker[jdbcBroker] Scheduler\" daemon prio=10 tid=0x00002b36e4468000 nid=0x413c in Object.wait() [0x00002b36e0d39000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c72e2108> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c72e2108> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"WrapperSimpleAppMain\" prio=10 tid=0x000000004c2e1800 nid=0x413b in Object.wait() [0x00002b36e0dcb000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c7445430> (a [Z)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Object.java:485)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:174)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c7445430> (a [Z)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:114)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.reflect.Method.invoke(Method.java:597)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.console.Main.runTaskClass(Main.java:262)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.apache.activemq.console.Main.main(Main.java:115)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.reflect.Method.invoke(Method.java:597)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"DestroyJavaVM\" prio=10 tid=0x000000004c138000 nid=0x4129 waiting on condition [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"Wrapper-Connection\" daemon prio=10 tid=0x000000004c2d1800 nid=0x4139 runnable [0x00002b36e0d6a000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.SocketInputStream.read(SocketInputStream.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.io.DataInputStream.readByte(DataInputStream.java:248)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.tanukisoftware.wrapper.WrapperManager.handleSocket(WrapperManager.java:3737)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.tanukisoftware.wrapper.WrapperManager.run(WrapperManager.java:4084)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"Wrapper-Control-Event-Monitor\" daemon prio=10 tid=0x000000004c2a9000 nid=0x4137 sleeping[0x00002b36e0d08000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: TIMED_WAITING (sleeping)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.sleep(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat org.tanukisoftware.wrapper.WrapperManager$3.run(WrapperManager.java:731)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"RMI TCP Accept-0\" daemon prio=10 tid=0x00002b36e40a7000 nid=0x4135 runnable [0x00002b36e0ad3000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.PlainSocketImpl.socketAccept(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c70fb0d8> (a java.net.SocksSocketImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.ServerSocket.accept(ServerSocket.java:421)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:34)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"RMI TCP Accept-1099\" daemon prio=10 tid=0x00002b36e40a1800 nid=0x4134 runnable [0x00002b36e0aa2000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.PlainSocketImpl.socketAccept(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c70fa9c0> (a java.net.SocksSocketImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.ServerSocket.accept(ServerSocket.java:421)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"RMI TCP Accept-0\" daemon prio=10 tid=0x00002b36e4090800 nid=0x4133 runnable [0x00002b36e0a71000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.PlainSocketImpl.socketAccept(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c70fad48> (a java.net.SocksSocketImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.net.ServerSocket.accept(ServerSocket.java:421)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"Low Memory Detector\" daemon prio=10 tid=0x000000004c1c5000 nid=0x4132 runnable [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"CompilerThread1\" daemon prio=10 tid=0x000000004c1c2000 nid=0x4131 waiting on condition [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"CompilerThread0\" daemon prio=10 tid=0x000000004c1be000 nid=0x4130 waiting on condition [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"Signal Dispatcher\" daemon prio=10 tid=0x000000004c1bc000 nid=0x412f runnable [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"Finalizer\" daemon prio=10 tid=0x000000004c199000 nid=0x412e in Object.wait() [0x00002b36dcfde000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c7753a78> (a java.lang.ref.ReferenceQueue$Lock)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c7753a78> (a java.lang.ref.ReferenceQueue$Lock)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"Reference Handler\" daemon prio=10 tid=0x000000004c197000 nid=0x412d in Object.wait() [0x00002b36dcfad000]\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- waiting on <0x00002b36c6f601b0> (a java.lang.ref.Reference$Lock)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.Object.wait(Object.java:485)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \t- locked <0x00002b36c6f601b0> (a java.lang.ref.Reference$Lock)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"VM Thread\" prio=10 tid=0x000000004c190000 nid=0x412c runnable \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"GC task thread#0 (ParallelGC)\" prio=10 tid=0x000000004c142800 nid=0x412a runnable \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"GC task thread#1 (ParallelGC)\" prio=10 tid=0x000000004c144000 nid=0x412b runnable \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \"VM Periodic Task Thread\" prio=10 tid=0x00002b36e40a9800 nid=0x4136 waiting on condition \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | JNI global references: 763\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | Heap\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |  PSYoungGen      total 1194688K, used 530093K [0x00002b3688750000, 0x00002b36dbca0000, 0x00002b36dbca0000)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |   eden space 1024064K, 50% used [0x00002b3688750000,0x00002b36a822d6a0,0x00002b36c6f60000)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |   from space 170624K, 6% used [0x00002b36c6f60000,0x00002b36c7a2dda0,0x00002b36d1600000)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |   to   space 170624K, 0% used [0x00002b36d1600000,0x00002b36d1600000,0x00002b36dbca0000)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |  PSOldGen        total 2730688K, used 0K [0x00002b35e1ca0000, 0x00002b3688750000, 0x00002b3688750000)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |   object space 2730688K, 0% used [0x00002b35e1ca0000,0x00002b35e1ca0000,0x00002b3688750000)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |  PSPermGen       total 34688K, used 34637K [0x00002b35d9ca0000, 0x00002b35dbe80000, 0x00002b35e1ca0000)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 |   object space 34688K, 99% used [0x00002b35d9ca0000,0x00002b35dbe735f8,0x00002b35dbe80000)\r\nINFO   | jvm 1    | 2013/06/02 22:47:41 | \r\n{noformat}\r\n\r\nh4.Thread dump with test clients terminated after hang:\r\n{noformat}\r\nSTATUS | wrapper  | 2013/06/02 22:48:27 | Dumping JVM state.\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | 2013-06-02 22:48:27\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | Full thread dump Java HotSpot(TM) 64-Bit Server VM (14.3-b01 mixed mode):\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-69\" daemon prio=10 tid=0x000000004d419800 nid=0x4364 waiting on condition [0x00002b36e2701000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36926250b0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-68\" daemon prio=10 tid=0x000000004c1f0000 nid=0x4363 waiting on condition [0x00002b36e26d0000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-67\" daemon prio=10 tid=0x000000004c57e800 nid=0x4361 waiting on condition [0x00002b36e1bb6000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3696992bb8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-66\" daemon prio=10 tid=0x000000004c1dd800 nid=0x435f waiting on condition [0x00002b36e29af000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3696fd1f70> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-65\" daemon prio=10 tid=0x000000004d430800 nid=0x435c waiting on condition [0x00002b36e2a73000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-64\" daemon prio=10 tid=0x000000004c3f2800 nid=0x435a waiting on condition [0x00002b36e2548000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b369636e8e8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-63\" daemon prio=10 tid=0x000000004c1ee000 nid=0x4358 waiting on condition [0x00002b36e263d000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-62\" daemon prio=10 tid=0x000000004c1f5000 nid=0x4357 waiting on condition [0x00002b36e2fcf000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b369260cb18> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-61\" daemon prio=10 tid=0x000000004d416800 nid=0x4354 waiting on condition [0x00002b36e23c0000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-60\" daemon prio=10 tid=0x000000004c1e2000 nid=0x4353 waiting on condition [0x00002b36e24b5000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b369014f818> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-59\" daemon prio=10 tid=0x000000004c22f000 nid=0x434f waiting on condition [0x00002b36e291c000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-58\" daemon prio=10 tid=0x000000004c426800 nid=0x434e waiting on condition [0x00002b36e1d6f000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36925f4268> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-57\" daemon prio=10 tid=0x000000004c1f2000 nid=0x4349 waiting on condition [0x00002b36e2aa4000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3690137350> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-56\" daemon prio=10 tid=0x000000004c449000 nid=0x4344 waiting on condition [0x00002b36e2a42000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-55\" daemon prio=10 tid=0x000000004c3ed000 nid=0x433e waiting on condition [0x00002b36e27c5000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36905bbab8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-54\" daemon prio=10 tid=0x000000004c421800 nid=0x4337 waiting on condition [0x00002b36e1a90000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36900ecea0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-53\" daemon prio=10 tid=0x000000004d1e0000 nid=0x4336 waiting on condition [0x00002b36e1e33000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b369058ae68> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-52\" daemon prio=10 tid=0x000000004d1de800 nid=0x4335 waiting on condition [0x00002b36e1c18000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3692451840> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-51\" daemon prio=10 tid=0x000000004c407800 nid=0x4334 waiting on condition [0x00002b36e1c49000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36901051d8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-50\" daemon prio=10 tid=0x000000004cb2a000 nid=0x4333 waiting on condition [0x00002b36e2484000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3690714ef0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-49\" daemon prio=10 tid=0x000000004cb30000 nid=0x4332 waiting on condition [0x00002b36e2112000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b369072d928> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-48\" daemon prio=10 tid=0x000000004c447000 nid=0x4331 waiting on condition [0x00002b36e207f000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-47\" daemon prio=10 tid=0x000000004c43f800 nid=0x432d waiting on condition [0x00002b36e2207000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3690bb2bf8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-46\" daemon prio=10 tid=0x000000004d1e2000 nid=0x432b waiting on condition [0x00002b36e204e000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b368e2ba408> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-45\" daemon prio=10 tid=0x000000004c43c000 nid=0x432a waiting on condition [0x00002b36e21a5000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73f6290> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-44\" daemon prio=10 tid=0x000000004d1e1000 nid=0x4329 waiting on condition [0x00002b36e20b0000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36961fbbf0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-43\" daemon prio=10 tid=0x00002b36e80f2000 nid=0x4327 waiting on condition [0x00002b36e1dd1000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-42\" daemon prio=10 tid=0x000000004cb16800 nid=0x4324 waiting on condition [0x00002b36e25db000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3690276fa0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-41\" daemon prio=10 tid=0x000000004d1dd000 nid=0x4323 waiting on condition [0x00002b36e22fc000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-40\" daemon prio=10 tid=0x000000004cb34000 nid=0x4321 waiting on condition [0x00002b36e1d0d000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-39\" daemon prio=10 tid=0x000000004d1dc800 nid=0x431f waiting on condition [0x00002b36e1f59000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c6f60998> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004c43a000 nid=0x4309 waiting on condition [0x00002b36e1b85000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36905bbab8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ce8f000 nid=0x4307 waiting on condition [0x00002b36e22cb000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3690276fa0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004d39c000 nid=0x42fd waiting on condition [0x00002b36e21d6000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3690714ef0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ca2b800 nid=0x42f7 waiting on condition [0x00002b36e1fec000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73f6290> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ca25000 nid=0x42e3 waiting on condition [0x00002b36e29e0000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b368e2ba408> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004c43e000 nid=0x42e1 waiting on condition [0x00002b36e1cab000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3692451840> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ce94000 nid=0x42e0 waiting on condition [0x00002b36e2763000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b369058ae68> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ce8c800 nid=0x4292 waiting on condition [0x00002b36e2eda000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b369072d928> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004ce37000 nid=0x4291 waiting on condition [0x00002b36e2ea9000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36901051d8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"RMI TCP Connection(17)-10.1.82.158\" daemon prio=10 tid=0x000000004ce33000 nid=0x428d runnable [0x00002b36e2e47000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.io.BufferedInputStream.fill(BufferedInputStream.java:218)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.io.BufferedInputStream.read(BufferedInputStream.java:237)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- locked <0x00002b36a624b948> (a java.io.BufferedInputStream)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.io.FilterInputStream.read(FilterInputStream.java:66)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:517)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004c251800 nid=0x428a waiting on condition [0x00002b36e2db4000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36900ecea0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x000000004cb3f000 nid=0x4288 waiting on condition [0x00002b36e2d52000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3690bb2bf8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:877)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1197)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:594)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:195)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:332)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor$3.run(AbstractInactivityMonitor.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54197@61616\" daemon prio=10 tid=0x000000004d42e800 nid=0x4286 waiting on condition [0x00002b36e2cef000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73ac850> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54199@61616\" daemon prio=10 tid=0x000000004d42c800 nid=0x4285 waiting on condition [0x00002b36e2cbe000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73ac850> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54198@61616\" daemon prio=10 tid=0x000000004d42a800 nid=0x4284 waiting on condition [0x00002b36e2c8e000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73ac850> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54196@61616\" daemon prio=10 tid=0x000000004d428800 nid=0x4283 waiting on condition [0x00002b36e2c5d000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73ac850> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54195@61616\" daemon prio=10 tid=0x000000004d33a000 nid=0x4282 in Object.wait() [0x00002b36e2c2b000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:216)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:123)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:327)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$1.asyncAddQueueMessage(MemoryTransactionStore.java:154)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:748)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54192@61616\" daemon prio=10 tid=0x000000004c521000 nid=0x4280 waiting on condition [0x00002b36e2bc9000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73bf418> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54193@61616\" daemon prio=10 tid=0x000000004c387000 nid=0x427f waiting on condition [0x00002b36e2b98000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73bf418> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54190@61616\" daemon prio=10 tid=0x000000004d421800 nid=0x427e waiting on condition [0x00002b36e2b67000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73bf418> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54189@61616\" daemon prio=10 tid=0x000000004d41f800 nid=0x427d in Object.wait() [0x00002b36e2b36000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:216)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:123)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:327)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$1.asyncAddQueueMessage(MemoryTransactionStore.java:154)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:748)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.162:54191@61616\" daemon prio=10 tid=0x000000004c2ed800 nid=0x427c waiting on condition [0x00002b36e2b06000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b36c73bf418> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireInterruptibly(AbstractQueuedSynchronizer.java:803)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1137)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:312)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:743)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.Queue.send(Queue.java:721)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:392)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.163:37347@61616\" daemon prio=10 tid=0x000000004c405800 nid=0x425c in Object.wait() [0x00002b36e24e6000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ BrokerService[jdbcBroker] Task-21\" daemon prio=10 tid=0x00002b36e80ed800 nid=0x4250 waiting on condition [0x00002b36e229a000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- parking to wait for  <0x00002b3696387458> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1074)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.163:37342@61616\" daemon prio=10 tid=0x000000004cb32800 nid=0x4249 in Object.wait() [0x00002b36e2142000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \"ActiveMQ Transport: tcp:///172.19.9.163:37339@61616\" daemon prio=10 tid=0x000000004cb2e000 nid=0x4247 in Object.wait() [0x00002b36e20e0000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:27 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport: tcp:///172.19.9.163:37334@61616\" daemon prio=10 tid=0x000000004ce95800 nid=0x4240 in Object.wait() [0x00002b36e1f89000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport: tcp:///172.19.9.163:37337@61616\" daemon prio=10 tid=0x000000004cb45800 nid=0x423e in Object.wait() [0x00002b36e1f27000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport: tcp:///172.19.9.163:37336@61616\" daemon prio=10 tid=0x000000004cb43800 nid=0x423d in Object.wait() [0x00002b36e1ef6000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport: tcp:///172.19.9.163:37335@61616\" daemon prio=10 tid=0x000000004cb40800 nid=0x423c in Object.wait() [0x00002b36e1ec5000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport: tcp:///172.19.9.163:37332@61616\" daemon prio=10 tid=0x000000004cae9800 nid=0x423b in Object.wait() [0x00002b36e1e94000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport: tcp:///172.19.9.163:37333@61616\" daemon prio=10 tid=0x000000004c318800 nid=0x423a in Object.wait() [0x00002b36e1e63000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport: tcp:///172.19.9.163:37331@61616\" daemon prio=10 tid=0x000000004c315000 nid=0x4236 in Object.wait() [0x00002b36e1d9f000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:161)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:492)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport: tcp:///172.19.9.163:37330@61616\" daemon prio=10 tid=0x000000004c303800 nid=0x4230 in Object.wait() [0x00002b36e1c79000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72650e8> (a com.mchange.v2.resourcepool.BasicResourcePool)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:755)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:682)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:285)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:805)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:456)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#5\" daemon prio=10 tid=0x000000004cf1b000 nid=0x417a in Object.wait() [0x00002b36e12d1000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#4\" daemon prio=10 tid=0x000000004cf1a800 nid=0x4179 in Object.wait() [0x00002b36e1364000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#3\" daemon prio=10 tid=0x000000004cf1a000 nid=0x4178 in Object.wait() [0x00002b36e126f000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#2\" daemon prio=10 tid=0x000000004c2e0800 nid=0x4177 in Object.wait() [0x00002b36e1333000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#1\" daemon prio=10 tid=0x000000004c2e0000 nid=0x4176 in Object.wait() [0x00002b36e12a0000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-HelperThread-#0\" daemon prio=10 tid=0x000000004cf46000 nid=0x4175 in Object.wait() [0x00002b36e1302000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:635)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c701a6f8> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"C3P0PooledConnectionPoolManager[identityToken->1bqswip8v271v01lo36sg|5c4b82d2]-AdminTaskTimer\" daemon prio=10 tid=0x000000004cc5f000 nid=0x4174 in Object.wait() [0x00002b36e123e000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c7264c68> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c7264c68> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"RMI TCP Connection(15)-10.1.82.158\" daemon prio=10 tid=0x000000004c2c1000 nid=0x4158 runnable [0x00002b36e1b54000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.io.BufferedInputStream.fill(BufferedInputStream.java:218)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.io.BufferedInputStream.read(BufferedInputStream.java:237)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36a0c325a0> (a java.io.BufferedInputStream)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.io.FilterInputStream.read(FilterInputStream.java:66)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:517)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"RMI TCP Connection(5)-10.1.82.158\" daemon prio=10 tid=0x000000004c2bd000 nid=0x4157 in Object.wait() [0x00002b36e1b22000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c6fad5d0> (a com.sun.jmx.remote.internal.ArrayNotificationBuffer)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.sun.jmx.remote.internal.ArrayNotificationBuffer.fetchNotifications(ArrayNotificationBuffer.java:417)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c6fad5d0> (a com.sun.jmx.remote.internal.ArrayNotificationBuffer)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.sun.jmx.remote.internal.ArrayNotificationBuffer$ShareBuffer.fetchNotifications(ArrayNotificationBuffer.java:209)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.sun.jmx.remote.internal.ServerNotifForwarder.fetchNotifs(ServerNotifForwarder.java:258)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat javax.management.remote.rmi.RMIConnectionImpl$2.run(RMIConnectionImpl.java:1227)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat javax.management.remote.rmi.RMIConnectionImpl$2.run(RMIConnectionImpl.java:1225)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(RMIConnectionImpl.java:1231)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.reflect.Method.invoke(Method.java:597)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.Transport$1.run(Transport.java:159)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.security.AccessController.doPrivileged(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.Transport.serviceCall(Transport.java:155)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"JMX server connection timeout 49\" daemon prio=10 tid=0x00002b36e81d1800 nid=0x4155 in Object.wait() [0x00002b36e1ac1000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c710f7b0> (a [I)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:150)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c710f7b0> (a [I)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"RMI Scheduler(0)\" daemon prio=10 tid=0x000000004c9e8800 nid=0x4153 waiting on condition [0x00002b36e1a5f000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c71111e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.DelayQueue.take(DelayQueue.java:164)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:583)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:576)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"qtp1580588181-44\" prio=10 tid=0x00002b36e81c3000 nid=0x4151 waiting on condition [0x00002b36e17f4000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"qtp1580588181-43\" prio=10 tid=0x00002b36e81c2000 nid=0x4150 waiting on condition [0x00002b36e17c3000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"qtp1580588181-42\" prio=10 tid=0x00002b36e81c6000 nid=0x414f waiting on condition [0x00002b36e1792000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"qtp1580588181-41\" prio=10 tid=0x00002b36e81be800 nid=0x414e waiting on condition [0x00002b36e1761000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"qtp1580588181-40\" prio=10 tid=0x00002b36e81be000 nid=0x414d waiting on condition [0x00002b36e1730000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"qtp1580588181-39\" prio=10 tid=0x00002b36e807d000 nid=0x414c waiting on condition [0x00002b36e16ff000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c74c4da0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"qtp1580588181-38 Acceptor0 SelectChannelConnector@0.0.0.0:8161\" prio=10 tid=0x00002b36e8046000 nid=0x414b runnable [0x00002b36e16ce000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.nio.ch.ServerSocketChannelImpl.accept0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:145)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c74c5f18> (a java.lang.Object)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.server.nio.SelectChannelConnector.accept(SelectChannelConnector.java:109)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.server.AbstractConnector$Acceptor.run(AbstractConnector.java:938)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"qtp1580588181-37 Selector0\" prio=10 tid=0x00002b36e805f800 nid=0x414a runnable [0x00002b36e169d000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:215)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c74c5890> (a sun.nio.ch.Util$1)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c74c5878> (a java.util.Collections$UnmodifiableSet)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c74c54d8> (a sun.nio.ch.EPollSelectorImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:569)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.io.nio.SelectorManager$1.run(SelectorManager.java:290)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"HashSessionScavenger-2\" daemon prio=10 tid=0x00002b36e805a800 nid=0x4149 in Object.wait() [0x00002b36e166c000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c750fcf0> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c750fcf0> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"HashSessionScavenger-1\" daemon prio=10 tid=0x00002b36e8059800 nid=0x4148 in Object.wait() [0x00002b36e163b000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c75af9d8> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c75af9d8> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"HashSessionScavenger-0\" daemon prio=10 tid=0x00002b36e8024000 nid=0x4147 in Object.wait() [0x00002b36e160a000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c76a7828> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c76a7828> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport Server: tcp://0.0.0.0:61616\" daemon prio=10 tid=0x00002b36e800d000 nid=0x4146 runnable [0x00002b36e15d9000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.PlainSocketImpl.socketAccept(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c7480720> (a java.net.SocksSocketImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.ServerSocket.accept(ServerSocket.java:421)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:274)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Transport Server Thread Handler: tcp://0.0.0.0:61616\" daemon prio=10 tid=0x00002b36e800c000 nid=0x4145 waiting on condition [0x00002b36e15a8000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c7482098> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:395)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.transport.tcp.TcpTransportServer$1.run(TcpTransportServer.java:346)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Cleanup Timer\" daemon prio=10 tid=0x00002b36e44a7800 nid=0x413d waiting on condition [0x00002b36e0d9b000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (parking)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.misc.Unsafe.park(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- parking to wait for  <0x00002b36c72ddaa8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDeleteOldMessages(DefaultJDBCAdapter.java:813)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.cleanup(JDBCPersistenceAdapter.java:330)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:311)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"ActiveMQ Broker[jdbcBroker] Scheduler\" daemon prio=10 tid=0x00002b36e4468000 nid=0x413c in Object.wait() [0x00002b36e0d39000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c72e2108> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.mainLoop(Timer.java:509)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c72e2108> (a java.util.TaskQueue)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.util.TimerThread.run(Timer.java:462)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"WrapperSimpleAppMain\" prio=10 tid=0x000000004c2e1800 nid=0x413b in Object.wait() [0x00002b36e0dcb000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c7445430> (a [Z)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Object.java:485)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:174)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c7445430> (a [Z)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:114)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.reflect.Method.invoke(Method.java:597)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.console.Main.runTaskClass(Main.java:262)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.apache.activemq.console.Main.main(Main.java:115)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.reflect.Method.invoke(Method.java:597)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"DestroyJavaVM\" prio=10 tid=0x000000004c138000 nid=0x4129 waiting on condition [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"Wrapper-Connection\" daemon prio=10 tid=0x000000004c2d1800 nid=0x4139 runnable [0x00002b36e0d6a000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.SocketInputStream.socketRead0(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.SocketInputStream.read(SocketInputStream.java:129)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.SocketInputStream.read(SocketInputStream.java:182)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.io.DataInputStream.readByte(DataInputStream.java:248)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.tanukisoftware.wrapper.WrapperManager.handleSocket(WrapperManager.java:3737)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.tanukisoftware.wrapper.WrapperManager.run(WrapperManager.java:4084)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"Wrapper-Control-Event-Monitor\" daemon prio=10 tid=0x000000004c2a9000 nid=0x4137 sleeping[0x00002b36e0d08000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: TIMED_WAITING (sleeping)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.sleep(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat org.tanukisoftware.wrapper.WrapperManager$3.run(WrapperManager.java:731)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"RMI TCP Accept-0\" daemon prio=10 tid=0x00002b36e40a7000 nid=0x4135 runnable [0x00002b36e0ad3000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.PlainSocketImpl.socketAccept(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c70fb0d8> (a java.net.SocksSocketImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.ServerSocket.accept(ServerSocket.java:421)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:34)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"RMI TCP Accept-1099\" daemon prio=10 tid=0x00002b36e40a1800 nid=0x4134 runnable [0x00002b36e0aa2000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.PlainSocketImpl.socketAccept(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c70fa9c0> (a java.net.SocksSocketImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.ServerSocket.accept(ServerSocket.java:421)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"RMI TCP Accept-0\" daemon prio=10 tid=0x00002b36e4090800 nid=0x4133 runnable [0x00002b36e0a71000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.PlainSocketImpl.socketAccept(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c70fad48> (a java.net.SocksSocketImpl)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.net.ServerSocket.accept(ServerSocket.java:421)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Thread.run(Thread.java:619)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"Low Memory Detector\" daemon prio=10 tid=0x000000004c1c5000 nid=0x4132 runnable [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"CompilerThread1\" daemon prio=10 tid=0x000000004c1c2000 nid=0x4131 waiting on condition [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"CompilerThread0\" daemon prio=10 tid=0x000000004c1be000 nid=0x4130 waiting on condition [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"Signal Dispatcher\" daemon prio=10 tid=0x000000004c1bc000 nid=0x412f waiting on condition [0x0000000000000000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: RUNNABLE\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"Finalizer\" daemon prio=10 tid=0x000000004c199000 nid=0x412e in Object.wait() [0x00002b36dcfde000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c7753a78> (a java.lang.ref.ReferenceQueue$Lock)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c7753a78> (a java.lang.ref.ReferenceQueue$Lock)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"Reference Handler\" daemon prio=10 tid=0x000000004c197000 nid=0x412d in Object.wait() [0x00002b36dcfad000]\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |    java.lang.Thread.State: WAITING (on object monitor)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Native Method)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- waiting on <0x00002b36c6f601b0> (a java.lang.ref.Reference$Lock)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.Object.wait(Object.java:485)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \t- locked <0x00002b36c6f601b0> (a java.lang.ref.Reference$Lock)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"VM Thread\" prio=10 tid=0x000000004c190000 nid=0x412c runnable \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"GC task thread#0 (ParallelGC)\" prio=10 tid=0x000000004c142800 nid=0x412a runnable \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"GC task thread#1 (ParallelGC)\" prio=10 tid=0x000000004c144000 nid=0x412b runnable \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \"VM Periodic Task Thread\" prio=10 tid=0x00002b36e40a9800 nid=0x4136 waiting on condition \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | JNI global references: 778\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | Heap\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |  PSYoungGen      total 1194688K, used 652999K [0x00002b3688750000, 0x00002b36dbca0000, 0x00002b36dbca0000)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |   eden space 1024064K, 62% used [0x00002b3688750000,0x00002b36afa341e0,0x00002b36c6f60000)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |   from space 170624K, 6% used [0x00002b36c6f60000,0x00002b36c7a2dda0,0x00002b36d1600000)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |   to   space 170624K, 0% used [0x00002b36d1600000,0x00002b36d1600000,0x00002b36dbca0000)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |  PSOldGen        total 2730688K, used 0K [0x00002b35e1ca0000, 0x00002b3688750000, 0x00002b3688750000)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |   object space 2730688K, 0% used [0x00002b35e1ca0000,0x00002b35e1ca0000,0x00002b3688750000)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |  PSPermGen       total 34880K, used 34701K [0x00002b35d9ca0000, 0x00002b35dbeb0000, 0x00002b35e1ca0000)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 |   object space 34880K, 99% used [0x00002b35d9ca0000,0x00002b35dbe83720,0x00002b35dbeb0000)\r\nINFO   | jvm 1    | 2013/06/02 22:48:28 | \r\n{noformat}\r\n\r\n\r\n"
    ],
    [
        "AMQ-5404",
        "AMQ-4684",
        "LevelDB files not being released after deletion During numerous test runs we've seen the file system fill up (df -k) and eventually ActiveMQ failing with a short write error.  When ActiveMQ falls over the file system is freed up to its original state. \r\n\r\nBefore ActiveMQ falls over we've tried to find the reason for the file system filling up by hunting through the directories but to no avail.  However when we do a lsof -a +L1 we can see numerous deleted LevelDB log and index files.   \r\n\r\nDoes anybody know why ActiveMQ/LevelDB is not releasing these files for full clear up by the OS. \r\n\r\nThis is on \r\nRed Hat Linux 6.4 \r\nActiveMQ 5.10 \r\nJava 1.7.0_45 ",
        "LevelDB on NFS created .nfs files We are currently testing levelDB on NFS for failover. We did this test with only one ActiveMQ running.\r\n\r\nWe filled one queue with 10.000 messages via the admin console, and then purged the queue.\r\n\r\nAfter this, the LevelDB directory was filled with .nfsxxxxxx files. These seem to be old version of the LevelDB log file. They are removed when you stop the ActiceMQ process. You also appear to be able to remove the files manually.\r\n\r\nFrom what we can deduce, these files mean that they were still open for io, while they were removed from the filesystem. A local filesystem will cope with this in the background, on a NFS share however that can't be done, so these .nfs files are created.\r\n\r\nSo it seems that the LevelDB store keeps the old logfiles open after they were deleted."
    ],
    [
        "AMQ-5404",
        "AMQ-4810",
        "LevelDB files not being released after deletion During numerous test runs we've seen the file system fill up (df -k) and eventually ActiveMQ failing with a short write error.  When ActiveMQ falls over the file system is freed up to its original state. \r\n\r\nBefore ActiveMQ falls over we've tried to find the reason for the file system filling up by hunting through the directories but to no avail.  However when we do a lsof -a +L1 we can see numerous deleted LevelDB log and index files.   \r\n\r\nDoes anybody know why ActiveMQ/LevelDB is not releasing these files for full clear up by the OS. \r\n\r\nThis is on \r\nRed Hat Linux 6.4 \r\nActiveMQ 5.10 \r\nJava 1.7.0_45 ",
        "LevelDB store does not seem to garbage collect its files Trying the LevelDB store on a recent ActiveMQ 5.9 snapshot, it seems that the broker does not remove useless files.\r\n\r\nI currently have a broker with no messages at all (all queues are empty and the TotalMessageCount is at 0) but plenty of LevelDB files:\r\n\r\n# du -ks leveldb\r\n1388380\tleveldb\r\n# find leveldb -type f | wc -l\r\n2419\r\n\r\nMaybe this is related to https://issues.apache.org/jira/browse/APLO-245?"
    ],
    [
        "AMQ-5418",
        "AMQ-5382",
        "MQTT Subscriber is able to receive messages published after unsubscribe() * Client1 - Create durable subscription\r\n* Client2 - Publish\r\n* Client1 should receive published messages at this point\r\n* Client1 unsubscribe\r\n* Client2 Publish\r\n* Client1 should not receive messages at this point\r\n* Client1 disconnect\r\n* Client2 Publish\r\n* Client1 connect and subscribe to same topic\r\n* Client1 should not receive any messages (fails)\r\n",
        "MQTT messages published after unsubscribe on a durable topic are received Test procedure:\r\n\r\nCreate a durable subscription to topic \"durableunsubtest\" with clientid \"durableUnsub\".\r\nPublish a message with client2 to topic \"durableunsubtest\". Make sure \"retain\" flag is not set.\r\nVerify that the message is received (confirming creation of durable subscription).\r\nUnsubscribe from topic \"durableunsubtest\" from clientid \"durableUnsub\". Disconnect client.\r\n\r\nPublish another message with client2.  Make sure \"retain\" flag is not set.\r\n\r\nConnect \"durableUnsub\" and subscribe to the topic again.\r\n\r\nVerify that no messages are received.\r\n\r\n\r\nJUnit Test Case code:\r\n{noformat}\r\n    /*\r\n     * Test unsubscribe on a durable subscription topic\r\n     */\r\n    @Test(timeout = 60 * 1000)\r\n    public void testDurableUnsubscribe() throws Exception {\r\n\r\n    \t// Create connection1\r\n        final String clientId = \"durableUnsub\";\r\n        MQTT mqtt1 = createMQTTConnection(clientId, false);\r\n        mqtt1.setKeepAlive((short) 60);\r\n        final BlockingConnection connection1 = mqtt1.blockingConnection();\r\n        connection1.connect();\r\n        \r\n        // create a durable subscription for client \"durableUnsub\"\r\n        final String TOPICNAME = \"durableunsubtest\";\r\n        final String payload = \"durable unsub test\";\r\n        Topic[] topic = { new Topic(TOPICNAME, QoS.AT_LEAST_ONCE) };\r\n        connection1.subscribe(topic);\r\n\r\n        // Create connection2 and publish a message on the topic\r\n        MQTT mqtt2 = createMQTTConnection(null, true);\r\n        mqtt2.setKeepAlive((short) 60);\r\n        final BlockingConnection connection2 = mqtt2.blockingConnection();\r\n        connection2.connect();\r\n        connection2.publish(TOPICNAME, payload.getBytes(), QoS.EXACTLY_ONCE, false);\r\n\r\n        // Verify that the durable subscription was created by receiving the message\r\n        // on connection1\r\n        Message message = connection1.receive(10, TimeUnit.SECONDS);\r\n        assertNotNull(message);\r\n        message.ack();\r\n        assertEquals(\"Unexpected String received\", payload, new String(message.getPayload()));\r\n\r\n        // Unsubscribe the topic on connection1\r\n        connection1.unsubscribe(new String[]{TOPICNAME});\r\n\r\n        // Disconnect connection1\r\n        connection1.disconnect();\r\n        \r\n        // Publish another message on connection2 for the same topic\r\n        MQTT mqtt2a = createMQTTConnection(null, true);\r\n        mqtt2a.setKeepAlive((short) 60);\r\n        final BlockingConnection connection2a = mqtt2a.blockingConnection();\r\n        connection2a.connect();\r\n        connection2a.publish(TOPICNAME, payload.getBytes(), QoS.EXACTLY_ONCE, false);\r\n       \r\n        // Create connection3 with the same clientid \"durableUnsub\"\r\n        // and subscribe to the topic\r\n        MQTT mqtt3 = createMQTTConnection(clientId, false);\r\n        mqtt3.setKeepAlive((short) 60);\r\n        BlockingConnection connection3 = mqtt3.blockingConnection();\r\n        connection3.connect();\r\n        connection3.subscribe(topic);\r\n        message = connection3.receive(10, TimeUnit.SECONDS);\r\n\r\n        // Since we have unsubscribed before the publish, we should not receive\r\n        // any message (retain flag was also not set during publish)\r\n        assertNull(message);     \r\n    }\r\n{noformat}"
    ],
    [
        "AMQ-5426",
        "AMQ-5425",
        "ActiveMQMessageConsumer could run into NPE due to concurrent access to internal state ActiveMQMessageConsumer could run into NPE when the consumer is closing and a message arrived at the same time.\r\n\r\nHere is the stacktrace:\r\njava.lang.NullPointerException\r\nat org.apache.activemq.ActiveMQMessageConsumer.ackLater(ActiveMQMessageConsumer.java:979)\r\nat org.apache.activemq.ActiveMQMessageConsumer.afterMessageIsConsumed(ActiveMQMessageConsumer.java:929)\r\nat org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1323)\r\nat org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)\r\nat org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)\r\nat org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\nat org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\nat java.lang.Thread.run(Thread.java:745)",
        "ActiveMQMessageConsumer race condition ActiveMQMessageConsumer could run into NPE in some occasion.\r\n\r\nHere is the stacktrace:\r\njava.lang.NullPointerException\r\nat org.apache.activemq.ActiveMQMessageConsumer.ackLater(ActiveMQMessageConsumer.java:979)\r\nat org.apache.activemq.ActiveMQMessageConsumer.afterMessageIsConsumed(ActiveMQMessageConsumer.java:929)\r\nat org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1323)\r\nat org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)\r\nat org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)\r\nat org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)\r\nat org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\nat java.lang.Thread.run(Thread.java:745)"
    ],
    [
        "AMQ-5430",
        "AMQ-4684",
        "LevelDB on NFS creats .nfs files We are currently testing levelDB on NFS. \r\n\r\nleveldb creates .log files in leveldb directory to store actual message/data and this files rotates after 100MB size. These .log files gets deleted when all the messages are consumed from a particular file. \r\n\r\nIssue: After all the messages are consumed I can see that files are getting deleted but internally they are creating .nfs files of same size. \r\nwe have to restart the process to delete those .nfs files. \r\n\r\nFrom my understanding: It seems that the LevelDB store keeps the old logfiles open after they were deleted.\r\n\r\nBelow is the snapshot of files: \r\n\r\namqtest@kepler19.nyc:/u/amqtest/dev/leveldb> ls -a\r\n.nfs000000000082e7be0000fafe\r\n.nfs0000000000960d1e0000eb46\r\n.nfs00000000010332430000ea15\r\n.nfs0000000000614cf10000eaef\r\n.nfs0000000000960d1a0000ee3e\r\n.nfs00000000010332420000e52d\r\ndirty.index\r\nstore-version.txt\r\n.nfs000000000082e7c3000100c5\r\n.nfs0000000000960d1f0000f27f\r\n00000000724ff92c.index\r\nlock\r\n00000000724ff92c.log\r\nplist.index\r\n--------------------------------------------------------------------------------------\r\n\r\namqtest@kepler19.nyc:/u/amqtest/dev/leveldb> du -sh .nfs*\r\n107M .nfs0000000000614cf10000eaef\r\n101M .nfs000000000082e7be0000fafe\r\n101M .nfs000000000082e7c3000100c5\r\n108M .nfs0000000000960d1a0000ee3e\r\n106M .nfs0000000000960d1e0000eb46\r\n104M .nfs0000000000960d1f0000f27f\r\n101M .nfs00000000010332420000e52d\r\n101M .nfs00000000010332430000ea15\r\n\r\nThanks,\r\nAnuj",
        "LevelDB on NFS created .nfs files We are currently testing levelDB on NFS for failover. We did this test with only one ActiveMQ running.\r\n\r\nWe filled one queue with 10.000 messages via the admin console, and then purged the queue.\r\n\r\nAfter this, the LevelDB directory was filled with .nfsxxxxxx files. These seem to be old version of the LevelDB log file. They are removed when you stop the ActiceMQ process. You also appear to be able to remove the files manually.\r\n\r\nFrom what we can deduce, these files mean that they were still open for io, while they were removed from the filesystem. A local filesystem will cope with this in the background, on a NFS share however that can't be done, so these .nfs files are created.\r\n\r\nSo it seems that the LevelDB store keeps the old logfiles open after they were deleted."
    ],
    [
        "AMQ-5430",
        "AMQ-4810",
        "LevelDB on NFS creats .nfs files We are currently testing levelDB on NFS. \r\n\r\nleveldb creates .log files in leveldb directory to store actual message/data and this files rotates after 100MB size. These .log files gets deleted when all the messages are consumed from a particular file. \r\n\r\nIssue: After all the messages are consumed I can see that files are getting deleted but internally they are creating .nfs files of same size. \r\nwe have to restart the process to delete those .nfs files. \r\n\r\nFrom my understanding: It seems that the LevelDB store keeps the old logfiles open after they were deleted.\r\n\r\nBelow is the snapshot of files: \r\n\r\namqtest@kepler19.nyc:/u/amqtest/dev/leveldb> ls -a\r\n.nfs000000000082e7be0000fafe\r\n.nfs0000000000960d1e0000eb46\r\n.nfs00000000010332430000ea15\r\n.nfs0000000000614cf10000eaef\r\n.nfs0000000000960d1a0000ee3e\r\n.nfs00000000010332420000e52d\r\ndirty.index\r\nstore-version.txt\r\n.nfs000000000082e7c3000100c5\r\n.nfs0000000000960d1f0000f27f\r\n00000000724ff92c.index\r\nlock\r\n00000000724ff92c.log\r\nplist.index\r\n--------------------------------------------------------------------------------------\r\n\r\namqtest@kepler19.nyc:/u/amqtest/dev/leveldb> du -sh .nfs*\r\n107M .nfs0000000000614cf10000eaef\r\n101M .nfs000000000082e7be0000fafe\r\n101M .nfs000000000082e7c3000100c5\r\n108M .nfs0000000000960d1a0000ee3e\r\n106M .nfs0000000000960d1e0000eb46\r\n104M .nfs0000000000960d1f0000f27f\r\n101M .nfs00000000010332420000e52d\r\n101M .nfs00000000010332430000ea15\r\n\r\nThanks,\r\nAnuj",
        "LevelDB store does not seem to garbage collect its files Trying the LevelDB store on a recent ActiveMQ 5.9 snapshot, it seems that the broker does not remove useless files.\r\n\r\nI currently have a broker with no messages at all (all queues are empty and the TotalMessageCount is at 0) but plenty of LevelDB files:\r\n\r\n# du -ks leveldb\r\n1388380\tleveldb\r\n# find leveldb -type f | wc -l\r\n2419\r\n\r\nMaybe this is related to https://issues.apache.org/jira/browse/APLO-245?"
    ],
    [
        "AMQ-5430",
        "AMQ-5404",
        "LevelDB on NFS creats .nfs files We are currently testing levelDB on NFS. \r\n\r\nleveldb creates .log files in leveldb directory to store actual message/data and this files rotates after 100MB size. These .log files gets deleted when all the messages are consumed from a particular file. \r\n\r\nIssue: After all the messages are consumed I can see that files are getting deleted but internally they are creating .nfs files of same size. \r\nwe have to restart the process to delete those .nfs files. \r\n\r\nFrom my understanding: It seems that the LevelDB store keeps the old logfiles open after they were deleted.\r\n\r\nBelow is the snapshot of files: \r\n\r\namqtest@kepler19.nyc:/u/amqtest/dev/leveldb> ls -a\r\n.nfs000000000082e7be0000fafe\r\n.nfs0000000000960d1e0000eb46\r\n.nfs00000000010332430000ea15\r\n.nfs0000000000614cf10000eaef\r\n.nfs0000000000960d1a0000ee3e\r\n.nfs00000000010332420000e52d\r\ndirty.index\r\nstore-version.txt\r\n.nfs000000000082e7c3000100c5\r\n.nfs0000000000960d1f0000f27f\r\n00000000724ff92c.index\r\nlock\r\n00000000724ff92c.log\r\nplist.index\r\n--------------------------------------------------------------------------------------\r\n\r\namqtest@kepler19.nyc:/u/amqtest/dev/leveldb> du -sh .nfs*\r\n107M .nfs0000000000614cf10000eaef\r\n101M .nfs000000000082e7be0000fafe\r\n101M .nfs000000000082e7c3000100c5\r\n108M .nfs0000000000960d1a0000ee3e\r\n106M .nfs0000000000960d1e0000eb46\r\n104M .nfs0000000000960d1f0000f27f\r\n101M .nfs00000000010332420000e52d\r\n101M .nfs00000000010332430000ea15\r\n\r\nThanks,\r\nAnuj",
        "LevelDB files not being released after deletion During numerous test runs we've seen the file system fill up (df -k) and eventually ActiveMQ failing with a short write error.  When ActiveMQ falls over the file system is freed up to its original state. \r\n\r\nBefore ActiveMQ falls over we've tried to find the reason for the file system filling up by hunting through the directories but to no avail.  However when we do a lsof -a +L1 we can see numerous deleted LevelDB log and index files.   \r\n\r\nDoes anybody know why ActiveMQ/LevelDB is not releasing these files for full clear up by the OS. \r\n\r\nThis is on \r\nRed Hat Linux 6.4 \r\nActiveMQ 5.10 \r\nJava 1.7.0_45 "
    ],
    [
        "AMQ-5473",
        "AMQ-5428",
        "Race condition caused by Linkstealing might make durable subs inactive Link Stealing creates a new connection and disconnects the old connection. These operations are done concurrently.\r\nNew connection triggers addConsumer() for active subscriptions and old connection stop causes removeConsumer() for the same.\r\n\r\nProblems:\r\n * addConsumer() would throw exception that the sub is already active (if remove did not happen before)\r\n * even if we go past the exception, it will not set the right (new) connection context and consumer info the subs\r\n * removeConsumer() may remove subcription even if it had different connection context (created by linkstealing)\r\n\r\n\r\nPatch attached.",
        "Durable Subscriptions are not being setup while link stealing is happening Intermittently, while an mqtt client is reconnecting, the durable subscriptions are not setup as error is thrown mentioning subscription is still active.\r\n\r\nthe same can be reproduced by adding sleep into stopAsync method.\r\n{code:title=ManagedTransportConnection.java|borderStyle=solid}\r\n    @Override\r\n    public void stopAsync() {\r\n        if (!isStopping()) {\r\n            synchronized (this) {\r\n                unregisterMBean(byClientIdName);\r\n                unregisterMBean(byAddressName);\r\n                byClientIdName = null;\r\n                byAddressName = null;\r\n            }\r\n        }\r\n        try {\r\n            Thread.sleep(4000);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        super.stopAsync();\r\n    }\r\n{code}\r\n\r\nstacktrace:\r\n\r\n2014-11-10 08:07:06,632 | WARN  | Error subscribing to  TopicAAA | org.apache.activemq.transport.mqtt.strategy.AbstractMQTTSubscriptionStrategy | ActiveMQ NIO Worker 2\r\njavax.jms.JMSException: Durable consumer is in use for client: Producer and subscriptionName: EXACTLY_ONCE:TopicAAA\r\n\tat org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:123)[activemq-broker-5.11-SNAPSHOT.jar:5.11-SNAPSHOT]\r\n\tat org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:427)[activemq-broker-5.11-SNAPSHOT.jar:5.11-SNAPSHOT]\r\n\tat org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:244)[activemq-broker-5.11-SNAPSHOT.jar:5.11-SNAPSHOT]\r\n\tat org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)[activemq-broker-5.11-SNAPSHOT.jar:5.11-SNAPSHOT]\r\n\tat org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:104)[activemq-broker-5.11-SNAPSHOT.jar:5.11-SNAPSHOT]\r\n\tat org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)[activemq-broker-5.11-SNAPSHOT.jar:5.11-SNAPSHOT]\r\n\tat org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:102)[activemq-broker-5.11-SNAPSHOT.jar:5.11-SNAPSHOT]\r\n"
    ],
    [
        "AMQ-5474",
        "AMQ-4731",
        "Broken ConsumerIdKey comparator implementation One of the changes Gary made under the second batch of changes for AMQ-2327 (https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=6c5732bc) involved creating a comparator for AdvisoryBroker.ConsumerIdKey.  This comparator is broken in one way, and inconsistent with ConsumerIdKey.equals() and .hashcode() in two others.  I'm still using 5.8.0 so I can't say whether these problems cause the fix for AMQ-2327 to not work in all cases, but that would be my concern.\r\n\r\nMost significantly, if a and b have the same delegate but a's creationTime is before b's, then comparator.compareTo(a, b) == -1 but comparator.compareTo(b, a) == 0.  This is flat-out broken, and will probably cause incorrect sorting in the ConcurrentSkipListMap that was put in place to fix AMQ-2327.\r\n\r\nNext, if the creationTimes are equal, the delegates are compared.  But this comparison is done via object equality (==) while ConsumerIdKey.equals() calls the delegate's equals() method.  Presumably only one of these approaches is the right one and it should be used both places; I'm guessing equals() is the way to go, though I could be wrong.\r\n\r\nFinally, the comparator is not consistent with equals because there are objects for which a.equals(b) but comparator.compareTo(a, b) != 0.  This might be OK (consistency with equals isn't required, though it will result in behavior that's consistent but unexpected), but I'd encourage another look at both the comparator and ConsumerIdKey.equals() to make sure that that's really the intent.  In particular, I'm concerned about whether consumers.remove(new ConsumerIdKey(info.getConsumerId())) will work properly if the comparator isn't consistent with equals, since for a SortedMap we're going to be using compareTo() and it doesn't consider two keys equal if they have the same delegate but different creationTimes.  (That's the \"consistent but unexpected\" behavior I referenced earlier.)  So the current behavior *might* be acceptable on this point, but I'm very skeptical and I'd want a unit test that proves that the put(), get(), and remove() operations really work as a developer would expect before accepting that it's valid for this comparator to be inconsistent with equals.",
        "TempQueueMemoryTest started failing recently. TempQueueMemoryTest test is failing.  Fails after changes made for AMQ-2327 because of the way the ConcurrentSkipListMap does its sorting and searching and the implementation of ConsumerIdKey.  The key comparison depends on creation time but later removals will always have a later creation time which causes the search for the element to fails most of the time since it will compare greater than even to a key with the same consumer Id.  Result is that items are left in the consumers map causing a memory leak."
    ],
    [
        "AMQ-5474",
        "AMQ-4906",
        "Broken ConsumerIdKey comparator implementation One of the changes Gary made under the second batch of changes for AMQ-2327 (https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=6c5732bc) involved creating a comparator for AdvisoryBroker.ConsumerIdKey.  This comparator is broken in one way, and inconsistent with ConsumerIdKey.equals() and .hashcode() in two others.  I'm still using 5.8.0 so I can't say whether these problems cause the fix for AMQ-2327 to not work in all cases, but that would be my concern.\r\n\r\nMost significantly, if a and b have the same delegate but a's creationTime is before b's, then comparator.compareTo(a, b) == -1 but comparator.compareTo(b, a) == 0.  This is flat-out broken, and will probably cause incorrect sorting in the ConcurrentSkipListMap that was put in place to fix AMQ-2327.\r\n\r\nNext, if the creationTimes are equal, the delegates are compared.  But this comparison is done via object equality (==) while ConsumerIdKey.equals() calls the delegate's equals() method.  Presumably only one of these approaches is the right one and it should be used both places; I'm guessing equals() is the way to go, though I could be wrong.\r\n\r\nFinally, the comparator is not consistent with equals because there are objects for which a.equals(b) but comparator.compareTo(a, b) != 0.  This might be OK (consistency with equals isn't required, though it will result in behavior that's consistent but unexpected), but I'd encourage another look at both the comparator and ConsumerIdKey.equals() to make sure that that's really the intent.  In particular, I'm concerned about whether consumers.remove(new ConsumerIdKey(info.getConsumerId())) will work properly if the comparator isn't consistent with equals, since for a SortedMap we're going to be using compareTo() and it doesn't consider two keys equal if they have the same delegate but different creationTimes.  (That's the \"consistent but unexpected\" behavior I referenced earlier.)  So the current behavior *might* be acceptable on this point, but I'm very skeptical and I'd want a unit test that proves that the put(), get(), and remove() operations really work as a developer would expect before accepting that it's valid for this comparator to be inconsistent with equals.",
        "advisory producerCount = 0 is not received on temporary queue i notice i never receive producer advisory messages (ActiveMQ.Advisory.Producer.Queue .[...]) with producerCount=0 when the client message producers on temporary queue are closed. i do receive producerCount > 0. \r\n\r\nHowever, the consumerCount (from ActiveMQ.Advisory.Consumer.Queue.[...]) appears to work as expected.\r\n\r\nFrom looking into org.apache.activemq.advisory.AdvisoryBroker.java\r\n{code}\r\n@Override\r\n    public void removeProducer(ConnectionContext context, ProducerInfo info) throws Exception {\r\n        super.removeProducer(context, info);\r\n\r\n        // Don't advise advisory topics.\r\n        ActiveMQDestination dest = info.getDestination();\r\n        if (info.getDestination() != null && !AdvisorySupport.isAdvisoryTopic(dest)) {\r\n            ActiveMQTopic topic = AdvisorySupport.getProducerAdvisoryTopic(dest);\r\n            producers.remove(info.getProducerId());\r\n            if (!dest.isTemporary() || destinations.contains(dest)) { // PLEASE NOTE: <== could this actually be destinations.containsKey(dest)\r\n                fireProducerAdvisory(context, dest,topic, info.createRemoveCommand());\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\nas reference, the \"working\" removeConsumer method:\r\n{code}\r\n@Override\r\n    public void removeConsumer(ConnectionContext context, ConsumerInfo info) throws Exception {\r\n        super.removeConsumer(context, info);\r\n\r\n        // Don't advise advisory topics.\r\n        ActiveMQDestination dest = info.getDestination();\r\n        if (!AdvisorySupport.isAdvisoryTopic(dest)) {\r\n            ActiveMQTopic topic = AdvisorySupport.getConsumerAdvisoryTopic(dest);\r\n            consumers.remove(info);\r\n            if (!dest.isTemporary() || destinations.containsKey(dest)) {\r\n                fireConsumerAdvisory(context,dest, topic, info.createRemoveCommand());\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\nPlease note the destinations.containsKey(dest) vs destinations.contains(dest) (for concurrentHashMaps this is identical to containsValue()). I'm assuming the logic is to make sure the producer destination do exist in both cases\r\n\r\nI tested this with 5.7.0. the code is similar in 5.9.0\r\n\r\n"
    ],
    [
        "AMQ-5474",
        "AMQ-5337",
        "Broken ConsumerIdKey comparator implementation One of the changes Gary made under the second batch of changes for AMQ-2327 (https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=6c5732bc) involved creating a comparator for AdvisoryBroker.ConsumerIdKey.  This comparator is broken in one way, and inconsistent with ConsumerIdKey.equals() and .hashcode() in two others.  I'm still using 5.8.0 so I can't say whether these problems cause the fix for AMQ-2327 to not work in all cases, but that would be my concern.\r\n\r\nMost significantly, if a and b have the same delegate but a's creationTime is before b's, then comparator.compareTo(a, b) == -1 but comparator.compareTo(b, a) == 0.  This is flat-out broken, and will probably cause incorrect sorting in the ConcurrentSkipListMap that was put in place to fix AMQ-2327.\r\n\r\nNext, if the creationTimes are equal, the delegates are compared.  But this comparison is done via object equality (==) while ConsumerIdKey.equals() calls the delegate's equals() method.  Presumably only one of these approaches is the right one and it should be used both places; I'm guessing equals() is the way to go, though I could be wrong.\r\n\r\nFinally, the comparator is not consistent with equals because there are objects for which a.equals(b) but comparator.compareTo(a, b) != 0.  This might be OK (consistency with equals isn't required, though it will result in behavior that's consistent but unexpected), but I'd encourage another look at both the comparator and ConsumerIdKey.equals() to make sure that that's really the intent.  In particular, I'm concerned about whether consumers.remove(new ConsumerIdKey(info.getConsumerId())) will work properly if the comparator isn't consistent with equals, since for a SortedMap we're going to be using compareTo() and it doesn't consider two keys equal if they have the same delegate but different creationTimes.  (That's the \"consistent but unexpected\" behavior I referenced earlier.)  So the current behavior *might* be acceptable on this point, but I'm very skeptical and I'd want a unit test that proves that the put(), get(), and remove() operations really work as a developer would expect before accepting that it's valid for this comparator to be inconsistent with equals.",
        "Bug in ConcurrentLinkedQueue leads to excessive CPU-consumption by ActiveMQ process The AdvisoryBroker use a ConcurrentLinkedQueue to store consumers.\r\nThis standard JDK class has a bug which can lead to an OutOfMemory : https://bugs.openjdk.java.net/browse/JDK-8054446\r\n\r\nIn our environment we observe that ActiveMQ process cpu usage is continually climbing and that the ConcurrentLinkedQueue in the AdvisoryBroker grows indefinitely.\r\n\r\nThe ConcurrentLinkedQueue is a non-blocking concurrent FIFO datastructure provided by the core Java Development Kit API starting from Java 5. \r\nAdvisoryBroker use offer() method to add a new consumer in the ConcurrentLinkedQueue, and remove() method to remove it.\r\nWhen the consumer removed is the last element of the queue, the Consumer object is nulled but a node remain in the queue. The null node is then never garbage collected. This is true only for the last element of the queue. Any other element is removed safely.\r\n\r\nRelated bug : https://issues.apache.org/jira/browse/AMQ-4853\r\n"
    ],
    [
        "AMQ-5490",
        "AMQ-5475",
        "broker does not write out supported version header If a pre 1.0 client attempt to connect, the broker simply closes the socket on reading the protocol-header sent by the client. This prevents the client from realising it is a mismatched version (and possibly trying with 1.0)\r\n\r\nFrom the spec (2.2):\r\n\r\n{noformat}\r\n    If the requested protocol version is not supported, the server MUST\r\n    send a protocol header with a supported protocol version and then\r\n    close the socket.\r\n\r\nand\r\n\r\n    If the server cannot parse the protocol header, the server MUST send\r\n    a valid protocol header with a supported protocol version and then \r\n    close the socket.\r\n{noformat}\r\n\r\n",
        "AMQP transport does not send correct response to unsupported clients Section 2.2 of the AMQP 1.0 spec covers protocol negotiation and states that when a client connects and send an AMQP header with an unsupported version the broker should send back an AMQP header with the version supported before closing the socket.  This also applied if the header cannot be parsed, such as a HTTP client etc connecting to the AMQP transport port.  \r\n\r\nWe currently just close the socket which does not give the connecting client any insight into why the connect failed and allow it to try again with the correct protocol if supported. "
    ],
    [
        "AMQ-5507",
        "AMQ-5016",
        "\"Duplicate dispatch on connection\" with more than 2^31 messages A few times over the last few years the busiest queue in our system would suddenly start spewing these \"Duplicate dispatch on connection\" warning messages into the log and 0 messages would be processed. Googling around the only references I could find mentioned \"optimize acknowledge\" may be at fault. We stopped using that feature and I though perhaps this issue was gone but it popped up again today.\r\n\r\nThe log messages look like this:\r\n\r\n{noformat}\r\n2015-01-05 20:25:21,310 [ActiveMQ Session Task-2341         ] WARN  apache.activemq.ActiveMQMessageConsumer - Duplicate dispatch on connection: ID:perf4-flexapp-43114-1419911988672-9:1 to consumer: ID:perf4-flexapp-43114-1419911988672-9:1:1:1, ignoring (auto acking) duplicate: MessageDispatch {commandId = 0, responseRequired = false, consumerId = ID:perf4-flexapp-43114-1419911988672-9:1:1:1, destination = queue://*********, message = ActiveMQBytesMessage {commandId = -497935582, responseRequired = false, messageId = ID:perf4-nc-49600-1419436870976-1:8:1:1:3797031711, originalDestination = null, originalTransactionId = null, producerId = ID:perf4-nc-49600-1419436870976-1:8:1:1, destination = queue://*********, transactionId = null, expiration = 0, timestamp = 1420507504378, arrival = 0, brokerInTime = 1420507504527, brokerOutTime = 1420507521253, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@477f9261, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null }, redeliveryCounter = 0}\r\n{noformat}\r\n\r\nI randomly noticed that the \"commandId\" was negative. I looked at the messageId and sure enough it is very large, in the 2^31 range. I checked all my field reports for this bug and in all cases the id was just over 2^31. I dug into the activemq code and found the issue was the BitArrayBin class doesn't handle values of that size correctly. I was about to post that as a critical bug but found it had already been reported and fixed for 5.11.0 in another context. AMQ-5016\r\n\r\nIn case other people have a system stable enough to generate 2^31 messages from a single producer they should know they can add the setting \"?checkForDuplicates=false\" at the queue or connection level. Are there any other mitigation strategies I may not know?",
        "BitArrayBin doesn't work well with index larger than Integer.MAX_VALUE In BitArrayBin class, the index's unit type is long. It also has a variable called firstIndex, which store the index where the window starts. And that firstindex's unit is int. If the index is bigger than Integer.MAX_VALUE, setBit() and getBit() starts to return bad value.\r\n\r\nThe defect causes activemq client to perform badly when receiving message that sequence id is bigger than max interger. It spends most of the time to shift window, and also blocks other consumer threads. Below is the jstack log that shows the problem.\r\n{code}\r\n\"ActiveMQ Session Task-869879\" prio=10 tid=0x00007f412d6ee000 nid=0x3cbe runnable [0x00007f405b7b6000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.LinkedList.linkLast(LinkedList.java:140)\r\n        at java.util.LinkedList.add(LinkedList.java:336)\r\n        at org.apache.activemq.util.BitArrayBin.getBitArray(BitArrayBin.java:123)\r\n        at org.apache.activemq.util.BitArrayBin.setBit(BitArrayBin.java:59)\r\n        at org.apache.activemq.ActiveMQMessage AuditNoSync.isDuplicate(ActiveMQMessageAuditNoSyn c.java:160)\r\n        at org.apache.activemq.ActiveMQMessageAudit.isDuplicate(ActiveMQMessageAudit.java:59)\r\n        - locked <0x00007f46a0138ab0> (a org.apache.activemq.ActiveMQMessageAudit)\r\n        at org.apache.activemq.ActiveMQMessage AuditNoSync.isDuplicate(ActiveMQMessageAuditNoSyn c.java:140)\r\n        at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:52)\r\n        - locked <0x00007f4881e6b968> (a org.apache.activemq.ConnectionAudit)\r\n        at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2291)\r\n        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1223)\r\n        - locked <0x00007f45db222fb8> (a java.lang.Object)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)\r\n        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)\r\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)\r\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\r\n        at java.lang.Thread.run(Thread.java:722)\r\n{code}\r\n"
    ],
    [
        "AMQ-5517",
        "AMQ-4940",
        "Support for Jetty 9 With jetty 8 and jetty 7 going EOL and no longer receiving security updates, we need to support running with Jetty 9 as an option.",
        "Update the version of Jetty used When trying the latest 5.10 snapshot, I was surprised to see a quite old version of Jetty:\r\n\r\n2013-12-16 14:41:10,665 [WrapperSimpleAppMain] INFO Server - jetty-7.6.9.v20130131\r\n\r\nWhy is ActiveMQ using Jetty 7 instead of Jetty 8 or 9?\r\n\r\nIn any case, could ActiveMQ use a more recent version of Jetty like 7.6.14.v20131031 (if it must stick to Jetty 7)?"
    ],
    [
        "AMQ-5564",
        "AMQ-5555",
        "activemq-pool - Either adds new mbeans or add/remove pair of mbean for each producer in use On the AMQ dev mailing list we have talked about a new issue.\r\nhttp://activemq.2283324.n4.nabble.com/VOTE-Apache-ActiveMQ-5-11-0-rc3-tp4690743.html\r\n\r\nI found out that using the camel-example-management, which has an embedded AMQ broker and using Camel with the VM transport to produce/consume messages, then there is mbean issues.\r\n\r\nIt works fine in AMQ 5.10.0. But is wrong in AMQ 5.10.1 and 5.11.0.\r\n\r\nSee the attached screenshots.\r\n\r\nNotice how the mbean tree for dynamic producers keeps growing for 5.10.1 and 5.11.0.",
        "Memory leak around ProducerView/State and AnnotatedMBeans The summary may be misleading, as I haven't quite figured out where the leaks are originating.\r\n\r\nI'll attach screenshots from JVisualVM that show the issue.\r\n"
    ],
    [
        "AMQ-5572",
        "AMQ-3284",
        "Regression WebSockets and truncated body A similar issue[AMQ-3284] appears already as fixed in 5.6 ,has this regressed in 5.11 ?\r\n\r\n\r\nIn WebSocket transport, StompSocket class calls StompFrame.toString() instead StompFrame.format(). Because of this, some frames can be truncated.\r\n\r\nI have same problem as  https://issues.apache.org/jira/browse/AMQ-3284\r\nI use samples/websocket example ,for connection to the apache-activemq-5.11.0 or apollo(1.7.1) broker,and sending  message to the queue using websockets. \r\nOn the other end is a cpp(3.8.3) client consumer listening on that queue.(from examples/stomp/cpp) \r\nMy cpp consumer is able to receive the message but the Body of message is NilContent i.e  truncated completely \r\nThis jira has been marked as fixed in 5.6,is it possible it has regressed in latest release or apollo 1.7.1? \r\n\r\nSTOMP LOGS : \r\n\r\n2015-02-09 03:07:00,575 | TRACE | received frame: StompFrame(SEND,List((destination,/topic/test), (content-length,41)),BufferContent(ascii: this is test message over websocket stomp),true,List()) | \r\n2015-02-09 03:07:00,575 | DEBUG | producer route attaching to consumer. | \r\n2015-02-09 03:07:00,575 | DEBUG | producer route attaching to consumer. | \r\n2015-02-09 03:07:00,575 | DEBUG | producer route attaching to consumer. | \r\n2015-02-09 03:07:00,576 | TRACE | sending frame: StompFrame(MESSAGE,List((destination,/topic/test), (content-length,41)),BufferContent(ascii: this is test message over websocket stomp),true,List((subscription,ID:mylpadeci10-57515-1423451149856-0:0:1:1), (message-id,hw-1e2))) | \r\n2015-02-09 03:07:00,576 | TRACE | sending frame: StompFrame(MESSAGE,List((destination,/topic/test), (content-length,41)),BufferContent(ascii: this is test message over websocket stomp),true,List((subscription,sub-0), (message-id,hw-1e2))) | \r\n2015-02-09 03:07:00,576 | TRACE | received frame: StompFrame(ACK,List((message-id,hw-1e2)),NilContent,true,List()) | \r\n\r\n\r\nP.S \r\nI have also tried the same with apache-activemq-5.11.0 and verified that the issue exists there as well\r\n ",
        "WebSockets and truncated body In WebSocket transport, StompSocket class calls StompFrame.toString() instead StompFrame.format(). Because of this, some frames can be truncated."
    ],
    [
        "AMQ-5572",
        "AMQ-3794",
        "Regression WebSockets and truncated body A similar issue[AMQ-3284] appears already as fixed in 5.6 ,has this regressed in 5.11 ?\r\n\r\n\r\nIn WebSocket transport, StompSocket class calls StompFrame.toString() instead StompFrame.format(). Because of this, some frames can be truncated.\r\n\r\nI have same problem as  https://issues.apache.org/jira/browse/AMQ-3284\r\nI use samples/websocket example ,for connection to the apache-activemq-5.11.0 or apollo(1.7.1) broker,and sending  message to the queue using websockets. \r\nOn the other end is a cpp(3.8.3) client consumer listening on that queue.(from examples/stomp/cpp) \r\nMy cpp consumer is able to receive the message but the Body of message is NilContent i.e  truncated completely \r\nThis jira has been marked as fixed in 5.6,is it possible it has regressed in latest release or apollo 1.7.1? \r\n\r\nSTOMP LOGS : \r\n\r\n2015-02-09 03:07:00,575 | TRACE | received frame: StompFrame(SEND,List((destination,/topic/test), (content-length,41)),BufferContent(ascii: this is test message over websocket stomp),true,List()) | \r\n2015-02-09 03:07:00,575 | DEBUG | producer route attaching to consumer. | \r\n2015-02-09 03:07:00,575 | DEBUG | producer route attaching to consumer. | \r\n2015-02-09 03:07:00,575 | DEBUG | producer route attaching to consumer. | \r\n2015-02-09 03:07:00,576 | TRACE | sending frame: StompFrame(MESSAGE,List((destination,/topic/test), (content-length,41)),BufferContent(ascii: this is test message over websocket stomp),true,List((subscription,ID:mylpadeci10-57515-1423451149856-0:0:1:1), (message-id,hw-1e2))) | \r\n2015-02-09 03:07:00,576 | TRACE | sending frame: StompFrame(MESSAGE,List((destination,/topic/test), (content-length,41)),BufferContent(ascii: this is test message over websocket stomp),true,List((subscription,sub-0), (message-id,hw-1e2))) | \r\n2015-02-09 03:07:00,576 | TRACE | received frame: StompFrame(ACK,List((message-id,hw-1e2)),NilContent,true,List()) | \r\n\r\n\r\nP.S \r\nI have also tried the same with apache-activemq-5.11.0 and verified that the issue exists there as well\r\n ",
        "The body of StompFrame is truncated to 64 chars The method \r\n{code:title=org.apache.activemq.transport.ws.StompSocket.java}\r\npublic void sendToStomp(StompFrame command) throws IOException {\r\n   outbound.sendMessage(WebSocket.SENTINEL_FRAME, command.toString());\r\n}\r\n{code}\r\n\r\n calls {{toString()}} method of the {{StompFrame}} instance instead of the {{format()}} method. The message body is truncated by the {{toString()}} to 64 chars."
    ],
    [
        "AMQ-5685",
        "AMQ-5252",
        "Purge does not work when simple authorisation plugin is used When clicking purge from the web console the page refreshes without purging the queue.  It appears that the Destinations are checked to be an instanceof Queue before trying the purge call, however the authorisation plugin wraps destinations with destinationfilters and so no purge can happen.",
        "Purge through webconsole fails if authorizationPlugin is used Upgrading from a 5.5.1 broker to 5.10. \r\nI've managed to work around the issue by making some changes to org.apache.activemq.web.LocalBrokerFacade, but unsure if this is the root issue or a band-aid fix. \r\n\r\n{code}\r\nSet destinations = getManagedBroker().getQueueRegion().getDestinations(destination); \r\n{code}\r\n\r\nreturns a AuthorizationDestinationFilter when the code is expecting a org.apache.activemq.broker.region.Queue - calling getNext() on the AuthorizationDestinationFilter returns the expected Queue. \r\n            \r\n\r\nOld code:\r\n{code}\r\n public void purgeQueue(ActiveMQDestination destination) throws Exception {\t\r\n        Set destinations = getManagedBroker().getQueueRegion().getDestinations(destination);\r\n        for (Iterator i = destinations.iterator(); i.hasNext();) \r\n        {        \t\r\n            Destination dest = (Destination) i.next();\r\n            if (dest instanceof Queue) {\r\n                Queue regionQueue = (Queue) dest;\r\n                regionQueue.purge();\r\n           }\r\n        }\r\n    }\r\n{code}\r\nnew:\r\n\r\n{code}\r\n public void purgeQueue(ActiveMQDestination destination) throws Exception {\t\r\n        Set destinations = getManagedBroker().getQueueRegion().getDestinations(destination);\r\n        for (Iterator i = destinations.iterator(); i.hasNext();) \r\n        {        \t\r\n            Destination dest = (Destination) i.next();\r\n            if (dest instanceof Queue) {\r\n                Queue regionQueue = (Queue) dest;\r\n                regionQueue.purge();\r\n            }\r\n            else if(dest instanceof  AuthorizationDestinationFilter)\r\n            {\r\n            \tAuthorizationDestinationFilter adf = (AuthorizationDestinationFilter)dest;\r\n            \tif (adf.getNext() instanceof Queue) \r\n            \t{\r\n            \t\tQueue regionQueue = (Queue)adf.getNext();\r\n                    regionQueue.purge();  \r\n            \t}\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\n\r\nAttached is the activemq.xml file we're using to test this - creating a message on the webconsole and then attempting to purge it will fail unless either the code change above is made, or the <plugins> section of activemq.xml is commented out. "
    ],
    [
        "AMQ-5701",
        "AMQ-5700",
        "Invalid TLS Padding data Error         <transportConnectors>\r\n            \r\n            <transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\r\n            <transportConnector name=\"ssl\" uri=\"ssl://0.0.0.0:8883\"/>\r\n        </transportConnectors>\r\n\r\n\r\nTried creating certificates as per the following link:\r\n\r\nhttps://github.com/rethab/php-stomp-cert-example/blob/master/README.md",
        "Invalid TLS Padding data Error         <transportConnectors>\r\n            \r\n            <transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\r\n            <transportConnector name=\"ssl\" uri=\"ssl://0.0.0.0:8883\"/>\r\n        </transportConnectors>\r\n\r\n\r\nTried creating certificates as per the following link:\r\n\r\nhttps://github.com/rethab/php-stomp-cert-example/blob/master/README.md"
    ],
    [
        "AMQ-5786",
        "AMQ-3098",
        "ActiveMQ failed to start with KahaDB reporting corrupt journal records and throwing NegativeArraySizeException ActiveMQ failed to start up, with the following information:\r\n\r\n{noformat}\r\n2015-05-20 14:23:21,709 | INFO  | apache.activemq.server]) | Journal                          | tore.kahadb.disk.journal.Journal  219 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in 'activemq/kahadb/db-1.log' between offsets: 5504795..5505130\r\n2015-05-20 14:23:21,725 | INFO  | apache.activemq.server]) | Journal                          | tore.kahadb.disk.journal.Journal  219 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in 'activemq/kahadb/db-1.log' between offsets: 5611475..5612818\r\n2015-05-20 14:23:21,749 | INFO  | apache.activemq.server]) | Journal                          | tore.kahadb.disk.journal.Journal  219 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in 'activemq/kahadb/db-1.log' between offsets: 6139835..6140254\r\n2015-05-20 14:23:21,756 | INFO  | apache.activemq.server]) | Journal                          | tore.kahadb.disk.journal.Journal  219 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in 'activemq/kahadb/db-1.log' between offsets: 6246179..6247270\r\n2015-05-20 14:23:21,765 | INFO  | apache.activemq.server]) | Journal                          | tore.kahadb.disk.journal.Journal  219 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in 'activemq/kahadb/db-1.log' between offsets: 6512519..6520426\r\n2015-05-20 14:23:21,789 | INFO  | apache.activemq.server]) | Journal                          | tore.kahadb.disk.journal.Journal  219 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in 'activemq/kahadb/db-1.log' between offsets: 7606018..7627848\r\n2015-05-20 14:23:21,794 | INFO  | apache.activemq.server]) | Journal                          | tore.kahadb.disk.journal.Journal  219 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in 'activemq/kahadb/db-1.log' between offsets: 7630473..7650409\r\n2015-05-20 14:23:21,796 | INFO  | apache.activemq.server]) | Journal                          | tore.kahadb.disk.journal.Journal  219 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Corrupt journal records found in 'activemq/kahadb/db-1.log' between offsets: 7650488..7703243\r\n2015-05-20 14:23:22,065 | INFO  | apache.activemq.server]) | MessageDatabase                  | .kahadb.MessageDatabase$Metadata  168 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | KahaDB is version 5\r\n2015-05-20 14:23:22,188 | INFO  | apache.activemq.server]) | MessageDatabase                  | emq.store.kahadb.MessageDatabase  603 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Recovering from the journal ...\r\n2015-05-20 14:23:22,188 | ERROR | apache.activemq.server]) | BrokerService                    | he.activemq.broker.BrokerService  609 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Failed to start Apache ActiveMQ ([broker-amq, null], java.io.IOException: Invalid location: 1:6516763, : java.lang.NegativeArraySizeException)\r\n2015-05-20 14:23:22,189 | INFO  | apache.activemq.server]) | BrokerService                    | he.activemq.broker.BrokerService  758 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Apache ActiveMQ 5.11.1 (broker-amq, null) is shutting down\r\n2015-05-20 14:23:22,194 | INFO  | apache.activemq.server]) | TransportConnector               | tivemq.broker.TransportConnector  291 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Connector openwire stopped\r\n2015-05-20 14:23:22,372 | INFO  | apache.activemq.server]) | JobSchedulerStoreImpl            | .scheduler.JobSchedulerStoreImpl  259 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | JobSchedulerStore: activemq/broker-amq/scheduler stopped.\r\n2015-05-20 14:23:22,372 | INFO  | apache.activemq.server]) | PListStoreImpl                   | tore.kahadb.plist.PListStoreImpl  356 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | PListStore:[/integrator/int1/proc/broker-amq/karaf-std-0.2-440/activemq/broker-amq/tmp_storage] stopped\r\n2015-05-20 14:23:22,372 | INFO  | apache.activemq.server]) | KahaDBStore                      | ctivemq.store.kahadb.KahaDBStore  245 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Stopping async queue tasks\r\n2015-05-20 14:23:22,372 | INFO  | apache.activemq.server]) | KahaDBStore                      | ctivemq.store.kahadb.KahaDBStore  259 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Stopping async topic tasks\r\n2015-05-20 14:23:22,373 | INFO  | apache.activemq.server]) | KahaDBStore                      | ctivemq.store.kahadb.KahaDBStore  287 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Stopped KahaDB\r\n2015-05-20 14:23:22,664 | INFO  | apache.activemq.server]) | BrokerService                    | he.activemq.broker.BrokerService  819 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Apache ActiveMQ 5.11.1 (broker-amq, null) uptime 1.245 seconds\r\n2015-05-20 14:23:22,664 | INFO  | apache.activemq.server]) | BrokerService                    | he.activemq.broker.BrokerService  821 | 105 - org.apache.activemq.activemq-osgi - 5.11.1 | Apache ActiveMQ 5.11.1 (broker-amq, null) is shutdown\r\n2015-05-20 14:23:22,676 | ERROR | apache.activemq.server]) | configadmin                      | ?                                   ? | 6 - org.apache.felix.configadmin - 1.8.0 | [org.osgi.service.cm.ManagedServiceFactory, id=673, bundle=105/mvn:org.apache.activemq/activemq-osgi/5.11.1]: Updating configuration org.apache.activemq.server.02ee5a2d-fb5b-48ce-b4e1-93ed72adba19 caused a problem: Cannot start the broker\r\norg.osgi.service.cm.ConfigurationException: null : Cannot start the broker\r\n        at org.apache.activemq.osgi.ActiveMQServiceFactory.updated(ActiveMQServiceFactory.java:120)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at Proxyfc1340e4_63f4_474d_995e_cdb9ac0c71b9.updated(Unknown Source)[:]\r\n        at org.apache.felix.cm.impl.helper.ManagedServiceFactoryTracker.provideConfiguration(ManagedServiceFactoryTracker.java:88)[6:org.apache.felix.configadmin:1.8.0]\r\n        at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceFactoryUpdate.provide(ConfigurationManager.java:1605)[6:org.apache.felix.configadmin:1.8.0]\r\n        at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceFactoryUpdate.run(ConfigurationManager.java:1548)[6:org.apache.felix.configadmin:1.8.0]\r\n        at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:103)[6:org.apache.felix.configadmin:1.8.0]\r\n        at java.lang.Thread.run(Thread.java:745)[:1.8.0_45]\r\nCaused by: java.io.IOException: Invalid location: 1:6516763, : java.lang.NegativeArraySizeException\r\n        at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:92)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:619)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:1013)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:605)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:399)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:417)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:261)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:206)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:223)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:651)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:640)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:605)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        at org.apache.activemq.osgi.ActiveMQServiceFactory.updated(ActiveMQServiceFactory.java:116)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        ... 6 more\r\nCaused by: java.lang.NegativeArraySizeException\r\n        at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:87)[105:org.apache.activemq.activemq-osgi:5.11.1]\r\n        ... 20 more\r\n{noformat}\r\n\r\n<kahaDB> is configured with checkForCorruptJournalFiles=\"true\".\r\n",
        "Failed to page in more queue messages - Cannot consume messages With the error messages below, Consumers cannot consume any message until clearing the data folder then restart ActiveMQ, assuming old messages are lost.\r\n\r\nERROR | Failed to fill batch\r\njava.lang.RuntimeException: java.io.IOException: Invalid location: 1711:34233, : java.lang.NegativeArraySizeException\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)\r\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)\r\n        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)\r\n        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)\r\n        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)\r\n        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)\r\n        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)\r\nCaused by: java.io.IOException: Invalid location: 1711:34233, : java.lang.NegativeArraySizeException\r\n        at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:94)\r\n        at org.apache.kahadb.journal.Journal.read(Journal.java:596)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)\r\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)\r\n        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)\r\n        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)\r\n        ... 7 more\r\nERROR | Failed to page in more queue messages\r\njava.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Invalid location: 1711:34233, : java.lang.NegativeArraySizeException\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)\r\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)\r\n        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1678)\r\n        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1898)\r\n        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1425)\r\n        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)\r\n        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)\r\nCaused by: java.lang.RuntimeException: java.io.IOException: Invalid location: 1711:34233, : java.lang.NegativeArraySizeException\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:265)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)\r\n        ... 6 more\r\nCaused by: java.io.IOException: Invalid location: 1711:34233, : java.lang.NegativeArraySizeException\r\n        at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:94)\r\n        at org.apache.kahadb.journal.Journal.read(Journal.java:596)\r\n        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:956)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:494)\r\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)\r\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)\r\n        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)\r\n        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)\r\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:262)\r\n        ... 7 more"
    ],
    [
        "AMQ-5818",
        "AMQ-5272",
        "PWC6197: An error occurred at line: 20 in the jsp file When i try to watch a message in the browser api \r\n http://localhost:8161/admin/browse.jsp?JMSDestination=myQueue.out\r\nA message occurs: \r\nException occurred while processing this request, check the log for more information!\r\nAnd in the console log i see following message:\r\n\r\nreadPool.java:543)\r\njvm 1    |      at java.lang.Thread.run(Unknown Source)\r\njvm 1    | ERROR: Error compiling file: C:\\Users\\ahausden\\AppData\\Local\\Temp\\jet\r\nty-0.0.0.0-8161-admin-_admin-any-\\jsp\\org\\apache\\jsp\\tag\\web\\form\\forEachMapEntr\r\ny_tag.java\r\njvm 1    |  WARN |\r\njvm 1    | org.apache.jasper.JasperException: PWC6033: Unable to compile class f\r\nor JSP\r\njvm 1    |\r\njvm 1    | PWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags\r\n/form/forEachMapEntry.tag\r\njvm 1    | PWC6199: Generated servlet error:\r\njvm 1    | The type java.util.Map$Entry cannot be resolved. It is indirectly ref\r\nerenced from required .class files\r\njvm 1    |\r\njvm 1    |\r\njvm 1    |      at org.apache.jasper.compiler.DefaultErrorHandler.javacError(Def\r\naultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDi\r\nspatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.Compiler.generateClass(Compiler.ja\r\nva:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437\r\n)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.JspCompilationContext.compile(JspCompilatio...\r\n\r\nAfter that the meesage queue does't work anymore.\r\n",
        "Implement JSR 356 based WebSocket transport The present WS transport boots up an embedded Jetty instance on its own port, which does not make sense when embedding ActiveMQ in a container-hosted application.\r\n\r\nAlthough not that difficult to hack together manually, there should be a supported first-party mechanism to configure a WS Stomp/MQTT endpoint when embedded in a JSR 356 compatible container.\r\n"
    ],
    [
        "AMQ-5818",
        "AMQ-5356",
        "PWC6197: An error occurred at line: 20 in the jsp file When i try to watch a message in the browser api \r\n http://localhost:8161/admin/browse.jsp?JMSDestination=myQueue.out\r\nA message occurs: \r\nException occurred while processing this request, check the log for more information!\r\nAnd in the console log i see following message:\r\n\r\nreadPool.java:543)\r\njvm 1    |      at java.lang.Thread.run(Unknown Source)\r\njvm 1    | ERROR: Error compiling file: C:\\Users\\ahausden\\AppData\\Local\\Temp\\jet\r\nty-0.0.0.0-8161-admin-_admin-any-\\jsp\\org\\apache\\jsp\\tag\\web\\form\\forEachMapEntr\r\ny_tag.java\r\njvm 1    |  WARN |\r\njvm 1    | org.apache.jasper.JasperException: PWC6033: Unable to compile class f\r\nor JSP\r\njvm 1    |\r\njvm 1    | PWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags\r\n/form/forEachMapEntry.tag\r\njvm 1    | PWC6199: Generated servlet error:\r\njvm 1    | The type java.util.Map$Entry cannot be resolved. It is indirectly ref\r\nerenced from required .class files\r\njvm 1    |\r\njvm 1    |\r\njvm 1    |      at org.apache.jasper.compiler.DefaultErrorHandler.javacError(Def\r\naultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDi\r\nspatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.Compiler.generateClass(Compiler.ja\r\nva:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437\r\n)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.JspCompilationContext.compile(JspCompilatio...\r\n\r\nAfter that the meesage queue does't work anymore.\r\n",
        "Unable to see message contents from the web UI When browsing the messages from a queue I'm unable to go into the message's content. Does Jetty need to be upgraded?\r\n\r\nThe URL I'm trying to reach (/admin/message.jsp):\r\n\r\nhttp://192.168.220.188:8161/admin/message.jsp?id=ID%3avcms1-53950-1410478946965-7%3a1%3a2%3a1%3a1&JMSDestination=contactupdatequeue\r\n\r\nI'm using JDK8, tried with 8u11 and 8u20.\r\n\r\nThe output from ps:\r\n\r\n/usr/local/jdk1.8.0_20/bin/java -Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/opt/activemq-5.10.0/conf/login.config -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/opt/activemq-5.10.0/tmp -Dactivemq.classpath=/opt/activemq-5.10.0/conf; -Dactivemq.home=/opt/activemq-5.10.0 -Dactivemq.base=/opt/activemq-5.10.0 -Dactivemq.conf=/opt/activemq-5.10.0/conf -Dactivemq.data=/opt/activemq-5.10.0/data -jar /opt/activemq-5.10.0/bin/activemq.jar start\r\n\r\nI get the following exception:\r\n\r\n2014-09-15 00:07:07,442 | INFO  | ActiveMQ WebConsole available at http://0.0.0.0:8161/ | org.apache.activemq.web.WebConsoleStarter | main\r\n2014-09-15 00:07:07,482 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main\r\n2014-09-15 00:07:07,808 | INFO  | jolokia-agent: No access restrictor found at classpath:/jolokia-access.xml, access to all MBeans is allowed | /api | main\r\n2014-09-15 01:25:58,377 | INFO  | Connector vm://localhost started | org.apache.activemq.broker.TransportConnector | qtp693267461-37\r\n2014-09-15 01:25:59,870 | WARN  |  | org.eclipse.jetty.servlet.ServletHandler | qtp693267461-39\r\norg.apache.jasper.JasperException: PWC6033: Unable to compile class for JSP\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n\r\n\r\n        at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:261)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:683)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:88)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:739)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2347)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Root.accept(Node.java:498)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:757)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:222)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:435)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:360)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)[geronimo-servlet_2.5_spec-1.2.jar:1.2]\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)[activemq-web-5.10.0.jar:5.10.0]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)[file:/opt/activemq-5.10.0/webapps/admin/WEB-INF/classes/:]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:367)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at java.lang.Thread.run(Thread.java:745)[:1.8.0_11]\r\n"
    ],
    [
        "AMQ-5826",
        "AMQ-2040",
        "activemq browse shows limit messages In my case, there are 20,000 messages in queue:Monitor. I found if I use \"activemq browse --amqurl tcp://localhost:61616 Monitor\", it only shows 400 messages. However, in the website, it says that by using this command, it will show all the messages in the queue. ",
        "Improve message browsing Currently the browse() method returns 400 messages (or all if there are less than that). Allow configuring the number of messages returned and fetching  messages beyond first page with the method such as browse(int page)."
    ],
    [
        "AMQ-5928",
        "AMQ-5272",
        "ClassFormatException in ActiveMQ web console during showing message Steps to reproduce:\r\n1. Open webconsole (http://localhost:8161/admin/queues.jsp)\r\n2. Create a queue (xxx)\r\n3. Send a message with any text to the queue\r\n4. Open \"Browse\" link (http://localhost:8161/admin/browse.jsp?JMSDestination=xxx)\r\n5. Open message.\r\nSee exception instad of the message ",
        "Implement JSR 356 based WebSocket transport The present WS transport boots up an embedded Jetty instance on its own port, which does not make sense when embedding ActiveMQ in a container-hosted application.\r\n\r\nAlthough not that difficult to hack together manually, there should be a supported first-party mechanism to configure a WS Stomp/MQTT endpoint when embedded in a JSR 356 compatible container.\r\n"
    ],
    [
        "AMQ-5928",
        "AMQ-5356",
        "ClassFormatException in ActiveMQ web console during showing message Steps to reproduce:\r\n1. Open webconsole (http://localhost:8161/admin/queues.jsp)\r\n2. Create a queue (xxx)\r\n3. Send a message with any text to the queue\r\n4. Open \"Browse\" link (http://localhost:8161/admin/browse.jsp?JMSDestination=xxx)\r\n5. Open message.\r\nSee exception instad of the message ",
        "Unable to see message contents from the web UI When browsing the messages from a queue I'm unable to go into the message's content. Does Jetty need to be upgraded?\r\n\r\nThe URL I'm trying to reach (/admin/message.jsp):\r\n\r\nhttp://192.168.220.188:8161/admin/message.jsp?id=ID%3avcms1-53950-1410478946965-7%3a1%3a2%3a1%3a1&JMSDestination=contactupdatequeue\r\n\r\nI'm using JDK8, tried with 8u11 and 8u20.\r\n\r\nThe output from ps:\r\n\r\n/usr/local/jdk1.8.0_20/bin/java -Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/opt/activemq-5.10.0/conf/login.config -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/opt/activemq-5.10.0/tmp -Dactivemq.classpath=/opt/activemq-5.10.0/conf; -Dactivemq.home=/opt/activemq-5.10.0 -Dactivemq.base=/opt/activemq-5.10.0 -Dactivemq.conf=/opt/activemq-5.10.0/conf -Dactivemq.data=/opt/activemq-5.10.0/data -jar /opt/activemq-5.10.0/bin/activemq.jar start\r\n\r\nI get the following exception:\r\n\r\n2014-09-15 00:07:07,442 | INFO  | ActiveMQ WebConsole available at http://0.0.0.0:8161/ | org.apache.activemq.web.WebConsoleStarter | main\r\n2014-09-15 00:07:07,482 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main\r\n2014-09-15 00:07:07,808 | INFO  | jolokia-agent: No access restrictor found at classpath:/jolokia-access.xml, access to all MBeans is allowed | /api | main\r\n2014-09-15 01:25:58,377 | INFO  | Connector vm://localhost started | org.apache.activemq.broker.TransportConnector | qtp693267461-37\r\n2014-09-15 01:25:59,870 | WARN  |  | org.eclipse.jetty.servlet.ServletHandler | qtp693267461-39\r\norg.apache.jasper.JasperException: PWC6033: Unable to compile class for JSP\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n\r\n\r\n        at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:261)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:683)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:88)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:739)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2347)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Root.accept(Node.java:498)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:757)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:222)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:435)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:360)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)[geronimo-servlet_2.5_spec-1.2.jar:1.2]\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)[activemq-web-5.10.0.jar:5.10.0]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)[file:/opt/activemq-5.10.0/webapps/admin/WEB-INF/classes/:]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:367)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at java.lang.Thread.run(Thread.java:745)[:1.8.0_11]\r\n"
    ],
    [
        "AMQ-5928",
        "AMQ-5818",
        "ClassFormatException in ActiveMQ web console during showing message Steps to reproduce:\r\n1. Open webconsole (http://localhost:8161/admin/queues.jsp)\r\n2. Create a queue (xxx)\r\n3. Send a message with any text to the queue\r\n4. Open \"Browse\" link (http://localhost:8161/admin/browse.jsp?JMSDestination=xxx)\r\n5. Open message.\r\nSee exception instad of the message ",
        "PWC6197: An error occurred at line: 20 in the jsp file When i try to watch a message in the browser api \r\n http://localhost:8161/admin/browse.jsp?JMSDestination=myQueue.out\r\nA message occurs: \r\nException occurred while processing this request, check the log for more information!\r\nAnd in the console log i see following message:\r\n\r\nreadPool.java:543)\r\njvm 1    |      at java.lang.Thread.run(Unknown Source)\r\njvm 1    | ERROR: Error compiling file: C:\\Users\\ahausden\\AppData\\Local\\Temp\\jet\r\nty-0.0.0.0-8161-admin-_admin-any-\\jsp\\org\\apache\\jsp\\tag\\web\\form\\forEachMapEntr\r\ny_tag.java\r\njvm 1    |  WARN |\r\njvm 1    | org.apache.jasper.JasperException: PWC6033: Unable to compile class f\r\nor JSP\r\njvm 1    |\r\njvm 1    | PWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags\r\n/form/forEachMapEntry.tag\r\njvm 1    | PWC6199: Generated servlet error:\r\njvm 1    | The type java.util.Map$Entry cannot be resolved. It is indirectly ref\r\nerenced from required .class files\r\njvm 1    |\r\njvm 1    |\r\njvm 1    |      at org.apache.jasper.compiler.DefaultErrorHandler.javacError(Def\r\naultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDi\r\nspatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.Compiler.generateClass(Compiler.ja\r\nva:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437\r\n)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.JspCompilationContext.compile(JspCompilatio...\r\n\r\nAfter that the meesage queue does't work anymore.\r\n"
    ],
    [
        "AMQ-5943",
        "AMQ-5408",
        "network bridge fails when using jaasDualAuthenticationPlugin If a network bridge is to be established to another broker's ssl transport as in \r\n\r\n{code:xml}\r\n<networkConnector duplex=\"true\" dynamicOnly=\"true\" name=\"to-A\" networkTTL=\"2\" uri=\"static://(ssl://localhost:61626)\" >\r\n{code}\r\n\r\nand the other broker is configured for \r\n{code:xml}\r\n<jaasDualAuthenticationPlugin configuration=\"activemq-domain\" sslConfiguration=\"activemq-ssl-domain\"/>\r\n{code}\r\n\r\nthen the network bridge will fail. Note the network connector does not set username and password but is supposed to be authenticated via its SSL certificate. \r\n",
        "jaasDualAuthenticationPlugin with client authentication not working for networkConnector When using jaasDualAuthentication with username/password for tcp connections and certification authentication for ssl, this works just fine then connection as a client. But when I try to setup a network connector over ssl with certification authentication it fails to connect with this error:\r\njava.lang.SecurityException: User name [null] or password is invalid.\r\n\r\nI also tried with nio+ssl with the same result\r\n\r\nIf I change to jaasCertificateAuthentication it works for ssl connections but the non ssl fails (as expected)\r\nWhen I use nio+ssl with jaasCertificateAuthentication this also fails with this error:\r\njava.lang.SecurityException: Unable to authenticate transport without SSL certificate.\r\nBut after failing 3 times it finally connects successfully on the 4:th attempt.\r\n\r\nSo it seems that  jaasDualAuthentication doesn't work with Certificate Authentication.\r\n"
    ],
    [
        "AMQ-5946",
        "AMQ-5945",
        "Tomcat 7.0.62 complains of memory leak when web app is stopped or reloaded We are using failover protocol to connect to broker. \r\nUrl is as :  \"failover:(tcp://localhost:61616)?startupMaxReconnectAttempts=2&initialReconnectDelay=60000&maxReconnectAttempts=2\r\n\r\nSuppose I start web application with AMQ not running and then stop web application , I get below logs in tomcat\r\n\r\nSEVERE: The web application [] appears to have started a thread name\r\nd [ActiveMQ Connection Executor: unconnected] but has failed to stop it. This is\r\n very likely to create a memory leak.\r\nAug 25, 2015 11:27:59 AM org.apache.catalina.loader.WebappClassLoader clearRefer\r\nencesThreads\r\nSEVERE: The web application [] appears to have started a thread name\r\nd [ActiveMQ Task-1] but has failed to stop it. This is very likely to create a m\r\nemory leak.\r\n\r\nI can see these 2 threads in thread dump. \r\nHow do I close these on stopping web application ?\r\n\r\nOn webapp shutdown I am shutting down message containers and closing spring context.\r\n\r\nI am not facing any issues if active MQ is running.\r\n\t\t\t\t",
        "Tomcat 7.0.62 complains of memory leak when web app is stopped or reloaded We are using failover protocol to connect to broker. \r\nUrl is as :  \"failover:(\"+brokerUrl+\")?startupMaxReconnectAttempts=2&initialReconnectDelay=60000&maxReconnectAttempts=2\r\n\r\nSuppose I start web application with AMQ not running and then stop web application , I get below logs in tomcat\r\n\r\nSEVERE: The web application [/tcxoptimize] appears to have started a thread name\r\nd [ActiveMQ Connection Executor: unconnected] but has failed to stop it. This is\r\n very likely to create a memory leak.\r\nAug 25, 2015 11:27:59 AM org.apache.catalina.loader.WebappClassLoader clearRefer\r\nencesThreads\r\nSEVERE: The web application [/tcxoptimize] appears to have started a thread name\r\nd [ActiveMQ Task-1] but has failed to stop it. This is very likely to create a m\r\nemory leak.\r\n\r\nI can see these 2 threads in thread dump. \r\nHow do I close these on stopping web application ?\r\n\r\nOn webapp shutdown I am shutting down message containers and closing spring context.\r\n\r\nI do not have issues if active MQ is running.\r\n\t\t\t\t"
    ],
    [
        "AMQ-5979",
        "AMQ-5272",
        "Error browsing message on queue. Trying to browse to a message gives the error...\r\n\r\nException occurred while processing this request, check the log for more information!\r\n\r\nactivemq.log gives...\r\n\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n",
        "Implement JSR 356 based WebSocket transport The present WS transport boots up an embedded Jetty instance on its own port, which does not make sense when embedding ActiveMQ in a container-hosted application.\r\n\r\nAlthough not that difficult to hack together manually, there should be a supported first-party mechanism to configure a WS Stomp/MQTT endpoint when embedded in a JSR 356 compatible container.\r\n"
    ],
    [
        "AMQ-5979",
        "AMQ-5356",
        "Error browsing message on queue. Trying to browse to a message gives the error...\r\n\r\nException occurred while processing this request, check the log for more information!\r\n\r\nactivemq.log gives...\r\n\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n",
        "Unable to see message contents from the web UI When browsing the messages from a queue I'm unable to go into the message's content. Does Jetty need to be upgraded?\r\n\r\nThe URL I'm trying to reach (/admin/message.jsp):\r\n\r\nhttp://192.168.220.188:8161/admin/message.jsp?id=ID%3avcms1-53950-1410478946965-7%3a1%3a2%3a1%3a1&JMSDestination=contactupdatequeue\r\n\r\nI'm using JDK8, tried with 8u11 and 8u20.\r\n\r\nThe output from ps:\r\n\r\n/usr/local/jdk1.8.0_20/bin/java -Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/opt/activemq-5.10.0/conf/login.config -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/opt/activemq-5.10.0/tmp -Dactivemq.classpath=/opt/activemq-5.10.0/conf; -Dactivemq.home=/opt/activemq-5.10.0 -Dactivemq.base=/opt/activemq-5.10.0 -Dactivemq.conf=/opt/activemq-5.10.0/conf -Dactivemq.data=/opt/activemq-5.10.0/data -jar /opt/activemq-5.10.0/bin/activemq.jar start\r\n\r\nI get the following exception:\r\n\r\n2014-09-15 00:07:07,442 | INFO  | ActiveMQ WebConsole available at http://0.0.0.0:8161/ | org.apache.activemq.web.WebConsoleStarter | main\r\n2014-09-15 00:07:07,482 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main\r\n2014-09-15 00:07:07,808 | INFO  | jolokia-agent: No access restrictor found at classpath:/jolokia-access.xml, access to all MBeans is allowed | /api | main\r\n2014-09-15 01:25:58,377 | INFO  | Connector vm://localhost started | org.apache.activemq.broker.TransportConnector | qtp693267461-37\r\n2014-09-15 01:25:59,870 | WARN  |  | org.eclipse.jetty.servlet.ServletHandler | qtp693267461-39\r\norg.apache.jasper.JasperException: PWC6033: Unable to compile class for JSP\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n\r\n\r\n        at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:261)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:683)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:88)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:739)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:743)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1501)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2341)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2347)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Root.accept(Node.java:498)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2291)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:757)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:222)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:435)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:360)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)[geronimo-servlet_2.5_spec-1.2.jar:1.2]\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-3.2.8.RELEASE.jar:3.2.8.RELEASE]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)[activemq-web-5.10.0.jar:5.10.0]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)[file:/opt/activemq-5.10.0/webapps/admin/WEB-INF/classes/:]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:367)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)[jetty-all-server-7.6.9.v20130131.jar:7.6.9.v20130131]\r\n        at java.lang.Thread.run(Thread.java:745)[:1.8.0_11]\r\n"
    ],
    [
        "AMQ-5979",
        "AMQ-5818",
        "Error browsing message on queue. Trying to browse to a message gives the error...\r\n\r\nException occurred while processing this request, check the log for more information!\r\n\r\nactivemq.log gives...\r\n\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n",
        "PWC6197: An error occurred at line: 20 in the jsp file When i try to watch a message in the browser api \r\n http://localhost:8161/admin/browse.jsp?JMSDestination=myQueue.out\r\nA message occurs: \r\nException occurred while processing this request, check the log for more information!\r\nAnd in the console log i see following message:\r\n\r\nreadPool.java:543)\r\njvm 1    |      at java.lang.Thread.run(Unknown Source)\r\njvm 1    | ERROR: Error compiling file: C:\\Users\\ahausden\\AppData\\Local\\Temp\\jet\r\nty-0.0.0.0-8161-admin-_admin-any-\\jsp\\org\\apache\\jsp\\tag\\web\\form\\forEachMapEntr\r\ny_tag.java\r\njvm 1    |  WARN |\r\njvm 1    | org.apache.jasper.JasperException: PWC6033: Unable to compile class f\r\nor JSP\r\njvm 1    |\r\njvm 1    | PWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags\r\n/form/forEachMapEntry.tag\r\njvm 1    | PWC6199: Generated servlet error:\r\njvm 1    | The type java.util.Map$Entry cannot be resolved. It is indirectly ref\r\nerenced from required .class files\r\njvm 1    |\r\njvm 1    |\r\njvm 1    |      at org.apache.jasper.compiler.DefaultErrorHandler.javacError(Def\r\naultErrorHandler.java:123)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDi\r\nspatcher.java:296)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.Compiler.generateClass(Compiler.ja\r\nva:376)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.compiler.Compiler.compile(Compiler.java:437\r\n)[jsp-2.1-glassfish-2.1.v20100127.jar:]\r\njvm 1    |      at org.apache.jasper.JspCompilationContext.compile(JspCompilatio...\r\n\r\nAfter that the meesage queue does't work anymore.\r\n"
    ],
    [
        "AMQ-5979",
        "AMQ-5928",
        "Error browsing message on queue. Trying to browse to a message gives the error...\r\n\r\nException occurred while processing this request, check the log for more information!\r\n\r\nactivemq.log gives...\r\n\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n",
        "ClassFormatException in ActiveMQ web console during showing message Steps to reproduce:\r\n1. Open webconsole (http://localhost:8161/admin/queues.jsp)\r\n2. Create a queue (xxx)\r\n3. Send a message with any text to the queue\r\n4. Open \"Browse\" link (http://localhost:8161/admin/browse.jsp?JMSDestination=xxx)\r\n5. Open message.\r\nSee exception instad of the message "
    ],
    [
        "AMQ-6110",
        "AMQ-6077",
        "ObjectMessage exception is swallowed After upgrading to 5.13.0, I started getting opaque exceptions from ActiveMQObjectMessage.getObject (see full stacktrace below). Since the error messages were quite cryptic, I had to debug through the ActiveMQObjectMessage and ObjectInputStream code, and only with a breakpoint in ObjectInputStream.readOrdinaryObject I saw the internally thrown exception, which has an excellent informative message: \"java.lang.ClassNotFoundException: Forbidden class com.myapp.MyObject! This class is not allowed to be serialized. Add package with 'org.apache.activemq.SERIALIZABLE_PACKAGES' system property.\"\r\n\r\nThat would have been very useful to know, if only it were propagated to somewhere the user can see it. This is arguably a bug in the JDK itself, but I think it may be an ActiveMQ issue after all, since the JDK code has special handling for ClassNotFoundException which seems to swallow it, and it is not entirely correct for ClassNotFoundException to be thrown by ActiveMQ since the class is found, but simply has security restrictions on it. Perhaps a SecurityException or some other more accurate exception should be thrown, and will get handled differently and propagated to the user. I'm not sure this is the case, just guessing here, but I'm reporting this issue so someone knowledgeable on this code can determine how/where it should be solved.\r\n\r\nAs it stands, it wastes a lot of developer time for no reason (I'm sure I'm not the only one upgrading to 5.13.0 or using future versions that will miss the system property now required for serialization). There's a great informative exception message, and it's a shame it gets swallowed.\r\n\r\nThe user-facing stack trace:\r\n{quote}\r\njavax.jms.JMSException: Failed to build body from bytes. Reason: java.io.StreamCorruptedException: invalid type code: 69\r\n\tat org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:36)[74:org.apache.activemq.activemq-osgi:5.13.0]\r\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:198)[74:org.apache.activemq.activemq-osgi:5.13.0]\r\n\tat com.myapp.jms.Consumer.onMessage(Consumer.java:33)[27:com.myapp.jms:0.1.0.SNAPSHOT]\r\n\tat org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1393)[74:org.apache.activemq.activemq-osgi:5.13.0]\r\n\tat org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)[74:org.apache.activemq.activemq-osgi:5.13.0]\r\n\tat org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)[74:org.apache.activemq.activemq-osgi:5.13.0]\r\n\tat org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)[74:org.apache.activemq.activemq-osgi:5.13.0]\r\n\tat org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)[74:org.apache.activemq.activemq-osgi:5.13.0]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)[:1.8.0_66]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)[:1.8.0_66]\r\n\tat java.lang.Thread.run(Thread.java:745)[:1.8.0_66]\r\nCaused by: java.io.StreamCorruptedException: invalid type code: 69\r\n\tat java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1522)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readClass(ObjectInputStream.java:1484)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1334)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2000)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1891)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readArray(ObjectInputStream.java:1707)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1345)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2000)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1891)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2000)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1891)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)[:1.8.0_66]\r\n\tat java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)[:1.8.0_66]\r\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:191)[74:org.apache.activemq.activemq-osgi:5.13.0]\r\n\t... 9 more\r\n{quote}",
        "Better configuration of restricted classes for clients [AMQ-6013] introduces the checks on the classes that are allowed to be serialized through ObjectMessages. The original implementation was designed to protect the broker, so system property configuration was the easiest solution.\r\n\r\nThis change affect the clients that uses ObjectMessages.getObject() method. We need to provide a better way of configuring this for clients. My initial idea is that we should provide a configuration on ActiveMQConnectionFactory and ActiveMQComponent classes."
    ],
    [
        "AMQ-6139",
        "AMQ-5486",
        "Unable to config maxThreadPoolSize in broker The default value of maxThreadPoolSize is Integer.MAX_VALUE in TaskRunnerFactory for broker service, which does not make any sense. If you set -Dorg.apache.activemq.UseDedicatedTaskRunner=false but you are still able to create as many threads as you want. Suggest to make this configurable to limit the threads number the ActiveMQ broker can create.",
        "Thread synchronization overhead is unexpectedly high There's about 20 topics with virtual topic enabled, hundreds of comsumers/producers connected to MQ on NIO transport connector. During the run there're about 12000 msg flow in per second, not a very high rate, but ActiveMQ consumes a lot of CPU resource (about 600%~1000%). To find out what's the most CPU consuming code path, I use JProfiler to dig into the process. \r\n\r\nAmong all the NIO worker threads, most of them were frequently blocked and did a little job between the 'unblocked' time. While they're expected spend most of their time slices on waiting for work item and processed them.\r\n\r\n!nio_worker_blocked_frequently.png!\r\n\r\nAfter reviewing the monitor usage history and stats, I think these NIO workers were competing fiercely with each other on executing a synchronized method (DestinationMap::get), which is also the most hot spot in the program . I also notice that the caller AbstractRegion::getDestinations acquires a read lock before calling it, so I guess this could be a left out, read lock is the actual lock type required here.\r\n\r\n!monitor_usage_stats.png!\r\n\r\n!nio_worker_blocked_1.png!\r\n\r\n!nio_worker_blocked_2.png!\r\n\r\nIt's too difficult for me to list all critical sections between NIO workers, or between NIO workers and BrokerService which adds up to the overall synchronize overhead. So I attach the relevant info, with the hope of finding a complete solution to this."
    ],
    [
        "AMQ-6139",
        "AMQ-6126",
        "Unable to config maxThreadPoolSize in broker The default value of maxThreadPoolSize is Integer.MAX_VALUE in TaskRunnerFactory for broker service, which does not make any sense. If you set -Dorg.apache.activemq.UseDedicatedTaskRunner=false but you are still able to create as many threads as you want. Suggest to make this configurable to limit the threads number the ActiveMQ broker can create.",
        "The corePoolSize value of the TaskRunnerFactory created Executor should be configurable It is currently not possible to alter the corePoolSize value of the Executor created in the TaskRunnerFactory in order to keep some Threads always active and avoid some Thread churn that might otherwise happen.  "
    ]
]