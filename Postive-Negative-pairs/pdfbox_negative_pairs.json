[
    [
        "PDFBOX-46",
        "PDFBOX-577",
        "Support XFA form submitting [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1166672\nOriginally submitted by benlitchfield on 2005-03-19 14:02.\n\nPDFBox currently support FDF and XFDF to populate an \nAcroForm, the 7.0 version of designer does not support \neither of these as a submission type.  The possiblities \nare\n\nXDP/XFA/Full PDF/url encoded params\n\nThere is alreadu an open RFE for XDP, this is for the \nXFA format.\n\n\nSee this thread for a discussion of this topic\n\nhttps://sourceforge.net/forum/message.php?\nmsg_id=3043621\n\nBen",
        "TextPosition should expose its bounding box It does not seem to be possible to calculate the bounding box of a TextPosition.\r\n\r\nIIUC, TextPosition#getY is the baseline of the text and TextPosition#getHeight is the absolute height of the text. When I subtract the latter from the former I get a top line, but this is only correct if the text does not contain descender characters.\r\n\r\nBelow is a screenshot (AFM-getHeight.png) which shows the bounding boxes of TextPositions calculated as {#getX(), #getY() - #getHeight, #getWidth, #getHeight} painted in random colors. For example, the bounding boxes of parentheses are severely misplaced, which makes the line-by-line text extraction impossible.\r\n\r\nRight now I've solved the problem by tweaking AFM FontMetrics code so that it returns BoundingBox#getUpperRightY instead of BoundingBox#getHeight when queried via PDSimpleFont#getFontHeight(byte[], int, int). Another screenshot (AFM-getUpperRightY.png) shows how this restores the previously broken text extraction ability.\r\n\r\nIt seems like a good idea to rework TextPosition so that it would be aware of its bounding box:\r\n*) Replace methods PDSimpleFont#getFontWidth(byte[], int, int) and PDSimpleFont#getFontHeight(byte[], int, int) with a single method PDSimpleFont#getFontBoundingBox(byte[], int, int)\r\n*) Replace the constructor TextPosition(Matrix, Matrix) with TextPosition(Matrix, BoundingBox)\r\n*) Add new methods TextPosition#getBoundingBox, TextPosition#getBoundingBoxDir. This shouldn't affect existing application clients, because TextPosition#getY and TextPosition#getHeight remain in place."
    ],
    [
        "PDFBOX-2121",
        "PDFBOX-964",
        "NullPointerException when calling org.apache.pdfbox.pdmodel.edit.PDPageContentStream.setFont() *Context / how to reproduce *\r\n\r\nWhen creating a table and writing it to a pdf file, i get a NPE when setting the font size above a given size. As a result my application crashes. It seems to occur when the text i try to write is too large for the page.\r\n\r\n*Stack trace*\r\n\r\njava.lang.NullPointerException: null\r\n\tat org.apache.pdfbox.pdmodel.edit.PDPageContentStream.setFont(PDPageContentStream.java:321) ~[pdfbox-1.8.5.jar:na]\r\n\tat qa.reportgenerator.report.pdf.table.PDFTable.drawRow(PDFTable.java:67) ~[classes/:na]\r\n\tat qa.reportgenerator.report.pdf.SummaryGenerator.drawTableLine(SummaryGenerator.java:365) ~[classes/:na]\r\n\tat qa.reportgenerator.report.pdf.SummaryGenerator.drawTable(SummaryGenerator.java:268) ~[classes/:na]\r\n\tat qa.reportgenerator.report.pdf.SummaryGenerator.draw(SummaryGenerator.java:62) ~[classes/:na]\r\n\tat qa.reportgenerator.report.pdf.PDFReportGenerator.generate(PDFReportGenerator.java:28) ~[classes/:na]\r\n\tat qa.reportgenerator.report.pdf.PDFReportGenerator.generate(PDFReportGenerator.java:18) ~[classes/:na]\r\n\tat qa.reportgenerator.Runner.generatePDFReport(Runner.java:257) [classes/:na]\r\n\tat qa.reportgenerator.Runner.execute(Runner.java:76) [classes/:na]\r\n\r\n*Additional info*\r\n\r\n- PDFTable, is a class allowing me to easily create tables (adding cells, rows, setting text orientation, font /color / background of each cell, horizonal/vertical text alignment, etc.) The content of the line \"qa.reportgenerator.report.pdf.table.PDFTable.drawRow(PDFTable.java:67)\" is : \r\n\r\n{code}\r\nthis.contentStream.setFont(cell.getFont(), cell.getFontSize());\r\n{code}\r\n\r\n- On this line, contentStream is a PDPageContentStream instance, and when the MPE occurs, cell.getFont returns PDType1Font.HELVETICA and cell.getFontSize returns 6. \r\n\r\n- I get no NPE when font size is < 6 or when the width of the text I try to write is smaller.\r\n\r\n- I do not close manually the PDPageContentStream.\r\n\r\n- Page size is A4.\r\n\r\n*Debuger data*\r\n\r\nWhen debugging, it appears that the problem occurs when calling the setFont method of the last cell of a row. \r\n\r\nIndeed, when calling setFont on the cell left to the last cell of the table, the content of the \"resources\" variable is :\r\n\r\n{code}\r\nresources\tPDResources  (id=1692)\t\r\n\tcolorspaces\tnull\t\r\n\tfontMappings\tHashMap<K,V>  (id=2032)\t\r\n\t\tcache\tnull\t\r\n\t\telementCount\t2\t\r\n\t\telementData\tHashMap$Entry<K,V>[16]  (id=1714)\t\r\n\t\thashMask\t0\t\r\n\t\tkeySet\tnull\t\r\n\t\tloadFactor\t0.75\t\r\n\t\tmodCount\t2\t\r\n\t\tthreshold\t12\t\r\n\t\tuseAltHashing\tfalse\t\r\n\t\tvaluesCollection\tnull\t\r\n\tfonts\tHashMap<K,V>  (id=1964)\t\r\n\tgraphicsStates\tnull\t\r\n\timages\tnull\t\r\n\tpatterns\tnull\t\r\n\tresources\tCOSDictionary  (id=2802)\t\r\n\t\tdirect\tfalse\t\r\n\t\titems\tLinkedHashMap<K,V>  (id=1036)\t\r\n\t\t\taccessOrder\tfalse\t\r\n\t\t\tcache\tnull\t\r\n\t\t\telementCount\t2\t\r\n\t\t\telementData\tLinkedHashMap$LinkedHashMapEntry<K,V>[16]  (id=1274)\t\r\n\t\t\thashMask\t0\t\r\n\t\t\thead\tLinkedHashMap$LinkedHashMapEntry<K,V>  (id=1166)\t\r\n\t\t\tkeySet\tLinkedHashMap$1  (id=1811)\t\r\n\t\t\tloadFactor\t0.75\t\r\n\t\t\tmodCount\t2\t\r\n\t\t\ttail\tLinkedHashMap$LinkedHashMapEntry<K,V>  (id=2803)\t\r\n\t\t\tthreshold\t12\t\r\n\t\t\tuseAltHashing\tfalse\t\r\n\t\t\tvaluesCollection\tnull\t\r\n\t\tneedToBeUpdate\tfalse\t\r\n\tshadings\tnull\t\r\n\txobjectMappings\tHashMap<K,V>  (id=1253)\t\r\n\t\tcache\tnull\t\r\n\t\telementCount\t1\t\r\n\t\telementData\tHashMap$Entry<K,V>[16]  (id=1796)\t\r\n\t\thashMask\t0\t\r\n\t\tkeySet\tnull\t\r\n\t\tloadFactor\t0.75\t\r\n\t\tmodCount\t1\t\r\n\t\tthreshold\t12\t\r\n\t\tuseAltHashing\tfalse\t\r\n\t\tvaluesCollection\tnull\t\r\n\txobjects\tHashMap<K,V>  (id=1947)\t\r\n\t\tcache\tnull\t\r\n\t\telementCount\t1\t\r\n\t\telementData\tHashMap$Entry<K,V>[16]  (id=1580)\t\r\n\t\thashMask\t0\t\r\n\t\tkeySet\tHashMap$1  (id=1463)\t\r\n\t\t\tthis$0\tHashMap<K,V>  (id=1947)\t\r\n\t\tloadFactor\t0.75\t\r\n\t\tmodCount\t1\t\r\n\t\tthreshold\t12\t\r\n\t\tuseAltHashing\tfalse\t\r\n\t\tvaluesCollection\tnull\t\r\n{code}\r\n\r\nthen the NPE occurs on the next call to setFont(). The resources object is not null, but it has then changed :\r\n\r\n{code}\r\nresources\tPDResources  (id=1168)\t\r\n\tcolorspaces\tnull\t\r\n\tfontMappings\tHashMap<K,V>  (id=1665)\t\r\n\t\tcache\tnull\t\r\n\t\telementCount\t0\t\r\n\t\telementData\tHashMap$Entry<K,V>[16]  (id=1505)\t\r\n\t\thashMask\t0\t\r\n\t\tkeySet\tnull\t\r\n\t\tloadFactor\t0.75\t\r\n\t\tmodCount\t0\t\r\n\t\tthreshold\t12\t\r\n\t\tuseAltHashing\tfalse\t\r\n\t\tvaluesCollection\tnull\t\r\n\tfonts\tnull\t\r\n\tgraphicsStates\tnull\t\r\n\timages\tnull\t\r\n\tpatterns\tnull\t\r\n\tresources\tCOSDictionary  (id=2802)\t\r\n\t\tdirect\tfalse\t\r\n\t\titems\tLinkedHashMap<K,V>  (id=1036)\t\r\n\t\t\taccessOrder\tfalse\t\r\n\t\t\tcache\tnull\t\r\n\t\t\telementCount\t2\t\r\n\t\t\telementData\tLinkedHashMap$LinkedHashMapEntry<K,V>[16]  (id=1274)\t\r\n\t\t\thashMask\t0\t\r\n\t\t\thead\tLinkedHashMap$LinkedHashMapEntry<K,V>  (id=1166)\t\r\n\t\t\tkeySet\tLinkedHashMap$1  (id=1811)\t\r\n\t\t\tloadFactor\t0.75\t\r\n\t\t\tmodCount\t2\t\r\n\t\t\ttail\tLinkedHashMap$LinkedHashMapEntry<K,V>  (id=2803)\t\r\n\t\t\tthreshold\t12\t\r\n\t\t\tuseAltHashing\tfalse\t\r\n\t\t\tvaluesCollection\tnull\t\r\n\t\tneedToBeUpdate\tfalse\t\r\n\tshadings\tnull\t\r\n\txobjectMappings\tnull\t\r\n\txobjects\tnull\t\r\n{code}\r\n\r\nI hope that you have enough information.\r\n\r\nThank you for your help !",
        "Wrong charecters I have a PDF document (format 1.5 PDF) and when I try to deal with it, PDFBox shows some junk characters. \r\n\r\nFor example \r\n            PDDocumentInformation info = doc.getDocumentInformation();\r\n            System.out.println(\"Title=\" + info.getTitle());\r\n            System.out.println(\"Author=\" + info.getAuthor());\r\n            System.out.println(\"Subject=\" + info.getSubject());\r\n            System.out.println(\"Keywords=\" + info.getKeywords());\r\n            System.out.println(\"Creator=\" + info.getCreator());\r\n            System.out.println(\"Producer=\" + info.getProducer());\r\n            System.out.println(\"Creation Date=\" + info.getCreationDate())\r\n\r\nReturns\r\nTitle=o,\u00a2\u0091b\u0089zb\u00dccqhg\u00ad6cZ\u00eaeG\u009f9\u00f8\u00c0\u00c8\u00d5\u00df\u00b6\u00b9\u00e0\u00e9X\u00f0\u0087A<\\\u00d0h\u0084\u009e\u00d4\u0084\u00d1\u00ae1\r\nAuthor=o,\u00a2\u0091v\u0089`\r\nSubject=null\r\nKeywords=null\r\nCreator=Q\u0093\u00f7P\u0085b\r\nb\u0085h6tzey\u00faLc^\u00e0b        \u00ae4\u00ed\u0081\u00d3\u0098\u0085\u00b8\u00ec\r\nProducer=Q\u0093\u00f7P\u0085b\r\nb\u0085h6tze<Z\u00b8R\"\r\n\r\n\r\nThe same goes on when I try to parse the file (I need to find all links in it).\r\nFor this I use:\r\n            for (final Iterator jt = annotations.iterator(); jt.hasNext();) {\r\n                final PDAnnotation annot = (PDAnnotation) jt.next();\r\n                if (!annot.isInvisible()) {\r\n                    if (annot instanceof PDAnnotationLink) {\r\n                        final PDAnnotationLink link = (PDAnnotationLink) annot;\r\n                        final PDAction action = link.getAction();\r\n                        if (action instanceof PDActionURI) {\r\n                            final PDActionURI uri = (PDActionURI) action;\r\nAnd I got links of type \"N<\u00bb\u00ac_f`\u00c8\u0087\u009c\u00f8\u00b2\\\u00bd8\u00d8,\u00d1B\u00e4<\u00ca\u0093\u00c7{\".\r\n\r\nBut if I open it with Document Viewer, Adobe Reader or midnigt commander I don't see any problems there.\r\n\r\nI have tested it in 1.5, 1.4, 1.1 versions of PDFBox.\r\n\r\n"
    ],
    [
        "PDFBOX-903",
        "PDFBOX-2512",
        "Unicode text getting mangled via TextToPDF + PDFTextStripper I'm trying to round trip some text through PDFBox, but I'm finding that along the way unicode text is getting mangled and coming back as the wrong characters.\r\n\r\nThe process I'm following is to use TextToPDF to generate a PDF, then reading it back in again with PDFTextStripper. I'm not sure if the problem is coming about during generation or reading yet, but I've a nasty feeling there might be an issue with both. (I've seen issues with code that does one part of the other)\r\n\r\nAttached is a unit test written against trunk. It creates a series of Reader objects based on both ASCII and non-ASCII text, creates a PDF using TextToPDF, then compares the text. It includes a test that verifies that the corruption isn't caused by the readers, and another that fails showing that the text was corrupted by the roundtrip.\r\n\r\nIdeally the test would also look in the dictionary to check what was stored there, but I don't know enough about the file format to manage that. Will hopefully look into that shortly though.",
        "OutOfMemory while signing large documents While working with large documents, we found some memory issues.\r\n\r\n1. The method close() in the COSDocument, clones the objectpool and does not clean it properly. The cloning in getObjects() cause a OutOfMemory exception.\r\n\r\n2.The COSWriter copy the whole pdf into the memory for signing and does not use BufferedInputStream for the FileInputStream which also has a big performance impact. (PDFBOX-1798)\r\n\r\n3. The cloning of COSStreams cause a OutOfMemory exception\r\n\r\nI used the CreateSignature example with a about 150 MB big document from here:\r\nhttps://cdn-reichelt.de/bilder/downloads/reichelt_01-2015_DE_B_HQ.pdf\r\n\r\nAdditionaly I add a RandomAccessFile to the PDDocument.load in the CreateSignature class.\r\n\r\nPDDocument doc = PDDocument.load(document,new RandomAccessFile(new File(\"d:\\\\temp.bin\"), \"rw\")); (this prevent the OOM for the third case)\r\n\r\nThe use of a BuffedInputStream in case two, will increase the signing speed from more than 5 minutes to less than 1 minute. "
    ],
    [
        "PDFBOX-3199",
        "PDFBOX-2529",
        "JPEG input file not closed when creating PDImageXObject In PDImageXObject, this code\r\n{code}\r\nreturn JPEGFactory.createFromStream(doc, new FileInputStream(file));\r\n{code}\r\nresults in an unclosed file.",
        "Preflight: mention the page on which a problem has been found As suggested by [~hauser@acm.org]: if not on page 1, say on which page the error occurs."
    ],
    [
        "PDFBOX-1072",
        "PDFBOX-1443",
        "PDFImageWriter extracts black images from arabic PDFs When I tried to extract a JPEG image from arabic PDF, i've got a corrupted file with black area which overlays all arabic text on each page.\r\nIn console i've got only this debug message and no other exceptions and so on:\r\nDEBUG (PDPixelMap.java:241) - ColorModel: IndexColorModel: #pixelBits = 1 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@2eeb3c84 transparency = 2 transIndex   = 1 has alpha = true isAlphaPre = false\r\nThis is not only one pdf file. I have about 400-500 files which produces the same thing.\r\n\r\nCode:\r\nPDFImageWriter writer = new PDFImageWriter();\r\nPDDocument document = PDDocument.load(sourceFile);\r\nwriter.writeImage(document, \"jpg\", \"\", 1, 1, filename); \r\n",
        "Images are rendered blank We are not processing the following segment correctly.. I have added the -> and command for clarity\r\n\r\n\r\nq   -> GSave\r\nQ   -> QRestore\r\nq   -> GSave\r\nW   -> ClipNonZeroRule\r\n0 0 m  -> MoveTo\r\n612 0 l -> LineTo\r\n612 792 l -> LineTo\r\n0 792 l   -> LineTo\r\nh   ->  ClosePath\r\nn    -> EndPath\r\nq    -> GSave\r\n612 0 0 792 0 0 cm  ->Concatenate\r\n/I13 Do   -> Invoke\r\nQ   -> QRestore\r\nQ   -> QRestore\r\n\r\n\r\nThe problem is 'W' or ClipNonZeroRule. According to the spec 8.5.4 \r\n\r\nAlthough the clipping path operator appears before the painting operator, it shall not alter the clipping path at the point where it appears. Rather, it shall modify the effect of the succeeding painting operator. After the path has been painted, the clipping path in the graphics state shall be set to the intersection of the current clipping path and the newly constructed path.\r\n\r\nAbout the n (EndPath) operator \r\n\r\nThe n operator (see Table 60) is a no-op path-painting operator; it shall cause no marks to be placed on the page, but can be used with a clipping path operator to establish a new clipping path. That is, after a path has been constructed, the sequence W n shall intersect that path with the current clipping path and shall establish a new clipping path.\r\n\r\nCurrently in ClipNonZeroRule.java and ClipEvenOddRule.java we do \r\n\r\ndrawer.setClippingPath(GeneralPath.WIND_NON_ZERO); \r\n\r\nThis applies the current path and resets. \r\n\r\nI believe we should ...\r\n\r\n            drawer.setCurrentWindingRule(GeneralPath.WIND_NON_ZERO);\r\n\r\nand \r\n            drawer.setCurrentWindingRule(GeneralPath.WIND_NON_ZERO);\r\n\r\n\r\n\r\nand in PageDrawer.java add\r\n\r\n int currentWindingRule = -1;\r\n    \r\n    public void setCurrentWindingRule(int windingRule)\r\n    {\r\n    \tcurrentWindingRule=windingRule;\r\n    }\r\n    \r\n    public void setClippingWindingRule()\r\n    {\r\n    \tif(currentWindingRule == -1)\r\n    \t{\r\n    \t\treturn;\r\n    \t}\r\n    \tsetClippingPath(currentWindingRule);\r\n    \tcurrentWindingRule=-1;\r\n    }\r\n\r\nThen in EndPath.java\r\n\r\n drawer.setClippingWindingRule(); \r\n\r\n\r\n\r\n\r\n"
    ],
    [
        "PDFBOX-361",
        "PDFBOX-1735",
        "NullPointerException in PDPageNode.getAllKids [Issue from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?func=detail&aid=2008371&group_id=78314&atid=552832\r\n\r\nThe parser cannot seem to find the Pages object in files created with\r\nAcrobat Pro 9. A sample file is attached.\r\n\r\npublic static void main(String[] argv) throws Exception {\r\nString name = \"./test.pdf\";\r\nPDDocument doc = PDDocument.load(name);\r\ndoc.close();\r\nPDPageNode root = doc.getDocumentCatalog().getPages();\r\nArrayList<PDPage> pages = new ArrayList<PDPage>();\r\nroot.getAllKids(pages);\r\nSystem.out.println(\"pages.size() == \"+pages.size());\r\n}\r\n\r\nException in thread \"main\" java.lang.NullPointerException\r\nat org.pdfbox.pdmodel.PDPageNode.getAllKids(PDPageNode.java:194)\r\nat org.pdfbox.pdmodel.PDPageNode.getAllKids(PDPageNode.java:182)\r\n\r\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&file_id=283367&aid=2008371\r\n\r\n[Comment on SourceForge]\r\nDate: 2008-07-02 00:57\r\nSender: foundart\r\nLogged In: YES \r\nuser_id=1693709\r\nOriginator: YES\r\n\r\nThis happens with the latest code from CVS and also in older versions.\r\n\r\n[Comment on SourceForge]\r\nDate: 2008-07-14 17:25\r\nSender: orthello\r\nLogged In: YES \r\nuser_id=853566\r\nOriginator: NO\r\n\r\nWe are experiencing the same problem.  Offending pdf available if any of\r\nyou need it (jwilson@nmcourt.fed.us).  Looks like pdfbox does not support\r\nsome new feature introduced in Acrobat 9.\r\n\r\n[Comment on SourceForge]\r\nDate: 2008-07-14 23:20\r\nSender: foundart\r\nLogged In: YES \r\nuser_id=1693709\r\nOriginator: YES\r\n\r\nIn Acrobat 8, the default was to generate PDFs following version 1.4 of\r\nthe PDF specification.  In Acrobat 9, the default is to to generate PDFs\r\nfollowing version 1.5 of the PDF specification.  PDF1.5 has objects known\r\nas cross-reference streams and it turns out that PDFBox does not parse them\r\ncorrectly.\r\n\r\n",
        "Convert page pdf to image I'm in the fight to perfectly convert a PDF to an image.\r\nBut the stacktrace below breaks my application!\r\n\r\n---\r\nOut 02, 2013 3:22:35 PM org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap getRGBImage\r\nSEVERE: Something went wrong ... the pixelmap doesn't contain any data.\r\nOut 02, 2013 3:22:35 PM org.apache.pdfbox.util.operator.pagedrawer.Invoke process\r\nWARNING: getRGBImage returned NULL\r\nOut 02, 2013 3:22:35 PM org.apache.pdfbox.util.PDFStreamEngine processOperator\r\nINFO: unsupported/disabled operation: i\r\n\r\n---\r\nI really need to fix this problem in order to succeed in converting\r\nYou know why this error occurs?\r\nYou know how I can fix this error?\r\nis some dependence of my environment that i forgot? or a failure of PDFBox framewor ?\r\n\r\nFollow my code below:\r\n---\r\n\r\n\tpublic static List<BufferedImage> getPdfPagesAsImages(String pdfPath, int i)\r\n\t\t\tthrows FileNotFoundException, IOException {\r\n\t\tList<BufferedImage> bImages = new ArrayList<BufferedImage>();\r\n\t\t\r\n\t\tFile f = new File(pdfPath);\r\n\t\tif (f.exists()) {\r\n\t\tint resolution = 185;\r\n\t\tPDDocument pdfDocument = null;\r\n\r\n\t\tpdfDocument = PDDocument.loadNonSeq(f, null);\r\n\r\n\t\tif (pdfDocument != null) {\r\n\t\t\t@SuppressWarnings(\"unchecked\")\r\n\t\t\tList<PDPage> pages = (List<PDPage>) pdfDocument\r\n\t\t\t\t\t.getDocumentCatalog().getAllPages();\r\n\t\t\tint j = 1;\r\n\t\t\tfor (PDPage p : pages) {\r\n\t\t\t\tSystem.out.println(j);\r\n\t\t\t\tBufferedImage convertedImage = p.convertToImage(\r\n\t\t\t\t\t\tBufferedImage.TYPE_INT_BGR , resolution);\r\n\t\t\t\tsaveImageToRepository(i, j, convertedImage);\t\t\t\r\n\t\t\t\tj++;\r\n\t\t\t\tif (isNegativeImage(convertedImage)) {\r\n\t\t\t\t\tbImages.add(invertNegativeImage(convertedImage));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbImages.add(convertedImage);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tSystem.out.println(pdfPath +\" sucess\");\r\n\t\t}\t\r\n\t\tpdfDocument.close();\r\n\t\t}else{\r\n\t\t\tSystem.out.println(pdfPath +\" nao existe\");\r\n\t\t}\r\n\t\treturn bImages;\r\n\t}\r\n\r\n\r\n\tprivate static void saveImageToRepository(int i, int j,\r\n\t\t\tBufferedImage convertedImage) throws IOException {\r\n\t\tFile outputfile = new File(\"C:/Desenvolvimento/bkp/convertido/\" + i + j+ \".png\");\r\n\t\tImageIO.write(convertedImage, \"png\", outputfile);\r\n\r\n\r\n\t}\r\n\r\n\r\n---\r\nI create a list of images\r\nthese images are saved to be loaded in the browser later on a JSF component.\r\n\r\nThank you!"
    ],
    [
        "PDFBOX-1188",
        "PDFBOX-2421",
        "PDStream Exception  when using a Cast For some PDF/A, getDictionaryObject does not return COSStream but other COSDictionary (super class)\r\n\r\npublic PDMetadata getMetadata()\r\n{\r\n    PDMetadata retval = null;\r\n    COSStream mdStream = (COSStream)stream.getDictionaryObject( COSName.METADATA );\r\n    if( mdStream != null )\r\n    {\r\n        retval = new PDMetadata( mdStream );\r\n    }\r\n    return retval;\r\n}\r\n\r\norg.apache.pdfbox.cos.COSDictionary cannot be cast to org.apache.pdfbox.cos.COSStream\r\nat org.apache.pdfbox.pdmodel.common.PDStream.getMetadata(PDStream.java:508)\r\nat net.padaf.preflight.font.AbstractFontValidator.checkFontFileMetaData(AbstractFontValidator.java:162)\r\nat net.padaf.preflight.font.Type1FontValidator.checkFontFileElement(Type1FontValidator.java:228)\r\nat net.padaf.preflight.font.Type1FontValidator.checkFontDescriptor(Type1FontValidator.java:125)\r\nat net.padaf.preflight.font.SimpleFontValidator.validate(SimpleFontValidator.java:264)\r\nat net.padaf.preflight.helpers.FontValidationHelper.validateFont(FontValidationHelper.java:107)\r\nat net.padaf.preflight.helpers.FontValidationHelper.innerValidate(FontValidationHelper.java:90)\r\nat net.padaf.preflight.helpers.AbstractValidationHelper.validate(AbstractValidationHelper.java:87)\r\nat net.padaf.preflight.AbstractValidator.runValidation(AbstractValidator.java:134)\r\nat net.padaf.preflight.PdfA1bValidator.validate(PdfA1bValidator.java:90)\r\nat net.padaf.preflight.Validator_A1b.main(Validator_A1b.java:47)\r\n",
        "Poor text extraction and rendering of file with non embedded type1 font The attached file has a poor text extraction with 1.8.8; with 1.8.6 it was OK. With 2.0 it is also OK.\r\n\r\nThe rendering was mostly OK in 1.8.6, but not with 1.8.8 and 2.0."
    ],
    [
        "PDFBOX-657",
        "PDFBOX-171",
        "PDFToImage does not work with certain fonts (for eg. PDF documents created by MS Office and OpenOffice) I created a PDF document using Open Office which contains following fonts:\r\n1. Times New Roman\r\n2. TlwgTypeWriter\r\n3. Courier New\r\n4. Comic MS \r\n\r\nNone of these fonts get converted to Image file. \r\nI have posted a question on mailing list, and was advised to create this issue. I have uploaded the input PDF and output jpg file to this issue",
        "Extending PDAppearance [imported from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1501722\r\nOriginally submitted by nobody on 2006-06-06 09:04.\r\n\r\nA use case requires programmatic application of a \r\nspecial font (bar-code) to a field. That will be \r\npossible if getDefaultAppearance and \r\ngetFontAndUpdateResources are changed to protected, \r\nand tokens.set( setFontIndex-2, COSName.getPDFName\r\n(pdFont.getBaseFont()) ); added to setAppearanceValue. \r\nIdeally, setApperanceValue should be refactored to a \r\nstrategy pattern.\r\n\r\n\r\n[comment on SourceForge]\r\nOriginally sent by nobody.\r\nLogged In: NO \r\n\r\ncontact glebmail@gmail.com if you need a patch and/or a \r\nFieldCustomAppearance subclass"
    ],
    [
        "PDFBOX-1800",
        "PDFBOX-1092",
        "Bundled Arial fonts are broken In the attached file, the black glyphs are rendered at the wrong position. See especially \"+J\" at \"Wir, die Meier+J\u00e4ggi\". Although it is just a few pixels off, it looks terrible.",
        "Image Rendering Regression Running ant testimage , I find several tests failing.\r\n\r\nARCHIVERGB -- the version of the PNG file in trunk\\pdfbox\\src\\test\\resources\\input\\rendering is far closer to the AI than is the one that is output.  I believe the problem has to do with the Stencil Mask.\r\n\r\nHOTRODCMYK -- same as ARCHIVERGB\r\n\r\ntest-landscape2 -- not coming out in Landscape format any more\r\n\r\nA few others are reported as \"not identical\" but they are visually identical -- false-positives IMO.  The above 3, however, have regressed since those image snapshots were taken ... version 1.2 IIRC."
    ],
    [
        "PDFBOX-1449",
        "PDFBOX-2399",
        "Preflight doesn't report on non-embedded font See the following file:\r\n\r\nhttp://dl.dropbox.com/u/9523497/test_noembeddedfonts.pdf\r\n\r\nThis PDF uses (TrueType) fonts that are not embedded (Arial). However, Preflight does not report on this! (As a double-check I also analysed the file with Acrobat 9's Preflight module, which correctly identifies the problem.) \r\n\r\nAdditional info: I used build #562 (14-Nov-2012 23:05:44), preflight-1.8.0-20121114.230701-58-jar-with-dependencies.jar from the command line. (Strangely the all-in jar of the more recent build #563 doesn't seem to work at all on my system, but that's another story.)\r\n",
        " font.getFontDescriptor() for PDType1Font.HELVETICA is null private PDType1Font font = PDType1Font.HELVETICA;\r\n\r\nfont.getFontDescriptor() returns null\r\n\r\nI would think it shouldn't."
    ],
    [
        "PDFBOX-3159",
        "PDFBOX-2026",
        "Checkout fails on PasswordSample-128bit.pdf because of Virus scanner I wanted to checkout the current PDFBox SNAPSHOT but the file /trunk/pdfbox/src/test/resources/org/apache/pdfbox/encryption/PasswordSample-128bit.pdf cannot be checked out (because of the virus scanner??? - same for PasswordSample-40bit.pdf)\r\n\r\nCan you ensure that the files are virus free? SVN error is svn: E175013\r\n\r\n\r\n\r\n",
        "cannot load jpg into new pdf When trying to load jpg, tif or png get error below.  Document is created but either gives \"out of memory error\" or \"cannot display image\" when document is opened.\r\n\r\nTried: jpg or jpeg\r\nmultiple resolutions\r\ncompression or no compression\r\ncreating a fresh image in gimp\r\ngrayscale or rgb\r\ndownloading an image from google images\r\nreading data into byte array and using byteinput stream\r\n\r\nnothing will allow me to load an image into the doc - all same result as below\r\n\r\n\r\nApr 13, 2014 1:50:02 PM org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage getColorSpace\r\nINFO: About to return NULL from unhandled branch. filter = COSName{DCTDecode}\r\n\r\n\t\t\tdoc = new PDDocument();\t\t\r\n\t\t\tPDPage page = new PDPage();\r\n\t\t\tFileInputStream in = new FileInputStream (\"logo.jpg\");\r\nDEBUG OUTPUT APPEARS AFTER EXEC OF THIS LINE:\t\t\t\r\n\t\t\tPDXObjectImage  img = new PDJpeg (doc, in);\t\t\t\r\n\t\t\tPDPageContentStream cs = new PDPageContentStream(doc, page);\t\t\r\n\t\t\tcs.drawImage(img, 72.0f, 720.0f);"
    ],
    [
        "PDFBOX-1678",
        "PDFBOX-3091",
        "Convert to image problem I build maven repo for pdfbox 2.0 version from git.\r\nI need convert pdf to image.\r\nIn pdf used font Arial from windows but i get not readable image.\r\n",
        "java.lang.ClassCastException: org.apache.fontbox.cff.CharStringCommand cannot be cast to java.lang.Integer {code}\r\njava.lang.ClassCastException: org.apache.fontbox.cff.CharStringCommand cannot be cast to java.lang.Integer\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:84)\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:89)\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:72)\r\n\tat org.apache.fontbox.type1.Type1Font.getType1CharString(Type1Font.java:200)\r\n\tat org.apache.fontbox.type1.Type1Font.getWidth(Type1Font.java:179)\r\n\tat org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont(PDType1Font.java:361)\r\n{code}\r\n"
    ],
    [
        "PDFBOX-50",
        "PDFBOX-3021",
        "Hierarchical PDRadioCollections cannot be processed. [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1178668\nOriginally submitted by mystikspiral on 2005-04-07 09:23.\n\nIf there is a hierarchical series of PDRadioCollections, \nthe list cannot be processed past the first instance of \nPDRadioCollection.  This is due to the fact that that the \ngetKids() method of PDRadioCollection is hard-coded to \nreturn a List of PDCheckbox objects. \n\nSimplified Example (See attached File):\nApplicant.Coverage (Coverage is a PDRadioCollection) \nApplicant.Coverage.Medical (Medical is a \nPDRadioCollection) \nApplicant.Coverage.Dental (Dental is a \nPDRadioCollection) \n\nPDRadioCollection Coverage = theForm.getField\n(\"Applicant.Coverage\");\nList kids = Coverage.getKids();\n...iterate kids....\nif(kid_1 instanceof PDRadioCollection){\n   //this should be true\n}\nelse if(kid_1 instanceof PDField){ {\n   //instead, we go here because the List contains \nPDCheckbox objects.\n}\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1178668&file_id=128963\nPDRadioCollection.java (java/*), 5833 bytes\nModified PDRadioCollection.java that fixes nested Radio Button objects.\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nI don't see the PDF on the FTP site, can you try to upload it \nagain, thanks.\n\nBen\n\n[comment on SourceForge]\nOriginally sent by mystikspiral.\nLogged In: YES \nuser_id=1245859\n\nI have resolved this issue, at least in so far as my \nrequirements dictated.  Instead of returning a List od \nPDCheckbox objects, the PDFieldFactory is now used to \ncreate the appropriate field in the lsit.  I am attaching \nPDRadioCollection.java for your review.  I hope you can use \nthis to close this issue with little to no effort on your end.\n\nNote the modified version of PDRadioCollection.java is taken \nfrom a slightly old nightly build, PDFBox-0.7.1-dev-20050328.\n\nThanks.\n\n[comment on SourceForge]\nOriginally sent by mystikspiral.\nLogged In: YES \nuser_id=1245859\n\nUploading file to ftp.pdfbox.org \ncalled \"Nested_PDRadioCollections.pdf\" because the upload \nas an attachment to this report failed beacause the size \nrestrictions were exceeded.  \n\nSorry for any confusion.",
        "Class Cast Exception: COSString -> COSName Following execption is generated while rendering a PDF (unfortunately confidential):\r\n\r\njava.lang.ClassCastException: org.apache.pdfbox.cos.COSString cannot be cast to org.apache.pdfbox.cos.COSName\r\n                at org.apache.pdfbox.pdmodel.font.PDFontDescriptor.getFontName(PDFontDescriptor.java:289)\r\n                at org.apache.pdfbox.pdmodel.font.ExternalFonts.getFallbackFontName(ExternalFonts.java:294)\r\n                at org.apache.pdfbox.pdmodel.font.ExternalFonts.getTrueTypeFallbackFont(ExternalFonts.java:273)\r\n                at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.<init>(PDTrueTypeFont.java:157)\r\n                at org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:75)\r\n                at org.apache.pdfbox.pdmodel.PDResources.getFont(PDResources.java:96)\r\n                at org.apache.pdfbox.contentstream.operator.text.SetFontAndSize.process(SetFontAndSize.java:50)\r\n                at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:802)\r\n                at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:464)\r\n                at org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:438)\r\n                at org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:149)\r\n                at org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:179)\r\n                at org.apache.pdfbox.rendering.PDFRenderer.renderPage(PDFRenderer.java:205)\r\n                at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:136)\r\n                at org.apache.pdfbox.rendering.PDFRenderer.renderImageWithDPI(PDFRenderer.java:95)\r\n\r\nIs this maybe related to https://issues.apache.org/jira/browse/PDFBOX-1756 but only in a different spot?\r\n\r\nHint: Revision of 2.0.0 version trunk is 1704293"
    ],
    [
        "PDFBOX-2088",
        "PDFBOX-2295",
        "Support Bouncycastle 1.50 Fedora Rawhide has moved on to bouncycastle 1.50.  Unfortunately this breaks pdfbox:\r\n\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project pdfbox: Compilation failure: Compilation failure:\r\n[ERROR] /builddir/build/BUILD/pdfbox-1.8.4/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java:[40,29] cannot find symbol\r\n[ERROR] symbol:   class DERObject\r\n[ERROR] location: package org.bouncycastle.asn1\r\n[ERROR] /builddir/build/BUILD/pdfbox-1.8.4/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java:[379,13] cannot find symbol\r\n[ERROR] symbol:   class DERObject\r\n[ERROR] location: class org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler\r\n[ERROR] /builddir/build/BUILD/pdfbox-1.8.4/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java:[186,49] method getContent in class org.bouncycastle.cms.RecipientInformation cannot be applied to given types;\r\n[ERROR] required: org.bouncycastle.cms.Recipient\r\n[ERROR] found: java.security.Key,java.lang.String\r\n[ERROR] reason: actual and formal argument lists differ in length\r\n[ERROR] /builddir/build/BUILD/pdfbox-1.8.4/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java:[312,17] cannot find symbol\r\n[ERROR] symbol:   class DERObject\r\n[ERROR] location: class org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler\r\n[ERROR] /builddir/build/BUILD/pdfbox-1.8.4/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java:[390,9] cannot find symbol\r\n[ERROR] symbol:   class DERObject\r\n[ERROR] location: class org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler\r\n[ERROR] /builddir/build/BUILD/pdfbox-1.8.4/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java:[403,29] reference to EnvelopedData is ambiguous\r\n[ERROR] both constructor EnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.ASN1Set) in org.bouncycastle.asn1.cms.EnvelopedData and constructor EnvelopedData(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.cms.Attributes) in org.bouncycastle.asn1.cms.EnvelopedData match\r\n[ERROR] /builddir/build/BUILD/pdfbox-1.8.4/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java:[406,27] cannot find symbol\r\n[ERROR] symbol:   method getDERObject()\r\n[ERROR] location: variable contentinfo of type org.bouncycastle.asn1.cms.ContentInfo\r\n",
        "Checkboxes missing PDF\r\nhttp://svn.apache.org/viewvc/incubator/pdfbox/trunk/test/input/c21-5916%20.pdf?revision=682412&view=co&pathrev=793348\r\n\r\njava -jar ~/pdf-box-svn/app/target/pdfbox-app-2.0.0-SNAPSHOT.jar PDFToImage c21-5916.pdf"
    ],
    [
        "PDFBOX-555",
        "PDFBOX-1471",
        "Highlight.jsp (pdfbox.war) not working Here the Highlighter Demo (pdfbox.war) didn't work (no highlighting) until I changed the ASF comment on the top of this file into a JSP comment. Thus this comment no more appears in the result stream (which is denoted 'XML' bit in fact isn't!)",
        "Parsing of xmp properties set in xml attributes is not done The attached xmp file is not parsed correctly, attributes are forgotten"
    ],
    [
        "PDFBOX-2398",
        "PDFBOX-2321",
        "Image transparency lost when convert to an image I try to convert a pdf file with transparent images to a image but the opacity is lost in the png result.\r\n\r\nIt's seem to be the same issue than https://issues.apache.org/jira/browse/PDFBOX-993 (fixed in 1.6.0).\r\n\r\nI test with code: (1.8.7)\r\npdPage.convertToImage(BufferedImage.TYPE_4BYTE_ABGR, 72);\r\n\r\nand with:\r\njava -jar pdfbox-app-1.8.7.jar PDFToImage -imageType png test.pdf\r\n",
        "java.lang.ExceptionInInitializerError in PDFRenderer.renderImageWithDPI An unhandled exception of type 'java.lang.ExceptionInInitializerError' occurs when calling the method with the following pdf and 96 dpi.\r\n\r\nrenderImageWithDPI(i, 96);"
    ],
    [
        "PDFBOX-3134",
        "PDFBOX-1595",
        "'Certain' PDF Extraction issue on double letters (i.e. 'ss' ) - drops second letter Hi there,\r\n\r\nWe have users that are uploading certain PDF files (only happens on some) and when the system extracts the text, when there is a double letter word like 'Mississauga', it comes up as Misisauga - removes the double letter.  This seem to only occur on some PDFs.  Also, issue is not present when using the original Word file.",
        "PDFMerger failed with the following exception: java.lang.NullPointerException Merging 2 PDF documents leads to a null pointer exception:\r\nFrom my point of view the PDF document misses the xref and startxref tag.\r\n\r\njava -jar pdfbox-app-1.8.1.jar PDFMerger \"bid.pdf\" \"2nd Testfile.pdf\" output.pdf\r\n\r\nMai 08, 2013 12:52:03 PM org.apache.pdfbox.pdfparser.XrefTrailerResolver setTrailer\r\nWARNING: Cannot add trailer because XRef start was not signalled.\r\nMai 08, 2013 12:52:03 PM org.apache.pdfbox.pdfparser.XrefTrailerResolver setStartxref\r\nWARNING: Did not found XRef object at specified startxref position 0\r\nPDFMerger failed with the following exception:\r\njava.lang.NullPointerException\r\n        at org.apache.pdfbox.util.PDFMergerUtility.appendDocument(PDFMergerUtility.java:257)\r\n        at org.apache.pdfbox.util.PDFMergerUtility.mergeDocuments(PDFMergerUtility.java:188)\r\n        at org.apache.pdfbox.PDFMerger.merge(PDFMerger.java:68)\r\n        at org.apache.pdfbox.PDFMerger.main(PDFMerger.java:44)\r\n        at org.apache.pdfbox.PDFBox.main(PDFBox.java:83)"
    ],
    [
        "PDFBOX-1691",
        "PDFBOX-1724",
        "\"Foreign\" characters are not rendered In the attached file (from page 3 of the pdf file), the letters \u00e4, \u00f6 and \u00fc are not rendered.\r\nI am using the version of last weekend.",
        "Method createColorModel not implemented for PDCalGray The method createColorModel is not implemented for the class PDCalGray - when called, it throws an IOException(!):\r\n{noformat}\r\n /**\r\n     * Create a Java colorspace for this colorspace.\r\n     *\r\n     * @return A color space that can be used for Java AWT operations.\r\n     *\r\n     * @throws IOException If there is an error creating the color space.\r\n     */\r\nprotected ColorSpace createColorSpace() throws IOException\r\n    {\r\n        throw new IOException( \"Not implemented\" );\r\n    }\r\n{noformat}\r\n\r\nThe exception thrown is catched elsewhere (by an aspect?) but it leads to an ugly stacktrace in the logfile .. :\r\n{noformat}\r\n2013-09-24 09:32:11,858 ERROR - PDPixelMap : java.io.IOException: Not implemented\r\njava.io.IOException: Not implemented\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDCalGray.createColorModel(PDCalGray.java:114)\r\n\tat ...\r\n\tat org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:781)\r\n....\r\n\r\n{noformat}"
    ],
    [
        "PDFBOX-48",
        "PDFBOX-1582",
        "Create a tagged PDF [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1172521\nOriginally submitted by benlitchfield on 2005-03-29 05:35.\n\nNeed to be able to create a tagged PDF document.\n\nBen",
        "Issues with available() and skip() on RandomAccessFileInputStream I'm trying to track down a strange bug when parsing PDF files on the IBM JDK that sometimes is giving me stack traces from RandomAccessFile classes. I started by writing unit tests for the PDFBox classes to verify their behavior and found a few issues. Can someone more familiar with the PDFBox code base please check the unit test I wrote and give advise on how it is supposed to work? I've added a TODO for each line where I'm in doubt what should be returned.\r\n\r\nThis unit test is for RandomAccessFileInputStream where I've found a few issues. The first is what available() is supposed to return if the input stream tries to go beyond the EOF of the underlying file? When reading single bytes it count down while still returning -1 and when reading a buffer, it is returning what it think is left. The JDK documentation states that available() may not return the absolute truth, so perhaps returning what it think is left is okay, but it shouldn't count down in single reads beyond EOF? Maybe it should be set to zero once a read beyond the EOF is detected?\r\n\r\nAnother issue is with skip() where the JDK documentation states that it should return the actual number of bytes skipped. When skipping beyond the EOF of the file, it does not return the actual number of skipped bytes. Also the underlying file is not updated with the new position. Is this correct behavior?\r\n\r\n"
    ],
    [
        "PDFBOX-422",
        "PDFBOX-2288",
        "Methods are marked as deprecated but they're effectively dead There are several methods on PDFTextStripper and PDFStreamEngine that are marked @deprecated, but they are not really used by the existing infrastructure anymore.\n\nThis would be ok if such methods weren't callbacks.  In this case, it breaks pre-existing code, and prevents the compiler from letting you know the methods are not to be used anymore.\n\nSimply removing the methods would have been a much better solution in this case. \n\nExample of said methods:\n\norg.apache.pdfbox.util.PDFTextStripper#processLineSeparator\norg.apache.pdfbox.util.PDFTextStripper#processWordSeparator\norg.apache.pdfbox.util.PDFTextStripper#writeCharacters\n",
        "Defective BufferedImage for flate encoded images The BufferedImages for flate encoded images seem to be defective. The following code results in a ArrayIndexOutOfBoundsException when writing the image:\r\n{code}\r\nPDDocument doc = PDDocument.load(\"test.pdf\");\r\nIterator<PDXObject> it = doc.getPage(0).getResources().getXObjects().values().iterator();\r\nPDImageXObject image = (PDImageXObject) it.next();\r\nBufferedImage bi = image.getImage();\r\ntry (FileOutputStream fos = new FileOutputStream(\"test.bmp\")) {\r\n    ImageIO.write(bi, \"bmp\", fos);\r\n}\r\n{code}\r\nThe problem did not exist in 1.8. The attached PDF just contains one flate encoded image."
    ],
    [
        "PDFBOX-1520",
        "PDFBOX-212",
        "bug when reading embedded fonts Dear Sir\r\nMy pdf file has embedded fonts but all is Arial , the problem when some char is bold i got the following error in java console\r\n\r\norg.apache.pdfbox.pdmodel.font.PDCIDFontType2Font getawtFont\r\nINFO: Can't read the embedded font AAWTAD+Arial\r\n26/12/2012 02:16:50 \u0645 org.apache.pdfbox.pdmodel.font.PDCIDFontType2Font getawtFont\r\nINFO: Using font Arial instead\r\n26/12/2012 02:16:51 \u0645 org.apache.pdfbox.pdmodel.font.PDCIDFontType2Font getawtFont\r\nINFO: Can't read the embedded font AAWSAD+Arial\r\n\r\nyou got any idea to solve this problem\r\n\r\nthanks ",
        "PDF Document cut German Umlauts [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1587745\nOriginally submitted by kajiro on 2006-10-31 01:05.\n\nI use the class TextToPDF for create a PDF Document\nfrom a text file. That operates correctly with a simply\ntext. But when i use german umlauts in the text like\n\u00c3\u00a4,\u00c3\u00b6,\u00c3\u00bc or \u00c3\u009f the PDF Document cut this letters. \n\nAttached is a sample document contaning four words with\nincorrectly umlauts! \n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1587745&file_id=200742\nbsp.pdf (application/pdf), 958 bytes\nUmlauts are incorrect\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\nOriginator: NO\n\nTo the anonymous poster, did you mean for both PDF links to be the same?\n\nBen\n\n[comment on SourceForge]\nOriginally sent by nobody.\nLogged In: NO \n\nFor PDF file, which contains accented Latin1\ncharacters:\n    http://acl.ldc.upenn.edu//P/P06/P06-2052.pdf\nI get a u with umlauts converted into \"currency1u\"\n(look at the first name on the first page).\n\nFor the following file containing Japanese characters:\n     http://acl.ldc.upenn.edu//P/P06/P06-2052.pdf\nI get error:\n     java.io.IOException: Unknown encoding for 'H'\nI also can't seem to cut and past the form."
    ],
    [
        "PDFBOX-679",
        "PDFBOX-2111",
        "Corruption of Arabic output due to Japanese bug fix The recent Japanese bug fix in org.apache.pdfbox.pdmodel.font.PDFont\r\ndefines a set of encoding names that are given special CJK treatment. This set is too broad. For example, it stipulates that the 'Identity-H' encoding should be processed as JIS.\r\n\r\nWe have Arabic PDFs where compound Arabic glyphs use the 'Identity-H' encoding. In pdfBox 1.0.0 they used to output Arabic but now they output garbage, because the Arabic unicode data is sent to the CJK converter.\r\n\r\nI've copied that description from the users mailing list [1]\r\n\r\n[1] http://markmail.org/thread/w5iof5hr3yqhthsp",
        "Cast error in Gouraud shadings There's a bug in Type4ShadingContext and Type5ShadingContext:\r\n{code}\r\n        long maxSrcCoord = (int) Math.pow(2, bitsPerCoordinate) - 1;\r\n        long maxSrcColor = (int) Math.pow(2, bitsPerColorComponent) - 1;\r\n{code}\r\nshould be\r\n{code}\r\n        long maxSrcCoord = (long) (Math.pow(2, bitsPerCoordinate) - 1);\r\n        long maxSrcColor = (long) (Math.pow(2, bitsPerColorComponent) - 1);\r\n{code}\r\nThe problem is that maxSrcCoord is 7FFFFFFF instead of FFFFFFFF when bitsPerCoordinate is 32."
    ],
    [
        "PDFBOX-26",
        "PDFBOX-1266",
        "Add options to LucenePDFDocument [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1050008\nOriginally submitted by benlitchfield on 2004-10-19 05:58.\n\nAdd the ability to set the size of the summary field.\nAdd the ability to set if the entire document should be \nstored or indexed.",
        "When I try to convert certain pages of certain PDF to images I am getting error java.lang.ClassCastException: org.apache.pdfbox.cos.COSNull cannot be cast to org.apache.pdfbox.cos.COSDictionary Unable to convert certain pages to images for certain PDF documents. Getting error:  java.lang.ClassCastException: org.apache.pdfbox.cos.COSNull cannot be cast to org.apache.pdfbox.cos.COSDictionary\r\n\r\nmethod for converting page is called this way: BufferedImage image = page.convertToImage(BufferedImage.TYPE_3BYTE_BGR, 300); // where page is of type org.\u200bapache.\u200bpdfbox.\u200bpdmodel.\u200bPDPage\r\n\r\nFull stacktrace (of relevant part):\r\njava.lang.ClassCastException: org.apache.pdfbox.cos.COSNull cannot be cast to org.apache.pdfbox.cos.COSDictionary\r\n\tat org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt.getRGBImage(PDCcitt.java:119)\r\n\tat org.apache.pdfbox.util.operator.pagedrawer.Invoke.process(Invoke.java:78)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:551)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:274)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:251)\r\n\tat org.apache.pdfbox.util.operator.pagedrawer.Invoke.process(Invoke.java:130)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:551)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:274)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:251)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:225)\r\n\tat org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:107)\r\n\tat org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:722)\r\n\tat eu.eudml.enhancement.pdf2textviaocr.PdfImageExtractor.extractImagesUsingPdfParser(PdfImageExtractor.java:236)\r\n\r\n"
    ],
    [
        "PDFBOX-2048",
        "PDFBOX-549",
        "TextExtraction only working after uncompressing with pdftk From Jonas Karlsson on the user list:\r\n===\r\nWe have a user with PDFs generated by a commercial transcription service.\r\nWhen we try to extract text from these pdfs, pdfbox returns a few empty\r\nlines. We get this result both from our own code, and when using the\r\nExtractText command line tool\r\n\r\nIf I specify the non-sequential parser, with the -nonSeq flag, the\r\nfollowing error is produced:\r\n\r\nApr 28, 2014 10:35:11 AM org.apache.pdfbox.pdfparser.NonSequentialPDFParser\r\nvalidateStreamLength\r\n\r\nSEVERE: The end of the stream doesn't point to the correct offset, using\r\nworkaround to read the stream\r\n\r\nIf I uncompress the file with pdftk, pdfbox is able to successfully extract\r\nthe text.\r\n===\r\n\r\nI have been given permission to attach the file \"committers only\". So don't pass it around, avoid quoting details from the file. The file is also not rendering. The lengths of the streams are 0.",
        "Lost links when merging with PDFMergerUtility (PDFMergerUtility does not merge Dests) When I merge to PDFs into one using PDFMerger the Destinations of the second PDF given are being lost.\r\n\r\nI looked into PDFMergerUtility class and found that mergeInto called on Names' COSDictionary doesn't work as intended.\r\n\r\nI tried to solve this problem, see the attached patch. Now I get both Destinations in the result PDF. \r\n\r\nPlease review & correct my lines before importing.\r\n\r\n\r\n"
    ],
    [
        "PDFBOX-467",
        "PDFBOX-2170",
        "index out of bounds exception this is with svn revision 773978\r\n\r\nI get this error with several pdf files,\r\n\r\nCaused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 0\r\n\tat java.lang.String.charAt(String.java:687)\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parseHeader(PDFParser.java:281)\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:156)\r\n\t... 3 more\r\n\r\nI can't give you the pdf file, but changing PDFParser line 281 to,\r\n\r\nif (header.length() > 0 && Character.isDigit (header.charAt(0)))\r\n\r\nfixes it.",
        "java.lang.ClassCastException: org.apache.fontbox.cff.CharStringCommand cannot be cast to java.lang.Integer p.59 of the attached file fails with\r\n\r\n{code}\r\njava.lang.ClassCastException: org.apache.fontbox.cff.CharStringCommand cannot be cast to java.lang.Integer\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:110)\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:89)\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:72)\r\n\tat org.apache.fontbox.type1.Type1Font.getType1CharString(Type1Font.java:151)\r\n\tat org.apache.fontbox.type1.Type1Font$Mapping.getType1CharString(Type1Font.java:207)\r\n\tat org.apache.pdfbox.pdfviewer.font.Type1Glyph2D.<init>(Type1Glyph2D.java:93)\r\n\tat org.apache.pdfbox.pdfviewer.font.Type1Glyph2D.<init>(Type1Glyph2D.java:65)\r\nStart parsing '002.zip002167.pdf'\r\n\tat org.apache.pdfbox.rendering.PageDrawer.createGlyph2D(PageDrawer.java:556)\r\n{code}\r\n"
    ],
    [
        "PDFBOX-1105",
        "PDFBOX-1271",
        "Integration Test in preflight to make easy validation I join a patch that add 3 Test to :\r\n- check isartor files and check if expected error occurs\r\n- check invalid files and check (if defined) if expected error occurs\r\n- check valid files \r\npom.xml is modified to set these test as integration test.\r\n\r\nIf nothing is configured, integration phase does not fail.\r\nIf parameters are configured, directories with pdf files are pointed and test should fail is configuration is invalid\r\n\r\nParameters are :\r\n* isartor.files = path of isartor files\r\n* expected.errors = the file that contains expected error codes (see preflight/src/test/resources/expected_errors.txt)\r\n* invalid.files = path of directory containing file known as invalid\r\n* invalid.errors = a file that can contain expected error code for invalid file, this is not mandatory\r\n* valid.files = path of directory containing file known as valid\r\nUse -D... to set parameters.\r\n\r\nI will not commit that patch quickly because I am not sure it is the best way to do. With this method, there is no PDF/A file in generated artefacts so no licence problem. Anyone can have his set of file to validate preflight even if I could be a good idea to share when possible ... But I don't known where.\r\n\r\nSo if anyone has suggestion to help ...\r\n\r\nsha1sum : d1694158976f7f6e69f893be149b7a1bb9a6a714  padaf-integ.patch\r\n\r\n\r\n\r\n",
        "Bug during direct printing PDF using pdfbox-1.6.0.jar I got the following exception during direct print using pdfbox-1.6.0.jar,fontbox-1.6.0.jar,jempbox-1.6.0.jar and commons-logging-1.1.1.jar\r\n\r\nDEBUG MESSAGE DirectPrint0: org.apache.pdfbox.pdmodel.font.PDType0Font cannot be cast to org.apache.pdfbox.pdmodel.font.PDType1Font\r\n\r\ni am using Oracle Report Server 10g and i am trieng to print PDF file including Arial font only it is fully embedded and it is type is TrueType not PDType0Font\r\n\r\nPlease tell how can i solve this problem\r\n\r\nThanks\r\n\r\nMahmoud"
    ],
    [
        "PDFBOX-1933",
        "PDFBOX-1457",
        "PDFParser loops infinitely when loaded by JSP instead of NetBeans I wrote a class to split large PDF files into segments, using NetBeans.  When I run it as a local project, it works perfectly.  It uses PDFParser to read the file input stream and output the document, so I can strip annotations and other stuff out and upload it to my database.  The code is as follows:\r\n\r\nPDFParser pdfParser = new PDFParser( inputStream );\r\npdfParser.parse();\r\nreturn pdfParser.getDocument();\r\n\r\nThe PDFParser works when I run it as a standalone Java package.  As soon as I embed it in a JSP, it loops forever.  I get no error messages of any kind, but I can see that my Java processes are increasing in size, and that the file I'm working on (the original PDF) is locked by the OS.  I have to shut down Java altogether to delete or rename it.\r\n\r\nI have no idea what the difference is when it is when it is run by a JSP calling the class file.  If there is a simple solution and this is a repeat of the old infinite loop bug, could someone point me in the right direction?  I have scoured the net looking for solutions, but I've had no luck.",
        "wasted work in TrailerValidationProcess.compareIds() The problem appears in revision 1414788.  I attached a four-line patch\r\nthat fixes it.  This problem and the attached patch are similar the\r\npreviously fixed PDFBOX-1447 and its patch.\r\n\r\nIn method \"TrailerValidationProcess.compareIds\", the loop over\r\n\"af.toList()\" (outer loop) should break immediately after \"isEqual\"\r\nbecomes \"false\", because \"isEqual = isEqual && oneIsEquals;\" can never\r\nbecome \"true\" again.\r\n\r\nThe loop over \"al.toList()\" (inner loop) should break immediately\r\nafter \"oneIsEquals\" is set to \"true\".  All the iterations after\r\n\"oneIsEquals\" is set to \"true\" do not perform any useful work because\r\nthe \"if\" statement depends on \"!oneIsEquals\"."
    ],
    [
        "PDFBOX-1255",
        "PDFBOX-1628",
        "[PATCH] Support translate/scale/rotate of overlay in Overlay.java As part of some ground-testing work I've been doing for pdf embedding enhancements in Apache FOP, I've modified PDFBox's Overlay.java to support translation, rotation and scaling of the PDF being overlaid.\r\n\r\nThis may be a useful feature for PDFBox, so I thought I'd send it in.\r\n\r\nRight now it uses the target PDF document's co-ordinate units for translations, so it's hard for users to know what translation to specify without trial and error. I'm not sure what the best way to remedy this is to make for a better user interface, but I suspect that adding the ability to set an origin (TL, BL, TR, BR, or center) that'd help. That way it's easier for them to say \"position the overlay on the top left\" for example. The actual translation amount could be given as a percentage of the target document size in that axis, maybe, or accept different unit suffixes like \"%\" or \"cm\". I'm not sure what the best approach is, and I won't need to explore it for my current project, but it should be easy enough to add.\r\n\r\ndiffstat:\r\n\r\nOverlay.java |  168 +++++++++++++++++++++++++++++++++++++++++++----------------\r\n 1 file changed, 123 insertions(+), 45 deletions(-)\r\n\r\nNext patch in series: https://issues.apache.org/jira/browse/PDFBOX-1256",
        "Type 3 Fonts are not processed by PDPage.createImage PDType3Font does not fetch the correct charprocs entry for a character.\r\nWhen that is corrected, one finds that Type3StreamParser is incomplete and cannot process the charprocs stream.\r\n"
    ],
    [
        "PDFBOX-2272",
        "PDFBOX-3149",
        "Can't extract vertical text correctly - -1.8.6 can't extract the Unicode due to failing to map the UCS2 CMap for 90ms-RKSJ-V.-\r\n- 2.0 extracts the text but can't handle the vertical layout\r\n\r\nAlso see the file from PDFBOX-2294 which contains both horizontal and vertical text.",
        "Failure to decrypt empty strings (AES 128) SecurityHandler fails to decrypt empty strings in a AES 128 encrypted PDF. \r\n\r\nStrings like: <</Name ()>>\r\n\r\nThis is because it tries to read the first 16 bytes as the AES IV, failing which it throws IOException. Solution: if you cannot read any bytes from the stream, it is empty and so there is nothing to decrypt."
    ],
    [
        "PDFBOX-1262",
        "PDFBOX-2605",
        "COSDocument visualSignature is not closed in PDDocument.addSignature() The signature template COSDocument \"visualSignature\" is not closed.",
        "Multiple text operations on page cause NPE in TTFSubsetter When multiple beginText/endText pairs are called within one page, the contentStream.close() fails with:\r\n\r\n{code}\r\njava.lang.NullPointerException\r\n\tat org.apache.fontbox.ttf.TTFSubsetter.getUnicodeCmap(TTFSubsetter.java:96)\r\n\tat org.apache.fontbox.ttf.TTFSubsetter.<init>(TTFSubsetter.java:85)\r\n\tat org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder.subset(TrueTypeEmbedder.java:296)\r\n\tat org.apache.pdfbox.pdmodel.font.PDType0Font.subset(PDType0Font.java:112)\r\n\tat org.apache.pdfbox.pdmodel.edit.PDPageContentStream.close(PDPageContentStream.java:2049)\r\n\tat org.marsik.elshelves.backend.services.StickerServiceTest.testFailingUnicodePDF(StickerServiceTest.java:60)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\r\n{code}\r\n\r\nThis can be reproduced using the following test case.\r\n\r\n{code}\r\npackage org.marsik.elshelves.backend.services;\r\n\r\nimport org.apache.pdfbox.pdmodel.PDDocument;\r\nimport org.apache.pdfbox.pdmodel.PDPage;\r\nimport org.apache.pdfbox.pdmodel.common.PDRectangle;\r\nimport org.apache.pdfbox.pdmodel.edit.PDPageContentStream;\r\nimport org.apache.pdfbox.pdmodel.font.PDFont;\r\nimport org.apache.pdfbox.pdmodel.font.PDType0Font;\r\nimport org.junit.Test;\r\n\r\npublic class StickerServiceTest {\r\n    @Test\r\n    public void testWorkingUnicodePDF() throws Exception {\r\n        PDDocument document = new PDDocument();\r\n\r\n        PDFont titleFont = PDType0Font.load(document, this.getClass().getResourceAsStream(\"/DejaVuSans-Bold.ttf\"));\r\n\r\n        PDPage page = new PDPage(PDRectangle.A4);\r\n        document.addPage(page);\r\n        PDPageContentStream contentStream = new PDPageContentStream(document, page);\r\n\r\n        contentStream.beginText();\r\n        contentStream.setFont(titleFont, 12);\r\n        contentStream.newLineAtOffset(0, 100);\r\n        contentStream.showText(\"P\u011bkn\u00fd \u017elu\u0165ou\u010dk\u00fd k\u016f\u0148 \u00fap\u011bl \u010f\u00e1belsk\u00e9 \u00f3dy\");\r\n        contentStream.endText();\r\n\r\n        contentStream.close();\r\n\r\n        document.close();\r\n    }\r\n\r\n    @Test\r\n    public void testFailingUnicodePDF() throws Exception {\r\n        PDDocument document = new PDDocument();\r\n\r\n        PDFont titleFont = PDType0Font.load(document, this.getClass().getResourceAsStream(\"/DejaVuSans-Bold.ttf\"));\r\n\r\n        PDPage page = new PDPage(PDRectangle.A4);\r\n        document.addPage(page);\r\n        PDPageContentStream contentStream = new PDPageContentStream(document, page);\r\n\r\n        contentStream.beginText();\r\n        contentStream.setFont(titleFont, 12);\r\n        contentStream.newLineAtOffset(0, 100);\r\n        contentStream.showText(\"P\u011bkn\u00fd \u017elu\u0165ou\u010dk\u00fd k\u016f\u0148 \u00fap\u011bl \u010f\u00e1belsk\u00e9 \u00f3dy\");\r\n        contentStream.endText();\r\n\r\n        contentStream.beginText();\r\n        contentStream.setFont(titleFont, 12);\r\n        contentStream.newLineAtOffset(0, 200);\r\n        contentStream.showText(\"P\u011bkn\u00fd \u017elu\u0165ou\u010dk\u00fd k\u016f\u0148 \u00fap\u011bl \u010f\u00e1belsk\u00e9 \u00f3dy\");\r\n        contentStream.endText();\r\n\r\n        contentStream.close();\r\n\r\n        document.close();\r\n    }\r\n}\r\n{code}"
    ],
    [
        "PDFBOX-278",
        "PDFBOX-1438",
        "Refactor some PageDrawer and Operator methods for .NET [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552834&aid=1728360\nOriginally submitted by danielwilson on 2007-05-30 07:23.\n\nAs discussed at https://sourceforge.net/forum/forum.php?thread_id=1693380&forum_id=267204\nI am using PDFBox to render some Adobe Illustrator 10 files -- which are PDF -- in a .NET viewer.\n\nThis has required me to extend PageDrawer in my .NET language so I can override methods that deal with Java's Graphics2D object.\n\nIn order to override some of these methods, I've had to refactor a few methods.  The primary changes are in PageDrawer.java, but several other files include supporting changes.\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1728360&file_id=240553\nSetStrokingColorSpace.java (text/java), 3234 bytes\nutil/operator/pagedrawer/SetStrokingColorSpace\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1728360&file_id=231106\nFillNonZeroRule.java (text/java), 3423 bytes\nutil/operator/pagedrawer/FillNonZeroRule\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1728360&file_id=231105\nFillEvenOddRule.java (text/java), 3418 bytes\nutil/operator/pagedrawer/FillEvenOddRule\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1728360&file_id=231104\nSetLineWidth.java (text/java), 2801 bytes\nutil/operator/pagedrawer/SetLineWidth\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1728360&file_id=231103\nStrokePath.java (text/java), 3043 bytes\nutil/operator/pagedrawer/StrokePath\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1728360&file_id=231102\nSetNonStrokingColorSpace.java (text/java), 3169 bytes\nutil/operator/pagedrawer/SetNonStrokingColorSpace\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1728360&file_id=231100\nPageDrawer.java (text/java), 12380 bytes\nPageDrawer\n\n[comment on SourceForge]\nOriginally sent by danielwilson.\nLogged In: YES \nuser_id=1737686\nOriginator: YES\n\nFix util/operator/pagedrawer/SetStrokingColorSpace to reflect inheritance correction noted in later patch.\nFile Added: SetStrokingColorSpace.java\n\n[comment on SourceForge]\nOriginally sent by danielwilson.\nLogged In: YES \nuser_id=1737686\nOriginator: YES\n\nFile Added: FillNonZeroRule.java\n\n[comment on SourceForge]\nOriginally sent by danielwilson.\nLogged In: YES \nuser_id=1737686\nOriginator: YES\n\nFile Added: FillEvenOddRule.java\n\n[comment on SourceForge]\nOriginally sent by danielwilson.\nLogged In: YES \nuser_id=1737686\nOriginator: YES\n\nFile Added: SetLineWidth.java\n\n[comment on SourceForge]\nOriginally sent by danielwilson.\nLogged In: YES \nuser_id=1737686\nOriginator: YES\n\nFile Added: StrokePath.java\n\n[comment on SourceForge]\nOriginally sent by danielwilson.\nLogged In: YES \nuser_id=1737686\nOriginator: YES\n\nFile Added: SetNonStrokingColorSpace.java\n\n[comment on SourceForge]\nOriginally sent by danielwilson.\nLogged In: YES \nuser_id=1737686\nOriginator: YES\n\nFile Added: SetNonStrokingColorSpace.java",
        "Problems with Image Extraction from PDF PDFBox don't extract images from pdf document correctly"
    ],
    [
        "PDFBOX-1687",
        "PDFBOX-2461",
        "add dispose() in pdfbox\\pdmodel\\PDPage.convertToImage() I suggest to add these two lines at the end of pdfbox\\pdmodel\\PDPage.convertToImage()\r\n\r\n        drawer.dispose();\r\n        graphics.dispose();\r\n\r\nThis would speed up cleanup after rendering. (Alternatively, delete the PageDrawer.dispose() function, because it is never used)",
        "Clear Checkstyle errors in source There are several checkstyle errors and warnings occurring for the current source code. Make sure that the errors are fixed."
    ],
    [
        "PDFBOX-2444",
        "PDFBOX-577",
        "Add radial shading example Add radial shading to the example created in PDFBOX-2211. Use both methods of adding a shading that emerged from PDFBOX-2370.",
        "TextPosition should expose its bounding box It does not seem to be possible to calculate the bounding box of a TextPosition.\r\n\r\nIIUC, TextPosition#getY is the baseline of the text and TextPosition#getHeight is the absolute height of the text. When I subtract the latter from the former I get a top line, but this is only correct if the text does not contain descender characters.\r\n\r\nBelow is a screenshot (AFM-getHeight.png) which shows the bounding boxes of TextPositions calculated as {#getX(), #getY() - #getHeight, #getWidth, #getHeight} painted in random colors. For example, the bounding boxes of parentheses are severely misplaced, which makes the line-by-line text extraction impossible.\r\n\r\nRight now I've solved the problem by tweaking AFM FontMetrics code so that it returns BoundingBox#getUpperRightY instead of BoundingBox#getHeight when queried via PDSimpleFont#getFontHeight(byte[], int, int). Another screenshot (AFM-getUpperRightY.png) shows how this restores the previously broken text extraction ability.\r\n\r\nIt seems like a good idea to rework TextPosition so that it would be aware of its bounding box:\r\n*) Replace methods PDSimpleFont#getFontWidth(byte[], int, int) and PDSimpleFont#getFontHeight(byte[], int, int) with a single method PDSimpleFont#getFontBoundingBox(byte[], int, int)\r\n*) Replace the constructor TextPosition(Matrix, Matrix) with TextPosition(Matrix, BoundingBox)\r\n*) Add new methods TextPosition#getBoundingBox, TextPosition#getBoundingBoxDir. This shouldn't affect existing application clients, because TextPosition#getY and TextPosition#getHeight remain in place."
    ],
    [
        "PDFBOX-2627",
        "PDFBOX-3046",
        "Add block composer to handle multiline text In order to generate the appearance for multiline text a *basic* plain text block composer needs to be developed. \r\n\r\nFeatures\r\n- box model\r\n- paragraph separation\r\n- line breaking\r\n- horizontal and vertical alignment\r\n- font setting, line height \u2026\r\n\r\nConceptually it should also include writing mode likely with the only initial implementation being lr-tb.\r\nThere should be no new dependencies on projects such as ICU which will limit the capabilities but should be acceptable to the needs of form filling.\r\nTo not create the *false* assumption that this is a generic composer it will be sub packaged within the (AcroForms) forms package(s).",
        "Specific PDF prints really (REALLY) slow On Windows 10 I have printed a test page using the MS Publisher Color Printer (which outputs a Postscript-file) and converted that file to PDF using GhostScript ps2pdf.\r\n\r\nThe resulting single-page PDF file is printed really, really slow (180-190 seconds) while other documents (even generated using ps2pdf) print a lot faster (some seconds).\r\n\r\nI can't figure out why this is. I guess it has someting to do with the used font, but other PDF printing libraries (jPedal, jPDFPrint) are able print the same documents in a couple of seconds."
    ],
    [
        "PDFBOX-992",
        "PDFBOX-2809",
        "IndexOutOfBoundsException: while parsing few pdf's Hi Team, The text extraction works fine with most pdf's but it failed for couple of them with the below error: The pdf can be found here http://cid-a3aa7f7d9888874d.office.live.com/self.aspx/Public/getting%5E_started%5E_with%5E_Flex3.pdf . Let me know if this is a bug or an issue with the pdf.\r\n\r\njava.lang.IndexOutOfBoundsException: Index: 2,Size: 2\r\nat java.util.SubList.rangeCheck(AbstractList.java:864)\r\nat java.util.SubList.get(AbstractList.java:737)\r\nat org.apache.fontbox.cff.CharStringConverter.drawCurve(CharStringConverter.java:415)\r\nat org.apache.fontbox.cff.CharStringConverter.handleType2Command(CharStringConverter.java:277)\r\nat org.apache.fontbox.cff.CharStringConverter.handleCommand(CharStringConverter.java:81)\r\nat org.apache.fontbox.cff.CharStringHandler.handleSequence(CharStringHandler.java:53)\r\nat org.apache.fontbox.cff.CharStringConverter.handleType2Command(CharStringConverter.java:307)\r\nat org.apache.fontbox.cff.CharStringConverter.handleCommand(CharStringConverter.java:81)\r\nat org.apache.fontbox.cff.CharStringHandler.handleSequence(CharStringHandler.java:53)\r\nat org.apache.fontbox.cff.CharStringConverter.convert(CharStringConverter.java:64)\r\nat org.apache.fontbox.cff.CFFFont$Mapping.toType1Sequence(CFFFont.java:374)\r\nat org.apache.fontbox.cff.AFMFormatter.renderFont(AFMFormatter.java:126)\r\nat org.apache.fontbox.cff.AFMFormatter.printFontMetrics(AFMFormatter.java:64)\r\nat org.apache.fontbox.cff.AFMFormatter.printFont(AFMFormatter.java:57)\r\nat org.apache.fontbox.cff.AFMFormatter.format(AFMFormatter.java:50)",
        "Error trying to read the header of all the pages of a document I am trying to read a documento with a lot of pages,\r\nand the header of all pages came as another text.\r\n\r\n\r\n\r\nI am sending the  test class and the document i am trying to read."
    ],
    [
        "PDFBOX-790",
        "PDFBOX-1482",
        "Text extraction from PDF generated from MS Word fails The attached PDF gives the following error when trying to extract text with PDFBox 1.2.1:\r\n\r\n\r\ndylan@dylan-laptop:~/desktop/pdfbox$ java org.apache.pdfbox.ExtractText -console Document2.v1.20100630.pdf \r\nJul 12, 2010 9:00:31 AM org.apache.pdfbox.util.PDFStreamEngine processOperator\r\nWARNING: java.io.IOException: Error: expected hex character and not :32\r\njava.io.IOException: Error: expected hex character and not :32\r\nat org.apache.fontbox.cmap.CMapParser.parseNextToken(CMapParser.java:336)\r\nat org.apache.fontbox.cmap.CMapParser.parse(CMapParser.java:139)\r\nat org.apache.pdfbox.pdmodel.font.PDFont.parseCmap(PDFont.java:556)\r\nat org.apache.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:390)\r\nat org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:386)\r\nat org.apache.pdfbox.util.operator.ShowTextGlyph.process(ShowTextGlyph.java:61)\r\nat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:567)\r\nat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:250)\r\nat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:208)\r\nat org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:378)\r\nat org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:302)\r\nat org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:258)\r\nat org.apache.pdfbox.ExtractText.main(ExtractText.java:236)\r\nJul 12, 2010 9:00:31 AM org.apache.pdfbox.util.PDFStreamEngine processOperator\r\nWARNING: java.io.IOException: Error: expected hex character and not :32\r\njava.io.IOException: Error: expected hex character and not :32\r\nat org.apache.fontbox.cmap.CMapParser.parseNextToken(CMapParser.java:336)\r\nat org.apache.fontbox.cmap.CMapParser.parse(CMapParser.java:139)\r\nat org.apache.pdfbox.pdmodel.font.PDFont.parseCmap(PDFont.java:556)\r\nat org.apache.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:390)\r\nat org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:386)\r\nat org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:45)\r\nat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:567)\r\nat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:250)\r\nat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:208)\r\nat org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:378)\r\nat org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:302)\r\nat org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:258)\r\nat org.apache.pdfbox.ExtractText.main(ExtractText.java:236)\r\nJul 12, 2010 9:00:31 AM org.apache.pdfbox.util.PDFStreamEngine processOperator",
        "Java color spaces returned by PDDeviceN do not take tint transformation into account and type mismatch A patch to fix this issue is provided. Be sure to review it... this is my first contribution.\r\n\r\nI tried to solve jira issue PDFBOX-1058 (to contribute a bit) and tried to convert the file referenced in this ticket to images using standard utilities and I got lots of NullPointerExceptions.\r\n\r\n1) These NPE occurs because the java color space returned by the PDDeviceN doesn't take the tint transformation function into account. When the toRGB method method of the color space (ColorSpaceCMYK for the pdf file linked to PDFBOX-1058) is called it returns null because the length of the array is not of the expected size. This occurs because the tint transformation function is not called. The provided patch fix this.\r\n\r\n2) By debugging this, I also got CastException because I called get/setColorantName method that were declared to return list of COSBase. In reality they returned list of Strings. To avoid these kind of errors in the future, I also introduced generics in the COSArrayList data type. This is also provided in the patch.\r\n\r\nThe ticket PDFBOX-1058 is still not fully fixed by the patch. Colors still looks horrible on some parts. I'm working on it...\r\nHowever, by applying the patch there is a clear quality improvement (xerox logo on the upper left part of the first page and wave effect in the middle of the first page)."
    ],
    [
        "PDFBOX-2559",
        "PDFBOX-1071",
        "TTF font cannot be loaded I'm trying to use TextToPDF from the main bundle of PDFBox.\r\nTo make different encodings work I've read that the font Doulus should be used.\r\nhttp://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&id=DoulosSIL_download\r\n\r\nHowever upload specifying the font with the -ttf options I'm seeing the following exception:\r\n{code}\r\npacsaar:jocon-test-local mbergmann$ java -jar lib/pdfbox-app-1.8.6.jar TextToPDF -ttf ~/Downloads/DoulosSIL-5.000/DoulosSIL-R.ttf Test33-pdfbox.pdf Test33-TextJP-UTF8.txt \r\njava.lang.NullPointerException\r\n\tat org.apache.pdfbox.pdmodel.common.PDStream.<init>(PDStream.java:120)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:189)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:175)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:162)\r\n\tat org.apache.pdfbox.TextToPDF.main(TextToPDF.java:193)\r\n\tat org.apache.pdfbox.PDFBox.main(PDFBox.java:100)\r\n{code}",
        "Can not generate chinese character PDF file I practice the PDF generate code for chinese character and load the chinese font ttf, but can not get the chinese PDF with correct display.'\r\nThe code is as below: The font coding is UTF-8\r\n\r\n            doc = new PDDocument();\r\n            PDPage page = new PDPage();\r\n            doc.addPage( page );\r\n            PDFont font = PDTrueTypeFont.loadTTF(doc, \"d:\\\\temp\\\\ttf\\\\fireflysung.ttf\");\r\n            PDPageContentStream contentStream = new PDPageContentStream(doc, page);\r\n            contentStream.beginText();\r\n            contentStream.moveTextPositionByAmount(100, 700);\r\n             contentStream.setFont(font,12);\r\n            \r\n            contentStream.drawString(\"\u4e2d\u6587\u6e2c\u8a66\");\r\n            contentStream.endText();\r\n            contentStream.close();\r\n            doc.save(\"d:\\\\temp\\\\helloworld.pdf\");"
    ],
    [
        "PDFBOX-1352",
        "PDFBOX-960",
        "xmpbox refactoring Today, some xmp schema and some objects are missing.\r\nThe interfaces are close to jempbox but not really similar.\r\nConvenience method for creation of schema are missing.\r\n\r\nThe aim of this issue is to :\r\n* make interface similar\r\n* create missing object and methods\r\n* clean useless code\r\n",
        "Null Pointer Exception when Annotation is missing the Subtype If an annotation is missing the required Subtype then calling createAnnotation() will result in a NPE.\r\nA better result is to return null and let the upper level code handle it.\r\n"
    ],
    [
        "PDFBOX-2261",
        "PDFBOX-1500",
        "Extremely long hang during getFields() on a few PDF files When I run oap.examples.fdf.PrintFields from trunk, the code seems to hang during acroForm.getFields().  This is a heavy load hang.\r\n",
        "TextPosition instance return wrong position  I use PDFTextStripper to strip text from PDF.\r\n\r\nbut the TextPosition instance generated during the strip process return the wrong position.\r\n\r\n"
    ],
    [
        "PDFBOX-66",
        "PDFBOX-2525",
        "TextPosition.width incorrect if text is rotated [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1228171\nOriginally submitted by yves_bussard on 2005-06-27 04:38.\n\nHi Ben,\n\nI noticed that if a text is rotated, then it's widht is\nnot calculated correctly. This is because you only look\nat the page rotation rather than the transformation\nmatrix. I.e. the page may not have a rotation but the\ntext itself may be rotated (e.g. because the text\ntransformation matrix contains a rotation). \n\nYou do this just before calling showCharacter() at the\nend of the method showString(). I fixed this in my\nversion by using the following method to retrieve the\nrotation:\n\n/**\n * Returns the current absolute rotation of the text.\n * @param ctm the current transformation matrix.\n * @param textTransformationMatrix the transformation\nmatrix\n *              of the text.\n * @return the current absolute rotation of the text. The \n *              returned value is one of 0, 90, 180, 270\n */\nprotected int getTextRotation (\n Matrix ctm, Matrix textTransformationMatrix\n) {\n // compute the rotation\n Matrix m=(Matrix) textTransformationMatrix.clone();\n m.multiply(ctm);\n float a= m.getValue(0,0);\n float b= m.getValue(0,1);\n float c= m.getValue(1,0);\n float d= m.getValue(1,1);\n int rotation=0;\n if (Math.abs(a * d) > Math.abs(b * c)) {\n  rotation= (d>0) ? 0 : 180;\n } else {\n  rotation= (c<0) ? 90 : 270;\n }\n return rotation;\n}\n\nI'm using the rotation returned by this method instead\nof the pageRotation to calculate the\ntotalStringDisplacement. Also, you may want to add the\nhandling of a 180 rotation.\n\nI don't know if somehow we have to take the\npageRotation in consideration or whether this is\nalready included in the CTM.\n\ncheers\nYves",
        "Overlay: data black & white after import After overlaying two documents, everything in the source is black & white only. I uploaded a screenshot to \r\n\r\nhttps://oc.evopark.de/public.php?service=files&t=0d7e4e172c30c23b260d3c96cc4986b5\r\n\r\nMay relate to PDFBOX-2401.\r\n\r\nSome more details: I'm doing everything in-memory, not operating on files. This is the sample code:\r\n{code:java}\r\n    public static byte[] mergeOntoLetterhead(byte[] originalPdf) throws IOException, COSVisitorException {\r\n        PDDocument pdf = PDDocument.load(new ByteArrayInputStream(originalPdf));\r\n        if (pdf.getNumberOfPages() == 0) {\r\n            return originalPdf;\r\n        }\r\n        PDDocument template = readTemplate();\r\n        if (null != template) {\r\n            Overlay overlay = new Overlay();\r\n            pdf = overlay.overlay(template, pdf);\r\n        } else {\r\n            logger.error(\"Could not load letterhead PDF\");\r\n            return originalPdf;\r\n        }\r\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\r\n        pdf.save(outputStream);\r\n        return outputStream.toByteArray();\r\n    }\r\n{code}"
    ],
    [
        "PDFBOX-88",
        "PDFBOX-2704",
        "error filling in form fields [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1277051\nOriginally submitted by benlitchfield on 2005-08-30 19:33.\n\nVerify that all fields in the dolform.pdf can be populated \nand extracted.  Verify for both FDF and XFDF formats.\n\nBen",
        "PDPageTree.indexOf doesn't find page numbers I know PDFBOX-2423 is not closed yet so I'm not sure if the issues I'm having are a cause of that.\r\nI'm using the latest trunk and I have issues with the PDPageTree.indexOf method. The javadoc reads ??Returns the index of the given page, or -1 if it does not exist.?? which I understand it means in returns -1 if the given page is not found in the page tree correct? If so, the following unit test fails:\r\n{code}\r\n @Test\r\n    public void indexOfNotFoundPage() throws IOException {\r\n        PDDocument doc1 = PDDocument.load(getClass().getClassLoader()\r\n                .getResourceAsStream(\"pdf/bigger_outline_test.pdf\"));\r\n        assertEquals(-1, doc1.getPages().indexOf(new PDPage()));\r\n    }\r\n{code}\r\n\r\nAnother similar issue I have is that PDPageTree.indexOf doesn't find the correct index for a PDPage returned by the PDOutlineItem.findDestinationPage:\r\n{code}\r\n@Test\r\n    public void indexOfPageFromOutlineDestination() throws IOException {\r\n        PDDocument doc = PDDocument\r\n                .load(getClass().getClassLoader().getResourceAsStream(\"pdf/bigger_outline_test.pdf\"));\r\n        PDDocumentOutline outline = doc.getDocumentCatalog().getDocumentOutline();\r\n        for (PDOutlineItem current : outline.children()) {\r\n            if (current.getTitle().contains(\"Second\")) {\r\n                assertEquals(3, doc.getPages().indexOf(current.findDestinationPage(doc)));\r\n            }\r\n        }\r\n    }\r\n{code}\r\n\r\nAlso note that indexOf is used by PDPageDestination.findPageNumber which also returns a wrong result.\r\n"
    ],
    [
        "PDFBOX-924",
        "PDFBOX-2705",
        "Image not getting rendered correctly.. Hi,\r\n\r\nI converted a MS office word document in to pdf using open office. And then I used the PDFBox API to convert the pages of the PDF to Image. \r\n\r\nClass : PDPage\r\nAPI : public BufferedImage convertToImage(int imageType, int resolution) \r\n\r\nBut the image contained \")\" characters which were not present in the pdf. ",
        "Add IKVM support to Maven build As discussed in the mailing list, we want to eliminate the ant build.  It remains almost exclusively for the IKVM build.  If we get the Maven build invoking IKVM, we both get the IKVM target on solid footing and eliminate the older, almost redundant ant build."
    ],
    [
        "PDFBOX-1510",
        "PDFBOX-392",
        "PDF gets corrupted when extracting it from the embedded files When a PDF is attached to another PDF it gets corrupted when retrieved through PDEmbeddedFile.getByteArray() method call. For some reason the returned array has less data than the original file that has been attached to the PDF.\r\n\r\nThis affects some of the documents and not another (see attachments for working/non-working files), source code reproducing the issue has been attached as well.\r\n\r\nPlease note: the issue is not occurring when using PDDocument.loadNonSeq, it's on when using PDDocument.load",
        "Remove or replace the ICC profiles The ICC profiles in src/main/resources/Resources/colorspace-profiles are licensed under the Sun Binary Code License that doesn't satisfy the Open Source Definition and is thus can not be distributed by an Apache project.\n\nThe ICC profiles (more accurately just the CMYK profile) are used by the o.a.p.pdmodel.graphics.color.PDDeviceCMYK class. Would it be possible for us to get the CMYK color profile from somewhere with a different license? Alternatively, is there some other way we could avoid using the CMYK profile or perhaps automatically locate and  (if available) use it only in the runtime environment?\n\nIn any case we need to drop the current ICC profiles from src/main/resources/Resources/colorspace-profiles.\n\n"
    ],
    [
        "PDFBOX-982",
        "PDFBOX-3209",
        "Unable to convert valid pdf to html Encountered an exception while converting a pdf to HTML/ text using pdfbox-app-1.5.0.\r\nThe file in this case is \"team21_devel.pdf\", please note this seems to be a valid PDF as it gets opened in adobe reader.\r\n\r\nI have used the command line utility as \r\njava -jar pdfbox-app-1.5.0.jar ExtractText -html team21_devel.pdf \r\nThe Exception :\r\nExtractText failed with the following exception:\r\njava.io.IOException: Expected='null' actual='nullnullnull'\r\n    at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:1025)\r\n    at org.apache.pdfbox.pdfparser.BaseParser.parseCOSArray(BaseParser.java:802)\r\n    at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:1011)\r\n    at org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue(BaseParser.java:179)\r\n    at org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary(BaseParser.java:292)\r\n    at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:1000)\r\n    at org.apache.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:533)\r\n    at org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:180)\r\n    at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:881)\r\n    at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:846)\r\n    at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:771)\r\n    at org.apache.pdfbox.ExtractText.main(ExtractText.java:179)\r\n    at org.apache.pdfbox.PDFBox.main(PDFBox.java:42)\r\n\r\nRelated markmail - http://pdfbox-users.markmail.org/message/4hu3awc4a775fczz?q=type:users+list:org%2Eapache%2Epdfbox%2Eusers&page=1",
        "Overlay class does not work with in-memory PDFs The class {{org.apache.pdfbox.multipdf.Overlay}} has no possibility to perform the overlay only in memory (using a custom {{OutputStream}}). It is currently fixed to work with files only.\r\n\r\nA suggestion would be to add an overload {{public void overlay(Map<Integer, String> specificPageOverlayFile, OutputStream outStream) throws IOException}} which uses the outStream if supplied and falls back to {{outputFilename}} if null is passed (would be an easy solution)\r\n  "
    ],
    [
        "PDFBOX-1096",
        "PDFBOX-1614",
        "CMapParser doesn't parse cmap version CMapParser doesn't parse cmap version because it is usually number and CMapParser expect it to be always string.",
        "Digitally sign PDFs without file system access Hi I'm using pdfbox-1.8.1 to digitally sign PDFs.\r\n\r\nI find the sample below to handle it.\r\n\r\nBut in this example I have to use a FileInputStream however I want to do it only through streams (without any file system access). I tried to extends FileInputStream to deal with it but I failed. Any tips for me about that problem ?\r\n\r\nThanks.\r\n\r\nFile outputDocument = new File(\"resources/signed\" + document.getName());\r\n    FileInputStream fis = new FileInputStream(document);\r\n    FileOutputStream fos = new FileOutputStream(outputDocument);\r\n\r\n    int c;\r\n    while ((c = fis.read(buffer)) != -1)\r\n    {\r\n      fos.write(buffer, 0, c);\r\n    }\r\n    fis.close();\r\n    fis = new FileInputStream(outputDocument);\r\n\r\n    // load document\r\n    PDDocument doc = PDDocument.load(document);\r\n\r\n    // create signature dictionary\r\n    PDSignature signature = new PDSignature();\r\n    signature.setFilter(PDSignature.FILTER_ADOBE_PPKLITE); // default filter\r\n    // subfilter for basic and PAdES Part 2 signatures\r\n    signature.setSubFilter(PDSignature.SUBFILTER_ADBE_PKCS7_DETACHED);\r\n    signature.setName(\"signer name\");\r\n    signature.setLocation(\"signer location\");\r\n    signature.setReason(\"reason for signature\");\r\n\r\n    // the signing date, needed for valid signature\r\n    signature.setSignDate(Calendar.getInstance());\r\n\r\n    // register signature dictionary and sign interface\r\n    doc.addSignature(signature, this);\r\n\r\n    // write incremental (only for signing purpose)\r\n\r\n    doc.saveIncremental(fis, fos);"
    ],
    [
        "PDFBOX-734",
        "PDFBOX-981",
        "how to access a PDoutlineNode object's parent without using its protected menthod getParent() ? I have some java codes that depend on the getParent() method to traverse the PDOutlineNode structure. They works fine with old version of PDFBox since this method is declared as a public method. Now it is changed to protected in the new version 1.1.0. How should I make my code work without extending or subclassing PDOutlineNode? ",
        "PDColorspaceFactory does not recognize colorspace DeviceGray (patch included herein) I was trying to use PDFTextStripper to extract text from a large corpus of PDF files. In some of them, the method:\r\n\r\norg.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory.createColorSpace( COSBase colorSpace, Map colorSpaces )\r\n\r\nfails to recognize the case when the colorSpace argument is of type COSArray and the array's (first) element corresponds to COSName.DEVICEGRAY. Adding that case successfully parses the files that failed with the stock pdfbox-1.5.0. Below is a diff of my patched PDColorSpaceFactory that handles the case where the colorspace name is DeviceGray. Incidentally, it occurs to me that another (possibly better) approach is to call through to createColorSpace(String) when no other case matches.\r\n\r\n% diff PDColorSpaceFactory.java.orig PDColorSpaceFactory.java\r\n94a95,97\r\n> else if ( type.getName().equals( PDDeviceGray.NAME) ) {\r\n> retval = new PDDeviceGray();\r\n> }"
    ],
    [
        "PDFBOX-2097",
        "PDFBOX-2345",
        "Remove pdfbox-war subproject I'd like to remove the pdfbox-war subproject. It's nothing more like an examples and hasn't any benefit for pdfbox itself.\r\n",
        "IndexOutOfBoundsException reading encrypted pdf java -jar ~/pdf-box-svn/app/target/pdfbox-app-2.0.0-SNAPSHOT.jar WriteDecodedDoc -nonSeq out.pdf\r\n\r\nException in thread \"main\" java.lang.IndexOutOfBoundsException: Index: 4, Size: 4\r\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:635)\r\n\tat java.util.ArrayList.get(ArrayList.java:411)\r\n\tat org.apache.pdfbox.pdfparser.PDFObjectStreamParser.parse(PDFObjectStreamParser.java:110)\r\n"
    ],
    [
        "PDFBOX-254",
        "PDFBOX-2109",
        "crash with some pdf files [imported from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1673358\r\nOriginally submitted by code_slave on 2007-03-04 00:44.\r\n\r\nSource breakpoint occurred at line 84 of Invoke.java.\r\n at org.pdfbox.util.operator.pagedrawer.Invoke.process(Invoke.java:84)\r\n at org.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:452)\r\n at org.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:215)\r\n at org.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:174)\r\n at org.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:105)\r\n at org.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:657)\r\n at VFW.Viewers.visualDocumentViewer.recoverimagefromdb(visualDocumentViewer.java:634)\r\n at VFW.Viewers.visualDocumentViewer.mav$recoverimagefromdb(visualDocumentViewer.java:86)\r\n at VFW.Viewers.visualDocumentViewer$1.run(visualDocumentViewer.java:690)\r\n at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:189)\r\n at java.awt.EventQueue.dispatchEvent(EventQueue.java:478)\r\n at java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:234)\r\n at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:184)\r\n at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:178)\r\n at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:170)\r\n at java.awt.EventDispatchThread.run(EventDispatchThread.java:100)",
        "CFFParser uses String constructor without encoding The string constructor called in CFFParser#readTagName() should specify an encoding, probably \"ISO-8859-1\", otherwise it will not work on systems where the default encoding is something \"exotic\" (we have some with EBCDIC, but I never tried to run PDFBox there). Patch attached."
    ],
    [
        "PDFBOX-732",
        "PDFBOX-1057",
        "Loading TTF font files from the classpath Currently (pdfbox 1.1.0 & 1.2.0 snapshot) TTF font files can only be loaded from the file system as PDTrueTypeFont exposes two load methods:\r\n    public static PDTrueTypeFont loadTTF(PDDocument, String)\r\n    public static PDTrueTypeFont loadTTF(PDDocument, File)\r\nThe first wraps the String in a java.io.File object and delegates to the second, so all TTF reading is from the file system.\r\n\r\nIt would be useful to be able to read TTF files from the classpath - or indeed from any arbitrary stream.\r\nCould we have a third method?:\r\n    public static PDTrueTypeFont loadTTF(PDDocument, InputStream)\r\n\r\nThis would allow TTFs to be loaded like so:\r\nPDTrueTypeFont.load(myDoc, MyClass.class.getClassLoader().getResourceAsStream(\"myFont.ttf\"));\r\n\r\nFor what it's worth here's a patch of what I did (see below).\r\nOne uncertainty I had was about the use of the COSName.LENGTH1 field which only seems to be used currently in PDTrueTypeFont. So it may be reasonable or not to push the setting of this attribute into the PDStream constructor.\r\n\r\n\r\nIndex: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java\r\n===================================================================\r\n--- pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java\t(revision 948363)\r\n+++ pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java\t(working copy)\r\n@@ -114,12 +114,17 @@\r\n             {\r\n                 output = stream.createUnfilteredStream();\r\n             }\r\n+            int bytesInInputStream = 0;\r\n             byte[] buffer = new byte[ 1024 ];\r\n             int amountRead = -1;\r\n             while( (amountRead = str.read(buffer)) != -1 )\r\n             {\r\n                 output.write( buffer, 0, amountRead );\r\n+                bytesInInputStream += amountRead;\r\n             }\r\n+            \r\n+            // Set the number of bytes read from the input stream\r\n+            this.stream.setInt( COSName.LENGTH1, bytesInInputStream );\r\n         }\r\n         finally\r\n         {\r\nIndex: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java\r\n===================================================================\r\n--- pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java\t(revision 948363)\r\n+++ pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java\t(working copy)\r\n@@ -130,7 +130,7 @@\r\n     }\r\n \r\n     /**\r\n-     * This will load a TTF to be embedding into a document.\r\n+     * This will load a TTF to be embedded into a document.\r\n      *\r\n      * @param doc The PDF document that will hold the embedded font.\r\n      * @param file A TTF file stream.\r\n@@ -139,21 +139,32 @@\r\n      */\r\n     public static PDTrueTypeFont loadTTF( PDDocument doc, File file ) throws IOException\r\n     {\r\n+        return loadTTF( doc, new FileInputStream( file ) );\r\n+    }\r\n+\r\n+    /**\r\n+     * This will load a TTF to be embedded into a document.\r\n+     *\r\n+     * @param doc The PDF document that will hold the embedded font.\r\n+     * @param stream A TTF input stream.\r\n+     * @return A PDF TTF.\r\n+     * @throws IOException If there is an error loading the data.\r\n+     */\r\n+    public static PDTrueTypeFont loadTTF( PDDocument doc, InputStream stream ) throws IOException\r\n+    {\r\n         PDTrueTypeFont retval = new PDTrueTypeFont();\r\n         PDFontDescriptorDictionary fd = new PDFontDescriptorDictionary();\r\n-        PDStream fontStream = new PDStream(doc, new FileInputStream( file ), false );\r\n-        fontStream.getStream().setInt( COSName.LENGTH1, (int)file.length() );\r\n+        PDStream fontStream = new PDStream(doc, stream, false );\r\n         fontStream.addCompression();\r\n         fd.setFontFile2( fontStream );\r\n         retval.setFontDescriptor( fd );\r\n-        InputStream ttfData = new FileInputStream(file);\r\n         try\r\n         {\r\n-            loadDescriptorDictionary(retval, fd, ttfData);\r\n+            loadDescriptorDictionary(retval, fd, stream);\r\n         }\r\n         finally\r\n         {\r\n-            ttfData.close();\r\n+            stream.close();\r\n         }\r\n         //only support winansi encoding right now, should really\r\n         //just use Identity-H with unicode mapping\r\n\r\n",
        "PDXObjectImage create diferences between pdf on mac and windows Hi! I hope you can help me with this, I have a pdf form, I use pdfbox to fill the fields, but also to add a barcode to the form, the barcode is generated with jbars, this generate a jpg, then I add this jpg to the pdf form,  on Mac works everything fine, but when I generate/open the same form on Windows the  barcode is distorted, I dont know whats going on, not sure If I did something wrong or is the pdfbox.\r\n\r\n[code]\r\n                File fi = new File(codigoBarras.getPathToImg());   //the generated Codebar\r\n\t\tif(!fi.exists() || !fi.canRead()){\r\n\t\t\tLog.error(\"GenerarPoliza\", \"La imagen del codigo de barras no se genero correctamente.\");  //the codebar didnt generate correctly\r\n\t\t\tcodigo = false;\r\n\t\t}\r\n\t        PDXObjectImage ximage = null;\r\n\t\tximage = new PDJpeg(this.pdf, new FileInputStream( fi ) );   //this.pdf is the pdf document.\r\n\t\tximage.setWidth(toPixel(60 * pixelXmm_x));  //set the width of the image\r\n\t\tximage.setHeight(toPixel(13 * pixelXmm_x)); //set the height of the image\r\n\t\tPDPageContentStream contentStream = new PDPageContentStream(this.pdf, pagina, true , true);\r\n\t\tcontentStream.drawImage(ximage, toPixel(20.0 * pixelXmm_x), toPixel(10.0 * pixelXmm_y));  //draw the codebars to the given coordinates. \t\t\r\n\t\tcontentStream.close();\r\n[/code]"
    ],
    [
        "PDFBOX-130",
        "PDFBOX-1931",
        "text extraction replaces characters [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1423868\nOriginally submitted by benlitchfield on 2006-02-03 18:32.\n\nSee 056_PCA119.pdf\n\nFirst of all a few minor problems\n- apostrophes replaced by question marks.  A global \nreplace will of course make nonsense of any true \nquestion marks in the document\n- the 'fi' in 'glorified' at the end of the main \narticle also replaced by  '?', as also in at least 2 \nother instances\n- 'J' before the author's name is presumably a \nreplacement for the non-text character, and should \nprobably be replaced by a blank line instead",
        "Radial shading is missing The attached file contains a radial shading fill which is missing. RadialShadingContext#calculateInputValues is returning NaN which seems to be incorrect."
    ],
    [
        "PDFBOX-370",
        "PDFBOX-436",
        "Website build does not work with Java 6 Due to FOR-984, the PDFBox website build does not work on Java 6.\n\nThe workaround is to disable sitemap validation in forrest.properties.",
        "PDFontFactory.createFont returns null if the given parameter fontCache is null As Bart Allen described on the dev-list the method PDFontFactory.createFont always returns null if the the given fontCache is null"
    ],
    [
        "PDFBOX-2545",
        "PDFBOX-1917",
        "ExtractText extracts text outside of the page When using PDFBox 1.8 (and also a snapshot of 2.0.0), the ExtractText method produces text which also contains the original Adobe Indesign filename (and also the date and used images).\r\n\r\nCommand line example:\r\njava -jar pdfbox-app-2.0.0-SNAPSHOT.jar ExtractText 07-ALS-Onvoldoende-eten.pdf test.txt\r\n\r\nThe first lines of this test.txt file are:\r\n\r\nVSN_Briefpapier_ontwerp_V03.indd   1 06-04-12   11:02\r\nWat kan ik doen als het niet lukt om voldoende te eten? ALS en voeding\r\nDrinkvoeding\r\n\r\nWhich should be without the Filename and date.\r\n\r\nWhen copy/pasting the text using Adobe Reader, the Indesign filename didn't show up. Using a CLI tool 'pdftotext' also didn't show up the line with the filename.\r\n",
        "Rendering hangs Rendering hangs in page 9 of the attached file. It hangs in PageDrawer.strokePath(), there in graphics.draw(path). I'd like to hear from people using a different JDK version if it works."
    ],
    [
        "PDFBOX-3210",
        "PDFBOX-1671",
        "How can i convert PDF to TIFF files or JPEG2000 Hi.\r\nI want to change PDF to TIFF or JPEG2000 image file.\r\nBut In the PDFBOX, I think it can't assist that methods.\r\nIs it only way that i just use JAI library??\r\nHow can i solve it.\r\nplease give me the answer to problem.",
        "Error printing document java.lang.ArrayIndexOutOfBoundsException: 346 Hello\r\nI'm trying to print PDF using pdfbox (2.0.0) with fontbox (2.0.0) but unsuccessfully.\r\n\r\nI think there is problem with font substitution.\r\n\r\nI'm attaching pdf file, log, and source code."
    ],
    [
        "PDFBOX-1066",
        "PDFBOX-588",
        "There is no functionlaity of reading the text line by line with its input field I am trying to read the PDF texts along with its input type like textfield/checkboxes. What i found is TextStripper is pasing the whole document and retuning the string in getText(). And using Acroform.getfields i am able ot get all fields. \r\n\r\nBut I have perticuler requierment of reading the texts and its input type. Do we have any class/method which can resolve this issue. \r\n\r\nIts very urgent.",
        "Problem extracting text in newline characters Hello ,\r\n \r\nI have a PDF file with 1 page only, when I try to extract its text using :\r\nString pageData = stripper.getText( pdfFile );\r\n\r\nIt ignores some Enter characters between lines, so the last word in the line and the first word in the next line appear as 1 word without spaces between them !!\r\n\r\nWhile if I copy the PDF text manually from the PDF and paste it in a text editor, Enter characters appear after the same lines that caused the problem in PDFBox.\r\n\r\nPlease check the attached file as a sample.\r\n \r\nIs there a way to fix this ?\r\n \r\nBest regards ,"
    ],
    [
        "PDFBOX-394",
        "PDFBOX-293",
        "TestFDF junit test failing in testFDFFreedomExpressions(). Currently, the TestFDF junit tests are failing because testFDFFreedomExpressions() tries to load an FDF file and PDFParser.parseHeader() returns an error because it can't find a PDF header.  I fixed that code so that it also looks for an FDF header. That patch is attached. \n\nHowever, it still results in a test failure with this line:\n\nassertTrue( totalAmt.getDictionary().getDictionaryObject( \"AP\" ) == null );\n\nI haven't looked at the test file enough to determine where the problem is. getDictionaryObject(\"AP\") is returning a COSDictionary. PDFDebugger shows that eeSuppTotalAmt is in entry 58, but I don't see any obvious reference to an \"AP\". \n\nAlso, TestFDF is being called twice in TestAll.java. That patch is also attached.\n\nPlease apply these patches and keep this open so that the assertion failure can be fixed.",
        "Incorrectly printed frames / rectangles [imported from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1766623\r\nOriginally submitted by tomas_vondra on 2007-08-03 01:30.\r\n\r\nWhen printing a PDF using org.pdfbox.PrintPDF class, the text is printed correctly, but frames (rectangles around the text) are scaled up and shifted (moved to a different position). When printed from Acrobat Reader or other tools the PDF is printed correctly (as well as displayed).\r\n\r\nThis was observed on PDFBox-0.7.3, running on Windows XP. The example of incorrectly printed PDF (result.pdf) was produced using PDFCreator but the same problems happen when printing to a printer.\r\n\r\n[attachment on SourceForge]\r\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1766623&file_id=239732\r\nexamples.zip (application/zip), 222013 bytes\r\nexample of an incorrectly printed PDF"
    ],
    [
        "PDFBOX-440",
        "PDFBOX-221",
        "Improper text produced depending on font for sample_fonts_solidconverter.pdf Looking at another issue and running the regression test, I found that the sample_fonts_solidconverter.pdf file in the test directory has some issues producing the proper\r\ntext for two of the 9 fonts used for this line. The other fonts worked fine. \r\n\r\nThe Produced Text: \r\n\r\nV e r d a n a :   T o t o   j e   p o k u s n \u00fd   t e x t   s  \r\n ea t i n o u     a ~Y\r\n \u00fd \u00e1 \u00ed \u00e9\r\n \r\nS a n s   s e r i f :   T o t o   j e   p o k u s n \u00fd   t e x t   s  \r\n ea t i n o u     a \r\n~Y \u00fd \u00e1 \u00ed \u00e9\r\n\r\nshould be\r\nVerdana: Toto je pokusn\u00fd text s \u010de\u0161tinou - \u011b\u0161\u010d\u0159\u017e\u00fd\u00e1\u00ed\u00e9\r\nSans serif: Toto je pokusn\u00fd text s \u010de\u0161tinou - \u011b\u0161\u010d\u0159\u017e\u00fd\u00e1\u00ed\u00e9\r\n\r\nI found this using the current trunk and the files in question are located in the ..\\source\\trunk\\test\\input directory.",
        "NPE on convertToImage [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1607100\nOriginally submitted by rimmeraj on 2006-12-01 12:31.\n\nCommand...\n\njava -classpath PDFBox-0.7.3.jar:FontBox-0.1.0.jar org.pdfbox.PDFToImage cert.pdf\n\njava.lang.NullPointerException\n        at org.pdfbox.util.operator.pagedrawer.Invoke.process(Invoke.java:84)\n        at org.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:452)\n        at org.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:215)\n        at org.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:174)\n        at org.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:104)\n        at org.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:657)\n        at org.pdfbox.PDFToImage.main(PDFToImage.java:183)\n\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1607100&file_id=205325\ncert.pdf (application/pdf), 21465 bytes\nDoc that was failing..\n\n[comment on SourceForge]\nOriginally sent by code_slave.\nLogged In: YES \nuser_id=413743\nOriginator: NO\n\nI'm seeeing the same.\nbut it's been over  a month since you reported it , and still not fixed in the cvs"
    ],
    [
        "PDFBOX-2627",
        "PDFBOX-2791",
        "Add block composer to handle multiline text In order to generate the appearance for multiline text a *basic* plain text block composer needs to be developed. \r\n\r\nFeatures\r\n- box model\r\n- paragraph separation\r\n- line breaking\r\n- horizontal and vertical alignment\r\n- font setting, line height \u2026\r\n\r\nConceptually it should also include writing mode likely with the only initial implementation being lr-tb.\r\nThere should be no new dependencies on projects such as ICU which will limit the capabilities but should be acceptable to the needs of form filling.\r\nTo not create the *false* assumption that this is a generic composer it will be sub packaged within the (AcroForms) forms package(s).",
        "Provide access to Type 1 font data I was analysing some PDF files recently and wanted to dump the repaired Type 1 font stream, however there's no API which provides access to this."
    ],
    [
        "PDFBOX-1338",
        "PDFBOX-2943",
        "Problem with text and embedded files extraction Could not extract text and embedded files from PDF",
        "PDType3Font.getWidthFromFont not supported This method is still not implemented.\r\nDoes anyone working on this issue? If not I will be happy to contribute and propose implementation. \r\nIn fact it's not a very complicated task : you just need to parse d0 or d1 operator from glyph's content stream (stored in CharProcs)."
    ],
    [
        "PDFBOX-1171",
        "PDFBOX-2934",
        "Parsing hexadecimal strings is not strict enough + FIX Hexadecimal strings (strings in '<','>') are parsed in BaseParser with the same method parsing literal strings (strings in '(',')'). Since in literal strings the parsing of escape sequences and parentheses is quite tricky, there are a number of rules to capture problematic cases. However for hexadecimal strings this is not needed. Here we known of the allowed restricted character set and we don't have to count opening and closing brackets.\r\n\r\nThe problem with the relaxed parsing (and therefore this is marked as bug) is with parsing documents containing trash data between objects (I have a number of them - however confidential ones - produced by verypdf.com, which seems to got updated a lot and after an endobj it contains e.g. <PrY... - simply some remainings from old objects). This trash would be no problem when parsing with an ISO conforming parser since these ranges would be ignored, but with the current sequential parser it is parsed and the best one can hope is that the trash is found to be not parseable and the parser searches for a new starting point via PDFParser#skipToNextObj. This is now where the problem with the relaxed hexadecimal parsing is: as in the example the opening '<' triggers a hexadecimal string parsing it because of later '<' it goes until end of document, reading all valid objects as string content. With a more strict parsing we would find that it is not a hexadecimal string with the second character.\r\n\r\nI have therefore added a method for parsing hexadecimal strings (see attached diff) which fails (IOException) if an invalid character is read (this method also runs faster than previous parser since there are only small number of cases to test).\r\n\r\nWith this change I can now parse the mentioned (correct) documents (with forced parsing) which wasn't possible before.",
        "Support smask /S /Alpha The smask feature /S /Alpha is either not implemented or not working at all. I have two files that are wrongly rendered with the current software, and correctly rendered when the feature is disabled \\(!\\). As a first step, I am disabling it for now and attach test files. Johns proposed patch has also disabled the feature, so I think we can agree on that."
    ],
    [
        "PDFBOX-1039",
        "PDFBOX-1209",
        "Arabic Text Extraction using PDFTextStripper working partially I have been trying to extract the contents of PDF file (so as to index it with lucene). The PDF file contains arabic.\r\n\r\nBoth PDF files contain the exact same information. The strange thing is PDFTextStripper extract data from one file correctly(gives proper arabic) but not from the other(gives complete question marks ???? or [][][][][]  )\r\n\r\nBelow is the code being used\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport org.apache.pdfbox.cos.COSDocument;\r\nimport org.apache.pdfbox.pdfparser.PDFParser;\r\nimport org.apache.pdfbox.pdmodel.PDDocument;\r\nimport org.apache.pdfbox.util.PDFTextStripper;\r\n \r\npublic class TesExtraction {\r\n \r\n\t// Extract text from PDF Document\r\n\tstatic String pdftoText(String fileName) {\r\n\t\tPDFParser parser;\r\n\t\tString parsedText = null;;\r\n\t\tPDFTextStripper pdfStripper = null;\r\n\t\tPDDocument pdDoc = null;\r\n\t\tCOSDocument cosDoc = null;\r\n\t\tFile file = new File(fileName);\r\n\t\tif (!file.isFile()) {\r\n\t\t\tSystem.err.println(\"File \" + fileName + \" does not exist.\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\ttry \r\n\t\t{\r\n\t\t\tparser = new PDFParser(new FileInputStream(file));\r\n\t\t} catch (IOException e) {\r\n\t\t\tSystem.err.println(\"Unable to open PDF Parser. \" + e.getMessage());\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\ttry \r\n\t\t{\r\n\t\t\tparser.parse();\r\n\t\t\tcosDoc = parser.getDocument();\r\n\t\t\tpdfStripper = new PDFTextStripper(\"CP-1252\");\r\n\t\t\tpdDoc = new PDDocument(cosDoc);\r\n\t\t\tpdfStripper.setStartPage(1);\r\n\t\t\tpdfStripper.setEndPage(5);\r\n\t\t\tparsedText = pdfStripper.getText(pdDoc);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err\r\n\t\t\t\t\t.println(\"An exception occured in parsing the PDF Document.\"\r\n\t\t\t\t\t\t\t+ e.getMessage());\r\n\t\t} finally {\r\n\t\t\ttry {\r\n\t\t\t\tif (cosDoc != null)\r\n\t\t\t\t\tcosDoc.close();\r\n\t\t\t\tif (pdDoc != null)\r\n\t\t\t\t\tpdDoc.close();\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsedText;\r\n\t}\r\n\tpublic static void main(String args[])\r\n\t{\r\n\t\tSystem.out.println(pdftoText(\"C:\\\\LuceneTest\\\\Data\\\\TestWord.pdf\"));\r\n\t\tSystem.out.println(pdftoText(\"C:\\\\LuceneTest\\\\Data\\\\TestPDFCreator.pdf\"));\r\n\t}\r\n \r\n}\r\n\r\nNOTE: Where can I upload the pdf files ?\r\n ",
        "Add insertSiblingBefore() to PDOutlineItem At the moment it's not possible to insert a first child to a pre-existing PDDocumentOutline because all the available methods only allow you to add a PDOutlineItem at the end of the list (PDDocumentOutline.appendChild()) or after an existing child (PDOutlineItem.insertSiblingAfter()). As a result, if you wish to insert a new first child, you have to manually traverse and re-create the entire tree, which is ridiculous.\r\nAs a solution, I offer to add a new method to the PDOutlineItem class, insertSiblingBefore(). I've written the code necessary based on insertSiblingAfter(). It's very straight-forward...\r\n\r\n{code}\r\n /**\r\n     * Insert a sibling before this node.\r\n     *\r\n     * @param item The item to insert.\r\n     */\r\n    public void insertSiblingBefore( PDOutlineItem item )\r\n    {\r\n        item.setParent( getParent() );\r\n        PDOutlineItem previous = getPreviousSibling();\r\n        setPreviousSibling( item );\r\n        item.setNextSibling( this );\r\n        if( previous != null )\r\n        {\r\n            item.setPreviousSibling( previous );\r\n            previous.setNextSibling( item );\r\n        }\r\n        updateParentOpenCount( 1 );\r\n    }\r\n{code}\r\n\r\nI hope this can be integrated in the next release..."
    ],
    [
        "PDFBOX-368",
        "PDFBOX-1615",
        "Use the Maven standard directory layout  As discussed on the mailing lists, it would be good to adopt the standard directory layout defined by Maven.\n\nSee:\n\n    http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html",
        "Color map not correctly copied when PDF file is split A customer has a pdf file which we split (pdfbox.util.Splitter) for inclusion in a document. When I split the file using the PDFSplit tool, the same problem occurs.\r\nOn some pages, the color map appears to be altered such that background and text are rendered in different colors (yellow/lilac instead of white/blackish). The PDF the customer supplies is probably a scanned document but the metadata claims it is created using PDF-XChange Viewer 2.5.195.0.\r\nThe odd thing is that only a subset of pages are affected in a consistent fashion.\r\n\r\nI can supply the original PDF file on request for you to look at."
    ],
    [
        "PDFBOX-337",
        "PDFBOX-1022",
        "Patch for two bugs: 1 in PDDocument.load 1 in PDFMergerUtili [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1889131\nOriginally submitted by bwingenroth on 2008-02-07 14:27.\n\nI've come across two bugs that the attached patch addresses.  I don't claim to fully understand these bugs, nor do I know whether my patch fixes the root issues -- I only know that using this patch allows me to continue using PDFBox.\n\nI came across a ClassCastException in PDDocument.load.  It actually manifests as an IOWrapperException caused by the ClassCastException.  In getObjectsByType inside the file COSDocument.java, you grab the COSdictionary and attempt to cast each item as a COSName.  I've found a PDF that opens fine in Acrobat that apparently contains a COSObject inside that dictionary which throws the ClassCastException.  My patch for COSDocument.java wraps the cast in a try block and silently discards the ClassCastException.  This looks like it's safe, since the code seems to want to match a COSName against a type passed into the function.  If the item isn't castable as a COSName, then I assume it could never pass anyway, so my patch ignores it.\n\nThe second issue -- in PDFMergerUtility.java -- is that srcNums can be null.  \n\nCOSArray srcNums = (COSArray)srcLabels.getDictionaryObject( COSName.getPDFName( \"Nums\" ) );\n\nMy patch tests srcNums to make sure it isn't null before iterating over it.\n\nAgain, I don't know that I've addressed the underlying causes behind these issues, but I have successfully patched the nightly build from 20080205 with these changes and haven't noticed any ill effects.\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1889131&file_id=265468\nPDFBox-0.7.4-dev-20080205.patch (application/octet-stream), 2757 bytes\nPatch for bugs in PDDocument.load and PDFMergerUtility",
        "PDPage convertToImage creates inverted black and white image for indexed colorspace. The attached PDF file demonstrates that line 178 of PDPixelMap.java does not try to determine what is the black value and what is the white value. The colorspace of the attached PDF file is PDIndexed.\r\n\r\nInverting this value makes the file render correctly, but there needs to be some kind of way to determine what is black/white for a PDIndexed colorspace.\r\n\r\n                if (colorspace instanceof PDDeviceGray)\r\n                {\r\n                    COSArray decode = getDecode();\r\n                    // we have to invert the b/w-values, \r\n                    // if the Decode array exists and consists of (1,0)\r\n                    if (decode != null && decode.getInt(0) == 1)\r\n                    {\r\n                        map = new byte[] {(byte)0xff};\r\n                    }\r\n                    else\r\n                    {\r\n                        map = new byte[] {(byte)0x00, (byte)0xff};\r\n                    }\r\n                }\r\n                else if (colorspace instanceof PDICCBased)\r\n                {\r\n                    if ( ((PDICCBased)colorspace).getNumberOfComponents() == 1) \r\n                    {\r\n                        map = new byte[] {(byte)0xff};\r\n                    }\r\n                    else\r\n                    {\r\n                        map = new byte[] {(byte)0x00, (byte)0xff};\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    map = new byte[] {(byte)0x00, (byte)0xff}; // <--- HAPPENS HERE - NO TEST FOR BLACK/WHITE LIKE OTHER CASES ABOVE.\r\n                }"
    ],
    [
        "PDFBOX-799",
        "PDFBOX-757",
        "Add ability to ignore errors with AcroForms AcroForms seem to be implemented poorly by some PDF writers, and as a result there are quite a few out of spec PDFs out there.  This can be a problem when trying to merge two PDFs together.  I've found multiple which merge fine except for the AcroForms.  We should add a flag to PDFMergerUtility to allow the caller to ignore AcroForm errors.  This way people who just want to merge PDFs and don't care about the AcroForm fields are able to do so.\r\n\r\nThe default will be to NOT ignore AcroForm errors, which provides perfect backward compatibility and makes sure these errors are not silently discarded by default.",
        "Translation to text of some TeX-created files breaks down shortly after start After a short start, translation to text breaks with the error message:\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat org.apache.pdfbox.pdmodel.common.COSStreamArray.getScratchFile(COSStreamArray.java:100)\r\n\tat org.apache.pdfbox.pdfparser.PDFStreamParser.<init>(PDFStreamParser.java:87)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:238)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:208)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:367)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:291)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:247)\r\n\tat org.apache.pdfbox.ExtractText.main(ExtractText.java:236)\r\n"
    ],
    [
        "PDFBOX-2953",
        "PDFBOX-207",
        "PDFBox shows page count 0 The following code could prove that there is a bug in getting the number of the pages \r\n{code}\r\nPDDocument pdf1 = PDDocument.load(\"C:\\\\ms12_TIM.pdf\");\r\n\r\nint count = pdf1.getNumberOfPages();\r\n{code}\r\n\r\ncount return \u201c0\u201d , the file has a page.\r\n",
        "Better metadata in conversion to HTML [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1576966\nOriginally submitted by nobody on 2006-10-13 17:18.\n\nIt would be great to have better support for metadata \nin conversion to HTML.\n\n- Being able to create a HTML page with the proper \ndocument title in (not one simply guessed from the \ntext of the document).\n\n- Author, keywords, category etc. extracted from the \ndocument and placed into metafields in the HTML\n\n- Chosen encoding included in the HTML header.\n\nI am using PDFbox in conjunction with mnoGoSearch to \nindex PDFs on a site. This additional metadata would \nbe extremely handy, since it would form a part of the \nindexed details for the documents.\n\nEven if a simple tool could be created that would \n*just* extract the metadata from a document [into \nsome kind of text format], that would be great. \nExternal tools could then be built around that, e.g. \na templating tool that could create a final format of \nany form, using the extracted text and the extracted \nmetadata.\n\n[comment on SourceForge]\nOriginally sent by nobody.\nLogged In: NO \n\nBTW I've not used Java before, so don't have any code to \ncontribute, but if I do come up with anything, I'll post \nit here.\n\n-- Jason\n(sorry - mislaid my login too)"
    ],
    [
        "PDFBOX-625",
        "PDFBOX-3205",
        "faulty jempbox checksum file in maven central maven is giving me \"CHECKSUM FAILED\" warnings for jempbox-1.0.0.jar .  The checksum file\r\nhttp://repo1.maven.org/maven2/org/apache/pdfbox/jempbox/1.0.0/jempbox-1.0.0.jar.md5\r\ncontains the following:\r\njempbox-1.0.0.jar: C1 83 87 F9 1F A8 66 DA  2D E4 2C A6 61 FE D3 D5\r\nThat's the right checksum, but the format of the file is wrong.  The checksum files of other packages, e.g.\r\nhttp://repo1.maven.org/maven2/org/apache/pdfbox/pdfbox/1.0.0/pdfbox-1.0.0.jar.md5\r\ncontain only the checksum, not the filename, and use lowercase letters and no spaces.",
        "How Can i fix this message \"unsupported/disabled operation: i\" Hi.\r\nWhen i convert pdf to image(e.g jpg, png), then I can saw this message, \r\n\" org.apache.pdfbox.util.PDFStreamEngine processOperator \r\n\uc815\ubcf4: unsupported/disabled operation: i \"\r\nand also saw another message. \r\n\"org.apache.pdfbox.util.PDFImageWriter writeImage \r\n\uc815\ubcf4: Writing: D:\\ImageSaveRep\\test/e10579/e1057934.jpg\"\r\n\r\nAfter i saw this message, i can see blank image.\r\nDo you know how to fix that??\r\n\r\nplease let me know some answer.\r\n\r\nThis is my source\r\n\r\ndocument = PDDocument.load(sourceDir);\r\nList<PDPage> list = document.getDocumentCatalog().getAllPages();\r\nString fName = sourceFile.getName().replace(\".pdf\", \"\"); \r\n       \r\n int pageNumber = 1;\r\n for (PDPage page : list) {\r\n\r\n\tBufferedImage image = page.convertToImage();\r\n\r\n\tString createFileName = destinationDir+\"/\" + fileName +\"_\"+ String.format(\"%03d\", pageNumber)+\".\"+convertFormat;\r\n\r\n\tOutputStream os = new FileOutputStream(createFileName);\r\n\r\n\tImageIOUtil.writeImage(image, convertFormat, os, Integer.parseInt(convertDPI), Float.parseFloat(convertQuality));\r\n\r\n\t pageNumber++;\r\n}\r\ndocument.close();\t"
    ],
    [
        "PDFBOX-1536",
        "PDFBOX-2020",
        "Improve the ExtractEmbeddedFiles example to deal with different kind of trees representing the embedded files I found two different kinds of EmbeddedFile-Trees:\r\n\r\n- a root tree node containing all embedded files as names array and no kids\r\n- a root tree node containing the embedded files as kid nodes no names array",
        "PDF/A Validation raises NullPointerException for PDFs without ImageColorSpace TestCode: Example Code http://pdfbox.apache.org/cookbook/pdfavalidation.html\r\n\r\nIf i check a PDF without ImageColorSpace the example Code raises the following NullPointerException:\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat org.apache.pdfbox.preflight.content.ContentStreamEngine.validImageColorSpace(ContentStreamEngine.java:323)\r\n\tat org.apache.pdfbox.preflight.content.ContentStreamWrapper.processOperator(ContentStreamWrapper.java:179)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:254)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:221)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:203)\r\n\tat org.apache.pdfbox.preflight.content.ContentStreamWrapper.validPageContentStream(ContentStreamWrapper.java:76)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validateContent(SinglePageValidationProcess.java:180)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validate(SinglePageValidationProcess.java:88)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validatePage(PageTreeValidationProcess.java:58)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validate(PageTreeValidationProcess.java:47)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:88)\r\n\tat org.apache.pdfbox.preflight.PreflightDocument.validate(PreflightDocument.java:169)\r\n\tat PdfBox.main(PdfBox.java:33)\r\n\r\nI think the method org.apache.pdfbox.pdmodel.PDResources.getColorSpaces (PDResources.java:311) did not return a object if their is no image color space but the code line org.apache.pdfbox.preflight.content.ContentStreamEngine.validImageColorSpace(ContentStreamEngine.java:323) expects a object in any case."
    ],
    [
        "PDFBOX-2673",
        "PDFBOX-149",
        "Add output path prefix param in PDFSplit/Splitter Stateless framework (like php) must randomization output for concurrency safe split document from command line.\r\n\r\nPlease add a parameter -outputPrefix as seen in PDFToImage: https://github.com/apache/pdfbox/blob/1.8/pdfbox/src/main/java/org/apache/pdfbox/PDFToImage.java ",
        "Update encryption algorithms [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1465151\nOriginally submitted by benlitchfield on 2006-04-05 10:05.\n\nPDF 1.6 has some new features and step numbers of the \nalgortithm need to be updated.\n\nFor example Algorithm 3.2 Compute Encryption Key now \nhas 9 steps.  Specifically step 6 factors in \nencryption of the metadata, which is currently not \nimplemented.\n\nBen"
    ],
    [
        "PDFBOX-144",
        "PDFBOX-2350",
        "Printer marks are visible when rendering to image [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1455860\nOriginally submitted by richbraman on 2006-03-21 21:18.\n\nconvertToImage needs to be updated to not include the \nprinter marks",
        "Type1 Parser hangs indefinitely When rendering the first page of my pdf document the Type1Parser (org.apache.fontbox.type1.Type1Parser) hangs in a loop in \r\n\r\n{{parseBinary(byte[] bytes) throws IOException}}\r\n\r\nand \"kills\" our rendering pipeline. Please find the loop that hangs below:\r\n\r\n        // find /Private dict\r\n        while (!lexer.peekToken().getText().equals(\"Private\"))\r\n        {\r\n            lexer.nextToken();\r\n        }\r\n\r\nThere is no token named \"Private\" ever in the list of returned tokens (they're empty all the time).  \r\n\r\nFurthermore going deeper into the source code it seems the class reading the tokens (Type1Lexer) does never finally advance the buffer position and always returns an empty name token in the readToken(Token prevToken) method.\r\n\r\nLooking at the decrypted buffer i cannot get something useful out of it based on my current understanding.\r\n\r\nUnfortunately i cannot provide the pdf in question as it contains confidental data.\r\n\r\nAcrobat Reader XI Version 11.0.08 renders the document just fine.\r\n\r\nIn addition it seems the pdf was encrypted (40-Bit RC4) with an empty password and says it's pdf version 1.5.\r\n\r\nDoes this provide enough information or can i do anything else to help nailing this one down?\r\n\r\nI guess this might be a pdf document structure/feature that is not yet supported completely but at least pdfbox should throw an exception instead of failing \"silently\"...\r\n\r\n\r\n"
    ],
    [
        "PDFBOX-1815",
        "PDFBOX-1155",
        "Suggestion: close files in COSStream Close file objects in COSStream.java to improve gc, see attached patch",
        "setSuppressDuplicateOverlappingText sometimes removes characters that it shouldn't The duplicate detection (in PDFTextStripper.java) checks whether the\r\nsame character was placed \"nearish\" to where we are about to place\r\nanother and de-dups it if so; this is to catch documents that rewind\r\nand overwrite in order to bold word(s).\r\n\r\nBut in some cases I see it removing valid characters (that were not\r\ndups).\r\n"
    ],
    [
        "PDFBOX-876",
        "PDFBOX-1607",
        "PDFBox crashed JVM when importing certain PDF When importing certain PDF, the JVM crashed with the following error:\r\n\r\n#\r\n# An unexpected error has been detected by Java Runtime Environment:\r\n#\r\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x6d2f3bf0, pid=6704, tid=6316\r\n#\r\n# Java VM: Java HotSpot(TM) Client VM (11.3-b02 mixed mode windows-x86)\r\n# Problematic frame:\r\n# C  [fontmanager.dll+0x13bf0]\r\n#\r\n# An error report file with more information is saved as:\r\n# C:\\Program Files\\Genuitec\\Common\\plugins\\com.genuitec.eclipse.easie.tomcat.myeclipse_7.5.0.zmyeclipse75020090612\\tomcat\\bin\\hs_err_pid6704.log\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://java.sun.com/webapps/bugreport/crash.jsp\r\n# The crash happened outside the Java Virtual Machine in native code.\r\n# See problematic frame for where to report the bug.\r\n#\r\n\r\nI was able to trace down where I used PDFImageWrite and try to convert the first page of PDF to PNG image.  \r\nI tried to update the font and still seem to be problem.\r\n\r\nAny help would be really appreciated.\r\nThanks,",
        "StringIndexOutOfBoundsException in PDFParser I have few test files parsed fine in PDFBox 1.7.1 but not in 1.8.1:\r\n\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: 2047\r\n     at java.lang.AbstractStringBuilder.deleteCharAt(AbstractStringBuilder.java:762)\r\n     at java.lang.StringBuilder.deleteCharAt(StringBuilder.java:258)\r\n     at org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString(BaseParser.java:1000)\r\n     at org.apache.pdfbox.pdfparser.BaseParser.parseCOSString(BaseParser.java:808)\r\n     at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:1241)\r\n     at org.apache.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:558)\r\n     at org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:188)"
    ],
    [
        "PDFBOX-1682",
        "PDFBOX-1391",
        "[PATCH] Delete temp files before JVM exit If you do PDFToImage many times during one JVM instance, temp dir will be full of temp files.",
        "Document with \"embedded subset\" fonts is displayed incorrect Hi.  I am trying use PDFReader to display a PDF file produced with OpenOffice.org, but the output contains lots of grabbled characters.\r\n\r\nI thought the problem was that the font was not embedded (Tahoma in this case), but after inspecting the file, Tahoma is listed as \"embedded subset\".  However, lots of \"Changing font on <> from <Tahoma> to the default font\" messages are logged.\r\n\r\nThe file is correctly displayed by other readers, could you please help me to determine what is wrong?\r\n\r\nThanks in advance."
    ],
    [
        "PDFBOX-77",
        "PDFBOX-2292",
        "PDF-Extraction splits words by spaces [imported from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1251041\r\nOriginally submitted by mkrebs on 2005-08-03 06:14.\r\n\r\nI'm currently working on an indexing-service using \r\njakarta lucene. Momentarily in a first step i have to \r\nindex about 80 PDF-Documents (later approximatly \r\n1000 documents). Ca. 60 documents (of the 80) are \r\nextracted by PDFBox without any problems. But for \r\naround 20 documents, PDFBox generates too many \r\nspaces, which means, that words like \"hostname\" are \r\nextracted to \"ho stna me\". This happens by nearly all \r\nwords contained in these 20 documents.\r\nBecause i have to extract page-information i am using \r\nPDFTextStripper with the methods setPageSeparator\r\n(..), setStartPage(..), setEndPage(..) and writeText():\r\n\r\nStringWriter s = new StringWriter();\r\nPDDocument pddoc = null;\r\ntry {\r\n pddoc = PDDocument.load(f);\r\n int pageCount = pddoc.getPageCount();\r\n PDFTextStripper stripper = new \r\nPDFTextStripper();\r\n stripper.setPageSeparator\r\n(IndexFiles.DOCUMENT_PAGE_SEPARATOR);\r\n stripper.setStartPage(1);\r\n stripper.setEndPage(pageCount);\r\n stripper.writeText(pddoc, s);\r\n} finally {\r\n if (pddoc != null)\r\n  pddoc.close();\r\n}\r\nStringBuffer contents = s.getBuffer();\r\n\r\nIn respect for my indexing-service it is impossible to \r\nindex these documents correctly.\r\n\r\nI have tried to BugFix PDFBox \r\n(PDFTextStripper.flushText()) and established, that the \r\nwidth returned by TextPosition.getWidth() is incorrect. \r\nWhen i multiply this width with TextPosition.getXScale\r\n(), these documents are extracted correctly. But other \r\nbefore correctly extracted documents loose nearly all \r\nspaces, which means, that a complete sentence dont \r\ncontain any spaces between words.\r\n\r\nI have tried: PDFBox-0.7.2-dev-20050730.jar, but the \r\nproblem still remains.\r\n\r\nExample Text-Output:\r\n\r\n3.5 SSL V erbindunge n\r\n      \u2022 JSSE (Java Sec ure So ck et E xt en sion)\r\n      \u2022 im po rt ja vax .n et .ss l. *\r\n      \u2022 W ese nt lich e \u00a8And erung im Cl ient Pr ogr \r\namm : (F act o ry\r\n      P att e rn )\r\n      Erse tze\r\n      Soc ket s = new Soc ket (ho stna me, port numb er)\r\n      du rc h\r\n      SSL Soc ketF acto ry s f = (SS LSoc ketF acto ry)\r\nS SLS ocke tFac tory .get Def ault ();\r\n      SSL Soc ket s = (SSL Sock et) sf.c reat eSoc ket( \r\nhos tnam e, p ortn umbe r);\r\n      \u2022 Daf \u00a8u r mus s SSL k o n fig u riert sein (si ehe \r\nunten).\r\n      V o rl \u00a8aufige V.......\r\n\r\n\r\n[attachment on SourceForge]\r\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1251041&file_id=144276\r\n03_2_SSL.pdf (application/pdf), 189828 bytes\r\nuniversity-lecture",
        "Saving of decrypted version of password protected document gives an error For a  sample owner-password-protected pdf that I can decrypt and save to another file in Pdfbox 1.8.5, however, in the  2.0.0 build created using the repository  checked out of svn, I get an exception while saving.\r\njava.io.IOException: Cannot save a document which has been closed\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:1229)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:1215)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:1203)\r\n\r\nThe code snippet is as follows-\r\n{code}\r\npd = PDDocument.load(is);\r\nif (pd.isEncrypted()) {\r\n  try {\r\n\t  pd.decrypt(\"\");\r\n\t  pd.setAllSecurityToBeRemoved(true);\r\n          fNameStr = fName.substring(0, fName.lastIndexOf('.'))\r\n\t\t\t\t\t\t\t+ \"_new.pdf\";\r\n          System.out.println(pd.getCurrentAccessPermission()\r\n\t   pd.save(fNameStr);  // java.IOException at this line\r\n\t} catch (Exception e) {\r\n\t\te.printStackTrace();\r\n\t} finally {\r\n                       pd.close();\r\n\t\t\tif (is != null) {\r\n\t\t\t  is.close();\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t}\r\n{code}\r\n\t\t\t\r\n"
    ],
    [
        "PDFBOX-1620",
        "PDFBOX-2430",
        "Missing text in pdf reader view Missing contents on pdf reader view",
        "Make the non-sequential parser the default parser As proposed by Maruan on dev@, we should make the non-sequentatial parser the default parser. The different  load-methods should be simplified in that context, so that all load/loadNonSeq will be replaced by a load method."
    ],
    [
        "PDFBOX-1922",
        "PDFBOX-2895",
        "NonSequentialParser not reading version in header and trailer On older pdf files, the NonSequentialParser returns a different PDFVersion than the traditional parser via the call: document.getDocument().getVersion().  \r\n\r\nI think this is because NonSequentialParser is not reading the header but relying on the default 1.4 if no version is found in the trailer.\r\n\r\nMany apologies if this is a duplicate.  I feel like I've seen this issue elsewhere, but I can't track it down.",
        "Enhance test coverage for appearance generation During the development around PDFBOX-2333 there were several issues discovered where Adobe has some special handling when creating the appearance for AcroForm fields.\r\n\r\nIn order to ensure that the current implementation will not be broken while adding missing functionality there shall be test cases (forms and unit tests) securing the current behavior where we know that the results are inline with user expectations."
    ],
    [
        "PDFBOX-778",
        "PDFBOX-1366",
        "OutOfMemory when extracting text from pdf I have to extract text from hundreds of documents, but at a certain point I get an out of memory exception.\r\nIt seems that the memory leak is related to a single file that I attached.\r\n\r\nPlease let me know if you need more details.\r\n\r\nThis is the stacktrace of the exception:\r\nException in thread \"main\" java.lang.OutOfMemoryError: Java heap space\r\n\tat java.util.Arrays.copyOf(Arrays.java:2734)\r\n\tat java.util.ArrayList.ensureCapacity(ArrayList.java:167)\r\n\tat java.util.ArrayList.add(ArrayList.java:351)\r\n\tat org.apache.pdfbox.pdfparser.PDFStreamParser.parse(PDFStreamParser.java:103)\r\n\tat org.apache.pdfbox.cos.COSStream.getStreamTokens(COSStream.java:119)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:207)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:367)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:291)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:247)\r\n\tat it.polimi.utils.TextStripper.getFullText(TextStripper.java:57)\r\n\tat it.polimi.utils.TextStripper.getFullText(TextStripper.java:72)\r\n\tat it.polimi.utils.TextStripper.getContent(TextStripper.java:30)\r\n\tat applications.ExtractAbstracts.convert(ExtractAbstracts.java:47)\r\n\tat applications.ExtractAbstracts.convert(ExtractAbstracts.java:36)\r\n\tat applications.ExtractAbstracts.main(ExtractAbstracts.java:17)",
        "Reduce xmpbox code complexity Refactoring of xmpbox to :\r\n* reduce complexity\r\n* increase unitary test coverage rate\r\n* remove duplicated code\r\n"
    ],
    [
        "PDFBOX-715",
        "PDFBOX-1790",
        "TestDateUtil fails TestDateUtil fails because of Locale and TimeZone issues. I'll send a patch later.",
        "NPE during PDTrueTypeFont.loadTTF() on Mac TrueType font lacking Windows-platformID CMAPEncodingEntry I'm attempting to embed a TrueType font using PDFBox, on the Mac, using PDTrueType.loadTTF( PDDocument, InputStream, Encoding ).\r\n\r\nFor TrueType fonts originating from Windows (e.g., Tahoma) this works.\r\n\r\nFor TrueType fonts originating from the Mac (e.g., Apple Chancery), a NullPointerException is thrown.\r\n\r\n    java.lang.NullPointerException\r\n                at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadDescriptorDictionary(PDTrueTypeFont.java:409)\r\n                at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:201)\r\n                at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:177)\r\n\r\nI stepped through the code in a debugger. The method PDTrueTypeFont.loadDescriptorDictionary() loops through the cmap table for the font, looking for a cmap with platform ID 3 (Windows), and sets the variable unimap only if one is found. After that loop, the variable unimap is dereferenced without checking for null.\r\n\r\nSome Mac TrueType fonts have platform IDs 0 (Unicode) and 1 (Mac), but not 3 (Windows).\r\n\r\nAt the least, a null check seems required. But more desirable would be support for Mac TrueType fonts.\r\n\r\nAm I missing something, or should I enter a bug?\r\n\r\nExample problem font:\r\n* Apple Chancery (Included with OS)\r\n\r\nDetails:\r\n* PDFBox version: 1.8.2 [Have not yet tested with 1.8.3, which was released a few days ago]\r\n* Platform: Mac\r\n* Java 6\r\n* Font platform IDs: 0, 1\r\n"
    ],
    [
        "PDFBOX-784",
        "PDFBOX-2378",
        "Wrong text position we tried to convert a lot of PDF files to image(e.g. tif, jpg) on two servers, it worked OK at the begging period, but after converting a cerntain quantity of PDF files, something went wrong, all the characters were drawn at the bottom of the image file. Does anyone meet this problem before?\r\n\r\nwe invoke the method below to convert pdf to image\r\norg.apache.pdfbox.pdmodel.PDPage\r\npublic BufferedImage convertToImage(int imageType, int resolution)",
        "XMPBox removes namespaces on serialization {code:title=Bar.java|borderStyle=none}\r\nInputStream zfExtensionIs = getClass().getResourceAsStream(\"/zf_extension.pdfbox.xmp\");\r\nDomXmpParser builder = new DomXmpParser();\r\n         zfDefaultXmp = builder.parse(zfExtensionIs);\r\nPdfaExtensionHelper.populateSchemaMapping(zfDefaultXmp);\r\n\r\nnew XmpSerializer().serialize(zfDefaultXmp, new FileOutputStream(\"target/out.xmp.xml\"), true);\r\n{code}\r\n\r\n\r\nthe incoming file \r\n{code:xml|title=incoming.xml|borderStyle=none}\r\n      <rdf:Description xmlns:pdfaExtension=\"http://www.aiim.org/pdfa/ns/extension/\"\r\n         xmlns:pdfaSchema=\"http://www.aiim.org/pdfa/ns/schema#\" xmlns:pdfaProperty=\"http://www.aiim.org/pdfa/ns/property#\" rdf:about=\"\">\r\n{code}\r\n\r\noutgoing file \r\n{code:xml|title=resulting.xml|borderStyle=none}\r\n<rdf:Description xmlns:pdfaExtension=\"http://www.aiim.org/pdfa/ns/extension/\" rdf:about=\"\">\r\n{code}\r\n\r\n\r\nwhy are the two namespaces gone?\r\n"
    ],
    [
        "PDFBOX-2667",
        "PDFBOX-1678",
        "StandardSecurityHandler should throw InvalidPasswordException As result of  PDFBOX-1973 changes, according to comments Revision 1576587, the StandardSecurityHandler.prepareForDecryption now has something like this:\r\n{code}\r\nif(isOwnerPassword){\r\n    //do something\r\n}else if(isUserPassword){\r\n    //do something else\r\n}else{\r\n   throw new IOException(\"Cannot decrypt PDF, the password is incorrect\");\r\n}\r\n{code}\r\nIn my use case the user tries to load a pdf, if the document is encrypted and he didn't supply a password or the supplied one is incorrect, a popup asking for the password is shown. The document is then loaded with the given password.\r\nIn PDFBOX-1973 is discussed the possibility of throwing a different exception vs returning a boolean but currently none of the solutions is implemented and I can't distinguish between an \"incorrect password\" IOException vs a \"something else is wrong\" IOException.\r\nThere is already a InvalidPasswordException in the excryption package but as far as I can tell it's only used in the examples project (btw that example must be somehow broken since the exception is never thrown)\r\nUnless you are going to implement the boolean solution, I'd suggest to modify the algorithm with:\r\n{code}\r\nif(isOwnerPassword){\r\n    //do something\r\n}else if(isUserPassword){\r\n    //do something else\r\n}else{\r\n   throw new InvalidPasswordException(\"Cannot decrypt PDF, the password is incorrect\");\r\n}\r\n{code}\r\n\r\nSo users can react to an invalid password.",
        "Convert to image problem I build maven repo for pdfbox 2.0 version from git.\r\nI need convert pdf to image.\r\nIn pdf used font Arial from windows but i get not readable image.\r\n"
    ],
    [
        "PDFBOX-465",
        "PDFBOX-1925",
        "invalid date formats  This is with the latest from svn, Revision: 773978\r\n\r\nFrom a sample of 13304 pdf documents generated in a very wide variety of ways, I got 94 invalid date formats,\r\n\r\nIt seems that all of these have the stack trace of,\r\n\r\nCaused by: java.io.IOException: Error converting date:Friday, July 11, 2008\r\n\tat org.apache.pdfbox.util.DateConverter.toCalendar(DateConverter.java:240)\r\n\tat org.apache.pdfbox.util.DateConverter.toCalendar(DateConverter.java:120)\r\n\tat org.apache.pdfbox.cos.COSDictionary.getDate(COSDictionary.java:783)\r\n\tat org.apache.pdfbox.pdmodel.PDDocumentInformation.getCreationDate(PDDocumentInformation.java:218)\r\n\tat message_analyzer.extractor.PDFExtractor.getContent(PDFExtractor.java:50)\r\n\r\nSome examples of invalid dates are,\r\n\r\n20070430193647+713'00'\r\nTue Aug 21 10:35:22 2007\r\nTuesday, November 04, 2008\r\n200712172:2:3 \r\nUnknown\r\n20090319 200122\r\n9:47 5/12/2008\r\n\r\ni don't think there is any hope of parsing all these date formats.  If would be nice if this was not a fatal error, and the parser could continue without a creation date. \r\n\r\nIs the policy of pdfbox to be as forgiving as possible when reading pdf documents?  Maybe toCalendar should return a new Calendar() if parsing fails, rather than throwing.\r\n\r\n",
        "DeviceCMYK Colorspace: PDFToImage gives wrong output The attached example does not produce the correct output. Tested with current trunk."
    ],
    [
        "PDFBOX-912",
        "PDFBOX-2676",
        "PDF signing interface and improvments This is a first version of a signing interface for pdfbox. There are some design issues i could not handle without rewriting too much of the code.\r\n\r\nHere we go:\r\n- incremental update support (tested for signatures with pdf/a compatibility), not compatible with encrypted documents nor with xref-streams\r\n\r\n- cos object improvment\r\n  -- COSString with ability to force writing hexbin for given string\r\n  -- COSBase with ability to write direct into a dictionary (that means if this is set, no indirect object will be wrote) (sry hard to explain what i mean, actualy needed for incremental update to lower the rate of indirect objects)\r\n  -- COSBase with ability to force writing object (this hook help the COSWriter write needed objects for inkremental update)\r\n  -- COSName added new names\r\n  -- COSDocument some getter and setter for handling new signature and incremental features\r\n\r\n- SignatureException with some exceptions for handling the bunch of new possible errors\r\n\r\n-Parser improvments\r\n  -- PDFParser saves now the position of the last startxref\r\n  -- VisualSignatureParser (hook for parsing visual signature templates) (it's only for prepared visualisation that should be merged with the document)\r\n\r\n-IO improvments\r\n  -- COSFilterInput helps to find the proper content that should be hashed / signed\r\n  -- COSStandardOutputStream is tricky, it helps the writer to jump to the right place in the document\r\n  -- COSWriter got some improvments for incremental update\r\n  -- COSWriterXRefEntry needed for incremental updates and writing the new Xref table\r\n\r\n- PDDocument\r\n -- got a new method addSignature with the needed implementation (do the whole signature stuff)\r\n -- cleanup\r\n\r\n- Fields and Annotations\r\n -- PDSignature represent the signature dictionary \r\n -- PDSignatureFild / Annotation are the visible & unvisible signature representations\r\n\r\n- Signature Interface and options\r\n -- SignatureInterface the interface that shall be implemented for proper signing\r\n -- SignatureOptions, some additional options for signing\r\n\r\nPatch splited into pieces\r\n\r\nsry for spelling, didn't include a spellchecker for english.",
        "PDPageLabelRange.setLabelItem() should not allow negative startPage This code\r\n{code}\r\n        PDPageLabels pl = new PDPageLabels(doc);\r\n        PDPageLabelRange plr0 = new PDPageLabelRange();\r\n        plr0.setPrefix(\"bad\");\r\n        pl.setLabelItem(-1, plr0);\r\n{code}\r\nshould throw an exception, because the startPage parameter should not be negative."
    ],
    [
        "PDFBOX-201",
        "PDFBOX-1685",
        "Bad file descriptor while saving a document w. imported PDFs [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1563263\nOriginally submitted by nobody on 2006-09-21 19:05.\n\nI believe I've found an error on PDFBox, or at least a\nnon-standard behavior.\n\nI have a PDF Document I create with PDFBox and then\nstart importing other PDFs onto it, something like\n\nfor every PDF in PDFLIST\n  mainPdf.import(PDF)\n  PDF.close\n\nI can have hundreds of PDFs being imported to the main\ndocument.\n\nThe thing is that when saving the main Document I\nsometimes get the Bad File Descriptor error.\n\nTo fix it I had to do something ugly like:\n\nfor every PDF in PDFLIST\n  mainPdf.import(PDF)\n  toBeErasedPDF.add(PDF)\n\n...\nmainPdf.save(..)\nmainPdf.close()\n\nfor every PDF in toBeErasedPDF\n  PDF.close\n\nin this way the error goes away but\nA) it took me a whole lot of time to realize this\nB) I am maintaining in memory lots of unused objects\nthat could have been GC'd.\n\nStill, this problem does not always arise.\nI am attaching two different FO's (correct.fo.xml and\nincorrect.fo.xml), where the first one does not show\nthis error, and the second one does. I am not attaching\ncode because I am not allowed to, but the idea is to\nconvert those documents to PDF and add them to the main\nPDF document, separately.\n\nI really do not know what is causing the problem in one\ndoc and not in the other.\n\nBTW I am using version 0.7.2 (and it also happens in 0.7.1)\n\nPS: It seems that I can only add one file? I'm adding\nthe incorrect one.\n\nHope this helps,\nBest Regards\nAndr\u00c3\u00a9s Bernasconi\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1563263&file_id=194626\nincorrect.fo.xml (text/xml), 29948 bytes\nThis FO causes the error mentioned above\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nHi Andr\u00c3\u00a9s,\n\nCan you give the nightly build a try \nhttp://www.pdfbox.org/dist  \n\nI think another user reported this at one point and if I \nremember correctly I couldn't reproduce it, so I think it \nmight be fixed in CVS.\n\nGive it a try and let me know,\nThanks,\nBen",
        "Verify interpretation of rdf:about for PDF/A There was a discussion about handling rdf:about for PDF/A validation on the PDF Associations mailing list which I'm allowed to share:\r\n\r\n<snip>\r\nIn this case we have a PDF with an XMP metadata stream containing two\r\n<rdf:RDF> entries, one with rdf:about set to a blank string, the other with\r\nit set to a UUID. The PDF/A specification (ISO-19005-1:2005(E) para 6.7.2)\r\nsimply says that the stream must conform to the \"XMP specification 2004\r\nrevision\" which reads (p21):\r\n\r\nThe rdf:about attribute on the rdf:Description element is a required\r\nattribute that identifies the resource whose metadata this XMP describes.\r\nThe value of this attribute must follow URI syntax and may be either:\r\n\r\n\u25cf  an empty string (as in the example above), which means that the XMP is\r\nphysically local to the resource being described. Applications must rely on\r\nknowledge of the file format to correctly associate the XMP with the\r\nresource.\r\n\r\n\u25cf  a unique instance ID that is generated every time a file is saved. The\r\nnext section gives guidelines for creating instance IDs.\r\n\r\nThe XMP packet must describe a single entity, and my reading of the above\r\nis a combination of empty-string and a unique UUID can meet this\r\nrequirement - this is how both our software and Acrobat X and XI behave.\r\nHowever it's ambiguous, and this clause was revised in the 2012 revision\r\n(ISO 16684-1:2011(E) para 7.4) to this:\r\n\r\nIf the XMP data model has an AboutURI (6.1, \u201cXMP packets\u201d), that same URI\r\nshall be the value of an rdf:about attribute in each top-level\r\nrdf:Description element. Otherwise, the rdf:about attributes for all top-\r\nlevel rdf:Description elements shall be present with an empty value. The\r\nrdf:about attribute shall not be used in more deeply nested rdf:Description\r\nelements.\r\nFor compatibility with very early XMP usage, it is recommended that XMP\r\nreaders tolerate a missing rdf:about attribute and treat it as present with\r\nan empty value. It is also recommended that XMP readers tolerate a mix of\r\nempty and non-empty rdf:about values, as long as all non-empty values are\r\nidentical.\r\n\r\nWhich means that an empty string and a unique UUID are technically\r\nincorrect, but it's recommended they be tolerated for compatibility\r\npurposes.\r\n\r\n</snip>\r\n\r\nI might be good to check our interpretation as\r\n\r\n<snip\r\nBFO and Acrobat X and XI think this is valid, PDFBox and\r\npdf-tools.com online validator lean the other and classify this document\r\nas invalid.\r\n</snip>\r\n\r\nto see if we should change our interpretation. If there is new input on the pdfa.org mailinglist I'll capture it here too."
    ],
    [
        "PDFBOX-556",
        "PDFBOX-638",
        "Performance regression from 0.7.3 to 0.8.0 After upgrading from version 0.7.3 to 0.8.0 our pdf indexing for lucene takes a lot longer than expected.\r\n\r\nE.g. a single pdf needs 1150ms to be indexed compared to 750ms with version 0.7.3 ==>  +50%\r\n\r\nMy first thought was that more pdfs are indexed or even indexed correctly with 0.8.0. But that shouldn't be an impact more than 50%.\r\n\r\nProfiling with YourKit shows that a lot of time is spent in the method BaseParser.readUntilEndStream and it's invocation of cmpCircularBuffer. Maybe somebody find out how to improve the performance here.\r\n\r\nThe method readUntilEndStream handles endobj tags in the stream also which impacts of course the performance, but this is OK.\r\n\r\n",
        "PDNameTreeNode setLower/UpperLimit don't set dictionary entries The setUpperLimit(String) and setLowerLimit(String) methods in PDNameTreeNode don't set the values in the dictionary."
    ],
    [
        "PDFBOX-1095",
        "PDFBOX-1911",
        "PDFToImage image rendering fails on pdf with embedded picture(s) ",
        "Orange background from the pdf gets turned into blue in the png files. "
    ],
    [
        "PDFBOX-3049",
        "PDFBOX-200",
        "Problem opening PDF, Unterminated string I experience a problem opening PDFs created by pdfbox.\r\nThe file is password protected. \r\nOpening them with evince, I get the following messages:\r\n{noformat}\r\nrjung$ evince generatedfile.pdf \r\nSyntax Error (1074): Illegal character '>'\r\nCommand Line Error: Incorrect password\r\nSyntax Error (1074): Illegal character '>'\r\nSyntax Error: Unterminated string\r\nSyntax Error: Leftover args in content stream\r\nSyntax Error: Unterminated string\r\nSyntax Error: Leftover args in content stream\r\nSyntax Error: Unterminated string\r\nSyntax Error: Leftover args in content stream\r\nSyntax Error: Unterminated string\r\nSyntax Error: Leftover args in content stream\r\nSyntax Error: Unterminated string\r\nSyntax Error: Leftover args in content stream\r\n{noformat}\r\nIs this an issue of pdfbox?",
        "PDF does not print properly [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1562539\nOriginally submitted by benlitchfield on 2006-09-20 15:52.\n\nSee dakarmag1.pdf\n\nBen"
    ],
    [
        "PDFBOX-1897",
        "PDFBOX-1241",
        "There are some errors within the source code documentation (javadocs) The documentation within the sources has some errors leading to missing or incorrect information.",
        "Better handle of missing offset at the end of a file We came across PDF files that do not have an offset at the end of the file.\r\nThis leads to the following exeption:\r\n\r\nc:\\tmp> java -jar pdfbox-app-1.6.0.jar ExtractText -endPage 1 \"On the Insert tab.pdf\"\r\nExtractText failed with the following exception:\r\njava.io.IOException: Error: Expected an integer type, actual=''\r\n        at org.apache.pdfbox.pdfparser.BaseParser.readInt(BaseParser.java:1384)\r\n        at org.apache.pdfbox.pdfparser.PDFParser.parseStartXref(PDFParser.java:6\r\n63)\r\n        at org.apache.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:464)\r\n\r\n        at org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:184)\r\n        at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1088)\r\n        at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1053)\r\n        at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:978)\r\n        at org.apache.pdfbox.ExtractText.startExtraction(ExtractText.java:196)\r\n        at org.apache.pdfbox.ExtractText.main(ExtractText.java:76)\r\n        at org.apache.pdfbox.PDFBox.main(PDFBox.java:42)\r\n\r\nWhile these PDFs are non-conforming, it'd be an improvement to allow them to be read and processed.\r\n"
    ],
    [
        "PDFBOX-519",
        "PDFBOX-1920",
        "NullPointerException in SetNonStrokingSeparation.java Caused by a failure to check for a null return from PDSeparation.getColorValues()\r\n\r\njava.lang.NullPointerException\r\n \tat org.apache.pdfbox.util.operator.SetNonStrokingSeparation.process(SetNonStrokingSeparation.java:56)\r\n \tat org.apache.pdfbox.util.operator.SetStrokingColor.process(SetStrokingColor.java:78)\r\n \tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:510)\r\n \tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:223)\r\n \tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:182)\r\n \tat org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:92)\r\n \tat org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:686)",
        "Buffer Error when trying to run node Description: Trying to merge PDF using the latest Merge PDF Node but getting the following error \r\n\r\nThere is a problem with task \u201cMerge PDF\u201d in the process \u201cCreate Application Pack\u201d \r\n\r\nProblem: An error occurred in executing an Activity Class. \r\n\r\nDetails: org.apache.pdfbox.exceptions.WrappedIOException: Could not push back 628696 bytes in order to reparse stream. Try increasing push back buffer using system property org.apache.pdfbox.baseParser.pushBackSize \r\n\r\nRecommended Action: Examine the activity class to correct the error and then resume. \r\n\r\nPriority of this problem: High Priority \r\n"
    ],
    [
        "PDFBOX-2740",
        "PDFBOX-3123",
        "Text extraction failed on Korean PDF Trying to extract text on a Korean PDF gives me a lot of warnings :\r\nWARNING: No Unicode mapping for US (33) in font DVCAYA+WtKoBaeumMyungjoL063zb4?Pw\r\navr. 01, 2015 12:05:32 PM org.apache.pdfbox.pdmodel.font.PDSimpleFont toUnicode\r\nWARNING: No Unicode mapping for NAK (33) in font JYLDGG+WtKoBaeumMyungjoL053zb4?Pw\r\navr. 01, 2015 12:05:32 PM org.apache.pdfbox.pdmodel.font.PDSimpleFont toUnicode\r\nWARNING: No Unicode mapping for RS (38) in font WRYULE+WtKoBaeumMyungjoL013zb4?Pw\r\navr. 01, 2015 12:05:32 PM org.apache.pdfbox.pdmodel.font.PDFont <init>\r\nWARNING: Invalid ToUnicode CMap in font FZEFOY+WtKoBaeumGothicL0422b4?Pw\r\navr. 01, 2015 12:05:32 PM org.apache.pdfbox.pdmodel.font.PDSimpleFont toUnicode\r\nWARNING: No Unicode mapping for DEL (33) in font FZEFOY+WtKoBaeumGothicL0422b4?Pw\r\navr. 01, 2015 12:05:32 PM org.apache.pdfbox.pdmodel.font.PDFont <init>\r\nWARNING: Invalid ToUnicode CMap in font OOLNBG+WtKoBaeumGothicL0122b4?Pw\r\navr. 01, 2015 12:05:32 PM org.apache.pdfbox.pdmodel.font.PDSimpleFont toUnicode\r\nWARNING: No Unicode mapping for SOH (33) in font OOLNBG+WtKoBaeumGothicL0122b4?Pw\r\n\r\nand the result is not readable. The pdf is containing the necessary conversion table because every pdf reader (Desktop or Mobile) let me copy and past the text without problem.\r\n ",
        "Text extraction garbled in this file, was OK in 1.8 Text extraction worked in 1.8, no longer in 2.0. Text extraction in Adobe Reader works too."
    ],
    [
        "PDFBOX-3164",
        "PDFBOX-2339",
        "XFDF annotations partially incorrectly applied to existing PDF or exceptions when parsing I am currently investigating in using PDFBox (my tests used PFDBox 2.0RC2) for a small use case \u201estamping\u201c annotations from a given XFDF format (created by Qoppa\u2019s jPDFEditor/jPDFNotes, www.qoppa.com) into a given PDF/A-1b file.\r\n\r\nThis works with a surprisingly minimal set of Java code line \uf04a But: obviously not all XFDF elements are supported and/or there are bugs in reading XFDF up to now. \r\n\r\nI just wanted to let you know about my experiences.\r\n\r\na)\tDrawing lines painted by a pencil (element: \u201c<gesture>\u201d) do not show up at all after stamping them. Why?\r\n\r\nSample data to test with:\r\n<ink name=\"C2B070EBB736993EA25F4545350AD2C3\" style=\"solid\" width=\"4.0\" flags=\"print\" date=\"D:20151207122033+01&apos;00&apos;\" color=\"#00ff00\" opacity=\"1.0\" page=\"0\" subject=\"Bleistift\" rect=\"62.4562,1378.1637,167.5599,1402.8388\" title=\"matstoll\"><inklist><gesture>68.4562,1385.1637;69.7534,1385.1637;73.6451,1385.1637;77.5368,1385.1637;82.7258,1387.7582;89.212,1389.0554;93.1037,1390.3525;96.9954,1390.3525;100.8871,1391.6498;104.7788,1392.947;111.2649,1394.2443;116.4539,1394.2443;121.6428,1395.5415;125.5345,1395.5415;130.7235,1395.5415;134.6152,1395.5415;139.8041,1395.5415;143.6958,1395.5415;148.8848,1395.5415;151.4792,1395.5415;155.3709,1396.8387;156.6682,1396.8387;157.9654,1396.8387;160.5599,1396.8387</gesture></inklist><contents>Pencil line</contents></ink>\r\nb)\tPolygons (at least when created with jPDFNotes) throw an exception when reading:\r\nException in thread \"main\" java.lang.NumberFormatException: For input string: \"1318.7075;1054.6517\"\r\n             at sun.misc.FloatingDecimal.readJavaFormatString(Unknown Source)\r\n             at sun.misc.FloatingDecimal.parseFloat(Unknown Source)\r\n             at java.lang.Float.parseFloat(Unknown Source)\r\n             at org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon.initVertices(FDFAnnotationPolygon.java:101)\r\n             at org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon.<init>(FDFAnnotationPolygon.java:78)\r\n             at org.apache.pdfbox.pdmodel.fdf.FDFDictionary.<init>(FDFDictionary.java:196) \r\n\r\nSample data to test with:\r\n<polygon name=\"534DC02A197B56578FFA6AE5F178100F\" style=\"solid\" width=\"9.0\" flags=\"print\" date=\"D:20151207121013+01&apos;00&apos;\" color=\"#0000ff\" opacity=\"1.0\" page=\"0\" subject=\"Polygon\" rect=\"857.5527,1117.7167,1063.6517,1334.1936\" title=\"matstoll\">\r\n<vertices>866.5527,1318.7075;1054.6517,1325.1936;1032.5987,1126.7167;876.9306,1179.9034;866.5527,1318.7075;</vertices>\r\n</polygon>\r\n\r\nc)\tA cloudy polygon cannot be read either \u2013 I assume a general issue reading polygons.\r\n\r\nSample data to test with:\r\n<polygon name=\"0276B0ECDCA680FDB0C0AE8377AE0FAA\" style=\"cloudy\" width=\"4.0\" flags=\"print\" date=\"D:20151207122247+01&apos;00&apos;\" intensity=\"2\" color=\"#ff5500\" opacity=\"1.0\" page=\"0\" subject=\"Cloud/Wolke\" rect=\"278.8037,1105.6361,563.5944,1216.9184\" title=\"matstoll\" IT=\"PolygonCloud\"><vertices>310.0391,1147.4725;420.304,1205.8481;555.2164,1117.6361;342.4699,1117.6361;286.6888,1134.5002;310.0391,1147.4725;</vertices></polygon>\r\nd)\tA freetext (\u201c<freetext>\u201d) element will not show up correctly:\r\nb1) Though \u201cwidth=0.0\u201d for the box, it PDFBox will render a box around the text\r\nb2) Though font is set to \u201cfont: Courier 12pt; color:#000000\u201d a wrong font will be rendered\r\nb3) The color setting will be ignored: my tests setting a color of font and border to red showed up a textbox with black border and black text.\r\ne)\tA freetext element with legend options does not show up correctly:\r\ne1) Colors are wrong/ignored\r\ne2) Font size not correct\r\ne3) Legend arrow not drawn\r\n\r\nSample data to test with:\r\n<freetext name=\"95DB90502D987FDE0DD5446ED48C098A\" style=\"solid\" width=\"3.0\" justification=\"left\" flags=\"print\" date=\"D:20151207122813+01&apos;00&apos;\" color=\"#4055ff\" callout=\"356.7395,1471.7811,479.2464,1372.3664,494.2464,1327.1395\" page=\"0\" subject=\"Legend textfield\" fringe=\"137.5069,-0.0,0.0,86.9147\" rect=\"356.7395,1269.4126,704.3984,1471.7811\" head=\"OpenArrow\" title=\"matstoll\" IT=\"FreeTextCallout\"><contents>This is a legend with arrow</contents><defaultstyle>font: Courier 24pt; color:#BFAAFF</defaultstyle><defaultappearance>1.0 0.7490196078431373 0.0 rg /Helv 12 Tf</defaultappearance></freetext>\r\nThere might be more of such issues \u2013 but I think this should be sufficient info for now to check how to proceed.\r\n\r\nAdobe Acrobat renders all these test cases correctly by the way, so I assume the XFDF elements are all correct.\r\n\r\nI can provide the sample code if needed \u2013 where shall I upload it \u2013 if needed?\r\n\r\nAs I do not find that much info about the support of XFDF in various PDF libraries \u2013 what about the official support in PDFBox? Should all of the samples work? What are the plans to do so?\r\n\r\nThanks a lot in advance.\r\n",
        "ArrayIndexOutOfBoundsException when type1 font is empty Exception when rendering page 2 of the attached file:\r\n{code}\r\nException in thread \"AWT-EventQueue-0\" java.lang.ArrayIndexOutOfBoundsException: 0\r\n        at org.apache.fontbox.type1.Type1Parser.parseASCII(Type1Parser.java:77)\r\n        at org.apache.fontbox.type1.Type1Parser.parse(Type1Parser.java:62)\r\n        at org.apache.fontbox.type1.Type1Font.createWithSegments(Type1Font.java:70)\r\n{code}\r\nThe font is empty:\r\n{code}\r\n249 0 obj\r\n<< \r\n/FontFile 250 0 R \r\n/Type /FontDescriptor \r\n/Ascent 833 \r\n/CapHeight 708 \r\n/Descent 250 \r\n/Flags 34 \r\n/FontBBox [ -170 -251 1020 934 ] \r\n/FontName /Bodoni-Italic \r\n/ItalicAngle 0 \r\n/StemV 0 \r\n>> \r\nendobj\r\n250 0 obj\r\n<< /Length 3 /Filter [ /ASCII85Decode ] /Length1 0 /Length2 0 /Length3 0 >> \r\nstream\r\n~>\r\nendstream\r\nendobj\r\n{code}\r\nAR brings a warning, but is able to render the page.\r\n\r\nSkipping the parse call in PDType1Font.java can also render the page. Changing type1Parser.parse() to return null if the font is empty might also succeed, although I didn't test that."
    ],
    [
        "PDFBOX-3020",
        "PDFBOX-2226",
        "Set libraries to current versions for RC We should use the latest version of the BC library before rolling out the 2.0 RC. The latest on maven is 1.52, the latest is 1.53 (is not yet on maven central). Other libs that are not the latest are junit and ant.",
        "IndexOutOfBoundsException when merging many PDFs in memory An IndexOutOfBoundsException occurs when attempting to merge many (at least 10) PDF documents together. All PDFs exist in byte arrays in memory, not as files. The stack trace looks as follows (irrelevant details redacted):\r\n\r\n2014-07-18 11:48:22,858 ERROR [io.undertow.servlet] (default task-5) ****: Uncaught exception: : ****\r\n\t****\r\nCaused by: org.apache.pdfbox.exceptions.WrappedIOException\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:267) [pdfbox-1.8.6.jar:]\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1216) [pdfbox-1.8.6.jar:]\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1183) [pdfbox-1.8.6.jar:]\r\n\tat org.apache.pdfbox.util.PDFMergerUtility.mergeDocuments(PDFMergerUtility.java:236) [pdfbox-1.8.6.jar:]\r\n\tat org.apache.pdfbox.util.PDFMergerUtility.mergeDocuments(PDFMergerUtility.java:185) [pdfbox-1.8.6.jar:]\r\n\tat ****\r\n\t... 29 more\r\nCaused by: java.lang.IndexOutOfBoundsException: Index: 145, Size: 145\r\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:638) [rt.jar:1.8.0_05]\r\n\tat java.util.ArrayList.get(ArrayList.java:414) [rt.jar:1.8.0_05]\r\n\tat org.apache.pdfbox.io.RandomAccessBuffer.seek(RandomAccessBuffer.java:110) [pdfbox-1.8.6.jar:]\r\n\tat org.apache.pdfbox.io.RandomAccessFileOutputStream.write(RandomAccessFileOutputStream.java:106) [pdfbox-1.8.6.jar:]\r\n\tat java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82) [rt.jar:1.8.0_05]\r\n\tat java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140) [rt.jar:1.8.0_05]\r\n\tat java.io.FilterOutputStream.close(FilterOutputStream.java:158) [rt.jar:1.8.0_05]\r\n\tat org.apache.pdfbox.pdfparser.BaseParser.parseCOSStream(BaseParser.java:634) [pdfbox-1.8.6.jar:]\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:609) [pdfbox-1.8.6.jar:]\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:194) [pdfbox-1.8.6.jar:]\r\n\t... 34 more"
    ],
    [
        "PDFBOX-1728",
        "PDFBOX-2415",
        "Error while extracting Text While extracting text from pdf getting error INFO: unsupported/disabled operator: EI\r\n",
        "java.lang.ClassCastException: org.apache.pdfbox.pdmodel.font.PDType1CFont cannot be cast to org.apache.pdfbox.pdmodel.font.PDType1Font java.lang.ClassCastException: org.apache.pdfbox.pdmodel.font.PDType1CFont cannot be cast to org.apache.pdfbox.pdmodel.font.PDType1Font\r\n\tat org.apache.pdfbox.preflight.process.reflect.FontValidationProcess.getFontValidator(FontValidationProcess.java:93)\r\n\tat org.apache.pdfbox.preflight.process.reflect.FontValidationProcess.validate(FontValidationProcess.java:72)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validateFonts(ResourcesValidationProcess.java:106)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validate(ResourcesValidationProcess.java:84)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.xobject.XObjFormValidator.validateXObjectResources(XObjFormValidator.java:178)\r\n\tat org.apache.pdfbox.preflight.xobject.XObjFormValidator.validate(XObjFormValidator.java:75)\r\n\tat org.apache.pdfbox.preflight.process.reflect.GraphicObjectPageValidationProcess.validate(GraphicObjectPageValidationProcess.java:70)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validateXObjects(ResourcesValidationProcess.java:302)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validate(ResourcesValidationProcess.java:88)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validateResources(SinglePageValidationProcess.java:164)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validate(SinglePageValidationProcess.java:83)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validatePage(PageTreeValidationProcess.java:58)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validate(PageTreeValidationProcess.java:47)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:88)\r\n\tat org.apache.pdfbox.preflight.PreflightDocument.validate(PreflightDocument.java:168)"
    ],
    [
        "PDFBOX-2285",
        "PDFBOX-2739",
        "debugLogMetadata doesn't log typo in debugLogMetadata(), it does nothing if debug is enabled.",
        "Saving merged documents causes IOException When some documents are used within a merge, it is not more possible to save the resulting PDDocument, calling method  PDDocument.save() throws \"java.io.IOException: COSStream has been closed and cannot be read. Perhaps its enclosing PDDocument has been closed?\"\r\n\r\n{code:borderStyle=solid}\r\nException in thread \"main\" java.io.IOException: COSStream has been closed and cannot be read. Perhaps its enclosing PDDocument has been closed?\r\n\tat org.apache.pdfbox.cos.COSStream.getFilteredStream(COSStream.java:163)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream(COSWriter.java:1147)\r\n\tat org.apache.pdfbox.cos.COSStream.accept(COSStream.java:280)\r\n\tat org.apache.pdfbox.cos.COSObject.accept(COSObject.java:158)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject(COSWriter.java:538)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody(COSWriter.java:450)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument(COSWriter.java:1031)\r\n\tat org.apache.pdfbox.cos.COSDocument.accept(COSDocument.java:464)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.write(COSWriter.java:1307)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.write(COSWriter.java:1215)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:944)\r\n\tat ch.ge.afc.ael.commun.piecejointe.Test.main(Test.java:37)\r\n{code}\r\n\r\nFor instance, problem occures with testPopupAnnotation.pdf when I try to merge it to testPDF.pdf  (see  http://svn.apache.org/repos/asf/tika/trunk/tika-parsers/src/test/resources/test-documents/  for these 2 documents)\r\n\r\n{code:title=Test.java|borderStyle=solid}\r\npublic static void main(String[] args) throws Exception {\r\n\tFile dir = new File(\"D:/temp/b\");\r\n\r\n\tPDFMergerUtility pdfMerge = new PDFMergerUtility();\r\n\tPDDocument targetDocument = new PDDocument();\r\n\r\n\r\n\tPDFParser ns = new PDFParser(new File(dir, \"testPDF.pdf\"));\r\n\tns.parse();\r\n\tPDDocument pddDocument1 = ns.getPDDocument();\r\n\tpdfMerge.appendDocument(targetDocument, pddDocument1);\r\n\tpddDocument1.close();\r\n\r\n\tns = new PDFParser(new File(dir, \"testPopupAnnotation.pdf\"));\r\n\tns.parse();\r\n\tPDDocument pddDocument2 = ns.getPDDocument();\r\n\tpdfMerge.appendDocument(targetDocument, pddDocument2);\r\n\tpddDocument2.close();\r\n\r\n\tpdfMerge.mergeDocuments();\r\n\r\n\tFileOutputStream fout = new FileOutputStream(new File(dir, \"targetDocument.pdf\"));\r\n\ttargetDocument.save(fout);\r\n\r\n}\r\n\r\n{code}\r\n\r\n\r\n"
    ],
    [
        "PDFBOX-677",
        "PDFBOX-143",
        "Lines not showing in PrintPDF print-out (Table borders and SVG figures) I am generating a single-page PDF file via XSLT/FOP, consisting of multiple\r\ntables of varying complexity and consisting of several figures created via SVG\r\nprimitives (rect, path, text) in the used stylesheet.\r\n\r\nAfter generating and exporting the document to the file system, I want to print\r\nit programmatically via PDFBox's PrintPDF class. This succeeds apparently, but\r\nthe resulting print-out lacks _all_ of the lines in the document: all table\r\nborders (of various sizes) are missing, and all figures are missing too (a large\r\ndiagram and several small symbols within the text). All texts are printed\r\ncorrectly, except for the heading of the document, which is written in a bold\r\nand bigger font.\r\n\r\nThis problem occurs on every printer at my disposal (two physical laser printers\r\nand one virtual pdf printer). The problem does not occur when opening and/or\r\nprinting the originally exported document via Adobe Reader - the document shows\r\nand prints perfectly. The problem is always reproducible. I am using the (as of now) latest PDFBox\r\nversion 1.1.0 on a JDK 1.5.0u18 on Windows XP Professional SP3.\r\n\r\nWhen converting the pdf with PDFBox's PDFToImage class, the problem becomes\r\nsmaller, but persists nonetheless: the resulting JPG lacks a good third of the\r\ntable borders, but shows all of the SVG-based lines correctly.\r\n\r\nI searched the bug tracker and the mailinglist archives but could not find a\r\nrecent matching discussion or tracker item. PDFBox seems to have had problems\r\nwith table borders already (I remember reading about line styles and weights not\r\nbeing rendered correctly), but all of those seem to date back to version numbers\r\naround version 0.8.\r\n\r\nI posted this problem to the user list ( http://pdfbox.markmail.org/message/a75wdvtk52xbxvjk?page=1 ) after searching the archives and this tracker and was told to open an issue on this tracker. I'll follow up with the mentioned samples in a minute.\r\n\r\nAny help would be appreciated!\r\n\r\nMany thanks in advance and have a good day,\r\n\r\n--Christoph Schmidt ",
        "NPE while extracting text from the document [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1448869\nOriginally submitted by entrex on 2006-03-13 05:59.\n\nDocument size: 2,5 MB\nContent: text, images\nLanguages: Deutch, English\n\nStack trace:\njava.lang.NullPointerException\n        at\norg.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead.getRectangle(PDThreadBead.java:216)\n        at\norg.pdfbox.util.PDFTextStripper.showCharacter(PDFTextStripper.java:701)\n        at\norg.pdfbox.util.PDFStreamEngine.showString(PDFStreamEngine.java:442)\n        at\norg.pdfbox.util.operator.ShowText.process(ShowText.java:63)\n        at\norg.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:487)\n        at\norg.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:467)\n        at\norg.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:202)\n        at\norg.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:156)\n        at\norg.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:351)\n        at\norg.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:267)\n        at\norg.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:219)\n        at\norg.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:139)\n        at\nnet.sf.pdfizer.pdf.PdfMetadataScanner.getPage(PdfMetadataScanner.java:72)\n        at\nnet.sf.pdfizer.wizards.DocumentPreviewPage.displayPage(DocumentPreviewPage.java:275)\n        at\nnet.sf.pdfizer.wizards.DocumentPreviewPage.setScanner(DocumentPreviewPage.java:256)\n        at\nnet.sf.pdfizer.wizards.PdfMetadataPage.preparePreview(PdfMetadataPage.java:301)\n        at\nnet.sf.pdfizer.wizards.PdfMetadataPage.readPdf(PdfMetadataPage.java:286)\n        at\nnet.sf.pdfizer.wizards.PdfMetadataPage.setDocument(PdfMetadataPage.java:223)\n        at\nnet.sf.pdfizer.wizards.PdfDocumentWizard$2.documentSelected(PdfDocumentWizard.java:82)\n        at\nnet.sf.pdfizer.wizards.MoveDocumentPage$2.widgetSelected(MoveDocumentPage.java:126)\n        at\norg.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)\n        at\norg.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n        at\norg.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1021)\n        at\norg.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2867)\n        at\norg.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2572)\n        at\norg.eclipse.jface.window.Window.runEventLoop(Window.java:809)\n        at\norg.eclipse.jface.window.Window.open(Window.java:787)\n        at\nnet.sf.pdfizer.CatalogTreeView$1.performDrop(CatalogTreeView.java:327)\n        at\norg.eclipse.jface.viewers.ViewerDropAdapter.drop(ViewerDropAdapter.java:227)\n        at\norg.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)\n        at\norg.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)\n        at\norg.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1021)\n        at\norg.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1045)\n        at\norg.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1030)\n        at\norg.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:900)\n        at\norg.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:558)\n        at\norg.eclipse.swt.dnd.DropTarget.drag_data_received(DropTarget.java:359)\n        at\norg.eclipse.swt.dnd.DropTarget.Drag_Data_Received(DropTarget.java:242)\n        at\norg.eclipse.swt.internal.gtk.OS._gtk_drag_get_data(Native\nMethod)\n        at\norg.eclipse.swt.internal.gtk.OS.gtk_drag_get_data(OS.java:3670)\n        at\norg.eclipse.swt.dnd.DropTarget.drag_drop(DropTarget.java:401)\n        at\norg.eclipse.swt.dnd.DropTarget.Drag_Drop(DropTarget.java:249)\n        at\norg.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native\nMethod)\n        at\norg.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:4777)\n        at\norg.eclipse.swt.widgets.Display.eventProc(Display.java:1067)\n        at\norg.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native\nMethod)\n        at\norg.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1158)\n        at\norg.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2570)\n        at\norg.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)\n        at\norg.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)\n        at\norg.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)\n        at\norg.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)\n        at\nnet.sf.pdfizer.Application.run(Application.java:45)\n        at\norg.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)\n        at\norg.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)\n.log lines 3843-3898/3907 99%\n\n\n[comment on SourceForge]\nOriginally sent by entrex.\nLogged In: YES \nuser_id=1100322\n\nSorry, I had to mentione this. I used 0.7.1 and when I\ndiscovered this misbehavior I moved to 0.7.2. After that I\ndidn't see it happening. Although, I will try later to play\nwith .  At thomoment I am short on time a bit. \nAndrey.\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nah there was a bug, (now fixed in CVS) that would cause a \nPDF to be not loaded fully and cause NPE in various parts, \nespecially when loaded from from a slow source(such as a \nremote machine/network drive/URL), that may actually be the \nproblem if this only occurs sometimes.  \n\nDid you move to 0.7.2 from an older version or from a \nnightly build.  If possible give the nightly build a try.  \nhttp://www.pdfbox.org/dist\n\nBen\n\n[comment on SourceForge]\nOriginally sent by entrex.\nLogged In: YES \nuser_id=1100322\n\nHello! The file name is Traunmueller.2004.pdf . It seems\nthat this problem is not persistent. After that I moved to\nPDFBox 7.2 and it did not repeat. Anyway ;) Good luck! \nAndrey.\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nIf possible please upload the PDF to ftp.pdfbox.org and \npost the name of the uploaded file here.\n\nThanks,\nBen"
    ],
    [
        "PDFBOX-520",
        "PDFBOX-2209",
        "Ignores char spacing (Tc) and word space (Tw) when rendering PDFs to images When PDFStreamEngine parses encoded text the resulting rendering to an image does not apply the char spacing (Tc) and word spacing (Tw)  through the callbacks to processTextPosition. This is because it passes the complete string block and a individual character width array. The character and word spacings are applied correctly to the matrix calculations however and so all the relevant information is available. \r\n\r\nThe problem when writing PDFs to images occurs because text being rendered is issued through calls to AWT Font classes, these do not apply the character and word spacings across a whole string block. For example a PDF I have which has the text fully justified has been rendered so that the line is split into three blocks (arbitary positions in words) each block having a different word spacing. When rendered this comes out with three bocks of text with large gaps in between (or even over writing each other if the character spacing was used to compress the rendered string). \r\n\r\nHaving read through the PDF spec it would seem that each glyph should be rendered separately calculating the next ones position taking into account the character and word spacing. To achieve this the attached patch modifies the behaviour of PDFStreamEngine to fire a single processTextPosition event for each character taken from the encoded string. This may or may not make the need for the individual widths array redundant but it has been preserved for backward compatability, as has the string buffer containing the resulting string (which would now only need to contain one character). So both these can be optimiized to a length of one and still preserve backward compatability (this patch does not include that change).\r\n\r\nThere is also a patch for PageDrawer itself which i'm not entirely sure if its necessary or not. It makes a minor adjustment to how the AffineTransform is calculated, removing two lines which previosuly were altering the text positions matrix. I made this change as I couldnt see why this was being done so more of an experiment. I could see any difference at first but on closer inspection I see minor changes to some characters positions (when used with the other patch). So together it might give an even closer rendering.\r\n\r\nAn alternative approach may be to make the page drawer render each character from the text position offsetting each one using the individual widths as it goes. However noting the behaviour of the second patch that may lead to slightly inaccurate renderings again, so very hard to tell with experimenting and very close examination of the results.\r\n\r\nThis may be related to issue PDFBOX-508 which was specifical looking at lost space during text extraction \r\n\r\nI have also looked at text extraction incase this was effecting operations like combining diacritics. This was in case the actual positions of characters may be off slightly when calculating location using the individual character width array as opposed to the glyphs position as it should be rendered. As it stores the calculated glyph position which is subsequently summed whilst scanning the string to look for possible overlaps they should result in the same answer. However this patch means that last text position processed may not be the one to check for the overlap in anymore. Based on a line containing multiple text blocks this is probably true of the normal case anyway so probably needs separate attention.\r\n",
        "[PATCH] Restore shading API Some of shading API is gone in 2.0 can we have it back so we can convert PDF to postscript in fop"
    ],
    [
        "PDFBOX-434",
        "PDFBOX-907",
        "Improve html output Would like to improve the html output of pdf files for arabic rendering. The attached file has changes that should improve the way the -html option works. Now, output files are tagged with the .html extension. We also added <DOCTYPE> information as well as a <meta> tag which writes the appropriate encoding of the file. Cleaned up a lot of code from PDFTextStripper and PDFText2HTML which wasn't being used. Added ability to set the <title> tag of the html document to be the title given in the pdf document information if it exists. Otherwise it will guess a title from the beginning first lines of the file. ",
        "Encrypted Key not correctly calculated when the meta data is not encrypted Since rev 4, meta data can be unencrypted while the data is encrypted. If the metadata is not encrypted 0xFFFFFFFF should be added to the hash:\r\n\r\n\"Security handlers of revision 4 or greater) If document metadata is not being encrypted, pass 4 bytes with\r\nthe value 0xFFFFFFFF to the MD5 hash function.\"\r\n\r\n(see see 7.6.3.3 Algorithm 2 Step f of PDF 32000-1:2008)\r\n\r\nWhether or not the metadata is encrypted is store in the encryption dictionary. The default value is to encrypt the meta data.\r\n\r\nI will attach a patch to detect whether the meta data is encrypted, and if not 0xFFFFFFFF will be added.\r\n\r\nThe document that I have tested with can be downloaded from http://www.mbtareview.com/MBTA_Review_2009.pdf"
    ],
    [
        "PDFBOX-1975",
        "PDFBOX-1955",
        "Improve TestImageIOUtils unit tests to check image resolution and compression Because of the problems with recent changes (see PDFBOX-1963), I will improve the unit tests so that image resolution and compression is checked.\r\n\r\nI found out that JPEGs don't have a resolution, BMP had the wrong resolution. The fault wasn't in the java TIFF writer as I thought before, it is in the java PNG writer, which uses the PixelSize values wrongly, i.e. it interprets them as \"pixels per mm\" instead of \"mm per pixel\" as per specification. The JPEG writer throws an exception \"JFIF APP0 must be first marker after SOI\". The BMP writer can set the resolution, but the BMP reader doesn't read it.\r\n\r\n(Some of this might be different depending on the version)",
        "Regression: Colors much lighter The colors in the file from PDFBOX-1288 is now much lighter than before."
    ],
    [
        "PDFBOX-210",
        "PDFBOX-2060",
        "extract text without access permissions [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1583772\nOriginally submitted by nobody on 2006-10-24 06:30.\n\nI have a protected PDF-File\n(http://www.usu-ag.com/english/d/OSP101E.pdf).\nAll contents of the document are encrypted and search\nengines cannot access the document's metadata.\nContent Copying or Extraction:          Not Allowed\nContent Extraction for Accessibility:   Not Allowed\n\nWith PDFBOX-0.8.3 i can extract all content (not correct).\nWith PDFBOX-0.8.2 i can not do this (correct).",
        "PDDocument.silentPrint using default Font When trying to silent print a document following error occurs:\r\n\r\n{color:red} org.apache.pdfbox.pdmodel.font.PDType0Font getawtFont\r\nInformation: Using font SansSerif.plain instead of Verdana{color}\r\n\r\n\r\n{code:title=SilentPrint.java|borderStyle=solid}\r\ntry {\r\n\tDocFlavor flavor = DocFlavor.SERVICE_FORMATTED.PRINTABLE;\r\n\tString psMimeType = DocFlavor.BYTE_ARRAY.POSTSCRIPT.getMimeType();\r\n\tStreamPrintServiceFactory[] factories = StreamPrintServiceFactory.lookupStreamPrintServiceFactories(flavor, psMimeType);\r\n\r\n\tString pdffile = \"c:\\\\temp\\\\TabelleTest.pdf\";\r\n\tString psfile = \"c:\\\\temp\\\\temp.ps\";\r\n\t\t\t\r\n\tPDDocument doc = PDDocument.load(pdffile);\r\n\t\t\t\r\n\t// Open the output file\r\n\tFileOutputStream fos = new FileOutputStream(psfile);\r\n\r\n\tByteArrayOutputStream bout = new ByteArrayOutputStream();\r\n\r\n\t// Use the first service available\r\n\tPrintService sps = factories[0].getPrintService(bout);\r\n\r\n\t// Define paper size\r\n\tPrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();\r\n\taset.add(MediaSizeName.ISO_A4);\r\n\r\n\tPrinterJob pjob = PrinterJob.getPrinterJob();\r\n\tpjob.setPrintService(sps);\r\n\t\t\t\r\n\tdoc.silentPrint(pjob);\r\n\tdoc.close();\r\n\t\t\t\r\n\tfos.write(bout.toByteArray());\r\n\tfos.close();\r\n\r\n\t} catch (Throwable t) {\r\n\t\tt.printStackTrace();\r\n}\r\n\r\n{code}"
    ],
    [
        "PDFBOX-3015",
        "PDFBOX-2471",
        "PDICCBased loadICCProfile() throwing ConcurrentModificationException When running a load test using PDFRenderer's method  renderImageWithDPI(pageIndex, 175), I am receiving a ConcurrentModificationException.  I only receive this using Java 6-8 and Tomcat 6 or 7 but Tomcat 8 seems to work.  I can reproduce this with as little as 4 concurrent threads kicked off at the same time.  It only happens the first time the method is called (server startup), after that it works fine.\r\n\r\nHere is the stacktrace:\r\n{quote}\r\njava.util.ConcurrentModificationException\r\n        at java.util.Vector$Itr.checkForComodification(Vector.java:1156)\r\n        at java.util.Vector$Itr.next(Vector.java:1133)\r\n        at sun.java2d.cmm.ProfileDeferralMgr.activateProfiles(ProfileDeferralMgr.java:93)\r\n        at java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:775)\r\n        at java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:1013)\r\n        at org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.loadICCProfile(PDICCBased.java:119)\r\n        at org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.<init>(PDICCBased.java:89)\r\n        at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:162)\r\n        at org.apache.pdfbox.pdmodel.PDResources.getColorSpace(PDResources.java:155)\r\n        at org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace.process(SetStrokingColorSpace.java:41)\r\n        at org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:799)\r\n        at org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:461)\r\n        at org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:438)\r\n        at org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:149)\r\n        at org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:180)\r\n        at org.apache.pdfbox.rendering.PDFRenderer.renderPage(PDFRenderer.java:208)\r\n        at org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:139)\r\n        at org.apache.pdfbox.rendering.PDFRenderer.renderImageWithDPI(PDFRenderer.java:80)\r\n{quote}\r\n\r\nSince the problem was with a java class not being synchronized, I added a simple static synchronized method to PDICCBased.java to load the profile and prevent the race condition:\r\n{quote}\r\n    private static synchronized ICC_Profile getICCProfile(InputStream input) throws IOException \\{\r\n        return ICC_Profile.getInstance(input);\r\n   \\}\r\n{quote}\r\nAnd call it from the loadICCProfile method:\r\n{quote}\r\n    ICC_Profile profile = PDICCBased.getICCProfile(input);\r\n{quote}",
        "AES encryption failing to write Acroform field names and values When writing a PDF using AES 256 bit encryption, the field names / values from the Acroform are not being persisted correctly. If I encrypt using RC4 128 bit, they are persisted correctly. I am using snapshot pdfbox:2.0.0-20141023.180319-636.\r\n\r\nI dug into this, and it looks to me the problem is with COSWriter.visitFromString, which invokes  SecurityHandler.decryptString (there is no SecurityHandler.encryptString)."
    ],
    [
        "PDFBOX-2979",
        "PDFBOX-788",
        "TexturePaint related bug in convertToImage method when trying to create a thumbnai image from PDF I am trying to create a JPG image from a PDF page using convertToImage method of org.apache.pdfbox.pdmodel.PDPage class. \r\n\r\nIf a PDF page contains a layer/element that was created using TexturePaint, convertToImage renders that element with a white background instead of original texture.\r\n\r\nSee attached files for input PDF, source code used to convert it to an image and an output file. \r\n\r\nThanks!",
        "PrintPDF does not take the windows default printer orientation into account We have 2 printers, the first one is defined to print in Portrait by default in Windows, the other one is defined to print in Landscape by default in Windows.\r\nPrintPDF does not take the default configuration into account.\r\n\r\nI wrote a little patch that seems to solve this bug\r\n"
    ],
    [
        "PDFBOX-2194",
        "PDFBOX-1974",
        "Refactor predictor The predictor class has an unneeded ByteArrayOutputStream. I observed a temporary memory usage of sometimes 1MB. I will remove this and do some minor cleanup.",
        "ICOSVisitor is redundant ICOSVisitor is only implemented by one class, COSWriter, so it can be removed."
    ],
    [
        "PDFBOX-1104",
        "PDFBOX-1753",
        "Improves parsing speed of a pdf by an average of 45% when extracting text from one random page in the document. The parser proposed just parses the minimal required from the PDF file according to PDF specifications.  A random page can be parsed without having to parse the entire document first.  Exist parsing code was used to transfer existing bugfixes and compliance fixes to this parser.\r\n\r\nThe parser has been tested with the text extraction tool.  But has not been tested with the viewer or other pdf tools.  Some tools may need to be recoded to use the parser to prevent null pointer exceptions since the COSDocument will contain null pointers for COSObjects that have not been parsed.  For example, the Current Text Extractor assumes the entire document is loaded.  On this code submission a modified text extractor is also included with the name OnePagePDFTextStripper.  The class has a function that will extract the text from a PDPage submitted by the programmer.",
        "The font gets gibbrish when adding a line of text to an existing PDF with a table When trying to add a line to the existing PDF document with a table the table headers appear gibberish. \r\n the table header used to be PMITS Asset ID and after adding the header it reads as: 3 0 , 7 6 $ V V H W. some gibberish characters. Here is my code:\r\n    // the document\r\n    PDDocument doc = null;\r\n    try\r\n    {\r\n        doc = PDDocument.load( file );\r\n\r\n        List allPages = doc.getDocumentCatalog().getAllPages();\r\n        //PDFont font = PDType1Font.HELVETICA_BOLD;\r\n\r\n        for( int i=0; i<allPages.size(); i++ )\r\n        {\r\n            PDPage page = (PDPage)allPages.get( i );\r\n            PDRectangle pageSize = page.findMediaBox();\r\n            PDPageContentStream contentStream = new PDPageContentStream(doc, page, true, true,true);\r\n            PDFont font = PDType1Font.TIMES_ROMAN;\r\n            float fontSize = 15.0f;\r\n            contentStream.beginText();\r\n            // set font and font size\r\n            contentStream.setFont( font, fontSize);\r\n            contentStream.moveTextPositionByAmount(700, 1150);\r\n            contentStream.drawString( message);\r\n            contentStream.endText();\r\n\r\n            //contentStream.\r\n            contentStream.close();}\r\n\r\n        doc.save( outfile );\r\n    }\r\n    finally\r\n    {\r\n        if( doc != null )\r\n        {\r\n            doc.close();\r\n        }\r\n    }\r\n}\r\nStack overflow has a lot of discussion about this issue and explained by user MLK\r\nhttp://stackoverflow.com/questions/19322553/adding-header-to-existing-pdf-file-using-pdfbox\r\n   I am not sure how to attache the test PDF to this issue."
    ],
    [
        "PDFBOX-1441",
        "PDFBOX-1785",
        "Convert text  to pdf  in polish (pl_PL) grabbled I have been using pdfbox 1.7.1 and try to convert strings in polish (pl_PL) to pdf and the result is all converted strings are grabled",
        "Print the chinese character I have scenario like this,\r\n\r\nWe are planning to write a pdf using the pdfbox jar, we are facing the issue of passing the chinese character but it fails and it will display as \"?\".\r\n\r\nPlease help me out of this.\r\n\r\nThanks, Sivaraman"
    ],
    [
        "PDFBOX-2838",
        "PDFBOX-371",
        "Please make PDPageContentStream non-final Please make PDPageContentStream non-final as in certain cases it might be helpful to cache the last set data on an PDPageContentStream (such as the last used Font) to avoid bloating the created PDF. Therefore the methods must be overridable.",
        "Soft Hyphen character not mapped to hyphen in WinAnsiEncoding (and suggested fix) When running text extraction on a PDF file that contains the soft hyphen character in the WinAnsiEncoding (that is, 0255), the text extractor incorrectly maps this as a space, when it should be a hyphen. As the PDF Reference 1.7 says in note 5 of table D.1:\n\n'The hyphen character is also encoded as 255 in WinAnsiEncoding. The meaning of this duplicate code is \"soft hyphen,\" but it is typographically the same as hyphen.'\n\nThe reason that a soft hyphen is typographically the same as hyphen is that a soft hyphen indicates that a hyphen MAY be placed here if necessary (i.e. breaking a word across lines). Since the soft hyphen should only be put, by the PDF producer, at the end of a line to break a word, it stands to reason that the option to place a hyphen must be taken.\n\nI think I've traced the reason for the substitution to Encoding.getName, where because there is no mapping in the codeToName mapping for this code in WinAnsiEncoding, by default it returns \"space\".\n\nThe fix is not as simple as adding an addCharacterEncoding( 0255, COSName.getPDFName(\"hyphen\")) to WinAnsiEncoding, because that will set both the codeToName mapping AND the nameToCode mapping, which will overwrite the 055 nameToCode mapping.\n\nAdding this line:\n\ncodeToName.add( new Integer(0255), COSName.getPDFName(\"hyphen\"));\n\nto the end of the WinAnsiEncoding constructor seems to fix the issue."
    ],
    [
        "PDFBOX-2911",
        "PDFBOX-2865",
        "Merge does not close input streams As explained in the linked SO post: merge closes the source documents, but not the source streams.\r\n\r\nOne can call addSource() with a File object and then there would be no way for the caller to close the inputstream, so that would be a bug for sure. Not yet sure what to do when called with streams.",
        "Downgrade logging \"Using last-resort fallback for x font\" to warn in 2.0.0? I'm about a quarter of the way through the run against govdocs1 with 2.0.0 trunk.  The log file (threshold=error) for pdfbox alone weighs in at 2 GB.  It looks like there is quite a bit of logging along the lines of:\r\n{noformat}\r\n1488429 2015-07-08 19:44:49,460 [pool-2-thread-14] ERROR org.apache.pdfbox.pdmodel.font.FontMapper  - Using last-resort fallback for TTF font 'Times-Roman'\r\n{noformat}\r\n\r\nAre these truly \"error\" level events?  If so, should they be happening this often?  I realize govdocs1 is an aging corpus...\r\n\r\nOn a recent run with 1.8.9, the pdfbox's error log file was 6.5MB."
    ],
    [
        "PDFBOX-713",
        "PDFBOX-822",
        "PDFont fails to close Font File. Findbugs Reported this problem.\r\n\r\nI have include a patch which closes the file.\r\n\r\nBufferedReader in = new BufferedReader(new InputStreamReader(fontFile.getUnfilteredStream()));\r\n\r\nBug: org.apache.pdfbox.pdmodel.font.PDFont.getEncodingFromFont() may fail to close stream\r\nPattern id: OS_OPEN_STREAM, type: OS, category: BAD_PRACTICE\r\n\r\n\r\nThe method creates an IO stream object, does not assign it to any fields, pass it to other methods that might close it, or return it, and does not appear to close the stream on all paths out of the method.  This may result in a file descriptor leak.  It is generally a good idea to use a finally block to ensure that streams are closed.\r\n",
        "Wrong handling of PNG predictors with FlateDecode, patch attached The current implementation of PNG predictors for FlateDecode (class FlateFilter) is based on a wrong interpretation of predictor semantic. It assumes that predictor 15 (optimum) must be specified in order to use PNG prediction and predictor 10 (PNG NONE) would mean no prediction. Latter one is correct as type for an image row but wrong in its meaning for whole image. As specification states if one of the PNG predictor values are defined as 'Predictor' parameter value it only means that PNG prediction is in use (independent if it is 10, 11, ..., 15).\r\nI have attached a patch which removes predictor value '10' from 'no prediction' code and which triggers PNG prediction for all values >= 10.\r\nThe bug can be tested with https://www.cryptool.org/trac/CrypTool2/export/1909/trunk/Documentation/Developer/PluginHowTo/HowToDeveloper.pdf\r\nHere e.g. on page 6 in the screenshot image (Im3) the rows are shifted by a pixel each 3 lines which is a result of the not interpreted predictor byte of the rows. The predictor value for the image is 10 (PNG NONE).  "
    ],
    [
        "PDFBOX-1666",
        "PDFBOX-2806",
        "Missing StemV font descriptor entry when embedding AFM fonts When embedding an AFM font the StemV field is missing in the PDF which renders it not PDF/A-1b compliant.\r\n\r\nAs the StemV value is not included in AFM files it seems to be OK to simply set it to 0. A quick test in Firefox, Chrome, OSX Preview and Acrobat Reader indicates having StemV set to 0 does not impact font rendering in any obvious way. FOP computes StemV from other values stored in PFM files but the fields are optional so can't be relied upon [1] (hence results are often 0 anyway) and Word [2] and iOS [3] seem to use 0 by default.\r\n\r\nVerified in SVN trunk 1504502 (2013.07.18)\r\n\r\n[1] http://xmlgraphics.apache.org/fop/1.1/fonts.html\r\n[2] http://tracker.luatex.org/view.php?id=32\r\n[3] http://blog.nomzit.com/2010/08/18/annoying-bug-in-quartz-pdfcontext-font-handling/ -- just a link to a iOS-originating PDF dissected, nothing to do with the bug the article is about",
        "The 'kern' table type is not supported. The kerning table ('kern') is not supported by fontbox."
    ],
    [
        "PDFBOX-2868",
        "PDFBOX-573",
        "NPE in Acroform getValueAsString The most common exception in the first run of 2.0.0-trunk against govdocs1 is this:\r\n{noformat}\r\njava.lang.NullPointerException\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField.getValueAsString(PDNonTerminalField.java:181)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.addFieldString(PDF2XHTML.java:615)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.processAcroField(PDF2XHTML.java:580)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.extractAcroForm(PDF2XHTML.java:567)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.endDocument(PDF2XHTML.java:201)\r\n\tat org.apache.pdfbox.text.PDFTextStripper.writeText(PDFTextStripper.java:250)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.process(PDF2XHTML.java:137)\r\n\tat org.apache.tika.parser.pdf.PDFParser.parse(PDFParser.java:132)\r\n{noformat}\r\n",
        "Maven build does not download files not inclued in the distribution The following plug-in call seems to be the best thing. Just run ant directly. There does not seem to be a maven equivalent for getting files from a server.\r\n\r\n    <build>\r\n    <plugins>\r\n      <plugin>\r\n        <artifactId>maven-antrun-plugin</artifactId>\r\n        <executions>\r\n          <execution>\r\n            <phase>generate-sources</phase>\r\n            <configuration>\r\n              <tasks>\r\n\t\t\t\t<ant antfile=\"build.xml\" target=\"get.adobefiles\"/>\r\n              </tasks>\r\n            </configuration>\r\n            <goals>\r\n              <goal>run</goal>\r\n            </goals>\r\n          </execution>\r\n        </executions>\r\n         <dependencies>\r\n                       <dependency>\r\n                           <groupId>org.apache.ant</groupId>\r\n                           <artifactId>ant-nodeps</artifactId>\r\n                           <version>1.7.1</version>\r\n                       </dependency>\r\n        </dependencies>\r\n\r\n      </plugin>\r\n    </plugins>\r\n\r\nAnd the build.xml need to be modified from:\r\n    <target name=\"find.adobefiles\">\r\n        <available property=\"adobefiles.found\" file=\"${dest.dir}/Resources\"/>\r\n    </target>\r\n\r\nto:\r\n    <target name=\"find.adobefiles\">\r\n        <available property=\"adobefiles.found\" file=\"${dest.dir}/Resources/cmap\"/>\r\n    </target>\r\n  "
    ],
    [
        "PDFBOX-1908",
        "PDFBOX-332",
        "Drop shadow is too heavy (Transparency Groups) The drop shadow in the attached file appears too heavy, it is overly-saturated. This seems like a masking or colour space issue.",
        "Insert jbig2 image into PDF [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1878543\nOriginally submitted by nobody on 2008-01-23 14:38.\n\nPlease add support for embedding a jbig2 image into a PDF file."
    ],
    [
        "PDFBOX-1722",
        "PDFBOX-1605",
        "PDF conversion to image crashes the JVM because PDFBOX dont find the font and getFontDescriptor some pdf files crashes the JVM during conversion to image with the following message : \r\n\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000060d07697, pid=6488, tid=8628\r\n#\r\n# JRE version: 7.0_25-b17\r\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (23.25-b01 mixed mode windows-amd64 compressed oops)\r\n# Problematic frame:\r\n# C  [t2k.dll+0x17697]\r\n#\r\n# Failed to write core dump. Minidumps are not enabled by default on client versions of Windows\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.sun.com/bugreport/crash.jsp\r\n# The crash happened outside the Java Virtual Machine in native code.\r\n# See problematic frame for where to report the bug.\r\n#\r\n\r\n\r\nj  org.apache.pdfbox.pdmodel.font.PDSimpleFont.writeFont(Ljava/awt/Graphics2D;Ljava/awt/geom/AffineTransform;FFLjava/awt/font/GlyphVector;)V+63\r\nj  org.apache.pdfbox.pdmodel.font.PDSimpleFont.drawString(Ljava/lang/String;[ILjava/awt/Graphics;FLjava/awt/geom/AffineTransform;FF)V+253\r\nj  org.apache.pdfbox.pdfviewer.PageDrawer.processTextPosition(Lorg/apache/pdfbox/util/TextPosition;)V+436\r\nj  org.apache.pdfbox.util.PDFStreamEngine.processEncodedText([B)V+709\r\nj  org.apache.pdfbox.util.operator.ShowTextGlyph.process(Lorg/apache/pdfbox/util/PDFOperator;Ljava/util/List;)V+162\r\nj  org.apache.pdfbox.util.PDFStreamEngine.processOperator(Lorg/apache/pdfbox/util/PDFOperator;Ljava/util/List;)V+35\r\nj  org.apache.pdfbox.util.PDFStreamEngine.processSubStream(Lorg/apache/pdfbox/cos/COSStream;)V+126\r\nj  org.apache.pdfbox.util.PDFStreamEngine.processSubStream(Lorg/apache/pdfbox/pdmodel/PDPage;Lorg/apache/pdfbox/pdmodel/PDResources;Lorg/apache/pdfbox/cos/COSStream;)V+20\r\nj  org.apache.pdfbox.util.PDFStreamEngine.processStream(Lorg/apache/pdfbox/pdmodel/PDPage;Lorg/apache/pdfbox/pdmodel/PDResources;Lorg/apache/pdfbox/cos/COSStream;)V+43\r\nj  org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(Ljava/awt/Graphics;Lorg/apache/pdfbox/pdmodel/PDPage;Ljava/awt/Dimension;)V+80\r\nj  org.apache.pdfbox.pdmodel.PDPage.convertToImage(II)Ljava/awt/image/BufferedImage;+310\r\nj  com.portal.cq.util.PDFUtils.getPdfPagesAsImages(Ljava/lang/String;)Ljava/util/List;+116\r\nj  com.portal.cq.thread.CompiladorDeDocumentosRunnable.run()V+24\r\nj  java.lang.Thread.run()V+11\r\nv  ~StubRoutines::call_stub\r\n\r\nso i tried to resolve de PDFont with the bellow code:\r\n\r\ndocument = PDDocument.load(\"\\\\\\\\192.168.1.8\\\\clientes\\\\NEWSPACE\\\\IN\\\\ControleQualidade\\\\INTERFILE\\\\3032152_5.pdf\");\r\nPDFont font = PDTrueTypeFont.loadTTF(document, new File(\"//192.168.1.8/clientes/font/arial.ttf\"));\r\n\r\n@SuppressWarnings(\"unchecked\")\r\n\t\t\tList<PDPage> pages = document.getDocumentCatalog().getAllPages();\r\n\t\t\tint j = 1;\r\n\t\t\tfor (PDPage page : pages) {\r\n\t\t\t\tMap<String, PDFont> maps = page.getResources().getFonts();\r\n\t\t\t\tSet<String> chaves = maps.keySet();\r\n\t\t\t\tFont f = null;\r\n\t\t\t\tfor (String chave : chaves) {\r\n\t\t\t\t\tif (chave != null) {\r\n\t\t\t\t\t\tif (maps.get(chave).getFontDescriptor() != null) {\r\n\t\t\t\t\t\t\tf = FontManager.getAwtFont(maps.get(chave)\r\n\t\t\t\t\t\t\t\t\t.getFontDescriptor().getFontName());\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpage.getResources().getFonts().put(chave, font);\r\n\t\t\t\t\t\t\tsb.append(i+j+\".png com problemas \\n\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tBufferedImage convertedImage = page.convertToImage(BufferedImage.TYPE_BYTE_BINARY, RESOLUTION_DEFAULT);\r\n\t\t\t\tsaveImageToRepository(i, j, convertedImage);\r\n\t\t\t\tj++;\r\n\t\t\t\tif (isNegativeImage(convertedImage)) {\r\n\t\t\t\t\tbImages.add(invertNegativeImage(convertedImage));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbImages.add(convertedImage);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\r\nbut in the end it change all my documents\r\nwith a log:\r\n\r\nWARNING: Changing font on <\u0016> from <Arial> to the default font\r\nSet 19, 2013 3:19:53 PM org.apache.pdfbox.pdmodel.font.PDSimpleFont drawString\r\n\r\ni'll attached de result of this\r\nhow i can solve this?",
        "PDPropBuildDataDict: use COSName instead of COSString as name value Elyes Lehtihet reported a bug with the representation of the name value with the PDPropBuildDataDict class. According to the spec is has to be a named value instead of a string.\r\n\r\n"
    ],
    [
        "PDFBOX-1413",
        "PDFBOX-866",
        "Spaces replaced by \u00e9 when exporting image When exporting pdf to image, spaces are replaced with the \u00e9 character.\r\n\r\nAnd there are some other print issues... (I will attach an example)",
        "Indexed images are sometimes corrupted when encrypting the PDF While PDFBOX-99 did fix this problem with some images, it did not solve the problem in 100% of the cases.  I'll be attaching a file which demonstrates the problem and I plan on fixing this once I figure out what's going awry."
    ],
    [
        "PDFBOX-947",
        "PDFBOX-2219",
        "Avoid using temporary files in PDJpeg  The current code writes the PDF to a tmp file and then read it back. This can be done in-memory using the InputStream constructors.",
        "Bullets wrong from PDFBOX-183 java -jar ~/pdf-box-svn/app/target/pdfbox-app-2.0.0-SNAPSHOT.jar PDFToImage cv1.pdf"
    ],
    [
        "PDFBOX-2229",
        "PDFBOX-2209",
        "NPE in GlyfCompositeDescript.getPointCount I get this with the attached file:\r\n{code}\r\nException in thread \"AWT-EventQueue-0\" java.lang.NullPointerException\r\n        at org.apache.fontbox.ttf.GlyfCompositeDescript.getPointCount(GlyfCompositeDescript.java:199)\r\n        at org.apache.fontbox.ttf.GlyphRenderer.describe(GlyphRenderer.java:56)\r\n        at org.apache.fontbox.ttf.GlyphRenderer.getPath(GlyphRenderer.java:46)\r\n        at org.apache.fontbox.ttf.GlyphData.getPath(GlyphData.java:114)\r\n        at org.apache.pdfbox.rendering.font.TTFGlyph2D.getPathForGlyphId(TTFGlyph2D.java:202)\r\n        at org.apache.pdfbox.rendering.font.TTFGlyph2D.getPathForCharacterCode(TTFGlyph2D.java:154)\r\n{code}",
        "[PATCH] Restore shading API Some of shading API is gone in 2.0 can we have it back so we can convert PDF to postscript in fop"
    ],
    [
        "PDFBOX-901",
        "PDFBOX-808",
        "NPE in importPage() when importing a blank page (No Contents item) Null Pointer Exception importing a page if the page does not have a Contents item.  (A blank page)\r\nPatch is to not try to copy Contents.\r\n\r\n\r\n### Eclipse Workspace Patch 1.0\r\n#P pdfbox\r\nIndex: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java\r\n===================================================================\r\n--- pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java\t(revision 1026306)\r\n+++ pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java\t(working copy)\r\n@@ -322,16 +322,19 @@\r\n         try\r\n         {\r\n             PDStream src = page.getContents();\r\n-            PDStream dest = new PDStream( new COSStream( src.getStream(), document.getScratchFile() ) );\r\n-            importedPage.setContents( dest );\r\n-            os = dest.createOutputStream();\r\n+            if (src != null)\r\n+            {\r\n+                PDStream dest = new PDStream( new COSStream( src.getStream(), document.getScratchFile() ) );\r\n+                importedPage.setContents( dest );\r\n+                os = dest.createOutputStream();\r\n \r\n-            byte[] buf = new byte[10240];\r\n-            int amountRead = 0;\r\n-            is = src.createInputStream();\r\n-            while((amountRead = is.read(buf,0,10240)) > -1)\r\n-            {\r\n-                os.write(buf, 0, amountRead);\r\n+                byte[] buf = new byte[10240];\r\n+                int amountRead = 0;\r\n+                is = src.createInputStream();\r\n+                while((amountRead = is.read(buf,0,10240)) > -1)\r\n+                {\r\n+                    os.write(buf, 0, amountRead);\r\n+                }\r\n             }\r\n             addPage( importedPage );\r\n         }\r\n",
        "PDTrueTypeFont.loadTTF() freezes (at TTFDataStream.java:195) Sometimes (not always), my app \"freezes\". When I look into jVisualVM thread dump, I see this stack trace:\r\n\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat org.apache.fontbox.ttf.TTFDataStream.read(TTFDataStream.java:195)\r\n\tat org.apache.fontbox.ttf.TTFDataStream.readString(TTFDataStream.java:69)\r\n\tat org.apache.fontbox.ttf.TTFDataStream.readString(TTFDataStream.java:57)\r\n\tat org.apache.fontbox.ttf.PostScriptTable.initData(PostScriptTable.java:104)\r\n\tat org.apache.fontbox.ttf.TTFParser.parseTTF(TTFParser.java:140)\r\n\tat org.apache.fontbox.ttf.TTFParser.parseTTF(TTFParser.java:87)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadDescriptorDictionary(PDTrueTypeFont.java:206)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:167)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:143)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:130)\r\n\r\nIt never returns and blocks the application from continuing. This hapend several times now every few hours."
    ],
    [
        "PDFBOX-1862",
        "PDFBOX-207",
        "Incomplete signature creation (regression in 1.8.3 with PDFBOX-1780) I got a document, which do not look special but after the PDFBOX-1780 patch, signing breaks and only a small footprint was written into the document.\r\n\r\nThe changes made with the patch PDFBOX-1780 in the COSWriter, cause this problem for me.",
        "Better metadata in conversion to HTML [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1576966\nOriginally submitted by nobody on 2006-10-13 17:18.\n\nIt would be great to have better support for metadata \nin conversion to HTML.\n\n- Being able to create a HTML page with the proper \ndocument title in (not one simply guessed from the \ntext of the document).\n\n- Author, keywords, category etc. extracted from the \ndocument and placed into metafields in the HTML\n\n- Chosen encoding included in the HTML header.\n\nI am using PDFbox in conjunction with mnoGoSearch to \nindex PDFs on a site. This additional metadata would \nbe extremely handy, since it would form a part of the \nindexed details for the documents.\n\nEven if a simple tool could be created that would \n*just* extract the metadata from a document [into \nsome kind of text format], that would be great. \nExternal tools could then be built around that, e.g. \na templating tool that could create a final format of \nany form, using the extracted text and the extracted \nmetadata.\n\n[comment on SourceForge]\nOriginally sent by nobody.\nLogged In: NO \n\nBTW I've not used Java before, so don't have any code to \ncontribute, but if I do come up with anything, I'll post \nit here.\n\n-- Jason\n(sorry - mislaid my login too)"
    ],
    [
        "PDFBOX-1631",
        "PDFBOX-684",
        "Group Exception ./ex13AAA.pdf :: Exception in thread \"main\" org.apache.pdfbox.preflight.exception.ValidationException: The Group dictionary hasn't Group as Type value\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validateXObjects(ResourcesValidationProcess.java:193)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validate(ResourcesValidationProcess.java:72)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:74)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:49)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validateResources(SinglePageValidationProcess.java:158)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validate(SinglePageValidationProcess.java:77)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:74)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:49)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validatePage(PageTreeValidationProcess.java:56)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validate(PageTreeValidationProcess.java:45)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:74)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:88)\r\n\tat org.apache.pdfbox.preflight.PreflightDocument.validate(PreflightDocument.java:168)\r\n\tat org.apache.pdfbox.preflight.Validator_A1b.runSimple(Validator_A1b.java:158)\r\n\tat org.apache.pdfbox.preflight.Validator_A1b.main(Validator_A1b.java:125)\r\nCaused by: org.apache.pdfbox.preflight.exception.ValidationException: The Group dictionary hasn't Group as Type value\r\n\tat org.apache.pdfbox.preflight.xobject.XObjFormValidator.checkGroup(XObjFormValidator.java:129)\r\n\tat org.apache.pdfbox.preflight.xobject.XObjFormValidator.validate(XObjFormValidator.java:72)\r\n\tat org.apache.pdfbox.preflight.process.reflect.GraphicObjectPageValidationProcess.validate(GraphicObjectPageValidationProcess.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:74)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:49)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validateXObjects(ResourcesValidationProcess.java:184)\r\n\t... 14 more",
        "Incorrect ordering of compound Arabic glyphs Some Arabic PDFs contain compound glyphs for stylistic reasons.\r\nSuch glyphs encode two letters: FI, SI, LI, LJ, LM, etc.\r\n\r\nBefore a line gets sent to the bidirectional algorithm, all characters have been sorted into a visual order, except for these pairs. This is because they are handled as one unit and maintain their original (logical) order. The bidi algorithm straightens out most characters, but reverses the glyph pairs.\r\n\r\nTo fix this, the output of font.encode() should be examined and reversed on the spot if it contains pairs of Arabic characters. Possibly you need to add a stub method to PDFStreamEngine (in method processEncodedText) that PDFTextStripper can override (in sort mode only)."
    ],
    [
        "PDFBOX-789",
        "PDFBOX-1669",
        "Error by text extraction Hello,  \r\nI tried to extract text from pdf and extraction ended with error. Here is pdf, source file and stacktrace.  ",
        "Update the dependency on Bouncy Castle to 1.49 Bouncy Castle 1.49 has been released and breaks again the compatibility with the previous releases. The PublicKeySecurityHandler class is affected and needs a minor update."
    ],
    [
        "PDFBOX-2878",
        "PDFBOX-1822",
        "Align annotation and form public API The public API for annotation and form differs in \r\n\r\n- visibility for flag fields\r\n- method naming conventions",
        "Signature byte range is Invalid On person send me a unsigned PDF document. He wanted to sign it. When I try to sign it (using pad box), I have some problem.\r\n\r\nAfter signing adobe reader tells me \"The signature byre range is invalid\".  \r\n\r\nI will attach original and signed document.\r\n\r\nI think, it is PDF box parser error. another signature libraries sign document very well. I'm searching the problem at the moment, in order to fix it.\r\n"
    ],
    [
        "PDFBOX-2942",
        "PDFBOX-3058",
        "Can't sign particular PDF I couldn't sign this particular PDF using pdfbox. I could sign bigger PDFs, so it's not about the size. Whenever I sign it, and try to open with adobe reader, it says \"there was a problem opening this pdf\", but it opens the unsigned version immediately. I'm using version 2.0.0-SNAPSHOT\r\n\r\nI think it's because the pdf does not have a xref table. That's the only difference I could find with other signable pdfs.",
        "Support TIKA Migration to PDFBox 2.0 This issue is to track fixing issues which came up as part of TIKA-1285 (Upgrade to PDFBox 2.0.0 when available) mainly\r\n- new exceptions compared to PDFBox 1.8.x\r\n- regressions in text extraction\r\n- lower quality text extraction\r\n\r\nThere should be individual issues to track tasks/bugs arising from that."
    ],
    [
        "PDFBOX-3043",
        "PDFBOX-933",
        "Problem extracting copyright symbol? This document has a \u00a9 symbol. It's being extracted as \"c\u00a9\". I wanted to check if this is a bug.\r\n\r\nOne of the things that's strange about this is that PDFTextStripper first processes \"c\" and then processes \"\u00a9\". However, PrintTextLocations prints them in the other order\r\n\r\nString[214.936,618.879 fs=9.963 xscale=9.963 height=8.642903 space=9.963 width=9.962997]\u00a9\r\nString[217.704,618.579 fs=9.963 xscale=9.963 height=6.072449 space=5.537458 width=4.4235687]c\r\n",
        "\"Limits\" entry should not added to the root node dictionary of name trees Embedding file using PDComplexFileSpecification (as shown in org.apache.pdfbox.examples.pdmodel.EmbeddedFiles example) adds \"Limits\" entry to the name tree root node dictionary associated with EmbeddedFiles entry in PDF documents name dictionary. Here is a fragment taken from the PDF document created by EmbeddedFiles example:\r\n\r\n...\r\n3 0 obj\r\n<<\r\n/EmbeddedFiles 5 0 R\r\n>>\r\n5 0 obj\r\n<<\r\n/Limits [(My first attachment) (My first attachment)]\r\n/Names [(My first attachment) 8 0 R]\r\n>>\r\n...\r\n\r\nSuch PDF document opened in Adobe Acrobat does not show embedded files in attachments panel, unless \"Limits\" entry is removed or commented.\r\n\r\nAccording to PDF3200:2008 specification (see clause \"7.9.6 Name Trees\") \"Limits\" entry in name tree node dictionary can only appear in intermediate or leaf node, but not root node.\r\n\"The tree shall always have exactly one root node, which shall contain a single entry: either Kids or Names but not both. If the root node has a Names entry, it shall be the only node in the tree. If it has a Kids entry, each of the remaining nodes shall be either an intermediate node, that shall contain a Limits entry and a Kids entry, or a leaf node, that shall contain a Limits entry and a Names entry.\"\r\n"
    ],
    [
        "PDFBOX-1335",
        "PDFBOX-1583",
        "ArrayIndexOutOfBoundsException while loading ttf font \r\nWhile loading TTF font I'm getting exception (below). That font is OpenSans-Regular.ttf from http://www.google.com/webfonts\r\n\r\n\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 931\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadDescriptorDictionary(PDTrueTypeFont.java:360)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:166)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:142)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:129)\r\n",
        "wasted work in PDDocument.addSignature(...) The problem appears in version 1.8.1 and in revision 1476791.  I\r\nattached a one-line patch that fixes it.  This problem is similar to\r\nthe already fixed PDFBOX-1447 and PDFBOX-1457.\r\n\r\nIn method \"PDDocument.addSignature\", the loop over \"cosObjects\" should\r\nbreak immediately after \"annotNotFound\" and \"sigFieldNotFound\" are set\r\nto \"false\".  All the iterations after \"annotNotFound\" and\r\n\"sigFieldNotFound\" are set to \"false\" do not perform any useful work\r\nbecause the two \"if\" statements performing useful work depend on\r\n\"annotNotFound\" and \"sigFieldNotFound\"."
    ],
    [
        "PDFBOX-2786",
        "PDFBOX-2739",
        "PDPageDestination page index off by one When creating a new bookmark with the same page number as an existing bookmark, the resulting destination is offset by 1 compared to the old destination.\r\n\r\nThis results in the bookmark being set for the next page, which could be a non-existing page.\r\n\r\nI've added a class with an example pdf and my own output pdf. Run with argument of a path to where you have the pdf, including a trailing slash.",
        "Saving merged documents causes IOException When some documents are used within a merge, it is not more possible to save the resulting PDDocument, calling method  PDDocument.save() throws \"java.io.IOException: COSStream has been closed and cannot be read. Perhaps its enclosing PDDocument has been closed?\"\r\n\r\n{code:borderStyle=solid}\r\nException in thread \"main\" java.io.IOException: COSStream has been closed and cannot be read. Perhaps its enclosing PDDocument has been closed?\r\n\tat org.apache.pdfbox.cos.COSStream.getFilteredStream(COSStream.java:163)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.visitFromStream(COSWriter.java:1147)\r\n\tat org.apache.pdfbox.cos.COSStream.accept(COSStream.java:280)\r\n\tat org.apache.pdfbox.cos.COSObject.accept(COSObject.java:158)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.doWriteObject(COSWriter.java:538)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.doWriteBody(COSWriter.java:450)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.visitFromDocument(COSWriter.java:1031)\r\n\tat org.apache.pdfbox.cos.COSDocument.accept(COSDocument.java:464)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.write(COSWriter.java:1307)\r\n\tat org.apache.pdfbox.pdfwriter.COSWriter.write(COSWriter.java:1215)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:944)\r\n\tat ch.ge.afc.ael.commun.piecejointe.Test.main(Test.java:37)\r\n{code}\r\n\r\nFor instance, problem occures with testPopupAnnotation.pdf when I try to merge it to testPDF.pdf  (see  http://svn.apache.org/repos/asf/tika/trunk/tika-parsers/src/test/resources/test-documents/  for these 2 documents)\r\n\r\n{code:title=Test.java|borderStyle=solid}\r\npublic static void main(String[] args) throws Exception {\r\n\tFile dir = new File(\"D:/temp/b\");\r\n\r\n\tPDFMergerUtility pdfMerge = new PDFMergerUtility();\r\n\tPDDocument targetDocument = new PDDocument();\r\n\r\n\r\n\tPDFParser ns = new PDFParser(new File(dir, \"testPDF.pdf\"));\r\n\tns.parse();\r\n\tPDDocument pddDocument1 = ns.getPDDocument();\r\n\tpdfMerge.appendDocument(targetDocument, pddDocument1);\r\n\tpddDocument1.close();\r\n\r\n\tns = new PDFParser(new File(dir, \"testPopupAnnotation.pdf\"));\r\n\tns.parse();\r\n\tPDDocument pddDocument2 = ns.getPDDocument();\r\n\tpdfMerge.appendDocument(targetDocument, pddDocument2);\r\n\tpddDocument2.close();\r\n\r\n\tpdfMerge.mergeDocuments();\r\n\r\n\tFileOutputStream fout = new FileOutputStream(new File(dir, \"targetDocument.pdf\"));\r\n\ttargetDocument.save(fout);\r\n\r\n}\r\n\r\n{code}\r\n\r\n\r\n"
    ],
    [
        "PDFBOX-2353",
        "PDFBOX-360",
        "ArrayIndexOutOfBoundsException in Type2CharString.drawAlternatingCurve The file from PDFBOX-2348 fails with this exception:\r\n{code}\r\njava.lang.ArrayIndexOutOfBoundsException: Array index out of range: 3\r\n\tat java.util.Vector.get(Vector.java:744)\r\n\tat org.apache.fontbox.cff.Type2CharString.drawAlternatingCurve(Type2CharString.java:333)\r\n\tat org.apache.fontbox.cff.Type2CharString.handleCommand(Type2CharString.java:181)\r\n\tat org.apache.fontbox.cff.Type2CharString.access$000(Type2CharString.java:32)\r\n\tat org.apache.fontbox.cff.Type2CharString$1.handleCommand(Type2CharString.java:104)\r\n\tat org.apache.fontbox.cff.CharStringHandler.handleSequence(CharStringHandler.java:45)\r\n\tat org.apache.fontbox.cff.Type2CharString.convertType1ToType2(Type2CharString.java:107)\r\n\tat org.apache.fontbox.cff.Type2CharString.<init>(Type2CharString.java:58)\r\n\tat org.apache.fontbox.cff.CIDKeyedType2CharString.<init>(CIDKeyedType2CharString.java:46)\r\n\tat org.apache.fontbox.cff.CFFCIDFont.getType2CharString(CFFCIDFont.java:233)\r\n\tat org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getType2CharString(PDCIDFontType0.java:210)\r\n\tat org.apache.pdfbox.rendering.font.CIDType0Glyph2D.getPathForCharacterCode(CIDType0Glyph2D.java:63)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.drawGlyph2D(PageDrawer.java:431)\r\n{code}",
        "NullPointerException in SetGraphicsStateParameters.process [Issue from SourceForge]\nhttp://sourceforge.net/tracker/index.php?func=detail&aid=2003497&group_id=78314&atid=552832\n\nWhen running text extraction against one particular PDF file, I get the\nfollowing NPE. Any ideas? Thanks.\n\njava.lang.NullPointerException\nat\norg.pdfbox.util.operator.SetGraphicsStateParameters.process(SetGraphicsStat\neParameters.java:61)\nat\norg.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:497)\nat\norg.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:218)\nat org.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:177)\nat org.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:339)\nat org.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:263)\nat org.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:219)\nat org.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:152)\n\nWe're running PDFBox 0.7.4 20071112.\n\nI am not able to attach the file - please email me and I'll send it to you.\n\n[Comment on SourceForge]\nDate: 2008-07-10 09:48\nSender: dojolava\nLogged In: YES \nuser_id=536110\nOriginator: NO\n\nI have the same Problem, my file is ~500kb, I cannot upload it.... can\nsend it when you need it.\n"
    ],
    [
        "PDFBOX-1789",
        "PDFBOX-585",
        "NullPointerException at PDPageContentStream.setFont Using pdfbox 1.8.3 I get a NullPointerException in PDPageContentStream.setFont (java.lang.NullPointerException at org.apache.pdfbox.pdmodel.edit.PDPageContentStream.setFont(PDPageContentStream.java:322).\r\n\r\nI create a new \"PDPageContentStream\" object with \"resetContext = true\". In the constructor of PDPageContentStream the variable \"resources\" gets initialized. As a result of \"resetContext = true\" PDPageContentStream::close is called. In the \"close\" method now \"resources\" gets null. A following call to \"PDPageContentStream::setFont\" fails because resources is null.\r\n",
        "PrintImageLocations example calculates wrong image width/height As described in [1] the code for calculating the image position and width/height should be updated similar to the code in [2].\r\n\r\n\r\n[1] http://markmail.org/thread/hzti74yt45vz326r\r\n[2] http://svn.apache.org/repos/asf/pdfbox/trunk/src/main/java/org/apache/pdfbox/util/operator/pagedrawer/Invoke.java "
    ],
    [
        "PDFBOX-841",
        "PDFBOX-230",
        "[pdfbox-app] maven-bundle-configuration problem The problem with the current maven-bundle-plugin setting of the pdfbox-app plugin is that, junit and the commons logging log framework implementations are required. In addition many javax packages are imported which are not requierd.",
        "NullPointerException when extracting text [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1630272\nOriginally submitted by bowzie on 2007-01-07 20:17.\n\nI got the following exception when stripping a PDF \n \njava.lang.NullPointerException \nat org.pdfbox.pdmodel.PDPageNode.getAllKids(PDPageNode.java:194) \nat org.pdfbox.pdmodel.PDPageNode.getAllKids(PDPageNode.java:182) \nat org.pdfbox.pdmodel.PDDocumentCatalog.getAllPages(PDDocumentCatalog.java:162) \nat org.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:220) \nat org.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:140) \n... \n \nThe PDF is a bit odd in that it appears to have no text, pictures or anything else of any use, but it says it has 8 pages. I can mail it if you want. \n\nPDF sent separately.\n\n\n[comment on SourceForge]\nOriginally sent by jalonsogaleon.\nLogged In: YES \nuser_id=1854910\nOriginator: NO\n\nI have the same problem when extracting text using pdfbox0.7.4\n\njava.lang.NullPointerException.atorg.pdfbox.pdmodel.PDPageNode.getAllKids(PDPageNode.java:194)\n\nI can mail pdf if you want\n\nregards\n\n[comment on SourceForge]\nOriginally sent by brzrkr.\nLogged In: YES \nuser_id=1489602\nOriginator: NO\n\nThis happens so often in our app that we installed a NPE exception handler that scans the stack looking for getAllKids, and maps it into an IOException.\n\n[comment on SourceForge]\nOriginally sent by nobody.\nLogged In: NO \n\nI am getting the same error. However, it appears to happen only on a Windows machine. Same code is working fine on Linux. I wonder if this has to do anything with the CR/LF differences on the platform."
    ],
    [
        "PDFBOX-1522",
        "PDFBOX-1883",
        "Some PDF files are causing exception (java.io.IOException: Error: Could not find font(COSName{F53.0}) in map=) I am using PDFBox 1.7.1 and when parsing some PDF files, it is throwing exceptions and it's filling the Tomcat log very quickly (100MB in few seconds). There was another bug filed related to this issue. I tried the patch supplied in that bug but the issue is still there. I want to mention that the text gets extracted successfully from the PDF. But it just throws a log of WARN messages in the logs. As a workaround, I have set the LOG level to ERROR to avoid those WARN messages.\r\n\r\n\r\nHere is the problematic PDF file:\r\nhttp://doratst.uark.edu/fedora/repository/default%3A1590/OBJ/Traveler20120822.pdf\r\n\r\nRelated bug:\r\nhttps://issues.apache.org/jira/browse/PDFBOX-1359#comment-13584669\r\n\r\n\r\nI am getting the following exception:\r\n\r\nWARN 2013-02-22 14:41:19,519 (PDFStreamEngine) java.lang.NullPointerException\r\njava.lang.NullPointerException\r\nWARN 2013-02-22 14:41:19,519 (PDFStreamEngine) java.lang.NullPointerException\r\njava.lang.NullPointerException\r\nWARN 2013-02-22 14:41:19,519 (PDFStreamEngine) java.io.IOException: Error: Could not find font(COSName{F53.0}) in map={F50.1=org.apache.pdfbox.pdmodel.font.PDType1Font@50246923, F51.0=org.apache.pdfbox.pdmodel.font.PDType1Font@672a1f0}\r\njava.io.IOException: Error: Could not find font(COSName{F53.0}) in map={F50.1=org.apache.pdfbox.pdmodel.font.PDType1Font@50246923, F51.0=org.apache.pdfbox.pdmodel.font.PDType1Font@672a1f0}\r\n\tat org.apache.pdfbox.util.operator.SetTextFont.process(SetTextFont.java:57)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:556)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:270)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:237)\r\n\tat org.apache.pdfbox.util.operator.Invoke.process(Invoke.java:67)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:556)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:270)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:237)\r\n\tat org.apache.pdfbox.util.operator.Invoke.process(Invoke.java:67)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:556)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:270)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:237)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:217)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:448)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:372)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:328)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:247)\r\n\tat dk.defxws.fedoragsearch.server.TransformerToText.getTextFromPDF(TransformerToText.java:335)\r\n\tat dk.defxws.fedoragsearch.server.TransformerToText.getText(TransformerToText.java:194)\r\n\tat dk.defxws.fedoragsearch.server.GenericOperationsImpl.getDatastreamText(GenericOperationsImpl.java:668)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat org.apache.xalan.extensions.ExtensionHandlerJavaClass.callFunction(ExtensionHandlerJavaClass.java:399)\r\n\tat org.apache.xalan.extensions.ExtensionHandlerJavaClass.callFunction(ExtensionHandlerJavaClass.java:438)\r\n\tat org.apache.xalan.extensions.ExtensionsTable.extFunction(ExtensionsTable.java:220)\r\n\tat org.apache.xalan.transformer.TransformerImpl.extFunction(TransformerImpl.java:473)\r\n\tat org.apache.xpath.functions.FuncExtFunction.execute(FuncExtFunction.java:206)\r\n\tat org.apache.xpath.Expression.executeCharsToContentHandler(Expression.java:311)\r\n\r\n",
        "Avoid StringIndexOutOfBoundsException in DateConverter Passing an empty string to parseDate can result in an ArrayIndexOutOfBoundsException.\r\n\r\nCaused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 0\r\n\tat java.lang.String.charAt(Unknown Source)\r\n\tat org.apache.pdfbox.util.DateConverter.parseDate(DateConverter.java:680)\r\n\tat org.apache.pdfbox.util.DateConverter.toCalendar(DateConverter.java:808)\r\n\tat org.apache.pdfbox.util.DateConverter.toCalendar(DateConverter.java:780)\r\n\tat org.apache.pdfbox.util.DateConverter.toCalendar(DateConverter.java:754)\r\n\tat org.apache.pdfbox.cos.COSDictionary.getDate(COSDictionary.java:797)\r\n\tat org.apache.pdfbox.pdmodel.PDDocumentInformation.getCreationDate(PDDocumentInformation.java:210)\r\n\tat org.apache.tika.parser.pdf.PDFParser.extractMetadata(PDFParser.java:170)\r\n\tat org.apache.tika.parser.pdf.PDFParser.parse(PDFParser.java:142)\r\n\tat org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:242)\r\n\r\n\r\nI can't share the triggering document, but I'll submit patch with test case shortly."
    ],
    [
        "PDFBOX-94",
        "PDFBOX-520",
        "Unexpected end of ZLIB input stream [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1291886\nOriginally submitted by yves_bussard on 2005-09-15 04:57.\n\nThis bug reopens bug number 1261555:\n\nThe attached pdf document produces a \"Unexpected end of\nZLIB input stream\" exception when trying to extract the\ntext for example. My environment is WindowsXP.\n\nIt looks as if the Inflater in\nInflaterInputStream.read() method does not recognize\nthat the stream is finished and tries to read/fill the\nnext bytes from the input stream, which is empty. I\ndon't know if the file is just corrupt, but I found a\nlot like this one and Acrobat Reader seems to handle it.\n\nThe workaround described in bug 1261555 seems to work\nbut is not really nice.\n\ncheers\nYves\n\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1291886&file_id=149154\nEnd_of_ZLIB_error.pdf (application/pdf), 126524 bytes\n\"Unexpected end of ZLIB input stream\" producing document\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nSee also leonardo.menezes-chinanihc.pdf\n\nBen",
        "Ignores char spacing (Tc) and word space (Tw) when rendering PDFs to images When PDFStreamEngine parses encoded text the resulting rendering to an image does not apply the char spacing (Tc) and word spacing (Tw)  through the callbacks to processTextPosition. This is because it passes the complete string block and a individual character width array. The character and word spacings are applied correctly to the matrix calculations however and so all the relevant information is available. \r\n\r\nThe problem when writing PDFs to images occurs because text being rendered is issued through calls to AWT Font classes, these do not apply the character and word spacings across a whole string block. For example a PDF I have which has the text fully justified has been rendered so that the line is split into three blocks (arbitary positions in words) each block having a different word spacing. When rendered this comes out with three bocks of text with large gaps in between (or even over writing each other if the character spacing was used to compress the rendered string). \r\n\r\nHaving read through the PDF spec it would seem that each glyph should be rendered separately calculating the next ones position taking into account the character and word spacing. To achieve this the attached patch modifies the behaviour of PDFStreamEngine to fire a single processTextPosition event for each character taken from the encoded string. This may or may not make the need for the individual widths array redundant but it has been preserved for backward compatability, as has the string buffer containing the resulting string (which would now only need to contain one character). So both these can be optimiized to a length of one and still preserve backward compatability (this patch does not include that change).\r\n\r\nThere is also a patch for PageDrawer itself which i'm not entirely sure if its necessary or not. It makes a minor adjustment to how the AffineTransform is calculated, removing two lines which previosuly were altering the text positions matrix. I made this change as I couldnt see why this was being done so more of an experiment. I could see any difference at first but on closer inspection I see minor changes to some characters positions (when used with the other patch). So together it might give an even closer rendering.\r\n\r\nAn alternative approach may be to make the page drawer render each character from the text position offsetting each one using the individual widths as it goes. However noting the behaviour of the second patch that may lead to slightly inaccurate renderings again, so very hard to tell with experimenting and very close examination of the results.\r\n\r\nThis may be related to issue PDFBOX-508 which was specifical looking at lost space during text extraction \r\n\r\nI have also looked at text extraction incase this was effecting operations like combining diacritics. This was in case the actual positions of characters may be off slightly when calculating location using the individual character width array as opposed to the glyphs position as it should be rendered. As it stores the calculated glyph position which is subsequently summed whilst scanning the string to look for possible overlaps they should result in the same answer. However this patch means that last text position processed may not be the one to check for the overlap in anymore. Based on a line containing multiple text blocks this is probably true of the normal case anyway so probably needs separate attention.\r\n"
    ],
    [
        "PDFBOX-421",
        "PDFBOX-2994",
        "Unit tests are failing Failed tests:\n  testExtract(org.apache.pdfbox.util.TestTextStripper)\n \nTests in error:\n  testProtectionError(org.apache.pdfbox.encryption.TestPublicKeyEncryption)\n  testProtection(org.apache.pdfbox.encryption.TestPublicKeyEncryption)\n  testMultipleRecipients(org.apache.pdfbox.encryption.TestPublicKeyEncryption)\n  testRenderImage(org.apache.pdfbox.util.TestPDFToImage)\n  testFDFfdeb(org.apache.pdfbox.pdmodel.TestFDF)\n  testFDFPDFWithLotsOfFields(org.apache.pdfbox.pdmodel.TestFDF)\n  testFDFFreedomExpressions(org.apache.pdfbox.pdmodel.TestFDF)\n  testFDFfdeb(org.apache.pdfbox.pdmodel.TestFDF)\n  testFDFPDFWithLotsOfFields(org.apache.pdfbox.pdmodel.TestFDF)\n  testFDFFreedomExpressions(org.apache.pdfbox.pdmodel.TestFDF)\n  testFDFfdeb(org.apache.pdfbox.pdmodel.TestFDF)\n  testFDFPDFWithLotsOfFields(org.apache.pdfbox.pdmodel.TestFDF)\n  testFDFFreedomExpressions(org.apache.pdfbox.pdmodel.TestFDF)",
        "Rename PDGroup to PDTransparencyGroupAttributes This is a change that [~jahewson] made in his patch attached to PDFBOX-2423\r\n\r\nI'd like to split up that patch so that it can be reviewed and merged more easily\r\n\r\nCC [~tilman]"
    ],
    [
        "PDFBOX-2817",
        "PDFBOX-776",
        "Extra whitespace produced while extracting bodycontent using PDFTextStripper Written a sample java program that parse a pdf document however it seems that it produce extra whitespace (eg :  CAPITALIZED.EMA IL@address.com) in the string return. Attach with the sample program code and the pdf document. ",
        "Text extraction gibberish after ghostscript update I have a test pdf document that is generated using ps2pdf from ghostscript.\r\n\r\nIf I use ghostscript 8.70 then pdfbox will correctly extract the text\r\nIf I use ghostscript 8.71 then pdfbox will not correctly extract the text (same byte count but gibberish characters).\r\n\r\nI will also note, that I had to update poppler to 0.14 to get it to correctly extract text from the test-871.pdf, the previous version would only extract the correct text from text-870.pdf.\r\n\r\nAttached will be the pdf generated using the same original postscript file but run using ghostscript 8.70 vs 8.71."
    ],
    [
        "PDFBOX-1628",
        "PDFBOX-1286",
        "Type 3 Fonts are not processed by PDPage.createImage PDType3Font does not fetch the correct charprocs entry for a character.\r\nWhen that is corrected, one finds that Type3StreamParser is incomplete and cannot process the charprocs stream.\r\n",
        "Add the BouncyCastleProvider only once a time The BouncyCastleProvider is added multiple times which may lead to a performance and/or memory issue as described by Anthony on the mailing list, see [1] for further details.\r\n\r\n[1] http://apache.markmail.org/thread/dnej42g4mywdnps4"
    ],
    [
        "PDFBOX-396",
        "PDFBOX-761",
        "Incorrect permissions after decryption PDDocument.openProtection() sets securityHandler to null, which prevents the getCurrentPermission() method from returning the correct access permissions.",
        "Border settings are not honored on some PDF documents I'm using PDFBox to create a PDF rendering plug-in for Eclipse. I noticed that my plug-in does not honor the border settings of certain documents and renders them in the bottom-left corner (with no space whatsoever between the document text/graphics and the bottom-left corner of the image canvas). Those same documents, however, render correctly when I view them in Adobe Reader or Apple's Preview application.\r\nI was able to reproduce the same faulty behavior with PDFToImage, so I assume that this problem has nothing to do with my plug-in code. Rather than attaching some example documents, I'd rather provide some links (they're public income tax documents anyway):\r\n\r\n- http://www.irs.gov/pub/irs-pdf/f1040sce.pdf (this document renders correctly)\r\n- http://www.irs.gov/pub/irs-pdf/fw4.pdf (this document renders incorrectly, without proper borders)\r\n\r\nLet me know if you need any further information to properly diagnose this bug.\r\n"
    ],
    [
        "PDFBOX-1717",
        "PDFBOX-449",
        "Rendering to image has misplaced characters Slashes in png generation are mis-placed. They do not show up in the wrong position on the original PDF. The are offset by many pixels to the right in the png that is generated. \r\n\r\nI simply exported with this command:\r\njava -jar pdfbox-app-1.8.2.jar PDFToImage -imageType png -resolution 300 -color bilevel pdfbox_test2.pdf\r\n\r\nUnfortunately I can't use PDFBox to export PDF to image if it doesn't place the characters in the right place.",
        "Decomposed extended Latin Characters not normalized 03_2_SSL.pdf file has the unicode U+00a8 character which when extracted does not get placed over the previous character. U+0308 is required to do this. This issue applies to most diacritics found in PDF files since pdf writers use the non-combining forms of the diacritics instead of the combining forms. This issue also applies to two files located in the regression test. These are Garcia2004_thesis.pdf and cweb.pdf."
    ],
    [
        "PDFBOX-452",
        "PDFBOX-1433",
        "[patch] maven build errors in current trunk I just tried building pdfbox from the current trunk, and it failed:\r\n\r\n- the dependencies (fontbox / jempbox) have an inconsitent version numbering. Fixed in attached diff\r\n- some libraries are references as org.fontbox / org.jempbox. Fixed in attached diff\r\n\r\nSome JUnit tests fail, I'll investigate this later.\r\n\r\nhth\r\n\r\nMax",
        "widths[] not updated in TextPosition.insertDiacritic() I change the TextPosition class such that protected float[] widths; instead of private because I would like to inherit this class and have access to widths. After doing that, I expect the widths[] being updated every time after insertDiacritic(). However, it is not due to \r\n\r\nwidths2[i+1] = 0;\r\n\r\nI change it to:\r\n\r\nwidths2[i+1] = diacritic.getWidth();\r\n\r\nI may misunderstand why this is set to zero. But what I intend to do is, to write a PageSVGDrawer so that I can convert a PDF to SVG. Every time in the processTextPosition() of my PageSVGDrawer, I detect whether the new text can be merged into the previous character to form a word or even a sentence. That's why I want to use the width of each character."
    ],
    [
        "PDFBOX-3025",
        "PDFBOX-255",
        "Test case for unwanted spaces in text extraction ",
        "Multiple embedded files [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1678356\nOriginally submitted by nobody on 2007-03-11 09:07.\n\nPlease help.  I'm new to PDF Box, I'm trying to attach multiple files to a PDF using the sample code, but it's not working.  Can you please provide some examples on how to do this?  Please reply to:\n\npquinto@qualcomm.com\n\nThank you for your help :o)"
    ],
    [
        "PDFBOX-1452",
        "PDFBOX-234",
        "Greek Pdfs print out wrong characters  This issue resembles the PDFBOX-770 bug which was fixed in version 1.5.0, however in case of  PDFBOX-770 problem occurred while extracting the text, in my case \r\nI have the same problem but while printing (silent print). \r\nE.G. in Greek PDF \r\na) Greek letter \u03c0 is printed as pi. \"\u03c0\u03c1\u03bf\u03c3\u03ce\u03c0\u03c9\u03bd\" would become \"pi\u03c1\u03bf\u03c3\u03cepi\u03c9\u03bd\" on paper.\r\nb) The Greek letter \u03bc is printed  as \u00b5 ... which is slightly different on paper as the proper \u03bc.\r\nc) I think there is also an issue with \u03a9...but I will confirm this later.\r\nAs an example PDF ..the same pdf as in case of PDFBOX-770 can be used. Unfortunately I cannot post the results as results are on paper...\r\n\r\nSo, I cannot print any Greek PDF, as it comes out unreadable... \r\nPlease address the issue, a fix might be somehow  similar to 770's fix..though I couldn't find any reference what was the problem then in a first place...\r\nThanks in advance...\r\nP.K.",
        "spaces lost [imported from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1635950\r\nOriginally submitted by tweakerbee on 2007-01-15 07:09.\r\n\r\nDuring extraction in certain PDF documents spaces will be lost. I have attached a file in which this problem occurs.\r\n\r\nHere PDFTextStripper.getText() returns:\r\ngaandeofincidenteleaardis\r\nwhereas it should be\r\ngaande of incidentele aard is\r\n\r\nI have used the nightly build from today (15-01-07) but the problem still remains.\r\n\r\n[attachment on SourceForge]\r\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1635950&file_id=211376\r\nSTB336.pdf (application/pdf), 51425 bytes\r\ndocument with erronous text extraction\r\n\r\n[comment on SourceForge]\r\nOriginally sent by tweakerbee.\r\nLogged In: YES \r\nuser_id=1625706\r\nOriginator: YES\r\n\r\nThe problem turned out to be in the splitting algorithm. The values here turned out slightly too conservative.\r\nUsing 0.33f (33%) turned out to yield proper results. This might split words that are not meant to be split, however.\r\n\r\nMaybe you could set this through a field in the TextStripper? So you can adjust your application slightly easier to your specific needs.\r\n\r\nThis issue can be considered solved.\r\n\r\nstartOfNextWordX = endOfLastTextX + (wordSpacing* 0.33f);\r\nstartOfNextWordX = endOfLastTextX + (((wordSpacing+lastWordSpacing)/2f)* 0.33f);\r\n\r\n[comment on SourceForge]\r\nOriginally sent by tweakerbee.\r\nLogged In: YES \r\nuser_id=1625706\r\nOriginator: YES\r\n\r\nMy previous assumption turned out to be incorrect.\r\nThe context.showString() function is responsible for outputting the string. If anywhere, it should probably output the space here.\r\n\r\n[comment on SourceForge]\r\nOriginally sent by tweakerbee.\r\nLogged In: YES \r\nuser_id=1625706\r\nOriginator: YES\r\n\r\nI am currently looking into the problem myself as well, but my complete lack of experience with the Portable Document Format as well as being a novice Java programmer are rather limiting.\r\n\r\nWhat I have found out so far is this:\r\nThe problem is in the TextStream where a TJ operator is being used to show the glyphs. There are no spaces encoded in the file, but instead it uses some character spacing information to space out the words. An example is included below.\r\nThe code I believe is responsible for extracting the text here (org.pdfbox.util.operator.ShowTextGlyph) does not contain any code to determine whether or not a space is needed. Would it be useful to add this here? And will this not breakdown the org.pdfbox.util.PDFHighlighter? (I have noticed some difficulties with certain PDF documents and I wouldn't be surprised if the difference in character count originates from this issue.)\r\n\r\nAny help would be greatly appreciated.\r\n\r\nExample code in STB336.pdf:\r\n[(7?????)-278(???)-278(? ?\"&????)-278(???)-278(???)-278( ??\\))-278(???)-278(??????\\)????\\012)-278( ?????'??&)-278(??)]TJ"
    ],
    [
        "PDFBOX-1322",
        "PDFBOX-2567",
        "gif with less than 256 colors prints wrong colors Using JasperReports, generate report with embedded jpg image. To make the resulting pdf smaller, I converted the image to a gif and tried to use as few colors as possible. The image is very simple and jpg wasn't the correct format to begin with, since it just has three colors. I used fsview to reduce the number of colors from 256 to 4. It is correct when printed by adobe, but when the java program, using pdfbox, prints it, the white background is prints as grey and the solid blue section seems less saturated so it's a light blue.",
        "Only one page found while the document actually contains two pages I'm currently converting a lot of PDF documents to images - for this particular document I'm only able to extract one page\r\n\r\n{noformat}\r\nList<PDPage> pages = pdDocument.getDocumentCatalog().getAllPages();\r\n{noformat}\r\n\r\nUsing Mac OS Preview I see that the document contains actually two pages.\r\n\r\nPlease note that I have permission from my customer to upload the document\r\n"
    ],
    [
        "PDFBOX-3062",
        "PDFBOX-2253",
        "Text extraction and height different in 2.0 AR:\r\n{code}\r\nWITH THE increasing complexity of optical modules,\r\n{code}\r\n\r\n\r\n1.8:\r\n{code}\r\nWITH THE increasing complexity of optical modules,\r\n\r\nString[39.6,399.6 fs=1.0 xscale=29.888 height=20.114626 space=7.472 width=28.214272]W\r\nString[69.488,386.16 fs=1.0 xscale=9.963 height=6.5955067 space=2.49075 width=3.3176804]I\r\nString[72.80568,386.16 fs=1.0 xscale=9.963 height=6.5955067 space=2.49075 width=6.0873947]T\r\nString[78.893074,386.16 fs=1.0 xscale=9.963 height=6.5955067 space=2.49075 width=7.1932907]H\r\nString[90.71916,386.16 fs=1.0 xscale=9.963 height=6.5955067 space=2.49075 width=6.0873947]T\r\nString[96.80656,386.16 fs=1.0 xscale=9.963 height=6.5955067 space=2.49075 width=7.1932907]H\r\n{code}\r\n\r\n2.0:\r\n{code}\r\nW\r\nITH THE increasing complexity of optical modules,\r\n\r\nString[39.6,399.6 fs=1.0 xscale=29.888 height=9.584274 space=7.472 width=28.209717]W\r\nString[69.488,386.16 fs=1.0 xscale=9.963 height=3.194865 space=2.49075 width=3.3177567]I\r\nString[72.805756,386.16 fs=1.0 xscale=9.963 height=3.194865 space=2.49075 width=6.0858]T\r\nString[78.891556,386.16 fs=1.0 xscale=9.963 height=3.194865 space=2.49075 width=7.1949615]H\r\nString[90.719315,386.16 fs=1.0 xscale=9.963 height=3.194865 space=2.49075 width=6.0858]T\r\nString[96.805115,386.16 fs=1.0 xscale=9.963 height=3.194865 space=2.49075 width=7.1949615]H\r\n{code}",
        "Numbers 1-5 appear differently File from PDFBOX-301\r\n\r\njava -jar ~/pdf-box-svn/app/target/pdfbox-app-2.0.0-SNAPSHOT.jar PDFToImage COS1102A015v1.pdf"
    ],
    [
        "PDFBOX-3091",
        "PDFBOX-1153",
        "java.lang.ClassCastException: org.apache.fontbox.cff.CharStringCommand cannot be cast to java.lang.Integer {code}\r\njava.lang.ClassCastException: org.apache.fontbox.cff.CharStringCommand cannot be cast to java.lang.Integer\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:84)\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:89)\r\n\tat org.apache.fontbox.cff.Type1CharStringParser.parse(Type1CharStringParser.java:72)\r\n\tat org.apache.fontbox.type1.Type1Font.getType1CharString(Type1Font.java:200)\r\n\tat org.apache.fontbox.type1.Type1Font.getWidth(Type1Font.java:179)\r\n\tat org.apache.pdfbox.pdmodel.font.PDType1Font.getWidthFromFont(PDType1Font.java:361)\r\n{code}\r\n",
        "Use dictionary lookups to increase text extraction accuracy There are still some cases where the text extraction code incorrectly inserts spaces inside words extracted from a PDF document. We could increase extraction accuracy with an optional dictionary lookup mechanism that checks each extracted word or token against a dictionary of common words. If the lookup fails (and the amount of empty space after the token is small), the token is concatenated with the next one. If that concatenated token matches a word in the dictionary, the intervening space can very likely be dropped."
    ],
    [
        "PDFBOX-1607",
        "PDFBOX-946",
        "StringIndexOutOfBoundsException in PDFParser I have few test files parsed fine in PDFBox 1.7.1 but not in 1.8.1:\r\n\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: 2047\r\n     at java.lang.AbstractStringBuilder.deleteCharAt(AbstractStringBuilder.java:762)\r\n     at java.lang.StringBuilder.deleteCharAt(StringBuilder.java:258)\r\n     at org.apache.pdfbox.pdfparser.BaseParser.parseCOSHexString(BaseParser.java:1000)\r\n     at org.apache.pdfbox.pdfparser.BaseParser.parseCOSString(BaseParser.java:808)\r\n     at org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:1241)\r\n     at org.apache.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:558)\r\n     at org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:188)",
        "RandomAccessBuffer shoud be created empty RandomAccessBuffer shoud be created empty (size=0), as new normal files are normaly also empty."
    ],
    [
        "PDFBOX-1639",
        "PDFBOX-1094",
        "Infinite loop with PDFParser used by tika. Hi,\r\n\r\nI encountered an issue in a production environment that cause a disk full error. :(\r\nTika uses the PDFParser with the \"forceParsing\" boolean set to true in order to continue the parsing even if an error occurs.\r\n\r\nTwo PDFs have an object number greater than the max int value so the readInt() method fails.\r\nDue to the \"forceParsing\" boolean, the parser try to go to the next object but it can't because on error the readInt method backtrack the read bytes and so \r\nthe \"skipToNextObj\" method does nothing and we try to parse the same object indefinitely...\r\n\r\nThe COSObjectKey object already uses a long as object numder, so we should read a long instead of an integer during the parsing process using a \"readLong\" method to manage too large objects numbers.\r\n\r\nAre you agreed with that ?\r\n\r\nBR,\r\nEric",
        "Pattern colorspace support PDFBox doesn't support PDPattern colorspaces"
    ],
    [
        "PDFBOX-496",
        "PDFBOX-2952",
        "PDDocument.load hangs when loading zero-length file If a file passed to PDDocument.load() has zero-length (e.g. got truncated during transmission over the net), the method hangs forever.\r\n\r\nExpected behaviour: throw an exception indicating it's not a PDF file.",
        "Log statement on level 'severe' while nothing else indicates error I use PdfBox to insert a little bit of text at the top of my PDF-documents. I have found one case (one input document) where Fontbox emits a log record on level severe/error, without throwing any exception, and where I cannot see any problems with the output PDF document when inspecting it manually.\r\n\r\nThe log record causes noise and disturbance for our operations guys, who use some automatic log monitoring tool that will raise an alarm for any log record with level \"severe\"/\"error\", and that will even raise a notice for log records with level \"warning\".\r\n\r\nI can configure our logging tool to ignore all logging from the Fontbox Java class as a workaround, but I would prefer not to.\r\n\r\nI will try to attach to this Jira issue a zip file with the PDF document in case and a small, self-contained Java application that allows you to easily reproduce the problem.\r\n\r\nThe log record looks like this:\r\n{noformat}\r\nSep 01, 2015 1:18:18 PM org.apache.fontbox.cmap.CMap addMapping\r\nSEVERE: Mapping code should be 1 or two bytes and not 4\r\n{noformat}"
    ],
    [
        "PDFBOX-1460",
        "PDFBOX-2176",
        "wasted work in AbstractInvalidFileTester.validate() The problem appears in version 1.7.1 and in revision 1414788.  I\r\nattached a two-line patch that fixes it.  This problem and the\r\nattached patch are similar the previously fixed PDFBOX-1447 and its\r\npatch.\r\n\r\nIn method \"AbstractInvalidFileTester.validate\", the loop over\r\n\"result.getErrorsList()\" should break immediately after \"found\" is set\r\nto \"true\" if \"outputResult\" is null.  All the iterations after \"found\"\r\nis set to \"true\" do not perform any useful work when \"outputResult\" is\r\nnull, at best they just set \"found\" again to \"true\".",
        "Ignore IllegalArgumentException when reading an ICCProfile A \"java.lang.IllegalArgumentException: Invalid ICC Profile Data\" is thrown from PDICCBase#loadICCProfile() when rendering the attached PDF. The code already checks for and ignores ProfileDataException and CMMException at this place. \r\n\r\nIllegalArgumentException is thrown if the profile header data is completely corrupt, either there is not even the 128 header bytes or the profile size found in header does not match the size of data.\r\n\r\nThe exception is ignored in 1.8, in 2.0 it is re-thrown. I think ignoring the exception and using an alternate color space is better and consistent with the handling of the other two expected exceptions."
    ],
    [
        "PDFBOX-217",
        "PDFBOX-3034",
        "xml extraction like in adobe professional [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1601785\nOriginally submitted by isai on 2006-11-23 06:24.\n\nAdobe professional has save pdf as xml plug-in, the extraction can map tables in the pdfs, but this plug-in can olnly be invike since adobe.\n\nwith this type of parse can be parse to enyting you wan.\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552835&aid=1601785&file_id=204148\nIMSSComproBienesNoTerapeuticosVRS.rar (application/octet-stream), 244671 bytes\norginal pdf\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552835&aid=1601785&file_id=204147\nIMSSComproBienesNoTerapeuticosVRS.xml (text/xml), 203738 bytes\nexample of save as xml in adobe",
        "Newly created XRef stream has direct root objects To investigate PDFBOX-3026 I wanted to create a small file with an XRef stream by calling {{doc.getDocument().setIsXRefStream(true);}}, but got a /Root entry with direct contents, instead of \"/Root 1 0 R\". This has never occured before, because when saving loaded files, the COSObject in-between is kept.\r\n\r\n{code}\r\n18 0 obj\r\n<<\r\n/Root <<\r\n/Type /Catalog\r\n/Version /1.5\r\n/Pages 2 0 R\r\n/Metadata 3 0 R\r\n/OutputIntents [4 0 R]\r\n>>\r\n/ID [<848925E7B926C5E7504AD6AC3DFD77AA> <848925E7B926C5E7504AD6AC3DFD77AA>]\r\n/Type /XRef\r\n/Size 19\r\n/Index [1 17]\r\n/W [1 2 0]\r\n/Length 51\r\n>>\r\nstream\r\n{code}\r\nI'll make an appropriate change in PDFXRefStream to change this.\r\n"
    ],
    [
        "PDFBOX-2363",
        "PDFBOX-972",
        "wrong color in rendering The circle with \"Bellas modas\" has the wrong color, it should be white and was white yesterday, and now it is brown.",
        "Specific Type1C methods not used anymore In one of the last releases the PDFontFactory changed  so that for Type1C fonts a PDType1Font will be created and not as before a PDType1CFont. While PDType1Font will internally instantiate a PDType1CFont several of the methods which PDType1CFont overrides are now hidden and not used (instead the PDSimpleFont variants are used).\r\nI will add the necessary methods in an attachment which calls the appropriate methods.\r\nHowever having all these type specific switches it seems to be a better solution to subclass PDType1CFont from PDType1Font.\r\n"
    ],
    [
        "PDFBOX-1926",
        "PDFBOX-675",
        "Document.save() after Document.close() causes Null Pointer Exception Until version 1.8.3 it was possible to perform a document's save()-call also if the document's close()-method has already been called. In my opinion this made sense as I'd like to persist the document's content also if no more (content changing) operations are performed on it.\r\n\r\nAnyway, in 1.8.4, calling save() after close() causes a NullPointerException:\r\n\r\nCaused by: java.lang.NullPointerException\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.getDocumentCatalog(PDDocument.java:765)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:1346)",
        "Upgrade .Net build to use IKVM version 0.42  The current .Net build script (ant build.NET) is for IKVM 0.38, released 15 months ago.\r\n\r\nSince that time, IKVM has grown to support a larger portion of the Java object model.  I am currently investigating the possibility of improved font support, as our IKVM-compiled version crashes if PDType1CFont.prepareAWTFont is called.\r\n\r\nThe downside of the upgrade will be loss of support for the .Net 1.1 Framework.  In my opinion, that is not a big deal as very few projects still rely on it.\r\n\r\nI welcome opinions before committing any changes."
    ],
    [
        "PDFBOX-210",
        "PDFBOX-1343",
        "extract text without access permissions [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1583772\nOriginally submitted by nobody on 2006-10-24 06:30.\n\nI have a protected PDF-File\n(http://www.usu-ag.com/english/d/OSP101E.pdf).\nAll contents of the document are encrypted and search\nengines cannot access the document's metadata.\nContent Copying or Extraction:          Not Allowed\nContent Extraction for Accessibility:   Not Allowed\n\nWith PDFBOX-0.8.3 i can extract all content (not correct).\nWith PDFBOX-0.8.2 i can not do this (correct).",
        "Addition of missing XMP standard value types Not all value types, defined in XMP Specification, are included in org.apache.padaf.xmpbox.parser.NSMapping. Thus its method isBasic() returns false on such types, like Choice or Real.\r\nIf PDF/A file includes custom metadata and its extension schema description with such types, PDF/A validation using Preflight fails with error like this:\r\n\"7.6 : Error on MetaData, ValueType 'closed Choice of Text' is unknown. no declaration found in this schema\"\r\n\r\nThese value types are not included and regarded in NSMapping class:\r\n\u2022 Basic value types: (open and closed) Choice, Dimensions, Locale, MIMEType, ProperName, Real, Thumbnail, XPath\r\n\u2022 Media Management value types: AgentName, RenditionClass, ResourceEvent, ResourceRef, Version\r\n\u2022 Basic Job/Workflow value type: Job\r\n\u2022 EXIF schema value types: Flash, CFAPattern, DeviceSettings, GPSCoordinate, OECF/SFR, Rational\r\n\r\nNote, that XPath type in NSMapping is included only in conjunction with bag, but spelled incorrectly as \"bag Xpath\"."
    ],
    [
        "PDFBOX-520",
        "PDFBOX-674",
        "Ignores char spacing (Tc) and word space (Tw) when rendering PDFs to images When PDFStreamEngine parses encoded text the resulting rendering to an image does not apply the char spacing (Tc) and word spacing (Tw)  through the callbacks to processTextPosition. This is because it passes the complete string block and a individual character width array. The character and word spacings are applied correctly to the matrix calculations however and so all the relevant information is available. \r\n\r\nThe problem when writing PDFs to images occurs because text being rendered is issued through calls to AWT Font classes, these do not apply the character and word spacings across a whole string block. For example a PDF I have which has the text fully justified has been rendered so that the line is split into three blocks (arbitary positions in words) each block having a different word spacing. When rendered this comes out with three bocks of text with large gaps in between (or even over writing each other if the character spacing was used to compress the rendered string). \r\n\r\nHaving read through the PDF spec it would seem that each glyph should be rendered separately calculating the next ones position taking into account the character and word spacing. To achieve this the attached patch modifies the behaviour of PDFStreamEngine to fire a single processTextPosition event for each character taken from the encoded string. This may or may not make the need for the individual widths array redundant but it has been preserved for backward compatability, as has the string buffer containing the resulting string (which would now only need to contain one character). So both these can be optimiized to a length of one and still preserve backward compatability (this patch does not include that change).\r\n\r\nThere is also a patch for PageDrawer itself which i'm not entirely sure if its necessary or not. It makes a minor adjustment to how the AffineTransform is calculated, removing two lines which previosuly were altering the text positions matrix. I made this change as I couldnt see why this was being done so more of an experiment. I could see any difference at first but on closer inspection I see minor changes to some characters positions (when used with the other patch). So together it might give an even closer rendering.\r\n\r\nAn alternative approach may be to make the page drawer render each character from the text position offsetting each one using the individual widths as it goes. However noting the behaviour of the second patch that may lead to slightly inaccurate renderings again, so very hard to tell with experimenting and very close examination of the results.\r\n\r\nThis may be related to issue PDFBOX-508 which was specifical looking at lost space during text extraction \r\n\r\nI have also looked at text extraction incase this was effecting operations like combining diacritics. This was in case the actual positions of characters may be off slightly when calculating location using the individual character width array as opposed to the glyphs position as it should be rendered. As it stores the calculated glyph position which is subsequently summed whilst scanning the string to look for possible overlaps they should result in the same answer. However this patch means that last text position processed may not be the one to check for the overlap in anymore. Based on a line containing multiple text blocks this is probably true of the normal case anyway so probably needs separate attention.\r\n",
        "ArrayIndexOutOfBounds Exception when printing on Windows When printing on Windows handling colors in DeviceGray doesn't correctly set the color values in PDColorState.java using JDK 1.5.0_15. The error doesn't occur using JDK 1.6.0_18\r\n\r\nThis is a part of the message:\r\n\r\n23.03.2010 11:52:50 org.apache.pdfbox.util.PDFStreamEngine processOperator \r\nWARNUNG: java.lang.ArrayIndexOutOfBoundsException: 1 \r\njava.lang.ArrayIndexOutOfBoundsException: 1 \r\nat sun.awt.windows.WPrinterJob.setTextColor(Unknown Source) \r\nat sun.awt.windows.WPathGraphics.drawString(Unknown Source) \r\nat sun.awt.windows.WPathGraphics.drawString(Unknown Source) \r\nat org.apache.pdfbox.pdmodel.font.PDSimpleFont.writeFont(PDSimpleFont.java:350) \r\nat org.apache.pdfbox.pdmodel.font.PDType1Font.drawString(PDType1Font.java:248) \r\nat org.apache.pdfbox.pdfviewer.PageDrawer.processTextPosition(PageDrawer.java:183) \r\nat org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:494) \r\nat org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:45) \r\nat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:552) \r\nat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:248) \r\nat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:207) \r\nat org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:106) \r\nat org.apache.pdfbox.pdmodel.PDPage.print(PDPage.java:801) \r\nat sun.print.RasterPrinterJob.printPage(Unknown Source) \r\nat sun.print.RasterPrinterJob.print(Unknown Source) \r\nat sun.print.RasterPrinterJob.print(Unknown Source) \r\nat org.apache.pdfbox.pdmodel.PDDocument.print(PDDocument.java:993) \r\nat PrintPDF.main(PrintPDF.java:128)"
    ],
    [
        "PDFBOX-3153",
        "PDFBOX-2874",
        "Direct JPEG extraction results in invalid images in 2.0.0 releases. When I run pdfbox-app ExtractImages on a PDF containing an image with a DeviceRGB colorspace, the resulting JPEG file is very large (5.3MB, while the source PDF is 320KB).\r\n\r\nI see this with the 2.0.0-RC2 release, I also encounter the problem with a build from today's trunk.\r\n\r\nIf I modify the code to force usage of ImageIO, a valid JPEG file results.\r\n\r\nThe image extracts properly in the 1.8.10 version.",
        "Publish pre-release versions before 2.0.0 release. Our site depends on features only available on 2.0.0-SNAPSHOT. However, our integration build failed at least twice this year due to the change from PDFBox 2.0.0-SNAPSHOT.\r\n\r\nIt will be a great help for integrators working on {{2.0.0-SNAPSHOT}} if there exists pre-release versions like {{2.0.0-rc.1}}, {{2.0.0-alpha.1}}, {{2.0.0-beta.2}} prior to 2.0.0 FINAL release."
    ],
    [
        "PDFBOX-163",
        "PDFBOX-1301",
        "IOException: expected='/' actual='e'-101 [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1485485\nOriginally submitted by sajitjacob on 2006-05-10 04:06.\n\nGet the following exception when loading a PDF \ncreated by ImageMagick\n\nException in thread \"main\" java.io.IOException: \nexpected='/' actual='e'-101 \norg.pdfbox.io.PushBackInputStream@9\n        at \norg.pdfbox.pdfparser.BaseParser.parseCOSName \n(BaseParser.java:774)\n        at \norg.pdfbox.pdfparser.BaseParser.parseCOSDictionary \n(BaseParser.java:217)\n        at \norg.pdfbox.pdfparser.BaseParser.parseDirObject \n(BaseParser.java:910)\n        at org.pdfbox.pdfparser.PDFParser.parseObject \n(PDFParser.java:432)\n        at org.pdfbox.pdfparser.PDFParser.parse \n(PDFParser.java:176)\n        at org.pdfbox.pdmodel.PDDocument.load \n(PDDocument.java:579)\n        at org.pdfbox.pdmodel.PDDocument.load \n(PDDocument.java:549)\n        at org.pdfbox.ExtractImages.extractImages \n(ExtractImages.java:124)\n        at org.pdfbox.ExtractImages.main \n(ExtractImages.java:74)\n\n\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1485485&file_id=177454\npages-000.pdf (application/pdf), 17898 bytes\nImageMagick created pdf\n\n[comment on SourceForge]\nOriginally sent by francois248.\nLogged In: YES \nuser_id=1606233\n\nHi,\n\nI am facing the same problem when upgrating a tools that\nproduce PDF file.\n\nI can send a test case too if needed.\n\nIs there a workaround to avoid it?\n\nFran\u00c3\u00a7ois",
        "Wrong characters in HTML/TXT file from PDF containing scanned pages/images When trying to extract text/html from attached PDF file, there are some wrong characters (instead of characters with diacritics):\r\n\r\nPro \u00fa\u00feely tohoto Protokolu mohou b\u00eat sd\u011blen\u00ed ]as\u00edl\u00e1na prost\u0159ednictv\u00edm elektronick\u00each nebo Mak\u00eachkoli Min\u00each prost\u0159edk\u0124\r\n\r\ninstead of\r\n\r\nPro \u00fa\u010dely tohoto Protokolu mohou b\u00fdt sd\u011blen\u00ed zas\u00edl\u00e1na prost\u0159ednictv\u00edm elektronick\u00fdch nebo jak\u00fdchkoli jin\u00fdch prost\u0159edk\u016f\r\n\r\nresp. \r\n\r\nPro &#250;&#254;ely tohoto Protokolu mohou b&#234;t sd&#283;len&#237; ]as&#237;l&#225;na prost&#345;ednictv&#237;m elektronick&#234;ch nebo \r\nMak&#234;chkoli Min&#234;ch prost&#345;edk&#292; \r\n\r\ninstead of\r\n\r\nPro &#250;&#269;ely tohoto Protokolu mohou b&#253;t sd&#283;len&#237; zas&#237;l&#225;na prost&#345;ednictv&#237;m elektronick&#253;ch nebo \r\njak&#253;chkoli jin&#253;ch prost&#345;edk&#367;"
    ],
    [
        "PDFBOX-281",
        "PDFBOX-2308",
        "Change to font size and default appearance [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552834&aid=1729700\nOriginally submitted by ajpurkiss on 2007-06-01 14:22.\n\n2 Changes\n\n1) The first is to make getDefaultAppearance in PDVariableText public and make a set method\n\n2) Add a second setAppearanceValue(String apValue, float fontSize) in PDAppearance and add a secoind setValue in PDField (and all implementing classes) so we can make use of it.\n\n\n1 - This was added as we needed to change the default appearance of text fields as we found that if you have two fields of the same name they are grouped under a parent field. The parent fields formatting is wrong (probably some default) so we needed to change it to that of the child as it was this formatting used for the display text and not that of the child (although if you edit the PDF you see the child properties listed)\n\n2 - The font calculation in setValue takes into account the box size. The problem we had is that we wanted to font to be 48pt no mater what. We knew the width was right and the the box was not high enough, but we needed this as by shirnking the text to fit we lost the ability to use it (We were using barcodes where the width is important, it does not mater if the height is chopped down).\n\nThese changes were made to the 0.7.3 code\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1729700&file_id=231410\nchanges.zip (application/zip), 22773 bytes\nFile changed",
        "setPageSeparator method in PDFTextStripper class has no effect I tried to use the setPageSeparator method within the PDFTextStripper class but it had no effect. \r\n\r\nAfter a check within the sources at a glance I discovered that the writePageSeparator method that uses the pageSeparator attribute is never called or used anywhere.\r\n\r\nThus, to work normally, It seems to my point of view that a call to the writePageSeparator should be added for example at the beginning of the writePage() method. Could someone of the core team check it to say me if i'am right ?"
    ],
    [
        "PDFBOX-149",
        "PDFBOX-2803",
        "Update encryption algorithms [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1465151\nOriginally submitted by benlitchfield on 2006-04-05 10:05.\n\nPDF 1.6 has some new features and step numbers of the \nalgortithm need to be updated.\n\nFor example Algorithm 3.2 Compute Encryption Key now \nhas 9 steps.  Specifically step 6 factors in \nencryption of the metadata, which is currently not \nimplemented.\n\nBen",
        "NullPointerException into class PDType0Font I find error on trunk (from 12 May 2015 )\r\n{code}\r\nException in thread \"main\" java.lang.NullPointerException\r\n    at org.apache.pdfbox.pdmodel.font.PDType0Font.willBeSubset(PDType0Font.java:150)\r\n    at org.apache.pdfbox.pdmodel.PDPageContentStream.setFont(PDPageContentStream.java:304)\r\n    at org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.insertGeneratedAppearance(AppearanceGeneratorHelper.java:295)\r\n    at org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.createAppearanceContent(AppearanceGeneratorHelper.java:227)\r\n    at org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.setAppearanceValue(AppearanceGeneratorHelper.java:202)\r\n    at org.apache.pdfbox.pdmodel.interactive.form.AppearanceGenerator.generateFieldAppearances(AppearanceGenerator.java:61)\r\n    at org.apache.pdfbox.pdmodel.interactive.form.PDField.updateFieldAppearances(PDField.java:110)\r\n    at org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(PDTextField.java:286)\r\n    at pdftext.my_main.main(my_main.java:74)\r\n{code} \r\nFor me, I fixed error as:\r\n{code}\r\n   /**\r\n    * Constructor for reading a Type0 font from a PDF file.\r\n    * \r\n    * @param fontDictionary The font dictionary according to the PDF specification.\r\n    */\r\n    public PDType0Font(COSDictionary fontDictionary) throws IOException\r\n    {\r\n        super(fontDictionary);\r\n        COSArray descendantFonts = (COSArray)dict.getDictionaryObject(COSName.DESCENDANT_FONTS);\r\n        COSDictionary descendantFontDictionary = (COSDictionary) descendantFonts.getObject(0);\r\n\r\n        if (descendantFontDictionary == null)\r\n        {\r\n            throw new IOException(\"Missing descendant font dictionary\");\r\n        }\r\n\r\n        descendantFont = PDFontFactory.createDescendantFont(descendantFontDictionary, this);\r\n        readEncoding();\r\n        fetchCMapUCS2();\r\n        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        PDType0Font parentFont = PDType0Font.load(new PDDocument(), new File(\"c:\\\\Windows\\\\Fonts\\\\arial.ttf\")); //kostya!!!!\r\n        embedder = parentFont.embedder; //kostya!!!!\r\n    }\r\n{code}\r\nembedder has not been initialized in \r\n{code}\r\npublic PDType0Font(COSDictionary fontDictionary) throws IOException\r\n{code}"
    ],
    [
        "PDFBOX-1961",
        "PDFBOX-1616",
        "Page with annotations renders fine with 1.8 but not with 2.0 Page 2 of the attached PDF (from a ghostscript installation) renders fine with 1.8 but not with 2.0. The other pages are not rendered properly with any version.",
        "NumberFormatException i CMapParser.parseNextToken() When using PDType1Font (any of the 14 fonts available), and adding text with contentStream.drawString(), we get a NumberformatException for string with 9 characters, ex. \"123456789\" or \"abcdefghi\"\r\n\r\nStacktrace:\r\n\r\nCaused by: java.lang.NumberFormatException: For input string: \"8900146484\"\r\n        at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\r\n        at java.lang.Integer.parseInt(Integer.java:495)\r\n        at java.lang.Integer.<init>(Integer.java:677)\r\n        at org.apache.fontbox.cmap.CMapParser.parseNextToken(CMapParser.java:541)\r\n        at org.apache.fontbox.cmap.CMapParser.parse(CMapParser.java:119)\r\n        at org.apache.pdfbox.pdmodel.font.PDFont.parseCmap(PDFont.java:603)\r\n        at org.apache.pdfbox.pdmodel.font.PDSimpleFont.extractToUnicodeEncoding(PDSimpleFont.java:458)\r\n        at org.apache.pdfbox.pdmodel.font.PDSimpleFont.determineEncoding(PDSimpleFont.java:426)\r\n        at org.apache.pdfbox.pdmodel.font.PDFont.<init>(PDFont.java:194)\r\n        at org.apache.pdfbox.pdmodel.font.PDSimpleFont.<init>(PDSimpleFont.java:88)\r\n        at org.apache.pdfbox.pdmodel.font.PDType0Font.<init>(PDType0Font.java:65)\r\n        at org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:108)\r\n        at org.apache.pdfbox.pdmodel.PDResources.getFonts(PDResources.java:203)\r\n        at org.apache.pdfbox.pdmodel.PDResources.addFont(PDResources.java:588)\r\n        at org.apache.pdfbox.pdmodel.PDResources.addFont(PDResources.java:574)\r\n        at org.apache.pdfbox.pdmodel.edit.PDPageContentStream.setFont(PDPageContentStream.java:308)\r\n\r\n\r\nIssue https://issues.apache.org/jira/browse/PDFBOX-1225 handles a similar error: An attempt to Integer.parseString() is made with a value > Integer.MAX_VALUE.\r\n\r\n\r\nLine 541 in CMAPParser.java should probably use Long datatype.\r\n\r\n "
    ],
    [
        "PDFBOX-1740",
        "PDFBOX-300",
        "Umlaut not rendered correctly in TTF composite glyph The dots above the \"U\" in the attached file are not rendered correctly. From looking at the points array, I think that the cause is NOT the calculation of the shape path itself (PDFBOX-1435), it must be before, i.e. the calculation of the point coordinates that are used later for the shapes, done in GlyfCompositeDescript.getXCoordinate() or even deeper.\r\n\r\nThe X coordinates from the \"U\" are between 80 and 640. The X coordinates of the two dots are between 406 and 587, i.e. the two dots are at the right:\r\n\r\npoints:\r\nPoint(547,-729,onCurve,)\r\nPoint(640,-729,onCurve,)\r\nPoint(640,-217,onCurve,)\r\nPoint(640,-107,,)\r\nPoint(487,23,,)\r\nPoint(359,23,onCurve,)\r\nPoint(229,23,,)\r\nPoint(80,-106,,)\r\nPoint(80,-217,onCurve,)\r\nPoint(80,-729,onCurve,)\r\nPoint(173,-729,onCurve,)\r\nPoint(173,-217,onCurve,)\r\nPoint(173,-138,,)\r\nPoint(274,-59,,)\r\nPoint(359,-59,onCurve,)\r\nPoint(447,-59,,)\r\nPoint(547,-143,,)\r\nPoint(547,-217,onCurve,endOfContour)\r\nPoint(510,-881,onCurve,)\r\nPoint(510,-777,onCurve,)\r\nPoint(406,-777,onCurve,)\r\nPoint(406,-881,onCurve,endOfContour)\r\nPoint(587,-881,onCurve,)\r\nPoint(587,-777,onCurve,)\r\nPoint(483,-777,onCurve,)\r\nPoint(483,-881,onCurve,endOfContour)\r\n\r\nThe font can be found here:\r\nhttp://ftp.gnu.org/gnu/freefont/freefont-ttf-20120503.zip\r\n",
        "Printing pdf [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552833&aid=1779407\nOriginally submitted by gjniewenhuijse on 2007-08-22 06:19.\n\nWhen i print the attached file, some things are not printed well.\n\n- The gray box at the top\n- and the fonts are printed bold and thats not right.\n\nIs there any solution for now, or for later?\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552833&aid=1779407&file_id=242289\norarrp.pdf (application/pdf), 7871 bytes\nPrint example"
    ],
    [
        "PDFBOX-837",
        "PDFBOX-3047",
        "Wrong RevisionNumber when disabling all permissions and using 128bit encryption When disabling all permissions and using a 128bit encryption the following exception is thrown when saving the PDF document:\r\n\r\norg.apache.pdfbox.exceptions.COSVisitorException: Error: Expected length=5 actual=16\r\n        at org.apache.pdfbox.pdfwriter.COSWriter.write(COSWriter.java:1022)\r\n        at org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:911)\r\n        at org.apache.pdfbox.pdmodel.PDDocument.save(PDDocument.java:892)\r\n        at pdfbox.Main.main(Main.java:53)\r\n\r\nThis is reproducable with the following code:\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n        try {\r\n            AccessPermission ap = new AccessPermission();\r\n\r\n            StandardProtectionPolicy spp = null;\r\n            ap.setCanAssembleDocument(false);\r\n            ap.setCanExtractContent(false);\r\n            ap.setCanExtractForAccessibility(false);\r\n            ap.setCanFillInForm(false);\r\n            ap.setCanModify(false);\r\n            ap.setCanModifyAnnotations(false);\r\n            ap.setCanPrint(false);\r\n            ap.setCanPrintDegraded(false);\r\n\r\n            spp = new StandardProtectionPolicy(null, null, ap);\r\n            spp.setEncryptionKeyLength(128);\r\n\r\n            PDDocument document = null;\r\n            FileInputStream sourceFile = new FileInputStream(new File(\"C:\\\\Web\\\\NetBeansProjects\\\\pdfBox\\\\test.pdf\"));\r\n            document = PDDocument.load(sourceFile);\r\n            document.protect(spp);\r\n            document.save(\"C:\\\\Web\\\\NetBeansProjects\\\\pdfBox\\\\test_encrypted.pdf\");\r\n            document.close();\r\n        } catch (Exception ex) {\r\n            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nThe problem is based on \"computeRevisionNumber\" in \"StandardSecurityHandler.java\". If all flags are disabled, the routine returns a value of 2. But if the 128bit encryption is enabled, the revision should be 3. If not, the method \"computeUserPassword\" will fail.\r\n\r\nA solution would be to check the key length in \"computeRevisionNumber\".\r\n\r\n   private int computeRevisionNumber()\r\n    {\r\n        if(version == 2\r\n            && !policy.getPermissions().canFillInForm()\r\n            && !policy.getPermissions().canExtractForAccessibility()\r\n            && !policy.getPermissions().canPrintDegraded()\r\n            && keyLength == 40 )\r\n        {\r\n            return 2;\r\n        }\r\n        return 3;\r\n    } ",
        "LTV-fix offline signature This is a complement to PDFBOX-2776\r\n\r\n<<A PDF signature may not be successfully verified unless its collateral validation components are preserved, e.g., certificates, CRLs, time stamp tokens, revocation lists, and OCSP responses. To facilitate long term signature validation (LTV), PDF supports the ability to collect validation information to verify a signature at a later time if it has been verified once as being valid. Some of this information, i.e. certificates, CRLs and OCSP responses, when not already present in the signature, shall be stored in a document security store (DSS), see 12.8.4.3, \"Document Security Store (DSS)\". When storing this type of information and, when not already present in the signature, it shall be stored in a document time-stamp dictionary, see 12.8.5, \"Document time-stamp (DTS) dictionary (PDF 2.0)\". This will provide the information needed to verify a signature as this was done when that signature was first verified. >>\r\n\r\nIf someone signs a pdf off-line, there should be a pdf-box routine that can possibly even be run on the command-line to amend a document with OCSP/CRL info for the signing certificate chain plus a verification time-stamp. The latter might even be interesting for an online signature that already has a timestamp but might be lacking other info.\r\n\r\nThere should be a clear interface to obtain \r\na) ocsp responses\r\nb) crls\r\nc) timestamps \r\nsuch that other (pre-existing) solutions can be tied to this routine"
    ],
    [
        "PDFBOX-2810",
        "PDFBOX-2792",
        "Indirect object marked as direct by PDFParser I've noticed an issue with PDFParser, which marks COSObject of indirect reference to COSDictionary as \"direct\", while dereferenced object (COSDictionary) correctly indicate the indirect state.\r\n\r\nConsider this extract from PDF:\r\n{code}\r\n1 0 obj\r\n<<\r\n /Type /Catalog\r\n /Outlines 2 0 R\r\n /Pages 3 0 R\r\n>>\r\nendobj\r\n\r\n2 0 obj\r\n<<\r\n /Type /Outlines\r\n /Count 0\r\n>>\r\nendobj\r\n\r\n3 0 obj\r\n<<\r\n /Type /Pages\r\n /Kids [4 0 R]\r\n /Count 1\r\n>>\r\nendobj\r\n\r\n4 0 obj\r\n<<\r\n /Type /Page\r\n...\r\n>>\r\nendobj\r\n{code}\r\n\r\nReading catalog dictionary entry \"{{/Outlines 2 0 R}}\":\r\n{code}\r\nfinal COSDictionary cosCatalog = catalog.getCOSDictionary();\r\n\r\n// WORKS with dereferencing\r\nfinal COSBase dictOutlines = cosCatalog.getDictionaryObject(COSName.OUTLINES);\r\nAssert.assertFalse(\"Expected /Outlines indirect\", dictOutlines.isDirect());\r\n{code}\r\n{color:red} FAILS without dereferencing{color}\r\n{code}\r\nAssert.assertFalse(\"Expected /Outlines indirect\", cosCatalog.getItem(COSName.OUTLINES).isDirect());\r\n{code}\r\n\r\nThe culprit is code in {{org.apache.pdfbox.pdfparser.BaseParser#parseCOSDictionary}}, which always set COSObject containing COSDictionary as \"direct\".\r\n\r\nAlso noticed, that when indirect COSObject is member of COSArray, its \"direct\" state is not changed to direct. This code works while reading array element with of without dereferencing:\r\n{code}\r\n// /Pages 3 0 R\r\nfinal COSDictionary dictPages = (COSDictionary) cosCatalog.getDictionaryObject(COSName.PAGES);\r\n// /Kids [4 0 R]\r\nfinal COSBase objKids = dictPages.getDictionaryObject(COSName.KIDS);\r\n\r\n// WORKS without dereference\r\nCOSBase firsElement = ((COSArray) objKids).get(0);\r\nAssert.assertFalse(\"Expected /Kids array element is indirect object\", firsElement.isDirect());\r\n\r\n// WORKS with dereference\r\nfirsElement = ((COSArray) objKids).getObject(0);\r\nAssert.assertFalse(\"Expected /Kids array element is indirect object\", firsElement.isDirect());\r\n{code}\r\n",
        "Text extraction ignores bookmarks As reported by Noam S. on the user mailing list:\r\n{quote}\r\nMy problem is that when trying to getText(doc) form a certain section of the pdf using setStartBookmark(item) and setEndBookmark(item) I get all the text rather than just the text from the specified section.\r\n\r\nWhiIe trying to resolve this I realized that the writeText(doc, outputStream) method always calls resetEngine() method. That will reset all the parameters and delete the bookmarks I set.\r\n{quote}\r\nThe two lines that reset the bookmarks were added to resetEngine in PDFBOX-1808 in [ https://svn.apache.org/r1553175 ] in an attempt to save some memory.\r\n\r\nAnother weird segment can be found in the trunk:\r\n\r\nI also found another weird piece of code in the trunk, which would mean that text extraction would fail if start and end bookmarks are identical:\r\n{code}\r\n        if (startPage != null && endPage != null &&\r\n            startBookmark.getCOSObject() == endBookmark.getCOSObject())\r\n        {\r\n            // this is a special case where both the start and end bookmark\r\n            // are the same but point to nothing.  In this case\r\n            // we will not extract any text.\r\n            startBookmarkPageNumber = 0;\r\n            endBookmarkPageNumber = 0;\r\n        }\r\n{code}\r\n earlier, that segment was:\r\n{code}\r\n       if( startBookmarkPageNumber == -1 && startBookmark != null &&\r\n                endBookmarkPageNumber == -1 && endBookmark != null &&\r\n                startBookmark.getCOSObject() == endBookmark.getCOSObject() )\r\n        {\r\n            //this is a special case where both the start and end bookmark\r\n            //are the same but point to nothing.  In this case\r\n            //we will not extract any text.\r\n            startBookmarkPageNumber = 0;\r\n            endBookmarkPageNumber = 0;\r\n        }\r\n{code}\r\nwhich makes more sense. The change was made last year in rev [ https://svn.apache.org/r1634252 ] as part of the pagetree refactoring.\r\n\r\nI am writing a test to prevent this from breaking in the future."
    ],
    [
        "PDFBOX-1776",
        "PDFBOX-894",
        "Print pdf with font embedded(SimSun TrueType(CID) Identity-H) Hello,\r\nCan you please help me on the issue as below?\r\n[Issue]\r\nprint PDF file witch has font embedded subset.\r\n\r\nI am trying to use PDFBOX 1.8.2 to print PDF file.\r\nWhen I use printJob.print() to print PDF file, I got the error like this:\r\n\r\n  <2013/11/08 11:14:53 org.apache.pdfbox.filter.FlateFilter decode\r\n   fatal: FlateFilter: stop reading corrupt stream due to a DataFormatException>\r\n\r\nAnd I checked the property of the PDF file and it's like below:\r\n[Font]\r\n  SimSun(embedded subset)\r\n   type: TrueType(CID)\r\n   enconding: Identity-H\r\n\r\nHere is my java Code:\r\n[Code]\r\n    PDDocument document = PDDocument.load( pdfFileName );\r\n    PrinterJob printJob = PrinterJob.getPrinterJob();\r\n    printJob.setJobName(new File(pdfFileName).getName());\r\n    if(printerName != null )\r\n    {\r\n        PrintService[] printService = PrinterJob.lookupPrintServices();\r\n        boolean printerFound = false;\r\n        for(int i = 0; !printerFound && i < printService.length; i++)\r\n        {\r\n            if(printService[i].getName().indexOf(printerName) != -1)\r\n            {\r\n                printJob.setPrintService(printService[i]);\r\n                printerFound = true;\r\n            }\r\n        }\r\n    }\r\n    printJob.setPageable(new PDPageable(document, printJob));\r\n    if( silentPrint || printJob.printDialog())\r\n    {\r\n    \tprintJob.print();\r\n    }\r\n\r\nI'm sorry, i can't find the way to attatch the pdf file.\r\n\r\nIs it possible for PDFBOX 1.8.2 to print pdf properly?\r\nwhat about PDFBOX 2.0?\r\n\r\nThanks in advance.\r\nRegards",
        "Can`t open XREF as a stream. Latin Chars unreconized Latin characters (e.g. \u00e1, \u00e9, \u00ed, \u00f5, \u00e7) just aren`t recognized in PDF, creating text files with strange characters like \u0152, ? and \u02c6 instead of the right ones.\r\n\r\nI tryied to investigate through the PDFBox code what could have caused this, but with my limited knowledge on PDF formating, I couldn`t advance too much.\r\n\r\nThere are 2 points which I`d like to comment:\r\n1 - The PDF has no XREF table, using Stream XREF(e.g. 3076/Type/XRef/W[1 3 1]>>stream) instead;\r\n2 - While encoding the byte stream (COSStream.getFilteredStream().doEncode()) the Filter encoding is FlateDecode (not sure if it`s a real issue, since in other PDFs I get this same encoding and it works fine).\r\n\r\nI`m not sure if there`s a problem with the pdf itself, since I can open it and see the Latin Characters with no trouble at Adobe and Foxit Readers.\r\n\r\nAttached is on of the PDFs that I`m talking about. The issue is seen from the 5th page on."
    ],
    [
        "PDFBOX-2971",
        "PDFBOX-2763",
        "CalGray white rendered as cyan The attached PDF uses CalGray colors. When converted to a jpeg using PdfToImage, there is a cyan rectangle visible. Acrobat shows the same rectangle as white.\r\n\r\nThe PDF uses a CalGray having white point (0.9505, 1, 1.089). The color value after applying gamma is 1.0, i.e. white was intended. The class PDCalGray multiplies the value by the white point to get X, Y, Z and sends it to the java built-in CIEXYZ profile to convert it into sRGB. I believe the problem is that the white point of CIEXYZ in java is (0.9642, 1.0000, 0.8249) and we need to adapt the white point before sending the values to it. There are several methods to do that, but the easiest one is a simple scaling. In our case it would meant to multiply the color value by the CIEXYZ white point instead of the white point given in the CalGray.\r\n\r\nI would not like to pretend that I am an expert in this area. I found the information in the internet and in the java sources of ColorSpace and ICC_ColorSpace and this is how I interpret it. An insight of someone who really understands the color management stuff would be appreciated. But my main point is that the result looks different compared to what is shown in Acrobat.\r\n\r\nThe PDF originally comes from a customer and contains text above the rectangles. I have removed the texts.",
        "Printed PDF has different page settings in v1.7.1 and v1.8.9 We use FOP to generate PDF files from XSL-FO documents, then print the PDFs using PDDocument.silentPrint().\r\npdfbox-1.7.1 prints the documents correctly but pdfbox-1.8.9 uses incorrect page size.\r\n\r\nAnother issue is that printing with v1.8.9 generates 20x bigger PDF files (I used PDFCreator to save the PDFs).\r\n"
    ],
    [
        "PDFBOX-2901",
        "PDFBOX-437",
        "High CPU load and OutOfMemoryError when rendering shading By Frank D. from the mailing list:\r\n{quote}\r\nWhen we try to convert the attached pdf, the CPU load of tomcat is raising and it seems, that the process hangs. The tomcat process is no more responsive and after a long while, we get an memory overflow. Also the server load is very high meanwhile. \r\n{quote}\r\n\r\nSome debugging at 50 dpi:\r\n\r\n{code}\r\nPDFOperator{cs}: [COSName{CS0}]\r\nPDFOperator{scn}: [COSName{P0}]\r\nPDFOperator{gs}: [COSName{GS0}]\r\nPDFOperator{m}: [COSFloat{-10551.00391}, COSFloat{667.6051}]\r\nPDFOperator{l}: [COSFloat{-10551.00391}, COSFloat{1447.09143}]\r\nPDFOperator{l}: [COSFloat{9338.57129}, COSFloat{1447.09143}]\r\nPDFOperator{l}: [COSFloat{9338.57129}, COSFloat{667.6051}]\r\nPDFOperator{f}: []\r\n\r\nf = Fill path using non zero winding rule\r\n\r\n(...wait...)\r\n\r\nPDFOperator{cs}: [COSName{CS0}]\r\nPDFOperator{scn}: [COSName{P0}]\r\nPDFOperator{gs}: [COSName{GS0}]\r\nPDFOperator{m}: [COSFloat{-18801.79492}, COSFloat{667.6051}]\r\nPDFOperator{l}: [COSFloat{-18801.79492}, COSFloat{1447.09143}]\r\nPDFOperator{l}: [COSFloat{1087.7804}, COSFloat{1447.09143}]\r\nPDFOperator{l}: [COSFloat{1087.7804}, COSFloat{667.6051}]\r\nPDFOperator{f}: []\r\n\r\n(...wait...)\r\n\r\nPDFOperator{cs}: [COSName{CS0}]\r\nPDFOperator{scn}: [COSName{P0}]\r\nPDFOperator{gs}: [COSName{GS0}]\r\nPDFOperator{m}: [COSFloat{-18801.79492}, COSFloat{11.15869}]\r\nPDFOperator{l}: [COSFloat{-18801.79492}, COSFloat{790.64502}]\r\nPDFOperator{l}: [COSFloat{1087.7804}, COSFloat{790.64502}]\r\nPDFOperator{l}: [COSFloat{1087.7804}, COSFloat{11.15869}]\r\nPDFOperator{f}: []\r\n\r\n(...wait...)\r\n(...wait...)\r\n(...wait...)\r\n\r\nPDFOperator{cs}: [COSName{CS0}]\r\nPDFOperator{scn}: [COSName{P0}]\r\nPDFOperator{gs}: [COSName{GS0}]\r\nPDFOperator{m}: [COSFloat{-10551.00391}, COSFloat{667.6051}]\r\nPDFOperator{l}: [COSFloat{-10551.00391}, COSFloat{1447.09143}]\r\nPDFOperator{l}: [COSFloat{9338.57129}, COSFloat{1447.09143}]\r\nPDFOperator{l}: [COSFloat{9338.57129}, COSFloat{667.6051}]\r\nPDFOperator{f}: []\r\n\r\nException in thread \"main\" java.lang.OutOfMemoryError: GC overhead limit exceeded\r\n        at sun.java2d.cmm.kcms.CMMImageLayout.<init>(Unknown Source)\r\n        at sun.java2d.cmm.kcms.ICC_Transform.colorConvert(Unknown Source)\r\n        at java.awt.color.ICC_ColorSpace.toRGB(Unknown Source)\r\n        at org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGB(PDDeviceRGB.java:82)\r\n        at org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext.convertToRGB(ShadingContext.java:142)\r\n        at org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext.evalFunctionAndConvertToRGB(TriangleBasedShadingContext.java:167)\r\n        at org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext.calcPixelTable(TriangleBasedShadingContext.java:121)\r\n        at org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext.calcPixelTable(GouraudShadingContext.java:111)\r\n        at org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext.createPixelTable(TriangleBasedShadingContext.java:80)\r\n        at org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext.<init>(Type4ShadingContext.java:65)\r\n        at org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint.createContext(Type4ShadingPaint.java:66)\r\n        at sun.java2d.pipe.AlphaPaintPipe.startSequence(Unknown Source)\r\n        at sun.java2d.pipe.SpanShapeRenderer$Composite.startSequence(Unknown Source)\r\n        at sun.java2d.pipe.SpanShapeRenderer.renderSpans(Unknown Source)\r\n        at sun.java2d.pipe.SpanShapeRenderer.fill(Unknown Source)\r\n        at sun.java2d.pipe.ValidatePipe.fill(Unknown Source)\r\n        at sun.java2d.SunGraphics2D.fill(Unknown Source)\r\n        at org.apache.pdfbox.rendering.PageDrawer.fillPath(PageDrawer.java:611)\r\n{code}\r\n\r\nThe problem is that a type 4 shading (\"gouraud shading\") is called with huge triangles (not shown here but I saw it in debugging) and huge device bounds (e.g. x=-10551.004,y=667.6051,w=19889.574,h=779.4863). The shading routines of types 4-7 create a mapping table for the color of every point in a shading triangle. Because these triangles and the device bounds are so huge, the table is huge and takes a long time to be calculated, uses a lot of memory, with the result above.\r\n\r\nIMHO it is a java bug, it should consider the clipping when calculating the device bounds when calling Paint.createContext() and not pass device bounds outside of the clipping region. The solution will be (once again :-( ) to do ourselves what java doesn't.",
        "Prepare JempBox and FontBox for release We need new releases of the JempBox and FontBox trunks before we can release PDFBox 0.8.0.\n\nTo prepare these components for release, we need to change the package names to org.apache.*, add the standard README, LICENSE, and NOTICE files and otherwise check that everything is according to the Apache policies.\n\n"
    ],
    [
        "PDFBOX-1449",
        "PDFBOX-926",
        "Preflight doesn't report on non-embedded font See the following file:\r\n\r\nhttp://dl.dropbox.com/u/9523497/test_noembeddedfonts.pdf\r\n\r\nThis PDF uses (TrueType) fonts that are not embedded (Arial). However, Preflight does not report on this! (As a double-check I also analysed the file with Acrobat 9's Preflight module, which correctly identifies the problem.) \r\n\r\nAdditional info: I used build #562 (14-Nov-2012 23:05:44), preflight-1.8.0-20121114.230701-58-jar-with-dependencies.jar from the command line. (Strangely the all-in jar of the more recent build #563 doesn't seem to work at all on my system, but that's another story.)\r\n",
        "JVM crash calling Graphics2D.draw(Shape) with a specific path When I call  PDPage.convertToImage(), JVM crash occur. This is caused by JVM itself, not PDFBox.\r\nI will attach the test code to replicate this issue.\r\n\r\nIt seems that AWT has certain issue with a certain path/stroke combination. And by changing something that make the rendering behave slightly differently seems avoid the issue.\r\nThere is a couple workaround that I tried myself as explained in [1] such as setting graphics.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE);\r\n\r\nMaybe PDFBox can include the workaround buildin.\r\n\r\nI already file a bug to Sun [2]. (It may need a day or two to show in public bug database)\r\n\r\n[1] http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6215380\r\n[2] http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7008242"
    ],
    [
        "PDFBOX-1641",
        "PDFBOX-2190",
        "Parsing of PDFs fails when no '<<' between directory objects PDF's that are missing {{<<}} between two COS directory objects are failing with parsing. \r\n\r\nE.g.\r\n{noformat}\r\n>>\r\nendobj\r\n2 0 obj\r\n>>\r\nendobj\r\n5 0 obj\r\n<<\r\n{noformat}\r\n\r\nThe fix for handling these situations is adding under 20 lines of code to {{BaseParser.java}} (which I'd like to contribute).",
        "Disable console logging for preflight Isartor tests The preflight Isartor test suite writes PDFBox's internal LOG messages out to the build console, which pollutes it. My solution is just to disable logging, it can always be re-enabled for debugging."
    ],
    [
        "PDFBOX-2298",
        "PDFBOX-1981",
        "Wrong scaling of embedded type 1 font The file attached to PDFBOX-935 is rendered wrong. It seems that all embedded type1 fonts have the wrong scaling. All glyphs are to big and are overlapping.\r\nIt worked well before merging the no-awt branch into the trunk",
        "CryptographyException for file that isn't encrypted I get this with the attached file:\r\n\r\nException in file: rennie-fresh-gebrauchsinformation.pdf\r\njava.io.IOException: Error (CryptographyException) while creating security handler for decryption: The supplied password does not match either the owner or user password in the document\r\n12.03.2014 20:44:06.063 ERROR [main] org.apache.pdfbox.pdfparser.NonSequentialPDFParser:1888 - Can't find the object xref at offset 4543\r\n\tat org.apache.pdfbox.pdfparser.NonSequentialPDFParser.initialParse(NonSequentialPDFParser.java:444)\r\n\tat org.apache.pdfbox.pdfparser.NonSequentialPDFParser.parse(NonSequentialPDFParser.java:741)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.loadNonSeq(PDDocument.java:1152)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.loadNonSeq(PDDocument.java:1135)\r\n\tat pdfboxpageimageextraction.ExtractImages.doPdf(ExtractImages.java:203)\r\n\tat pdfboxpageimageextraction.ExtractImages.main(ExtractImages.java:86)\r\n\r\nThis didn't happen ~ 2 weeks ago, so I suspect its a regression."
    ],
    [
        "PDFBOX-623",
        "PDFBOX-2584",
        "Separate the PDFBox web site from trunk As discussed on dev@, it would be useful to move the PDFBox web site sources from .../asf/pdfbox/trunk to .../asf/pdfbox/site and to use the svnpubsub mechanism for instant deployment of site changes.",
        "Text extraction reports zero character widths  We are using PDFBox API to get position of characters within a document\r\nHave found a problem with one document:: text extraction properly extracting text but set all character's width to zero\r\n\r\nCode is pretty simple\r\n{code}\r\n            File input = new File(\"stip_2c.pdf\");\r\n            document = PDDocument.load(input);\r\n            \r\n            PDFTextStripper extractor = new PDFTextStripper();\r\n            Writer output = new StringWriter();\r\n\r\n            extractor.writeText(document, output);\r\n{code}\r\n\r\nWe are examining then value of Extractor.charactersByArticle member for characters widths\r\n\r\n- Have found the issue in 1.8.4\r\nall chars widths were == zero\r\n\r\n- in version 1.8.8\r\nall chars widths were == zero except whitespaces.\r\nSee new validation added in 1.8.8\r\nFile \r\npdfbox-1.8.8-src\\pdfbox\\src\\main\\java\\org\\apache\\pdfbox\\util\\PDFStreamEngine.java\r\nline 369\r\n{code}        if (spaceWidthText == 0)\r\n        {\r\n            spaceWidthText = 1.0f; // if could not find font, use a generic value\r\n        }        {code}\r\n\r\n- in version 2.0.0 problem still exists\r\n"
    ],
    [
        "PDFBOX-362",
        "PDFBOX-2443",
        "ZipException occuring upon importing a page [Issue from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?func=detail&aid=2019925&group_id=78314&atid=552832\r\n\r\ncopying page from source document to other doc, if the source page has no content, a ZipException occurs.\r\n\r\nthe following sample code exhibits the problem with such source pdf:\r\n{code}\r\npublic class LoadSaveSample\r\n{\r\n    /**\r\n     * @param args holds the name of a file to copy\r\n     * @throws IOException\r\n     * @throws COSVisitorException\r\n     */\r\n    public static void main(String[] args) throws IOException, COSVisitorException\r\n    {\r\n        String name = args[0];\r\n        File file = new File(name);\r\n        System.out.println(\"loading file \" + file.getPath());\r\n        PDDocument doc = PDDocument.load(file);\r\n\r\n        ClassLoader loader = doc.getClass().getClassLoader();\r\n        System.out.println(\"loader: \" + loader);\r\n        try\r\n        {\r\n            PDDocument doc2 = new PDDocument();\r\n            List all = doc.getDocumentCatalog().getAllPages();\r\n            Iterator it = all.iterator();\r\n            while (true == it.hasNext())\r\n            {\r\n                PDPage page = (PDPage) it.next();\r\n                // now do the copy through import...\r\n                PDPage imported = doc2.importPage(page);\r\n                imported.setCropBox(page.findCropBox());\r\n                imported.setMediaBox(page.findMediaBox());\r\n                imported.setResources(page.findResources());\r\n                imported.setRotation(page.findRotation());\r\n            }\r\n            String outName = file.getPath() + \".saved.pdf\";\r\n            doc2.save(outName);\r\n            System.out.println(\"saved as \" + outName);\r\n        }\r\n        finally\r\n        {\r\n            doc.close();\r\n        }\r\n    }\r\n}\r\n{code}\r\n\r\n(Edited on 8.6.14 by [~tilman] for clarity)",
        "About to return NULL from unhandled branch when constructing a PDJpeg The INFO \"About to return NULL from unhandled branch\" appears when creating a PDJpeg from a stream. Although the message is an INFO and not a WARNING or an ERROR, it scares users.\r\n\r\nThe message happens because getRGBImage() calls getColorSpace() although the colorspace isn't known yet, it is determined after the call to getRGBImage(), which loads the image.\r\n\r\nThe image objects were completely redesigned in 2.0, so it makes no sense to waste time for a real solution to this. I am setting the message to DEBUG instead, and make it less scary."
    ],
    [
        "PDFBOX-2879",
        "PDFBOX-2466",
        "Wrong vertical text extraction for apache PDFBox 2.0.0 The text extraction of vertical boxes (orientation 90\u00b0 or 270\u00b0) fails for apache PDFBox 2.0.0 on my computer.\r\n\r\nI don't know if this is directly related to PDFBOX-800, therefore I didn't create this as a subtask to the mentioned issue.\r\n\r\nI attach the files I got problems with, but you can also use the .pdf from issue \"PDFBOX-800\"",
        "2.4 : Invalid Color space, Unable to read default color space : Missing color space: DefaultRGB org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace$MissingException: Missing color space: DefaultRGB\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:94)\r\n\tat org.apache.pdfbox.pdmodel.PDResources.getColorSpace(PDResources.java:131)\r\n\tat org.apache.pdfbox.preflight.graphic.StandardColorSpaceHelper.processDefaultColorSpace(StandardColorSpaceHelper.java:428)\r\n\tat org.apache.pdfbox.preflight.graphic.StandardColorSpaceHelper.processRGBColorSpace(StandardColorSpaceHelper.java:152)\r\n\tat org.apache.pdfbox.preflight.graphic.StandardColorSpaceHelper.processAllColorSpace(StandardColorSpaceHelper.java:109)\r\n\tat org.apache.pdfbox.preflight.graphic.StandardColorSpaceHelper.validate(StandardColorSpaceHelper.java:93)\r\n\tat org.apache.pdfbox.preflight.xobject.XObjImageValidator.checkColorSpaceAndImageMask(XObjImageValidator.java:147)\r\n\tat org.apache.pdfbox.preflight.xobject.XObjImageValidator.validate(XObjImageValidator.java:183)\r\n\tat org.apache.pdfbox.preflight.process.reflect.GraphicObjectPageValidationProcess.validate(GraphicObjectPageValidationProcess.java:70)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validateXObjects(ResourcesValidationProcess.java:288)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validate(ResourcesValidationProcess.java:80)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validateResources(SinglePageValidationProcess.java:167)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validate(SinglePageValidationProcess.java:82)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validatePage(PageTreeValidationProcess.java:56)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validate(PageTreeValidationProcess.java:45)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:88)\r\n\tat org.apache.pdfbox.preflight.PreflightDocument.validate(PreflightDocument.java:168)"
    ],
    [
        "PDFBOX-1054",
        "PDFBOX-1250",
        "DateConverter: allow for external adding of potential date parsing formats Please create a method \"addPotentialDateFormat\" in class DateConverter so that new date formats can be added from the outside without modifying the JemBox sources themselves.",
        "CFF to Type1 Font conversion is missing/corrupting the font metrics So the problem here is easily reproducible with pretty much ANY CIDFontTypeOC font file is embedded in a PDF and PDFBox is used to rasterize it, all the glyphs appear to have bad horizontal metrics.\r\n\r\nFontbox converts the CID encoded font into a Type1 font using the org.apache.fontbox.cff.Type1FontFormatter class and for some reason, when it does this, the horizontal metrics of the glyphs are lost/corrupted. This can clearly be seen by putting a System.out just before the byte[] type1Bytes is given to Font.createFont in PDType1CFont.java.\r\n\r\nI've included the PDF and the Type1 font that PDFBox gives java.awt.Font, openning the font in FontForge or painting the text with Graphics2D will easily illustrate this issue.\r\n\r\nWe plan on fixing this issue in the imminent future but unfortunately, I don't make the rules..."
    ],
    [
        "PDFBOX-2167",
        "PDFBOX-991",
        "NPE in PDTrueTypeFont.makeFontDescriptor I get an NPE with the file from\r\nhttp://digitalcorpora.org/corp/nps/files/govdocs1/268/268554.pdf\r\n{code}\r\njava.lang.NullPointerException\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.makeFontDescriptor(PDTrueTypeFont.java:292)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getFontDescriptor(PDTrueTypeFont.java:150)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.getFontWidth(PDFont.java:814)\r\nIOException for file 268554.pdf\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getFontWidth(PDTrueTypeFont.java:382)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.getFontWidth(PDFont.java:312)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.getSpaceWidth(PDFont.java:855)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:328)\r\n\tat org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:44)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:521)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:267)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:226)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:209)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:174)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderPage(PDFRenderer.java:227)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:160)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImageWithDPI(PDFRenderer.java:109)\r\n{code}\r\n\r\nI first thought it is the same as PDFBOX-2165, but it's a different line number.",
        "org.apache.pdfbox.cos.COSDocument finalize, did not close a PDF Document The error below keeps occurring when I run several PDF files.\r\n\r\n[Error]Mar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document[/Error]\r\n\r\nHere's my code:\r\n\r\npublic void methodForPDF() throws SQLException\r\n{\r\n     //fullFilePath is always changing and this method is called by another method for several times.\r\n     PDDocument doc = null;\r\n     PDActionURI uri = null;\r\n     ResultSet resultSet = null;\r\n     Statement statement = null;\r\n     int newURI = 0, type = 0;\r\n     String newuri = \"\";\r\n     String oldLink =\"\", line=\"\", oldId=\"\";\r\n     int pos = 0;\r\n     CharSequence char0 = \"abc\";\r\n     File f = new File(fullFilePath);\r\n     try\r\n     {\r\n           statement = dbConnection.createStatement(); \r\n           doc = PDDocument.load(fullFilePath, false);\r\n\t\t    \r\n           List allPages = doc.getDocumentCatalog().getAllPages();\r\n           for( int i=0; i<allPages.size(); i++ )\r\n           {\r\n\t PDPage page = (PDPage)allPages.get( i );\r\n\t List annotations = page.getAnnotations();\r\n\r\n\t for( int j=0; j<annotations.size(); j++ )\r\n\t {\r\n\t        PDAnnotation annot = (PDAnnotation)annotations.get( j );\r\n\t        if( annot instanceof PDAnnotationLink )\r\n                        {\r\n                               PDAnnotationLink link = (PDAnnotationLink)annot;\r\n                               PDAction action = link.getAction();\r\n                               if( action instanceof PDActionURI )\r\n                               {\r\n                                     uri = (PDActionURI)action;\r\n    \t                     String oldURI = uri.getURI();\r\n    \t                     if(oldURI.contains(char0))\r\n    \t                     { \r\n    \t                            \r\n    \t                            line = oldURI;\r\n    \t                            pos = line.lastIndexOf(\"=\");\r\n    \t                            oldLink = line.substring(0, pos+1);\r\n    \t                        \r\n    \t                            line = line.replace(oldLink, newWebformUrl+\"?\"+newArtName);\r\n    \t                            pos = line.lastIndexOf(\"=\");\r\n    \t                            oldId = line.substring(pos+1, line.length());\r\n    \t                        \r\n\t\t            resultSet = statement.executeQuery(\"SELECT newid, type \"\r\n\t\t\t          + \"FROM prrm.temp_migration_lookup WHERE oldid = \" + oldId);\r\n\t\t                            \r\n\t\t            if (null != resultSet) {\r\n\t\t\t  while (resultSet.next()) {\r\n\t\t\t         newURI = resultSet.getInt(\"newid\");\r\n\t\t\t         type = resultSet.getInt(\"type\");\r\n\t\t\t   }\r\n\t\t             }\r\n\t\t\t                     \r\n\t\t            newuri = newURI + \"\";\r\n   \t\t            String newurl = line.replace(oldId,newuri);\r\n   \t\t            newurl = newurl + \"?type=\" + type;\r\n   \t\t            //System.out.println( \"Page \" + (i+1) +\": Replacing \" + oldURI + \" with \" + newurl );\r\n   \t\t            uri.setURI( newurl );\r\n    \t                      }\r\n\t\t           \r\n\t\t   }\r\n\t           }\r\n\t }\r\n            }\r\n\t\t            \r\n            doc.save(fullFilePath);\r\n            resultSet.close();\r\n            statement.close();\r\n            doc.close();\r\n           System.out.println(\"1: Close 1 File\");\r\n\t\t            \r\n     } catch (IOException e) {\r\n          e.printStackTrace();\r\n     } catch (COSVisitorException e) {\r\n          // TODO Auto-generated catch block\r\n          e.printStackTrace();\r\n     }\r\n     finally\r\n     {\r\n           if( doc != null )\r\n           {\r\n                  try {\r\n                     doc.close();\r\n                     doc = null;\r\n                     System.out.println(\"2: Close 1 File\");\r\n\t  } catch (IOException e) {\r\n\t       // TODO Auto-generated catch block\r\n                       e.printStackTrace();\r\n\t  }\r\n            }\r\n       }\r\n }\r\n\r\nHere's the results of the run:\r\n\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file"
    ],
    [
        "PDFBOX-780",
        "PDFBOX-2933",
        "EXCEPTION_ACCESS_VIOLATION in fontmanager.so/fontmanager.dll It seems when writing a PDF that has an invalid embedded font to an image there is a crash in the native function sun.font.FileFont.getGlyphImage(JI).   It can be reproduced using the PDFToImage program on a pdf with an invalid embedded font.\r\n\r\n\r\nTuring on  -Dsun.java2d.debugfonts=true on a bad pdf will show some like the follow for the bad font\r\n\r\nINFO: open TTF: C:\\DOCUME~1\\mdavis\\LOCALS~1\\Temp\\+~JF4968602841241472406.tmp\r\nJul 20, 2010 11:37:31 AM sun.font.TrueTypeGlyphMapper handleBadCMAP\r\nSEVERE: Null Cmap for ** TrueType Font: Family=INKLBC+SymbolMT Name=INKLBC+SymbolMT style=0 fileName=C:\\DOCUME~1\\mdavis\\LOCALS~1\\Temp\\+~JF4968602841241472406.tmpsubstituting for this font\r\nJul 20, 2010 11:37:31 AM sun.font.FontManager deRegisterBadFont\r\nSEVERE: Deregister bad font: ** TrueType Font: Family=INKLBC+SymbolMT Name=INKLBC+SymbolMT style=0 fileName=C:\\DOCUME~1\\mdavis\\LOCALS~1\\Temp\\+~JF4968602841241472406.tmp\r\nJul 20, 2010 11:37:31 AM sun.font.FileFontStrike <init>\r\nINFO: Strike for ** TrueType Font: Family=INKLBC+SymbolMT Name=INKLBC+SymbolMT style=0 fileName=C:\\DOCUME~1\\mdavis\\LOCALS~1\\Temp\\+~JF4968602841241472406.tmp at size = 19 use natives = false useJavaRasteriser = true AAHint = 2 Has Embedded bitmaps = false\r\n\r\n\r\n\r\nThe following code in PDSimpleFont.java seems to fix the crash although I am not sure if it is correct:\r\n\r\n\r\npublic void drawString(String string, Graphics g, float fontSize, AffineTransform at, float x, float y) throws IOException {\r\n\t\tFont _awtFont = getawtFont();\r\n\t\t\r\n\t\t\r\n\t\t//mdavis - fix fontmanager.so/dll on sun.font.FileFont.getGlyphImage for font with bad cmaps?\r\n\t\tif (_awtFont.canDisplayUpTo(string) != -1) {\r\n\t\t\tlog.warn(\"Changing fonts on <\" + string + \"> from <\" + _awtFont.getName() + \"> to default font\");\r\n\t\t\t_awtFont = null;\r\n\t\t}\r\n\t\t\r\n\r\n\t\tGraphics2D g2d = (Graphics2D) g;\r\n\r\n",
        "Drop ant build including .NET build support I'm going to remove the redundant and incomplete ant build as we don't need just another build. This will remove the .NET build support as well, which is neither maintained nor supported by the core PDFBox team.\r\n\r\nI'm happy to add some .NET build support based on maven, see PDFBOX-2705 for further details.\r\n"
    ],
    [
        "PDFBOX-558",
        "PDFBOX-598",
        "PDPageDestination getPageNumber only returns page number when underlying COSArray has a page number When a PDPagesDestinatin has a page referenced, getPageNumber returns (as specified) -1.\r\n\r\nIn contrast  other PD-Objects like PDOutlineItem are more \"user-friendly\" findDestinationPage resloves thze stored reference. In my attached patch I added code to getPageNumber  to return the page number for referenced PDPages too.\r\n\r\nPDFBox Developers: Submit it to the code base if this fits the idea of the PD-classes.",
        "DateConverter.toCalendar doesn't clear milliseconds field I've just discovered that DateConverter.toCalendar(String date) doesn't clear the milliseconds field from the calendar entries it returns. This means that if you turn the calendar object into a String, the return isn't stable, so your unit tests break :(\r\n\r\nIt looks to me that as the pdf format doesn't store to that level of detail, it should always be zero'd out, rather than being left to hold the milliseconds of the time you make the call.\r\n\r\nThis snippet is a failing unit test that shows the issue:\r\n\r\n    public void testDateConversion() throws Exception {\r\n       Calendar c = DateConverter.toCalendar(\"D:20050526205258+01'00'\");\r\n       assertEquals(2005, c.get(Calendar.YEAR));\r\n       assertEquals(05-1, c.get(Calendar.MONTH));\r\n       assertEquals(26, c.get(Calendar.DAY_OF_MONTH));\r\n       assertEquals(20, c.get(Calendar.HOUR_OF_DAY));\r\n       assertEquals(52, c.get(Calendar.MINUTE));\r\n       assertEquals(58, c.get(Calendar.SECOND));\r\n       assertEquals(0, c.get(Calendar.MILLISECOND));\r\n    }\r\n\r\nAdding \"retval.set(Calendar.MILLISECOND, 0)\" to the bottom of the method ought to fix it I'd think."
    ],
    [
        "PDFBOX-2826",
        "PDFBOX-1325",
        "Mouse position shown when mouse outside of PDFReader window The PDF Reader keeps a position in the status bar after the mouse has left the window. I'll fix this with a MouseListener. I the future, this structure could also be used to mark a rectangle.",
        "Converting page to png creates an empty image Generating an image from PDF generated by pdfTeX-1.40.12 creates empty images (transparent images in png format, and black images in jpeg format), see pdf-nok.pdf and pdf-nok1.png files attached.\r\nHowever, pdfTeX versions 1.40.10 and 1.40.13 generate pdf files that are correctly converted to images, see pdf-ok.pdf and pdf-ok1.png files attached.\r\n\r\nThe code used to generate the png files is the following:\r\n\r\n{code:title=Test.java|borderStyle=solid}\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.File;\r\n\r\nimport org.apache.pdfbox.pdmodel.PDDocument;\r\nimport org.apache.pdfbox.util.PDFImageWriter;\r\n\r\npublic class Test {\r\n  public static void main(String[] args) throws Exception {\r\n    PDDocument docOk = PDDocument.load(new File(\"pdf-ok.pdf\"));\r\n    PDDocument docNok = PDDocument.load(new File(\"pdf-nok.pdf\"));\r\n\r\n    PDFImageWriter imagewriter = new PDFImageWriter();\r\n    try {\r\n      imagewriter.writeImage(docOk, \"png\", null, 1, 1, \"pdf-ok\",\r\nBufferedImage.TYPE_INT_RGB, 100);\r\n      imagewriter.writeImage(docNok, \"png\", null, 1, 1, \"pdf-nok\",\r\nBufferedImage.TYPE_INT_RGB, 100);\r\n    } finally {\r\n      docOk.close();\r\n      docNok.close();\r\n    }\r\n  }\r\n}\r\n{code}"
    ],
    [
        "PDFBOX-2245",
        "PDFBOX-374",
        "java.lang.StringIndexOutOfBoundsException in PDTrueTypeFont.getGIDForCharacterCode I get this exception with the attached file:\r\n{code}\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: 0\r\n        at java.lang.String.codePointAt(Unknown Source)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getGIDForCharacterCode(PDTrueTypeFont.java:452)\r\n        at org.apache.pdfbox.rendering.font.TTFGlyph2D.getGIDForCharacterCode(TTFGlyph2D.java:178)\r\n        at org.apache.pdfbox.rendering.font.TTFGlyph2D.getPathForCharacterCode(TTFGlyph2D.java:150)\r\n        at org.apache.pdfbox.rendering.PageDrawer.drawGlyph2D(PageDrawer.java:354)\r\n        at org.apache.pdfbox.rendering.PageDrawer.processGlyph(PageDrawer.java:325)\r\n{code}\r\n\r\nThe cause is that Encoding.getCharacterForName(characterName) returns an empty string. This is because characterName is \".notdef\". Adobe Reader displays a gap. This can be seen at \"Alumni   Weekend\" and \"health    professions\". A copy & paste into an editor shows that Adobe returns a hex 1 code. My change ignores the wrong code, outputs an error message and the file renders like in adobe reader.",
        "text areas not properly being sorted because of page rotation When PDFTextStripper is set to sort the text before outputting, the sorting is not correct if a page rotation exists.  The reason is because both TextPositionComparator and PDFStreamEngine take the rotation into account.  So, the rotation is applied twice by the time the comparison is done in TextPositionComparator. \n\nAlso, it seems that the rotation code in PDFStreamEngine is not consistent. I verified the code for 0 and 90 degrees works, but the 180 and 270 situations do not seem consistent with the goal of adjusting the X and Y values so that 0,0 is in the upper left, which is what the 0 and 90 code does.  I do not have examples of 180 and 270 to test with. There are no comments in this section, so I have been guessing about its purpose.\n\nThe attached patches:\n- Remove the rotation from TextPositionComparator\n- Adds comments and makes changes to the 180 and 270 situations to make it consistent with 0 and 90. \n\n"
    ],
    [
        "PDFBOX-1328",
        "PDFBOX-1958",
        "PDSignature should return byte range as long array Fix for PDFBOX-1196 should be propagated to PDSignature, which should return the byte range, that this signature covers, as long array (currently - int array).\r\n\r\n",
        "image mask outline with shading pattern is invisible This is also somewhat of a regression: two weeks ago, the attached file had the image rendered in b/w, now it is invisible. I was able to get the image in another (wrong) color by changing one line in BeginInlineImage.java, the one with TODO to\r\n\r\n            awtImage = image.getStencilImage(colorSpace.toPaint(color, image.getHeight())); // <--- TODO: pass page height?\r\n"
    ],
    [
        "PDFBOX-2691",
        "PDFBOX-2855",
        "PageDrawer should not be *final* A change from PDFBox 1.8.8 and earlier makes PageDrawer a final class -- prohibiting classes from inheriting it.\r\n\r\nThis will prevent me from upgrading to version 2.0.0 because I use PDFBox to render PDF's in .Net.  That requires that a few methods be overridden to use .Net drawing objects and libraries rather than Java objects and libraries.  In order to override those methods, I define a class thus:\r\n\r\n{code}\r\n\r\nnamespace PDFBox_Net\r\n{\r\n    public class PageDrawer_Net : org.apache.pdfbox.pdfviewer.PageDrawer\r\n    { \r\n /* all kinds of cool C# code\r\n...\r\n\r\n*/\r\n    }\r\n}\r\n{code}\r\n\r\nIf PDFBox 2.0 PageDrawer remains final, I will need to choose between staying on the 1.8.x branch and forking the code.",
        "Allow some flexibility for divergences from the standard on Seq vs Bag in DomXMPParser While working on TIKA-1285 (migrate to PDFBox 2.0.0), [~rpialum] noticed that the DomXmpParser was failing on some XMP with:\r\n\r\n{noformat}\r\norg.apache.xmpbox.xml.XmpParsingException: Invalid array type, expecting Seq and found Bag [prefix=dc; name=creator]\r\n\tat org.apache.xmpbox.xml.DomXmpParser.manageArray(DomXmpParser.java:449)\r\n\tat org.apache.xmpbox.xml.DomXmpParser.createProperty(DomXmpParser.java:338)\r\n\tat org.apache.xmpbox.xml.DomXmpParser.parseChildrenAsProperties(DomXmpParser.java:305)\r\n\tat org.apache.xmpbox.xml.DomXmpParser.parseDescriptionRoot(DomXmpParser.java:234)\r\n\tat org.apache.xmpbox.xml.DomXmpParser.parse(DomXmpParser.java:198)\r\n\tat org.apache.tika.parser.pdf.PDFParser.extractMetadata(PDFParser.java:202)\r\n{noformat}\r\n\r\nOne file that triggers this is available on Tika-1252 [here| https://issues.apache.org/jira/secure/attachment/12632592/Sample%20%28Acrobat%204.x%29.pdf ]\r\n\r\nThe raw xmp for that file includes: \r\n{noformat}\r\n         <dc:creator>\r\n            <rdf:Bag>\r\n               <rdf:li>Single Author</rdf:li>\r\n            </rdf:Bag>\r\n         </dc:creator>\r\n{noformat}\r\n\r\nOn TIKA-1252, I confirmed that this is against the spec [link|https://issues.apache.org/jira/browse/TIKA-1252?focusedCommentId=13919846&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13919846] and [~alexandre.madurell@gmail.com] confirmed that this was what Acrobat was generating [link|https://issues.apache.org/jira/browse/TIKA-1252?focusedCommentId=13919858&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13919858].\r\n\r\nSo, would it be easy enough to allow for some divergence from the standard?\r\n\r\nCode to reproduce issue in tika setup:\r\n{noformat}\r\n    @Test\r\n    public void oneOffMetadataTest() throws Exception {\r\n        PDDocument doc = PDDocument.load(this.getClass().getResourceAsStream(\"/test-documents/sampleAcrobat_4_x.pdf\"));\r\n        DomXmpParser p = new DomXmpParser();\r\n        p.setStrictParsing(false);\r\n        p.parse(doc.getDocumentCatalog().getMetadata().exportXMPMetadata());\r\n    }\r\n{noformat}"
    ],
    [
        "PDFBOX-3043",
        "PDFBOX-1293",
        "Problem extracting copyright symbol? This document has a \u00a9 symbol. It's being extracted as \"c\u00a9\". I wanted to check if this is a bug.\r\n\r\nOne of the things that's strange about this is that PDFTextStripper first processes \"c\" and then processes \"\u00a9\". However, PrintTextLocations prints them in the other order\r\n\r\nString[214.936,618.879 fs=9.963 xscale=9.963 height=8.642903 space=9.963 width=9.962997]\u00a9\r\nString[217.704,618.579 fs=9.963 xscale=9.963 height=6.072449 space=5.537458 width=4.4235687]c\r\n",
        "PDFImageWriter should use logging instead of System.out.println The PDFImageWriter writes to System.out. It's annoying to suppress/redirect it in a wrapper script."
    ],
    [
        "PDFBOX-264",
        "PDFBOX-2650",
        "colorspace as an array entry [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1695597\nOriginally submitted by matpil on 2007-04-06 06:37.\n\nthere is a problem when PDFStripper try to extract text from a pdf file.\n\nstacktrace:\n\njava.io.IOException: Unknown colorspace array type:COSName{DeviceRGB} \nat org.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory.createColorSpace(PDColorSpaceFactory.java:116) \nat org.pdfbox.pdmodel.PDResources.getColorSpaces(PDResources.java:264) \nat org.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:193) \nat org.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:174) \nat org.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:336) \nat org.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:259) \nat org.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:216)\n\n\nin attachment the pdf file that generate the error\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552835&aid=1695597&file_id=223969\nerrorColorspace.pdf (application/pdf), 145133 bytes",
        "Type1Equivalent: TrueType must use 'cmap' when 'post' table is empty Originally from Andreas L\u00fcdtke on the mailing list:\r\n\r\nAll glyphs are missing in the Helvetica font on Windows 8.1.\r\n\r\n{code}\r\nD:\\__test>java -jar pdfbox-app-2.0.0-20150129.180809-996.jar PDFToImage rg-1234567890BA.pdf\r\nJan 31, 2015 2:34:34 PM org.apache.pdfbox.rendering.font.Type1Glyph2D getPathForCharacterCode\r\nWARNUNG: No glyph for 77 (.notdef) in font Helvetica\r\nJan 31, 2015 2:34:34 PM org.apache.pdfbox.rendering.font.Type1Glyph2D getPathForCharacterCode\r\nWARNUNG: No glyph for 97 (.notdef) in font Helvetica\r\nJan 31, 2015 2:34:34 PM org.apache.pdfbox.rendering.font.Type1Glyph2D getPathForCharacterCode\r\nWARNUNG: No glyph for 114 (.notdef) in font Helvetica\r\nJan 31, 2015 2:34:34 PM org.apache.pdfbox.rendering.font.Type1Glyph2D getPathForCharacterCode\r\nWARNUNG: No glyph for 107 (.notdef) in font Helvetica\r\nJan 31, 2015 2:34:34 PM org.apache.pdfbox.rendering.font.Type1Glyph2D getPathForCharacterCode\r\nWARNUNG: No glyph for 117 (.notdef) in font Helvetica\r\n{code}\r\n\r\nSome research shows that this is because the 'post' table in Arial.ttf no longer contains names (it's now format 3), which FontBox was relying on. We must fallback to the 'cmap' table in this case."
    ],
    [
        "PDFBOX-1877",
        "PDFBOX-2471",
        "Radial Shading (type 3) fails Ghent Workgroup tests GWG 6.0 test: the black rectangle around the circle is missing\r\nGWG 6.1 test: The rectangles are there but shouldn't be. Plus, the second type 3 shading has wrong colors. (Maybe same problem as in PDFBOX-1876 ?)",
        "AES encryption failing to write Acroform field names and values When writing a PDF using AES 256 bit encryption, the field names / values from the Acroform are not being persisted correctly. If I encrypt using RC4 128 bit, they are persisted correctly. I am using snapshot pdfbox:2.0.0-20141023.180319-636.\r\n\r\nI dug into this, and it looks to me the problem is with COSWriter.visitFromString, which invokes  SecurityHandler.decryptString (there is no SecurityHandler.encryptString)."
    ],
    [
        "PDFBOX-2101",
        "PDFBOX-2686",
        "Surprising memory consumption when extracting images ExtractImages seems to fail to release memory resources on some files in both PDFBox 1.8.5 and trunk.  \r\n\r\nOn this file 4MB file [http://digitalcorpora.org/corp/nps/files/govdocs1/239/239665.pdf], if extracting every image on every page (and there are many, many duplicate images), there is an OOM with -Xmx1g.  If there is no Xmx and there is > 2.5g available, ExtractImages will work.\r\n\r\nWith some experimentation, the triggers seem to be JPEG images that have masks.  I'm not sure, though, whether the issue is with PDFBox or Java.\r\n\r\nCommandlines:\r\n1.8.5:\r\njava -Xmx1g -cp pdfbox-app-1.8.5.jar org.apache.pdfbox.ExtractImages 239665.pdf\r\n\r\n2.0_SNAPSHOT:\r\njava -Xmx1g -cp pdfbox-app-2.0.0-SNAPSHOT.jar org.apache.pdfbox.tools.ExtractImages -addkey 239665.pdf\r\n\r\nResults:\r\n1.8.5: 906 files before OOM\r\n{noformat}\r\nException in thread \"main\" java.lang.OutOfMemoryError: Java heap space\r\n        at java.util.Arrays.copyOf(Arrays.java:2271)\r\n        at java.io.ByteArrayOutputStream.grow(ByteArrayOutputStream.java:113)\r\n        at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.ja\r\nva:93)\r\n        at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:140)\r\n        at org.apache.pdfbox.pdmodel.common.PDStream.getByteArray(PDStream.java:\r\n514)\r\n        at org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap.getRGBImage(PDP\r\nixelMap.java:217)\r\n        at org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap.write2OutputStr\r\neam(PDPixelMap.java:363)\r\n        at org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage.write2file(\r\nPDXObjectImage.java:254)\r\n        at org.apache.pdfbox.ExtractImages.processResources(ExtractImages.java:2\r\n02)\r\n        at org.apache.pdfbox.ExtractImages.extractImages(ExtractImages.java:160)\r\n\r\n        at org.apache.pdfbox.ExtractImages.main(ExtractImages.java:65)\r\n{noformat}\r\n\r\n2.0_SNAPSHOT: 428 files before OOM\r\n{noformat}\r\nException in thread \"main\" java.lang.OutOfMemoryError: Java heap space\r\n        at java.util.Arrays.copyOf(Arrays.java:2271)\r\n        at java.io.ByteArrayOutputStream.grow(ByteArrayOutputStream.java:113)\r\n        at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.ja\r\nva:93)\r\n        at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:140)\r\n        at org.apache.pdfbox.io.IOUtils.copy(IOUtils.java:70)\r\n        at org.apache.pdfbox.io.IOUtils.toByteArray(IOUtils.java:52)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.from8bit(\r\nSampledImageReader.java:171)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader.getRGBIma\r\nge(SampledImageReader.java:154)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.getImage(PDIm\r\nageXObject.java:171)\r\n        at org.apache.pdfbox.tools.ExtractImages.write2file(ExtractImages.java:2\r\n31)\r\n        at org.apache.pdfbox.tools.ExtractImages.processResources(ExtractImages.\r\njava:206)\r\n        at org.apache.pdfbox.tools.ExtractImages.extractImages(ExtractImages.jav\r\na:164)\r\n        at org.apache.pdfbox.tools.ExtractImages.main(ExtractImages.java:69)\r\n{noformat}",
        "Problem converting a shaded shape to another format Shading in a PDF file is not converted to another image format.\r\n\r\nThe shading is created (for example) using Microsoft Word, creating a shape then filling the shape using the shape fill and selecting a Pattern. The resultant document is then saved as PDF.\r\n\r\nThe conversion is attempted using:\r\n\r\nPDDocument doc = PDDocument.load (new File (args[0]));\r\nList pages = doc.getDocumentCatalog().getAllPages();\r\nPDPage page = pages.get (0);\r\nBufferedImage bi = page.convertToImage          (BufferedImage.TYPE_INT_RGB, 200);\r\nImageIO.write (bi, \"png\", new File (args[1]);\r\n\r\nThe result is that the shape outline is present in the output file, but no shading is seen."
    ],
    [
        "PDFBOX-246",
        "PDFBOX-2672",
        "Pdf Printing with/without Annotations [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1657698\nOriginally submitted by rodricksin on 2007-02-11 20:44.\n\nHi all... can i print a PDF File with/without Annotations\n\nI need to give a print to printer by selecting with/ without annotations...\n\nPlease give some idea or code..... I want to implement in java...\n\nThanks in advance...\n\n-Rodricks",
        "Wrong code convention link on the website Currently the website page https://pdfbox.apache.org/codingconventions.html points to the Sun's code convention -> http://java.sun.com/docs/codeconv but that page doesn't exist anymore. "
    ],
    [
        "PDFBOX-1025",
        "PDFBOX-3209",
        "Can't load pdf file which has attachment PDFBox throws exeception when parsing some pdf files with attachment.\r\nThose pdf files can be opened by acrobat reader successfully.\r\n\r\nThe exception messages are not the same, different file has different message.\r\nOne of the message is:\r\nInvalid dictionary, found: 'U' but expected: '/'\r\n\r\nI've checked latest version, it still happen.\r\n ",
        "Overlay class does not work with in-memory PDFs The class {{org.apache.pdfbox.multipdf.Overlay}} has no possibility to perform the overlay only in memory (using a custom {{OutputStream}}). It is currently fixed to work with files only.\r\n\r\nA suggestion would be to add an overload {{public void overlay(Map<Integer, String> specificPageOverlayFile, OutputStream outStream) throws IOException}} which uses the outStream if supplied and falls back to {{outputFilename}} if null is passed (would be an easy solution)\r\n  "
    ],
    [
        "PDFBOX-1086",
        "PDFBOX-16",
        "Error when decoding CCITT compressed data that contains EOLs, fill bits etc. The TIFFFaxDecoder class (originally coming from JAI via XML Graphics Commons) does not handle cases like EOLs between lines and in front. But the PDF CCITTFaxDecode filter needs to allow many different variants of the encoding. Apparently, TIFF has a relatively restricted way of encoding CCITT data, so TIFFFaxDecoder was not written to be as flexible as we need it. Ideally, PDFBox should handle anything that gets thrown at it.\r\n\r\nIt apprears that it would be rather difficult to retrofit TIFFFaxDecoder with the necessary flexibility. So, new decoders for T.4 and T.6 should probably be written.",
        "Replace existing font with new font [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1016101\nOriginally submitted by benlitchfield on 2004-08-25 09:16.\n\nCreate a class, maybe an example that allows a user to \nreplace a font with a font in the filesystem or an existing \nfont in the PDF.  This is useful when a collection of PDF \ndocuments have been appended and contain many \nembedded fonts like \n'BDED50A3 Times New Roman'\n'GH34DFH Times New Roman'\n\nIn order to reduce file size it would be nice to be able to \nreduce these to one embedded font.\n\nWhere the font is embedded multiple times but is really \nthe same font over and over.\n\nBen"
    ],
    [
        "PDFBOX-1711",
        "PDFBOX-858",
        "Loss of colour precision in exporting PDF to image In attempting to convert a PDF which makes use of CMYK colours as well as colour transparencies, but the output I'm seeing doesn't match the input.  \r\n\r\nI'm using the command line PDFToImage and have output in a lossless format and attempted to use all potential color depths to see if I can find a workable option.  ",
        "Metadata extraction broken on some PDF files On certain PDF files (examples attached), the metadata extraction seems to be broken. Preview (on Mac OS X) and Acrobat Reader is able to read the metadata, but PDFbox gives complete jibberish: \r\n\r\nAuthor=\u00e8'\u00ff\u00c6??k\u00d47??\u00d5\u00aaG?\r\n\r\nI've tried both the version included in Tika 0.7 (1.0.0 I believe) and r1021264 from SVN. "
    ],
    [
        "PDFBOX-362",
        "PDFBOX-118",
        "ZipException occuring upon importing a page [Issue from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?func=detail&aid=2019925&group_id=78314&atid=552832\r\n\r\ncopying page from source document to other doc, if the source page has no content, a ZipException occurs.\r\n\r\nthe following sample code exhibits the problem with such source pdf:\r\n{code}\r\npublic class LoadSaveSample\r\n{\r\n    /**\r\n     * @param args holds the name of a file to copy\r\n     * @throws IOException\r\n     * @throws COSVisitorException\r\n     */\r\n    public static void main(String[] args) throws IOException, COSVisitorException\r\n    {\r\n        String name = args[0];\r\n        File file = new File(name);\r\n        System.out.println(\"loading file \" + file.getPath());\r\n        PDDocument doc = PDDocument.load(file);\r\n\r\n        ClassLoader loader = doc.getClass().getClassLoader();\r\n        System.out.println(\"loader: \" + loader);\r\n        try\r\n        {\r\n            PDDocument doc2 = new PDDocument();\r\n            List all = doc.getDocumentCatalog().getAllPages();\r\n            Iterator it = all.iterator();\r\n            while (true == it.hasNext())\r\n            {\r\n                PDPage page = (PDPage) it.next();\r\n                // now do the copy through import...\r\n                PDPage imported = doc2.importPage(page);\r\n                imported.setCropBox(page.findCropBox());\r\n                imported.setMediaBox(page.findMediaBox());\r\n                imported.setResources(page.findResources());\r\n                imported.setRotation(page.findRotation());\r\n            }\r\n            String outName = file.getPath() + \".saved.pdf\";\r\n            doc2.save(outName);\r\n            System.out.println(\"saved as \" + outName);\r\n        }\r\n        finally\r\n        {\r\n            doc.close();\r\n        }\r\n    }\r\n}\r\n{code}\r\n\r\n(Edited on 8.6.14 by [~tilman] for clarity)",
        "Text extraction fails for pages in landscape format [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1410876\nOriginally submitted by lenuweit on 2006-01-20 07:22.\n\nText extraction fails for some PDFs (see attached one\ngenerated by PS printer/Ghostscript) under the\nfollowing circumstances:\n- page is in landscape format\n- setSortByPosition is true\n\nExtraction works fine if page is in portrait format.\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1410876&file_id=164169\ntestpdfbox.pdf (application/pdf), 5442 bytes\nsample PDF (1 page in landscape)"
    ],
    [
        "PDFBOX-1483",
        "PDFBOX-174",
        "java.util.zip.ZipException: unknown compression method Exception appeared when using PDFBox from a JRuby script. Same behaviour when processing the same offending PDF with PrintPage.java (in examples):\r\n\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nDec 27, 2012 9:16:46 PM org.apache.pdfbox.filter.FlateFilter decode\r\nSEVERE: FlateFilter: stop reading corrupt stream due to a DataFormatException\r\nException in thread \"main\" java.io.IOException\r\n\tat org.apache.pdfbox.filter.FlateFilter.decode(FlateFilter.java:138)\r\n\tat org.apache.pdfbox.cos.COSStream.doDecode(COSStream.java:301)\r\n\tat org.apache.pdfbox.cos.COSStream.doDecode(COSStream.java:221)\r\n\tat org.apache.pdfbox.cos.COSStream.getUnfilteredStream(COSStream.java:156)\r\n\tat org.apache.pdfbox.pdfparser.PDFStreamParser.<init>(PDFStreamParser.java:108)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:253)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:237)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:217)\r\n\tat org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:119)\r\n\tat org.apache.pdfbox.examples.util.PrintPage.printPage(PrintPage.java:64)\r\n\tat org.apache.pdfbox.examples.util.PrintPage.main(PrintPage.java:39)\r\nCaused by: java.util.zip.DataFormatException: unknown compression method\r\n\tat java.util.zip.Inflater.inflateBytes(Native Method)\r\n\tat java.util.zip.Inflater.inflate(Inflater.java:238)\r\n\tat java.util.zip.Inflater.inflate(Inflater.java:256)\r\n\tat org.apache.pdfbox.filter.FlateFilter.decompress(FlateFilter.java:169)\r\n\tat org.apache.pdfbox.filter.FlateFilter.decode(FlateFilter.java:98)\r\n\t... 10 more",
        "NullPointerException in Invoke.process [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1503206\nOriginally submitted by braine on 2006-06-08 15:45.\n\nUsing PDFBox version: PDFBox-0.7.2\n\nFor the attached file: BenefitsTable.pdf\n\nI'm getting a NullPointerException:\n\nat\norg.pdfbox.util.operator.pagedrawer.Invoke.process(Invoke.java:84)\nat\norg.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:494)\nat\norg.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:207)\nat\norg.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:160)\nat\norg.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:97)\nat\norg.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:658)\nat DisplayPDF.displayFile(DisplayPDF.java:152)\n    :\n    :\n    :\n\n-----------------------------------------------------\nI get a different exception with the daily builds for\n\"08-Jun-2006 01:08 12.0M\" and \"23-May-2006 20:07 11.8M\".\n\nBoth versions die for all PDF files with the following:\n\nException in thread \"AWT-EventQueue-0\"\njava.lang.NoClassDefFoundError: org/fontbox/afm/AFMParser\nat org.pdfbox.pdmodel.font.PDFont.getAFM(PDFont.java:347)\nat\norg.pdfbox.pdmodel.font.PDFont.getAverageFontWidthFromAFMFile(PDFont.java:310)\nat\norg.pdfbox.pdmodel.font.PDSimpleFont.getAverageFontWidth(PDSimpleFont.java:231)\nat\norg.pdfbox.util.PDFStreamEngine.showString(PDFStreamEngine.java:265)\nat\norg.pdfbox.util.operator.ShowText.process(ShowText.java:64)\nat\norg.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:441)\nat\norg.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:204)\nat\norg.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:163)\nat\norg.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:104)\nat\norg.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:657)\nat DisplayPDF.displayFile(DisplayPDF.java:152)\n    :\n    :\n    :\n\n-----------------------------------------------------\n\nAny help for version 0.7.2 would be greatly appreciated.  \n\nI assume the current problem with the daily builds is\ntemporary and will eventually be resolved.  Although if\nI need to do something to fix that problem as well, I'd\nbe glad to hear about it.\n\nBob Braine\n\n[comment on SourceForge]\nOriginally sent by stefan222.\nLogged In: YES \nuser_id=1116775\n\nGot the same exceptionin 0.7.3 RELEASE:\n\nC:\\Temp\\PDFBox-0.7.3\\lib>java -classpath PDFBox-0.7.3.jar\norg.pdfbox.PDFReader\nException in thread \"AWT-EventQueue-0\"\njava.lang.NoClassDefFoundError: org/fontbox/afm/FontMetric\n        at\norg.pdfbox.pdmodel.font.PDFont.getAFM(PDFont.java:334)\n        at\norg.pdfbox.pdmodel.font.PDSimpleFont.getFontHeight(PDSimpleFont.java:\n104)\n        at\norg.pdfbox.util.PDFStreamEngine.showString(PDFStreamEngine.java:336)\n        at\norg.pdfbox.util.operator.ShowTextGlyph.process(ShowTextGlyph.java:80)\n\n        at\norg.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:\n452)\n        at\norg.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java\n:215)\n        at\norg.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:17\n4)\n        at\norg.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:104)\n        at\norg.pdfbox.pdfviewer.PDFPagePanel.paint(PDFPagePanel.java:95)\n        at javax.swing.JComponent.paintChildren(Unknown Source)\n        at javax.swing.JComponent.paint(Unknown Source)\n        at javax.swing.JComponent.paintChildren(Unknown Source)\n        at javax.swing.JComponent.paint(Unknown Source)\n        at javax.swing.JComponent.paintChildren(Unknown Source)\n        at javax.swing.JComponent.paint(Unknown Source)\n        at javax.swing.JViewport.paint(Unknown Source)\n        at javax.swing.JComponent.paintChildren(Unknown Source)\n        at javax.swing.JComponent.paint(Unknown Source)\n        at javax.swing.JComponent.paintChildren(Unknown Source)\n        at javax.swing.JComponent.paint(Unknown Source)\n        at javax.swing.JComponent.paintChildren(Unknown Source)\n        at javax.swing.JComponent.paint(Unknown Source)\n        at javax.swing.JLayeredPane.paint(Unknown Source)\n        at javax.swing.JComponent.paintChildren(Unknown Source)\n        at javax.swing.JComponent.paint(Unknown Source)\n        at\njavax.swing.JComponent.paintWithOffscreenBuffer(Unknown Source)\n        at\njavax.swing.JComponent.paintDoubleBuffered(Unknown Source)\n        at javax.swing.JComponent._paintImmediately(Unknown\nSource)\n        at javax.swing.JComponent.paintImmediately(Unknown\nSource)\n        at\njavax.swing.RepaintManager.paintDirtyRegions(Unknown Source)\n        at\njavax.swing.SystemEventQueueUtilities$ComponentWorkRequest.run(Unknow\nn Source)\n        at java.awt.event.InvocationEvent.dispatch(Unknown\nSource)\n        at java.awt.EventQueue.dispatchEvent(Unknown Source)\n        at\njava.awt.EventDispatchThread.pumpOneEventForHierarchy(Unknown\nSource)\n\n        at\njava.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown\nSource)\n        at java.awt.EventDispatchThread.pumpEvents(Unknown\nSource)\n        at java.awt.EventDispatchThread.pumpEvents(Unknown\nSource)\n        at java.awt.EventDispatchThread.run(Unknown Source)\n\nKind regards,\nStefan"
    ],
    [
        "PDFBOX-2029",
        "PDFBOX-466",
        "PDDocument.load(Inputstream) throws IOException, when the inputstream is from a word document ",
        "error parsing files generated by crystal reports This is with the latest from svn, Revision: 773978\r\n\r\nFrom a sample of 13304 pdf documents generated in a very wide variety of ways, I got 200 exceptions with the stack trace,\r\n\r\nCaused by: java.io.IOException: expected='obj' actual='000' org.apache.pdfbox.io.PushBackInputStream@1049d3\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:471)\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:169)\r\n\tat message_analyzer.extractor.PDFExtractor.getContent(PDFExtractor.java:32)\r\n\t... 2 more\r\n\r\nI can't give an example file, but the pdfs are all generated by crystal reports."
    ],
    [
        "PDFBOX-921",
        "PDFBOX-1815",
        "NumberFormatException when parsing a type1 font Martijn Brinkers reported this issue on dev@pdfbox [1]. A NumberFormatException can occur if the header of an embedded type1 font wasn't malformed.\r\n\r\nThe pdf attached to PDFBOX-816 triggers that exception.\r\n\r\n[1] http://markmail.org/message/xxquw7om7uvlf5bz",
        "Suggestion: close files in COSStream Close file objects in COSStream.java to improve gc, see attached patch"
    ],
    [
        "PDFBOX-390",
        "PDFBOX-2370",
        "org.pdfbox.filter.ASCIIHexFilter does not skip Whitespace org.pdfbox.filter.ASCIIHexFilter does not skip Whitespace\n\nAccording to the Specification (pdf_reference_1-7.pdf) all Whitespace\nCharacters between the ASCII-Hex values have to be skipped (see 3.3.1\nASCIIHexDecode Filter).\n\nThe 0.8.0-incubator source decodes (or attempts to decode) those Whitespace\nCharacters and as a result the byte values are wrong (all characters that\nare not [0-9a-f] result in -1, but processing does continue).\nThis causes an invalid byte Stream.\n\nThe ASCIIHexDecode Filter Section also defines the EOD end Character of the\nByte Steam as '>' which might ease the parsing of inline Images.\n(The EI Operator should follow the EOD in case of an inline Image).\n\nExample for ASCII-Hex encoded value, copied from the Spec:\nFF CE A3 7C 5B 3F 28 16 0A 02 00 02 0A 16 28 3F 5B 7C A3 CE FF >\n\n\nI did fix the problem to be able to continue with my work.\nI paste the changed code here as a hint that might help to fix the bug.\n\npublic class ASCIIHexFilter\n  implements Filter\n{\n\n /**\n  * Whitespace\n  *   0  0x00  Null (NUL)\n  *   9  0x09  Tab (HT)\n  *  10  0x0A  Line feed (LF)\n  *  12  0x0C  Form feed (FF)\n  *  13  0x0D  Carriage return (CR)\n  *  32  0x20  Space (SP)  \n  */\n  protected boolean isWhitespace(int c) {\n    return c == 0 || c == 9 || c == 10 || c == 12 || c == 13 || c == 32;\n  }\n  \n  protected boolean isEOD(int c) {\n    return (c == 62); // '>' - EOD\n  }\n\n  /**\n   * {@inheritDoc}\n   */\n  public void decode(InputStream compressedData, OutputStream result, COSDictionary options, int filterIndex) throws IOException {\n    int value = 0;\n    int firstByte = 0;\n    int secondByte = 0;\n    while ((firstByte = compressedData.read()) != -1) {\n      \n      // always after first char\n      while(isWhitespace(firstByte))\n        firstByte = compressedData.read();\n\n      if(isEOD(firstByte))\n        break;\n      \n      if(REVERSE_HEX[firstByte] == -1)\n        System.out.println(\"Invalid Hex Code; int: \" + firstByte + \" char: \" + (char) firstByte);\n\n      value = REVERSE_HEX[firstByte] * 16;\n      secondByte = compressedData.read();\n      \n      if(isEOD(secondByte)) {\n        // second value behaves like 0 in case of EOD\n        result.write(value);\n        break;\n      }\n\n      if(secondByte >= 0) {\n        if(REVERSE_HEX[secondByte] == -1)\n          System.out.println(\"Invalid Hex Code; int: \" + secondByte + \" char: \" + (char) secondByte);\n\n        value += REVERSE_HEX[secondByte];\n      }\n      result.write(value);\n    }\n    \n    result.flush();\n  }\n\n// .....................................................\n// other code remains unchanged\n\n\n\n",
        "Move caching outside of PDResources *Note:* This issue is based on a discussion which occurred regarding PDFBOX-2301 but is actually a separate issue.\r\n\r\nCurrently we cache the page resources in PDResources which belongs to a specific PDPage. This causes two problems, 1) users who want to hold many PDPage objects in memory will have high memory use (but this is often by accident*). 2) By caching resources in PDPage we only get to keep that cache for the lifetime of the page, which e.g. in PDFRenderer is a single page only. That means that a font which appears on 40 pages has to be parsed 40 times, which causes slow running times, but also memory thrashing as objects are destroyed frequently only to be re-created.\r\n\r\nWhat PDFRenderer really needs is not page-wide caching but document-wide caching, so that it can cache fonts, cmaps, color profiles, etc. only once. But that won't work for images, because they're too large. What we're beginning to realise is that caching is use-case specific and probably shouldn't be built-in to PDFBox's pdmodel. Instead we should removing resource caching from PDPage/PDResources and implement custom caching in PDFRenderer and other downstream classes such as PDFTextStripper. I'll happily volunteer myself. The existing high-level PDFBox APIs will continue to \"just work\" and power users will get a level of control that they appreciate.\r\n\r\nThis strategy could be enhanced by removing memory-hungry methods on PDResources such as getFonts() and getXObjects() which force all resources of a particular type to be loaded, whether or not they are needed, or actually used in the content stream. They would be replaced by methods to retrieve a single resource, e.g. getFont(name).\r\n\r\n---\r\n\r\n\\* There probably isn't a legitimate use case for 1) any more, we've solved the issues which we used to have with image caching (in fact, the clearCache() method actually no longer needs to be called by PDFRenderer, though it currently is). The real problem is that it's easy to accidentally retain PDPage objects, the PDDocument#getDocumentCatalog().getAllPages() method is dangerous as looping over it will cause pages to be retained during processing, like so:\r\n\r\n{code}\r\nfor (PDPage page : document.getDocumentCatalog().getAllPages()) // java.util.List\r\n{\r\n     // ... this is idiomatic in PDFBox 1.8\r\n} \r\n// List returned by getAllPages() kept in scope until here (bad)\r\n{code}\r\n\r\nI added of couple of methods a while ago to avoid this by fetching each PDPage one at a time, and this is now used internally in PDFBox to avoid the memory problems we used to have:\r\n\r\n{code}\r\nfor (int i = 0; i < document.getNumberOfPages(); i++)\r\n{\r\n    PDPage page = document.getPage(i);\r\n    // ... this is the new 2.0 way\r\n    // current page falls out of scope here (good)\r\n}\r\n{code}\r\n\r\nTo solve this problem, we could change getAllPages() so that instead of returning a List it returns an Iterator<PDPage>, which would provide a nicer API than getPage(int) and most existing code will continue to work. This is also an opportunity to also fix type safety issues due to PDPageNode and incorrect handling of the page tree (this is similar to the issue we had recently with the acroform field tree)."
    ],
    [
        "PDFBOX-45",
        "PDFBOX-3175",
        "Support incremental save [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1157431\nOriginally submitted by purplish_cat on 2005-03-05 12:28.\n\n\nAfter opening a PDF file and changing objects out of it, \nallow to save the changes incrementally to the same file \ninstead of creating a completely new file.\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nSee forum thread at\n\nhttps://sourceforge.net/forum/message.php?msg_id=3032112",
        "PDFTextStreamEngine probably miscalculates text height When parsing a PDF document, TextPosition is created with constant text height, about 2 time smaller than character width, regardless of font size.\r\nThe following workaround to calculate dyDisplay fixes the issue:\r\n\r\n        float verticalScaling = 1/1000f;\r\n        if (font instanceof PDType3Font) {\r\n            Matrix fontMatrix = font.getFontMatrix();\r\n            verticalScaling = fontMatrix.getValue(1, 1);\r\n        }\r\n        float dyDisplay = bbox.getHeight() * fontSize * verticalScaling;\r\n"
    ],
    [
        "PDFBOX-2255",
        "PDFBOX-1385",
        "Text not rendered bold  File from PDFBOX-265\r\n\r\njava -jar ~/pdf-box-svn/app/target/pdfbox-app-2.0.0-SNAPSHOT.jar PDFToImage PDFBOX265-problem.pdf",
        "Proposal for a PD tree that represents a tree based on arrays. Attached is a proposal for a PD tree that represents a tree that is based on arrays (such as RBGroups).\r\nThe required COSArrayList and COSBaseConverter can be found in issue #PDFBOX-1383\r\nIt requires Java 1.6 (It might be enough to remove the @Override annotations for Java 1.5 compatibility.)"
    ],
    [
        "PDFBOX-1426",
        "PDFBOX-802",
        "JVM crashes when trying to process the attached pdf's #\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x6d703bf9, pid=5384, tid=4788\r\n#\r\n# JRE version: 6.0_18-b07\r\n# Java VM: Java HotSpot(TM) Server VM (16.0-b13 mixed mode windows-x86 )\r\n# Problematic frame:\r\n# C  [fontmanager.dll+0x13bf9]\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://java.sun.com/webapps/bugreport/crash.jsp\r\n# The crash happened outside the Java Virtual Machine in native code.\r\n# See problematic frame for where to report the bug.\r\n#\r\n\r\n---------------  T H R E A D  ---------------\r\n\r\nCurrent thread (0x6a057400):  JavaThread \"ajp-127.0.0.1-8009-11\" daemon [_thread_in_native, id=4788, stack(0x6cf10000,0x6cf60000)]\r\n\r\nsiginfo: ExceptionCode=0xc0000005, reading address 0x00000010\r\n\r\nRegisters:\r\nEAX=0x00000000, EBX=0x00000000, ECX=0x0000000a, EDX=0x69b1c6c8\r\nESP=0x6cf5e89c, EBP=0x6cf5e8b4, ESI=0x6aadfdd0, EDI=0x6aadfdd0\r\nEIP=0x6d703bf9, EFLAGS=0x00010246\r\n\r\nTop of Stack: (sp=0x6cf5e89c)\r\n0x6cf5e89c:   00000000 6aadfdd0 636d6170 6aadfdd0\r\n0x6cf5e8ac:   6d703d33 685e4130 6cf5e924 6d6f3ced\r\n0x6cf5e8bc:   6aadfdd0 00000062 00000000 6cf5e920\r\n0x6cf5e8cc:   6aadfdd0 685e4130 00000001 00000000\r\n0x6cf5e8dc:   00000007 00000000 00000000 00000000\r\n0x6cf5e8ec:   00000000 6a8a3840 00000000 00000000\r\n0x6cf5e8fc:   6a8a3c98 00000000 00000000 00000000\r\n0x6cf5e90c:   6a8a3838 00000000 00000000 00000000 \r\n\r\nInstructions: (pc=0x6d703bf9)\r\n0x6d703be9:   75 51 57 68 70 61 6d 63 56 e8 6f fd ff ff 6a 00\r\n0x6d703bf9:   ff 70 10 ff 70 0c ff b6 88 00 00 00 ff b6 90 00 \r\n\r\n\r\nStack: [0x6cf10000,0x6cf60000],  sp=0x6cf5e89c,  free space=13a6cf5e3d8k\r\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\r\nC  [fontmanager.dll+0x13bf9]\r\nC  [fontmanager.dll+0x3ced]\r\nC  [fontmanager.dll+0x3da3]\r\n\r\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\r\nj  sun.font.FileFont.getGlyphImage(JI)J+0\r\nJ  sun.font.FileFontStrike.getGlyphMetrics(IZ)Ljava/awt/geom/Point2D$Float;\r\nJ  sun.font.FileFontStrike.getGlyphMetrics(I)Ljava/awt/geom/Point2D$Float;\r\nJ  sun.font.StandardGlyphVector.initPositions()V\r\nJ  sun.font.GlyphList.setFromGlyphVector(Lsun/java2d/loops/FontInfo;Ljava/awt/font/GlyphVector;FF)V\r\nJ  sun.java2d.pipe.GlyphListPipe.drawGlyphVector(Lsun/java2d/SunGraphics2D;Ljava/awt/font/GlyphVector;FF)V\r\nj  sun.java2d.pipe.ValidatePipe.drawGlyphVector(Lsun/java2d/SunGraphics2D;Ljava/awt/font/GlyphVector;FF)V+17\r\nJ  sun.java2d.SunGraphics2D.drawGlyphVector(Ljava/awt/font/GlyphVector;FF)V\r\nj  org.apache.pdfbox.pdmodel.font.PDSimpleFont.writeFont(Ljava/awt/Graphics2D;Ljava/awt/geom/AffineTransform;FFLjava/awt/font/GlyphVector;)V+63\r\nj  org.apache.pdfbox.pdmodel.font.PDSimpleFont.drawString(Ljava/lang/String;[ILjava/awt/Graphics;FLjava/awt/geom/AffineTransform;FF)V+253\r\nj  org.apache.pdfbox.pdfviewer.PageDrawer.processTextPosition(Lorg/apache/pdfbox/util/TextPosition;)V+436\r\nJ  org.apache.pdfbox.util.PDFStreamEngine.processEncodedText([B)V\r\nJ  org.apache.pdfbox.util.operator.ShowTextGlyph.process(Lorg/apache/pdfbox/util/PDFOperator;Ljava/util/List;)V\r\nJ  org.apache.pdfbox.util.PDFStreamEngine.processSubStream(Lorg/apache/pdfbox/cos/COSStream;)V\r\nj  org.apache.pdfbox.util.PDFStreamEngine.processSubStream(Lorg/apache/pdfbox/pdmodel/PDPage;Lorg/apache/pdfbox/pdmodel/PDResources;Lorg/apache/pdfbox/cos/COSStream;)V+20\r\nj  org.apache.pdfbox.util.PDFStreamEngine.processStream(Lorg/apache/pdfbox/pdmodel/PDPage;Lorg/apache/pdfbox/pdmodel/PDResources;Lorg/apache/pdfbox/cos/COSStream;)V+43\r\nj  org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(Ljava/awt/Graphics;Lorg/apache/pdfbox/pdmodel/PDPage;Ljava/awt/Dimension;)V+80\r\nj  org.apache.pdfbox.pdmodel.PDPage.convertToImage(II)Ljava/awt/image/BufferedImage;+200\r\nj  org.apache.pdfbox.pdmodel.PDPage.convertToImage()Ljava/awt/image/BufferedImage;+6\r\nj  com.otgs.ecom.utils.PdfProcessing.getPageAsImage(I)Ljava/awt/image/BufferedImage;+29\r\nj  com.otgs.ecom.utils.ThumbnailGenerator.getPreviewForPDF([B)[B+21\r\nj  com.omc.ecom.customer.db.iphone.IAttachment.setThumbnail([B)V+59\r\nj  com.omc.ecom.customer.db.iphone.IAttachment.setImage([BZ)V+14\r\nj  com.omc.ecom.customer.db.iphone.IAttachment.setCompressImage([B)V+3\r\nj  com.omc.ecom.service.impl.UploadAttachService.importUploadAttachments(Lcom/otgs/ecom/base/dbaccess/UserInfo;IILcom/oreilly/servlet/MultipartRequest;Ljava/lang/String;)V+727\r\nj  com.otgs.ecom.web.ExpenseReports.Expenses.Attachments.UploadAttachController.uploadImport(Ljavax/servlet/http/HttpServletRequest;Lcom/otgs/ecom/base/dbaccess/UserInfo;II)V+75\r\nj  com.otgs.ecom.web.ExpenseReports.Expenses.Attachments.UploadAttachController.handleRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;+319\r\nj  org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;)Lorg/springframework/web/servlet/ModelAndView;+6\r\nj  org.springframework.web.servlet.DispatcherServlet.doDispatch(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+279\r\nj  org.springframework.web.servlet.DispatcherServlet.doService(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+231\r\nj  org.springframework.web.servlet.FrameworkServlet.processRequest(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+111\r\nj  org.springframework.web.servlet.FrameworkServlet.doPost(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+3\r\nj  javax.servlet.http.HttpServlet.service(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V+139\r\nj  javax.servlet.http.HttpServlet.service(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V+30\r\nj  org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V+374\r\nj  org.apache.catalina.core.ApplicationFilterChain.doFilter(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V+101\r\nj  org.apache.catalina.core.StandardWrapperValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V+778\r\nJ  org.apache.catalina.core.StandardContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V\r\nj  org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V+356\r\nj  org.jboss.web.tomcat.security.JaccContextValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V+42\r\nj  org.apache.catalina.core.StandardHostValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V+64\r\nj  org.apache.catalina.valves.ErrorReportValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V+6\r\nj  org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V+35\r\nj  org.apache.catalina.core.StandardEngineValve.invoke(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V+42\r\nj  org.apache.catalina.connector.CoyoteAdapter.service(Lorg/apache/coyote/Request;Lorg/apache/coyote/Response;)V+157\r\nJ  org.apache.coyote.ajp.AjpAprProcessor.process(J)Z\r\nj  org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler.process(J)Lorg/apache/tomcat/util/net/AprEndpoint$Handler$SocketState;+39\r\nj  org.apache.tomcat.util.net.AprEndpoint$Worker.run()V+147\r\nj  java.lang.Thread.run()V+11\r\nv  ~StubRoutines::call_stub\r\n\r\n---------------  P R O C E S S  ---------------\r\n\r\nJava Threads: ( => current thread )\r\n  0x68df6400 JavaThread \"RMI RenewClean-[127.0.0.1:1098]\" daemon [_thread_blocked, id=5140, stack(0x6e4f0000,0x6e540000)]\r\n  0x6857a400 JavaThread \"JBoss System Threads(1)-76\" daemon [_thread_blocked, id=2284, stack(0x6b6d0000,0x6b720000)]\r\n  0x6873dc00 JavaThread \"RMI TCP Connection(679)-127.0.0.1\" daemon [_thread_in_native, id=2268, stack(0x6ea40000,0x6ea90000)]\r\n  0x78095800 JavaThread \"RMI TCP Connection(685)-127.0.0.1\" daemon [_thread_in_native, id=4820, stack(0x6e9f0000,0x6ea40000)]\r\n  0x78095400 JavaThread \"RMI TCP Connection(677)-127.0.0.1\" daemon [_thread_in_native, id=2680, stack(0x6e9a0000,0x6e9f0000)]\r\n  0x69d4b400 JavaThread \"RMI TCP Connection(689)-127.0.0.1\" daemon [_thread_in_native, id=5688, stack(0x6e950000,0x6e9a0000)]\r\n  0x69502400 JavaThread \"RMI TCP Connection(682)-127.0.0.1\" daemon [_thread_in_native, id=332, stack(0x6e900000,0x6e950000)]\r\n  0x696e3400 JavaThread \"RMI TCP Connection(683)-127.0.0.1\" daemon [_thread_in_native, id=4372, stack(0x6e8b0000,0x6e900000)]\r\n  0x78043400 JavaThread \"RMI TCP Connection(687)-127.0.0.1\" daemon [_thread_in_native, id=4076, stack(0x6e860000,0x6e8b0000)]\r\n  0x696e3800 JavaThread \"RMI TCP Connection(691)-127.0.0.1\" daemon [_thread_in_native, id=5180, stack(0x6e630000,0x6e680000)]\r\n  0x6af8f400 JavaThread \"RMI TCP Connection(695)-127.0.0.1\" daemon [_thread_in_native, id=3800, stack(0x6e770000,0x6e7c0000)]\r\n  0x687af400 JavaThread \"RMI TCP Connection(693)-127.0.0.1\" daemon [_thread_in_native, id=4972, stack(0x6e720000,0x6e770000)]\r\n  0x78035800 JavaThread \"RMI TCP Connection(694)-127.0.0.1\" daemon [_thread_in_native, id=892, stack(0x6e680000,0x6e6d0000)]\r\n  0x6a628400 JavaThread \"JBoss System Threads(1)-75\" daemon [_thread_blocked, id=2596, stack(0x6e5e0000,0x6e630000)]\r\n  0x69a94800 JavaThread \"JBoss System Threads(1)-73\" daemon [_thread_blocked, id=4920, stack(0x6e540000,0x6e590000)]\r\n  0x69f2b800 JavaThread \"JBoss System Threads(1)-72\" daemon [_thread_blocked, id=4600, stack(0x6e220000,0x6e270000)]\r\n  0x69027400 JavaThread \"JBoss System Threads(1)-71\" daemon [_thread_blocked, id=1684, stack(0x6e0e0000,0x6e130000)]\r\n  0x780de400 JavaThread \"RMI TCP Connection(697)-127.0.0.1\" daemon [_thread_in_native, id=2360, stack(0x6e4a0000,0x6e4f0000)]\r\n  0x6824cc00 JavaThread \"RMI TCP Connection(idle)\" daemon [_thread_blocked, id=5736, stack(0x6e450000,0x6e4a0000)]\r\n  0x69770400 JavaThread \"RMI TCP Connection(idle)\" daemon [_thread_blocked, id=2404, stack(0x6e270000,0x6e2c0000)]\r\n  0x6a9aa800 JavaThread \"JBoss System Threads(1)-70\" daemon [_thread_blocked, id=3288, stack(0x6e180000,0x6e1d0000)]\r\n  0x685f1800 JavaThread \"JBoss System Threads(1)-69\" daemon [_thread_blocked, id=5460, stack(0x6e1d0000,0x6e220000)]\r\n  0x68246800 JavaThread \"JBoss System Threads(1)-68\" daemon [_thread_blocked, id=4708, stack(0x6e130000,0x6e180000)]\r\n  0x68ba2800 JavaThread \"RMI TCP Connection(696)-127.0.0.1\" daemon [_thread_in_native, id=3420, stack(0x6e6d0000,0x6e720000)]\r\n  0x69762000 JavaThread \"ajp-127.0.0.1-8009-23\" daemon [_thread_blocked, id=3120, stack(0x6dff0000,0x6e040000)]\r\n  0x66d20400 JavaThread \"ajp-127.0.0.1-8009-22\" daemon [_thread_blocked, id=5444, stack(0x6dfa0000,0x6dff0000)]\r\n  0x6898a800 JavaThread \"EsamApiServer-3114\" [_thread_in_native, id=1676, stack(0x6e400000,0x6e450000)]\r\n  0x68875c00 JavaThread \"EsamApiServer-2805\" [_thread_in_native, id=4384, stack(0x6e3b0000,0x6e400000)]\r\n  0x680c6800 JavaThread \"EsamApiServer-2781\" [_thread_in_native, id=2788, stack(0x6e360000,0x6e3b0000)]\r\n  0x68526400 JavaThread \"EsamApiServer-2780\" [_thread_in_native, id=5592, stack(0x6e310000,0x6e360000)]\r\n  0x68351400 JavaThread \"EsamApiServer-2779\" [_thread_in_native, id=5888, stack(0x6e2c0000,0x6e310000)]\r\n  0x6a247400 JavaThread \"MultiThreadedHttpConnectionManager cleanup\" daemon [_thread_blocked, id=2484, stack(0x6da00000,0x6da50000)]\r\n  0x68921800 JavaThread \"ajp-127.0.0.1-8009-21\" daemon [_thread_blocked, id=4896, stack(0x6e090000,0x6e0e0000)]\r\n  0x6a9a2400 JavaThread \"ajp-127.0.0.1-8009-20\" daemon [_thread_blocked, id=4792, stack(0x6e040000,0x6e090000)]\r\n  0x68969c00 JavaThread \"Timer-6\" [_thread_blocked, id=4588, stack(0x6daf0000,0x6db40000)]\r\n  0x68ca6400 JavaThread \"ajp-127.0.0.1-8009-19\" daemon [_thread_blocked, id=6048, stack(0x6daa0000,0x6daf0000)]\r\n  0x692b1400 JavaThread \"ajp-127.0.0.1-8009-18\" daemon [_thread_in_native, id=136, stack(0x6da50000,0x6daa0000)]\r\n  0x7948b400 JavaThread \"EsamApiServer-1832\" [_thread_in_native, id=4172, stack(0x6d9b0000,0x6da00000)]\r\n  0x67196400 JavaThread \"EsamApiServer-1065\" [_thread_in_native, id=5644, stack(0x6d7c0000,0x6d810000)]\r\n  0x6982b400 JavaThread \"EsamApiServer-1064\" [_thread_in_native, id=312, stack(0x6d750000,0x6d7a0000)]\r\n  0x68e54400 JavaThread \"EsamApiServer-4998\" [_thread_in_native, id=4760, stack(0x6d5a0000,0x6d5f0000)]\r\n  0x686fd400 JavaThread \"EsamApiServer-4988\" [_thread_in_native, id=2272, stack(0x6b680000,0x6b6d0000)]\r\n  0x6986c400 JavaThread \"Thread-45\" [_thread_in_native, id=3988, stack(0x6d670000,0x6d6c0000)]\r\n  0x68edd400 JavaThread \"Connection listener 2\" daemon [_thread_in_native, id=3652, stack(0x6d620000,0x6d670000)]\r\n  0x6909b800 JavaThread \"AWT-Windows\" daemon [_thread_in_native, id=1812, stack(0x6d550000,0x6d5a0000)]\r\n  0x69380400 JavaThread \"Java2D Disposer\" daemon [_thread_blocked, id=4676, stack(0x6d350000,0x6d3a0000)]\r\n  0x69e4d400 JavaThread \"EsamApiServer-4933\" [_thread_in_native, id=5236, stack(0x6d1a0000,0x6d1f0000)]\r\n  0x69ba0800 JavaThread \"EsamApiServer-4931\" [_thread_in_native, id=3156, stack(0x6d0f0000,0x6d140000)]\r\n  0x69c7c400 JavaThread \"RMI Scheduler(0)\" daemon [_thread_blocked, id=3680, stack(0x6d0a0000,0x6d0f0000)]\r\n  0x6a67f400 JavaThread \"OOB-8,127.0.0.1:4869\" [_thread_blocked, id=4468, stack(0x6b950000,0x6b9a0000)]\r\n  0x6908a400 JavaThread \"EsamApiServer-4904\" [_thread_in_native, id=4040, stack(0x6b900000,0x6b950000)]\r\n  0x69fadc00 JavaThread \"OOB-7,127.0.0.1:4869\" [_thread_blocked, id=4936, stack(0x6b8b0000,0x6b900000)]\r\n  0x671a0400 JavaThread \"OOB-6,127.0.0.1:4869\" [_thread_blocked, id=4568, stack(0x6b860000,0x6b8b0000)]\r\n  0x69436800 JavaThread \"OOB-5,127.0.0.1:4869\" [_thread_blocked, id=4152, stack(0x6b810000,0x6b860000)]\r\n  0x6a18e800 JavaThread \"ajp-127.0.0.1-8009-17\" daemon [_thread_blocked, id=5096, stack(0x6d150000,0x6d1a0000)]\r\n  0x68db8400 JavaThread \"ajp-127.0.0.1-8009-16\" daemon [_thread_blocked, id=4100, stack(0x6bbb0000,0x6bc00000)]\r\n  0x699a9400 JavaThread \"ajp-127.0.0.1-8009-15\" daemon [_thread_blocked, id=5632, stack(0x6bb60000,0x6bbb0000)]\r\n  0x69ac1400 JavaThread \"ajp-127.0.0.1-8009-14\" daemon [_thread_blocked, id=4212, stack(0x6d000000,0x6d050000)]\r\n  0x6931e400 JavaThread \"ajp-127.0.0.1-8009-13\" daemon [_thread_blocked, id=1916, stack(0x6cfb0000,0x6d000000)]\r\n  0x68c5f400 JavaThread \"ajp-127.0.0.1-8009-12\" daemon [_thread_blocked, id=5220, stack(0x6cf60000,0x6cfb0000)]\r\n=>0x6a057400 JavaThread \"ajp-127.0.0.1-8009-11\" daemon [_thread_in_native, id=4788, stack(0x6cf10000,0x6cf60000)]\r\n  0x68cf9400 JavaThread \"ajp-127.0.0.1-8009-10\" daemon [_thread_blocked, id=4776, stack(0x6cec0000,0x6cf10000)]\r\n  0x66f2a400 JavaThread \"ajp-127.0.0.1-8009-9\" daemon [_thread_blocked, id=5972, stack(0x6ce70000,0x6cec0000)]\r\n  0x68430400 JavaThread \"ajp-127.0.0.1-8009-8\" daemon [_thread_in_native, id=3332, stack(0x6ce20000,0x6ce70000)]\r\n  0x689cb400 JavaThread \"ajp-127.0.0.1-8009-7\" daemon [_thread_blocked, id=1904, stack(0x6cdd0000,0x6ce20000)]\r\n  0x686ed800 JavaThread \"ajp-127.0.0.1-8009-6\" daemon [_thread_blocked, id=348, stack(0x6cd80000,0x6cdd0000)]\r\n  0x6957b400 JavaThread \"ajp-127.0.0.1-8009-5\" daemon [_thread_blocked, id=3424, stack(0x6cd30000,0x6cd80000)]\r\n  0x65b20800 JavaThread \"ajp-127.0.0.1-8009-4\" daemon [_thread_blocked, id=5988, stack(0x6cce0000,0x6cd30000)]\r\n  0x69c4bc00 JavaThread \"ajp-127.0.0.1-8009-3\" daemon [_thread_blocked, id=5904, stack(0x6cc90000,0x6cce0000)]\r\n  0x69c4b400 JavaThread \"ajp-127.0.0.1-8009-2\" daemon [_thread_blocked, id=4428, stack(0x6bc30000,0x6bc80000)]\r\n  0x6a706400 JavaThread \"ajp-127.0.0.1-8009-1\" daemon [_thread_blocked, id=5124, stack(0x65ee0000,0x65f30000)]\r\n  0x6604d400 JavaThread \"ajp-127.0.0.1-8009-Acceptor-0\" daemon [_thread_in_native, id=784, stack(0x6cc40000,0x6cc90000)]\r\n  0x6609e400 JavaThread \"ajp-127.0.0.1-8009-CometPoller-7\" daemon [_thread_blocked, id=4596, stack(0x6cbf0000,0x6cc40000)]\r\n  0x68699400 JavaThread \"ajp-127.0.0.1-8009-CometPoller-6\" daemon [_thread_blocked, id=5488, stack(0x6cba0000,0x6cbf0000)]\r\n  0x66e5f000 JavaThread \"ajp-127.0.0.1-8009-CometPoller-5\" daemon [_thread_blocked, id=3932, stack(0x6cb50000,0x6cba0000)]\r\n  0x69790800 JavaThread \"ajp-127.0.0.1-8009-CometPoller-4\" daemon [_thread_blocked, id=4540, stack(0x6cb00000,0x6cb50000)]\r\n  0x68ff2c00 JavaThread \"ajp-127.0.0.1-8009-CometPoller-3\" daemon [_thread_blocked, id=6116, stack(0x6cab0000,0x6cb00000)]\r\n  0x69d74400 JavaThread \"ajp-127.0.0.1-8009-CometPoller-2\" daemon [_thread_blocked, id=1412, stack(0x6ca60000,0x6cab0000)]\r\n  0x6a766400 JavaThread \"ajp-127.0.0.1-8009-CometPoller-1\" daemon [_thread_blocked, id=5876, stack(0x6ca10000,0x6ca60000)]\r\n  0x69421400 JavaThread \"ajp-127.0.0.1-8009-CometPoller-0\" daemon [_thread_blocked, id=1304, stack(0x6c9c0000,0x6ca10000)]\r\n  0x68836800 JavaThread \"ajp-127.0.0.1-8009-Poller-7\" daemon [_thread_in_native, id=3208, stack(0x6c970000,0x6c9c0000)]\r\n  0x68a40400 JavaThread \"ajp-127.0.0.1-8009-Poller-6\" daemon [_thread_in_native, id=2800, stack(0x6c920000,0x6c970000)]\r\n  0x68aa1400 JavaThread \"ajp-127.0.0.1-8009-Poller-5\" daemon [_thread_in_native, id=1776, stack(0x6c8d0000,0x6c920000)]\r\n  0x682f7800 JavaThread \"ajp-127.0.0.1-8009-Poller-4\" daemon [_thread_in_native, id=488, stack(0x6c480000,0x6c4d0000)]\r\n  0x66e64c00 JavaThread \"ajp-127.0.0.1-8009-Poller-3\" daemon [_thread_in_native, id=1800, stack(0x6c430000,0x6c480000)]\r\n  0x6a211400 JavaThread \"ajp-127.0.0.1-8009-Poller-2\" daemon [_thread_in_native, id=5668, stack(0x6c3e0000,0x6c430000)]\r\n  0x68bda400 JavaThread \"ajp-127.0.0.1-8009-Poller-1\" daemon [_thread_in_native, id=780, stack(0x6c390000,0x6c3e0000)]\r\n  0x6a20c400 JavaThread \"ajp-127.0.0.1-8009-Poller-0\" daemon [_thread_in_native, id=4976, stack(0x6c340000,0x6c390000)]\r\n  0x66037400 JavaThread \"http-127.0.0.1-8080-Acceptor-0\" daemon [_thread_in_native, id=964, stack(0x6c2f0000,0x6c340000)]\r\n  0x6921d400 JavaThread \"http-127.0.0.1-8080-Sendfile-0\" daemon [_thread_blocked, id=5556, stack(0x6c2a0000,0x6c2f0000)]\r\n  0x686ca800 JavaThread \"http-127.0.0.1-8080-CometPoller-7\" daemon [_thread_blocked, id=4440, stack(0x6c250000,0x6c2a0000)]\r\n  0x68c96400 JavaThread \"http-127.0.0.1-8080-CometPoller-6\" daemon [_thread_blocked, id=2024, stack(0x6c200000,0x6c250000)]\r\n  0x69f98800 JavaThread \"http-127.0.0.1-8080-CometPoller-5\" daemon [_thread_blocked, id=5788, stack(0x6c1b0000,0x6c200000)]\r\n  0x66ff9400 JavaThread \"http-127.0.0.1-8080-CometPoller-4\" daemon [_thread_blocked, id=4116, stack(0x6c160000,0x6c1b0000)]\r\n  0x68910400 JavaThread \"http-127.0.0.1-8080-CometPoller-3\" daemon [_thread_blocked, id=3884, stack(0x6c110000,0x6c160000)]\r\n  0x6a4f9400 JavaThread \"http-127.0.0.1-8080-CometPoller-2\" daemon [_thread_blocked, id=1052, stack(0x6c0c0000,0x6c110000)]\r\n  0x670abc00 JavaThread \"http-127.0.0.1-8080-CometPoller-1\" daemon [_thread_blocked, id=2892, stack(0x6c070000,0x6c0c0000)]\r\n  0x688b7000 JavaThread \"http-127.0.0.1-8080-CometPoller-0\" daemon [_thread_blocked, id=5928, stack(0x6c020000,0x6c070000)]\r\n  0x6a308400 JavaThread \"http-127.0.0.1-8080-Poller-7\" daemon [_thread_blocked, id=5892, stack(0x6bfd0000,0x6c020000)]\r\n  0x6a479400 JavaThread \"http-127.0.0.1-8080-Poller-6\" daemon [_thread_blocked, id=4064, stack(0x6bf80000,0x6bfd0000)]\r\n  0x687dd800 JavaThread \"http-127.0.0.1-8080-Poller-5\" daemon [_thread_blocked, id=1816, stack(0x6bd30000,0x6bd80000)]\r\n  0x68f9a400 JavaThread \"http-127.0.0.1-8080-Poller-4\" daemon [_thread_blocked, id=5380, stack(0x6bce0000,0x6bd30000)]\r\n  0x6a46f400 JavaThread \"http-127.0.0.1-8080-Poller-3\" daemon [_thread_blocked, id=4696, stack(0x6bc90000,0x6bce0000)]\r\n  0x69308800 JavaThread \"http-127.0.0.1-8080-Poller-2\" daemon [_thread_blocked, id=3072, stack(0x6bb10000,0x6bb60000)]\r\n  0x6a67fc00 JavaThread \"http-127.0.0.1-8080-Poller-1\" daemon [_thread_blocked, id=3836, stack(0x6bac0000,0x6bb10000)]\r\n  0x6a46fc00 JavaThread \"http-127.0.0.1-8080-Poller-0\" daemon [_thread_blocked, id=5228, stack(0x6ba70000,0x6bac0000)]\r\n  0x6a316800 JavaThread \"Thread-5\" [_thread_blocked, id=5192, stack(0x6ba20000,0x6ba70000)]\r\n  0x6a50a000 JavaThread \"JBossLifeThread\" [_thread_blocked, id=3444, stack(0x6b9d0000,0x6ba20000)]\r\n  0x66fe1400 JavaThread \"EsamApiServer\" [_thread_in_native, id=4572, stack(0x6b7c0000,0x6b810000)]\r\n  0x68b4c400 JavaThread \"Thread-25\" [_thread_blocked, id=5796, stack(0x6b770000,0x6b7c0000)]\r\n  0x685c0800 JavaThread \"Thread-24\" [_thread_blocked, id=4260, stack(0x6b720000,0x6b770000)]\r\n  0x693b5800 JavaThread \"Thread-21\" [_thread_blocked, id=2768, stack(0x6b630000,0x6b680000)]\r\n  0x694ba400 JavaThread \"Timer-5\" [_thread_blocked, id=4220, stack(0x6b5e0000,0x6b630000)]\r\n  0x6a0bb800 JavaThread \"Thread-19\" [_thread_blocked, id=5752, stack(0x6b590000,0x6b5e0000)]\r\n  0x697cbc00 JavaThread \"Thread-18\" [_thread_blocked, id=132, stack(0x6b540000,0x6b590000)]\r\n  0x68976400 JavaThread \"OOB-4,127.0.0.1:4869\" [_thread_blocked, id=3432, stack(0x6b4f0000,0x6b540000)]\r\n  0x68aafc00 JavaThread \"OOB-3,127.0.0.1:4869\" [_thread_blocked, id=5916, stack(0x6b4a0000,0x6b4f0000)]\r\n  0x66e81400 JavaThread \"ConnectionValidator\" daemon [_thread_blocked, id=3044, stack(0x6b450000,0x6b4a0000)]\r\n  0x69007c00 JavaThread \"IdleRemover\" daemon [_thread_blocked, id=1760, stack(0x6b400000,0x6b450000)]\r\n  0x69f33400 JavaThread \"Thread-17\" [_thread_blocked, id=2040, stack(0x6b3b0000,0x6b400000)]\r\n  0x68d85400 JavaThread \"PipelineJobScheduler\" [_thread_blocked, id=2560, stack(0x6b360000,0x6b3b0000)]\r\n  0x69fc1c00 JavaThread \"Timer-4,127.0.0.1:4869\" daemon [_thread_blocked, id=1944, stack(0x6b310000,0x6b360000)]\r\n  0x69d20c00 JavaThread \"Timer-3,127.0.0.1:4869\" daemon [_thread_blocked, id=3416, stack(0x6b2c0000,0x6b310000)]\r\n  0x68f63c00 JavaThread \"OOB-2,127.0.0.1:4869\" [_thread_blocked, id=5076, stack(0x6b270000,0x6b2c0000)]\r\n  0x68d6dc00 JavaThread \"OOB-1,127.0.0.1:4869\" [_thread_blocked, id=1732, stack(0x6b220000,0x6b270000)]\r\n  0x69efb400 JavaThread \"Timer-2,127.0.0.1:4869\" daemon [_thread_blocked, id=5072, stack(0x6b1d0000,0x6b220000)]\r\n  0x68f8bc00 JavaThread \"UDP mcast,127.0.0.1:4869\" [_thread_in_native, id=812, stack(0x6b180000,0x6b1d0000)]\r\n  0x69f35c00 JavaThread \"UDP ucast,127.0.0.1:4869\" [_thread_in_native, id=4092, stack(0x6b130000,0x6b180000)]\r\n  0x68845800 JavaThread \"FD_SOCK server socket acceptor,null\" daemon [_thread_in_native, id=3008, stack(0x6b0e0000,0x6b130000)]\r\n  0x69fcfc00 JavaThread \"Timer-1,127.0.0.1:4869\" daemon [_thread_blocked, id=4852, stack(0x6b090000,0x6b0e0000)]\r\n  0x68126400 JavaThread \"Timer-4\" [_thread_blocked, id=5760, stack(0x67eb0000,0x67f00000)]\r\n  0x696eb400 JavaThread \"Timer-3\" [_thread_blocked, id=2996, stack(0x67e60000,0x67eb0000)]\r\n  0x692b5400 JavaThread \"Timer-2\" [_thread_blocked, id=5680, stack(0x67e10000,0x67e60000)]\r\n  0x69684400 JavaThread \"reaper:handler\" daemon [_thread_blocked, id=384, stack(0x67dc0000,0x67e10000)]\r\n  0x68b14400 JavaThread \"reaper:user\" daemon [_thread_blocked, id=4636, stack(0x67d70000,0x67dc0000)]\r\n  0x691d1800 JavaThread \"reaper:template\" daemon [_thread_blocked, id=4264, stack(0x67d20000,0x67d70000)]\r\n  0x68f8b400 JavaThread \"reaper:config\" daemon [_thread_blocked, id=2852, stack(0x67cd0000,0x67d20000)]\r\n  0x68ead400 JavaThread \"org.webmacro.util.ThreadScheduler\" daemon [_thread_blocked, id=2148, stack(0x67c80000,0x67cd0000)]\r\n  0x68a62400 JavaThread \"UILServerILService Accept Thread\" [_thread_in_native, id=4968, stack(0x67c30000,0x67c80000)]\r\n  0x65cfb400 JavaThread \"TimeoutFactory-0\" daemon [_thread_blocked, id=4396, stack(0x67be0000,0x67c30000)]\r\n  0x68b15800 JavaThread \"JCA PoolFiller\" [_thread_blocked, id=2972, stack(0x67b90000,0x67be0000)]\r\n  0x68761400 JavaThread \"Timer-1\" daemon [_thread_blocked, id=1552, stack(0x67b40000,0x67b90000)]\r\n  0x66d8a400 JavaThread \"HSQLDB Timer @1826ac5\" daemon [_thread_blocked, id=2744, stack(0x679f0000,0x67a40000)]\r\n  0x6706e400 JavaThread \"DefaultQuartzScheduler_QuartzSchedulerThread\" [_thread_blocked, id=3308, stack(0x679a0000,0x679f0000)]\r\n  0x689b3400 JavaThread \"DefaultQuartzScheduler_Worker-9\" [_thread_blocked, id=3868, stack(0x67950000,0x679a0000)]\r\n  0x685a3400 JavaThread \"DefaultQuartzScheduler_Worker-8\" [_thread_blocked, id=680, stack(0x67900000,0x67950000)]\r\n  0x683af800 JavaThread \"DefaultQuartzScheduler_Worker-7\" [_thread_blocked, id=5336, stack(0x678b0000,0x67900000)]\r\n  0x68433800 JavaThread \"DefaultQuartzScheduler_Worker-6\" [_thread_blocked, id=3084, stack(0x677d0000,0x67820000)]\r\n  0x68751400 JavaThread \"DefaultQuartzScheduler_Worker-5\" [_thread_blocked, id=2676, stack(0x67780000,0x677d0000)]\r\n  0x68568800 JavaThread \"DefaultQuartzScheduler_Worker-4\" [_thread_blocked, id=3040, stack(0x67730000,0x67780000)]\r\n  0x66396400 JavaThread \"DefaultQuartzScheduler_Worker-3\" [_thread_blocked, id=1920, stack(0x676e0000,0x67730000)]\r\n  0x68601000 JavaThread \"DefaultQuartzScheduler_Worker-2\" [_thread_blocked, id=5676, stack(0x67690000,0x676e0000)]\r\n  0x69126400 JavaThread \"DefaultQuartzScheduler_Worker-1\" [_thread_blocked, id=1628, stack(0x67640000,0x67690000)]\r\n  0x68949800 JavaThread \"DefaultQuartzScheduler_Worker-0\" [_thread_blocked, id=2824, stack(0x675f0000,0x67640000)]\r\n  0x66e21800 JavaThread \"WorkManager(2)-1\" daemon [_thread_blocked, id=148, stack(0x675a0000,0x675f0000)]\r\n  0x69622400 JavaThread \"Thread-6\" daemon [_thread_blocked, id=2700, stack(0x67550000,0x675a0000)]\r\n  0x683b7400 JavaThread \"JBossMQ Cache Reference Softner\" daemon [_thread_blocked, id=2792, stack(0x67860000,0x678b0000)]\r\n  0x671d6400 JavaThread \"ContainerBackgroundProcessor[StandardEngine[jboss.web]]\" daemon [_thread_blocked, id=5196, stack(0x67500000,0x67550000)]\r\n  0x66f58400 JavaThread \"SubscriptionWatchDog\" [_thread_blocked, id=2776, stack(0x66a00000,0x66a50000)]\r\n  0x66d54c00 JavaThread \"ServerSocketRefresh\" daemon [_thread_blocked, id=3440, stack(0x669b0000,0x66a00000)]\r\n  0x66d1ac00 JavaThread \"AcceptorThread#0:3873\" [_thread_in_native, id=292, stack(0x66960000,0x669b0000)]\r\n  0x66da3c00 JavaThread \"ServerSocketRefresh\" daemon [_thread_blocked, id=4752, stack(0x66910000,0x66960000)]\r\n  0x662bb400 JavaThread \"AcceptorThread#0:4446\" [_thread_in_native, id=2764, stack(0x668c0000,0x66910000)]\r\n  0x66146800 JavaThread \"PooledInvokerAcceptor#0-4445\" [_thread_in_native, id=2572, stack(0x66870000,0x668c0000)]\r\n  0x66e88c00 JavaThread \"RMI TCP Accept-4444\" daemon [_thread_in_native, id=4312, stack(0x66820000,0x66870000)]\r\n  0x66e88400 JavaThread \"Listener:4844\" daemon [_thread_in_native, id=1896, stack(0x667d0000,0x66820000)]\r\n  0x66e72400 JavaThread \"Thread-4\" daemon [_thread_blocked, id=1084, stack(0x66780000,0x667d0000)]\r\n  0x66d09800 JavaThread \"Thread-3\" daemon [_thread_blocked, id=2872, stack(0x66730000,0x66780000)]\r\n  0x66c09400 JavaThread \"Listener:4840\" daemon [_thread_in_native, id=1948, stack(0x666e0000,0x66730000)]\r\n  0x660b7400 JavaThread \"JBoss System Threads(1)-2\" daemon [_thread_in_native, id=5172, stack(0x66690000,0x666e0000)]\r\n  0x662f2800 JavaThread \"GC Daemon\" daemon [_thread_blocked, id=4436, stack(0x66640000,0x66690000)]\r\n  0x662f2000 JavaThread \"RMI Reaper\" [_thread_blocked, id=3888, stack(0x665f0000,0x66640000)]\r\n  0x66eabc00 JavaThread \"RMI TCP Accept-1098\" daemon [_thread_in_native, id=1528, stack(0x665a0000,0x665f0000)]\r\n  0x661cfc00 JavaThread \"JBoss System Threads(1)-1\" daemon [_thread_in_native, id=3024, stack(0x66550000,0x665a0000)]\r\n  0x66dd6800 JavaThread \"ScannerThread\" daemon [_thread_blocked, id=3088, stack(0x66460000,0x664b0000)]\r\n  0x66c12400 JavaThread \"Timer-0\" daemon [_thread_blocked, id=5260, stack(0x66410000,0x66460000)]\r\n  0x002a8c00 JavaThread \"DestroyJavaVM\" [_thread_blocked, id=2228, stack(0x00640000,0x00690000)]\r\n  0x65b15800 JavaThread \"Low Memory Detector\" daemon [_thread_blocked, id=4988, stack(0x65e40000,0x65e90000)]\r\n  0x65b13400 JavaThread \"CompilerThread1\" daemon [_thread_blocked, id=1408, stack(0x65df0000,0x65e40000)]\r\n  0x65b0d800 JavaThread \"CompilerThread0\" daemon [_thread_blocked, id=3304, stack(0x65da0000,0x65df0000)]\r\n  0x65b0c000 JavaThread \"Attach Listener\" daemon [_thread_blocked, id=1480, stack(0x65d50000,0x65da0000)]\r\n  0x65b0a800 JavaThread \"Surrogate Locker Thread (CMS)\" daemon [_thread_blocked, id=1456, stack(0x65d00000,0x65d50000)]\r\n  0x623ad400 JavaThread \"Finalizer\" daemon [_thread_blocked, id=1320, stack(0x65ab0000,0x65b00000)]\r\n  0x623abc00 JavaThread \"Reference Handler\" daemon [_thread_blocked, id=2780, stack(0x65a60000,0x65ab0000)]\r\n\r\nOther Threads:\r\n  0x623a9400 VMThread [stack: 0x65a10000,0x65a60000] [id=5344]\r\n  0x65b17800 WatcherThread [stack: 0x65e90000,0x65ee0000] [id=456]\r\n\r\nVM state:not at safepoint (normal execution)\r\n\r\nVM Mutex/Monitor currently owned by a thread: None\r\n\r\nHeap\r\n par new generation   total 29504K, used 10015K [0x037f0000, 0x057f0000, 0x057f0000)\r\n  eden space 26240K,  26% used [0x037f0000, 0x03ed3a50, 0x05190000)\r\n  from space 3264K,  90% used [0x054c0000, 0x057a41e0, 0x057f0000)\r\n  to   space 3264K,   0% used [0x05190000, 0x05190000, 0x054c0000)\r\n concurrent mark-sweep generation total 991232K, used 569428K [0x057f0000, 0x41ff0000, 0x41ff0000)\r\n concurrent-mark-sweep perm gen total 195336K, used 116938K [0x41ff0000, 0x4deb2000, 0x61ff0000)\r\n\r\nDynamic libraries:\r\n0x00400000 - 0x00424000 \tC:\\Java\\jdk1.6.0_18\\bin\\java.exe\r\n0x7c800000 - 0x7c8c3000 \tC:\\WINDOWS\\system32\\ntdll.dll\r\n0x77e40000 - 0x77f42000 \tC:\\WINDOWS\\system32\\kernel32.dll\r\n0x7d1e0000 - 0x7d27c000 \tC:\\WINDOWS\\system32\\ADVAPI32.dll\r\n0x77c50000 - 0x77cf0000 \tC:\\WINDOWS\\system32\\RPCRT4.dll\r\n0x76f50000 - 0x76f63000 \tC:\\WINDOWS\\system32\\Secur32.dll\r\n0x7c340000 - 0x7c396000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\msvcr71.dll\r\n0x6db70000 - 0x6df9b000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\server\\jvm.dll\r\n0x77380000 - 0x77411000 \tC:\\WINDOWS\\system32\\USER32.dll\r\n0x77c00000 - 0x77c49000 \tC:\\WINDOWS\\system32\\GDI32.dll\r\n0x76aa0000 - 0x76acd000 \tC:\\WINDOWS\\system32\\WINMM.dll\r\n0x76290000 - 0x762ad000 \tC:\\WINDOWS\\system32\\IMM32.DLL\r\n0x71bc0000 - 0x71bc8000 \tC:\\WINDOWS\\system32\\rdpsnd.dll\r\n0x771f0000 - 0x77201000 \tC:\\WINDOWS\\system32\\WINSTA.dll\r\n0x77ba0000 - 0x77bfa000 \tC:\\WINDOWS\\system32\\msvcrt.dll\r\n0x71c40000 - 0x71c97000 \tC:\\WINDOWS\\system32\\NETAPI32.dll\r\n0x76b70000 - 0x76b7b000 \tC:\\WINDOWS\\system32\\PSAPI.DLL\r\n0x6d860000 - 0x6d86c000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\verify.dll\r\n0x6d3e0000 - 0x6d3ff000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\java.dll\r\n0x6d340000 - 0x6d348000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\hpi.dll\r\n0x6d8a0000 - 0x6d8af000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\zip.dll\r\n0x6d6c0000 - 0x6d6d3000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\net.dll\r\n0x71c00000 - 0x71c17000 \tC:\\WINDOWS\\system32\\WS2_32.dll\r\n0x71bf0000 - 0x71bf8000 \tC:\\WINDOWS\\system32\\WS2HELP.dll\r\n0x71b20000 - 0x71b61000 \tC:\\WINDOWS\\System32\\mswsock.dll\r\n0x76ed0000 - 0x76efa000 \tC:\\WINDOWS\\system32\\DNSAPI.dll\r\n0x76f70000 - 0x76f77000 \tC:\\WINDOWS\\System32\\winrnr.dll\r\n0x76f10000 - 0x76f3e000 \tC:\\WINDOWS\\system32\\WLDAP32.dll\r\n0x76f80000 - 0x76f85000 \tC:\\WINDOWS\\system32\\rasadhlp.dll\r\n0x6d610000 - 0x6d619000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\management.dll\r\n0x68000000 - 0x68035000 \tC:\\WINDOWS\\system32\\rsaenh.dll\r\n0x7c8d0000 - 0x7d0cf000 \tC:\\WINDOWS\\system32\\SHELL32.dll\r\n0x7d180000 - 0x7d1d2000 \tC:\\WINDOWS\\system32\\SHLWAPI.dll\r\n0x77420000 - 0x77523000 \tC:\\WINDOWS\\WinSxS\\x86_Microsoft.Windows.Common-Controls_6595b64144ccf1df_6.0.3790.4770_x-ww_05FDF087\\comctl32.dll\r\n0x664b0000 - 0x6650a000 \tC:\\WINDOWS\\system32\\hnetcfg.dll\r\n0x71ae0000 - 0x71ae8000 \tC:\\WINDOWS\\System32\\wshtcpip.dll\r\n0x66a50000 - 0x66a6c000 \tC:\\jboss-4.2.3.GA\\bin\\native\\libtcnative-1.dll\r\n0x66a70000 - 0x66a95000 \tC:\\jboss-4.2.3.GA\\bin\\native\\libapr-1.dll\r\n0x66aa0000 - 0x66ba7000 \tC:\\jboss-4.2.3.GA\\bin\\native\\LIBEAY32.dll\r\n0x71bb0000 - 0x71bb9000 \tC:\\WINDOWS\\system32\\WSOCK32.dll\r\n0x66bb0000 - 0x66be2000 \tC:\\jboss-4.2.3.GA\\bin\\native\\SSLEAY32.dll\r\n0x6d6e0000 - 0x6d6e9000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\nio.dll\r\n0x6d840000 - 0x6d848000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\sunmscapi.dll\r\n0x761b0000 - 0x76243000 \tC:\\WINDOWS\\system32\\CRYPT32.dll\r\n0x76190000 - 0x761a2000 \tC:\\WINDOWS\\system32\\MSASN1.dll\r\n0x76cf0000 - 0x76d0a000 \tC:\\WINDOWS\\system32\\iphlpapi.dll\r\n0x76cd0000 - 0x76ce9000 \tC:\\WINDOWS\\system32\\MPRAPI.dll\r\n0x76df0000 - 0x76e24000 \tC:\\WINDOWS\\system32\\ACTIVEDS.dll\r\n0x76dc0000 - 0x76de8000 \tC:\\WINDOWS\\system32\\adsldpc.dll\r\n0x76b80000 - 0x76bae000 \tC:\\WINDOWS\\system32\\credui.dll\r\n0x76a80000 - 0x76a92000 \tC:\\WINDOWS\\system32\\ATL.DLL\r\n0x77670000 - 0x777a9000 \tC:\\WINDOWS\\system32\\ole32.dll\r\n0x7d0e0000 - 0x7d16b000 \tC:\\WINDOWS\\system32\\OLEAUT32.dll\r\n0x76e30000 - 0x76e3c000 \tC:\\WINDOWS\\system32\\rtutils.dll\r\n0x7e020000 - 0x7e02f000 \tC:\\WINDOWS\\system32\\SAMLIB.dll\r\n0x770e0000 - 0x771e8000 \tC:\\WINDOWS\\system32\\SETUPAPI.dll\r\n0x6d7b0000 - 0x6d7b6000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\rmi.dll\r\n0x6d1f0000 - 0x6d33a000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\awt.dll\r\n0x73070000 - 0x73097000 \tC:\\WINDOWS\\system32\\WINSPOOL.DRV\r\n0x6b9a0000 - 0x6b9c4000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\jpeg.dll\r\n0x6d6f0000 - 0x6d744000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\fontmanager.dll\r\n0x6b040000 - 0x6b06f000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\cmm.dll\r\n0x6d500000 - 0x6d523000 \tC:\\Java\\jdk1.6.0_18\\jre\\bin\\dcpr.dll\r\n0x762b0000 - 0x762f9000 \tC:\\WINDOWS\\system32\\COMDLG32.DLL\r\n\r\nVM Arguments:\r\njvm_args: -Xrs -Djava.library.path=C:\\jboss-4.2.3.GA\\bin\\native;C:\\Perl\\site\\bin;C:\\Perl\\bin;C:\\Program Files\\Support Tools\\;C:\\Program Files\\Windows Resource Kits\\Tools\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0;C:\\GSI-TOOLS\\bin;C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn\\VSShell\\Common7\\IDE\\;C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\100\\DTS\\Binn\\;C:\\Java\\jdk1.6.0_18\\bin; -Dprogram.name=run.bat -Xms1000m -Xmx1000m -Xrs -XX:PermSize=128m -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC -XX:+CMSPermGenSweepingEnabled -XX:+CMSClassUnloadingEnabled -XX:-ReduceInitialCardMarks -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 -XX:CompileCommand=exclude,net/sf/saxon/event/ReceivingContentHandler,startElement -Djava.endorsed.dirs=C:\\jboss-4.2.3.GA\\lib\\endorsed \r\njava_command: org.jboss.Main\r\nLauncher Type: SUN_STANDARD\r\n\r\nEnvironment Variables:\r\nJAVA_HOME=C:\\Java\\jdk1.6.0_18\r\nPATH=C:\\jboss-4.2.3.GA\\bin\\native;C:\\Perl\\site\\bin;C:\\Perl\\bin;C:\\Program Files\\Support Tools\\;C:\\Program Files\\Windows Resource Kits\\Tools\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0;C:\\GSI-TOOLS\\bin;C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn\\VSShell\\Common7\\IDE\\;C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\100\\DTS\\Binn\\;C:\\Java\\jdk1.6.0_18\\bin;\r\nOS=Windows_NT\r\nPROCESSOR_IDENTIFIER=x86 Family 16 Model 2 Stepping 3, AuthenticAMD\r\n\r\n\r\n\r\n---------------  S Y S T E M  ---------------\r\n\r\nOS: Windows Server 2003 family Build 3790 Service Pack 2\r\n\r\nCPU:total 2 (4 cores per cpu, 1 threads per core) family 16 model 2 stepping 3, cmov, cx8, fxsr, mmx, sse, sse2, sse3, popcnt, mmxext, 3dnow, 3dnowext, lzcnt, sse4a\r\n\r\nMemory: 4k page, physical 4193500k(1696908k free), swap 6115232k(3935444k free)\r\n\r\nvm_info: Java HotSpot(TM) Server VM (16.0-b13) for windows-x86 JRE (1.6.0_18-b07), built on Dec 17 2009 13:29:37 by \"java_re\" with MS VC++ 7.1 (VS2003)\r\n\r\ntime: Wed Oct 10 16:01:50 2012\r\nelapsed time: 8411 seconds\r\n\r\n",
        "Better handle corrupt/missing %%EOF flags at the end of a file Currently, when the %%EOF flag at the end of the file is missing, an IOException is thrown which produces a stacktrace something like this:\r\njava.io.IOException: Error: Expected to read '%%EOF' instead started reading '%%E^@'\r\n        at org.apache.pdfbox.pdfparser.BaseParser.readExpectedString(BaseParser.java:1090)\r\n        at org.apache.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:463)\r\n        at org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:179)\r\n        at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:859)\r\n        at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:826)\r\n        at org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:751)\r\n\r\nWhile these PDFs are non-conforming, it'd be an improvement to allow them to be read and processed since we're only a few bytes from the end of file anyway.\r\n\r\nThere's existing code which checks to see if what was read was %%EOF and throw an exception if %%EOF wasn't read and we're not at the end of file.  However, this is never reached because readExpectedString() throws an exception before this can happen.  To fix this, I changed readExpectedString() to readString() and left the manual check to see if the proper %%EOF flag was found.  If not, it'll output a warning.  If we're not at the end of the file, we'll still throw an exception.  I've seen corrupted and missing %%EOF flags at the end of a file, but never in the middle.  Since this doesn't seem to happen, if it does the PDF is clearly out of spec, and these issues would be much harder to deal with, throwing an exception still seems like a reasonable thing to do."
    ],
    [
        "PDFBOX-1462",
        "PDFBOX-1128",
        "Use file backed buffer for FlateFilter? org.apache.pdfbox.filter.FlateFilter#decompress can cause OOM (depending on the size of the document and configured heap of course.) Consider using something like http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/io/FileBackedOutputStream.html to constraint memory pressure.\r\n\r\n\r\nBest,\r\nEdoardo",
        "Wrong color space used for DeviceN operator without color space specified I have a PDF that uses a DeviceN color space, but when using the PDFToImage utility I noticed that some of the text comes out as cyan.\r\n\r\nI tracked the issue down to when the scn or SCN operator is used without setting the color space explicitly (ie using the current color space).  I have attached a patch which resolves the issue by reinstating the original (DeviceN) color space after using the alternate color space, otherwise the alternate color space (in this case CMYK) was seen as the current color space and the attribute of 1 for the scn operator, which was meant for the DeviceN color space, is used in the CMYK color space resulting in the cyan.\r\n\r\nI have also attached an example PDF and the result for the PDFToImage conversion."
    ],
    [
        "PDFBOX-1805",
        "PDFBOX-1360",
        "PDFTextStripper, add word segment even if the last word is a space I found that, in some PDFs, not injecting a WordSpacing in a line that is greater than expected for a space in the \"line\" normalization, causes text \"fields\" that should be separated (as they are not really part of the paragraph) to be improperly added to the line of text.  \r\n\r\nIn the attached pdf, i have found that looking at the first line of the first violation of code, that the \"Corrected By\" date is incorrectly added to the same line of Description of Violation.   This is due to the fact that the first line of \"Description of Violation\" ends with a space.   This is due to word wrapping of the paragraph when it was generated and i believe that if the next letter in the line is greater than an expected space, regardless if the last line ends in a space, it should be considered a second segment.\r\n\r\nI suggest removing the following change in PDFTextStripper file (i commented out the last two requirements from the if statement):\r\n{code}\r\n                   //Test if our TextPosition starts after a new word would be expected to start.\r\n                    if (expectedStartOfNextWordX != EXPECTEDSTARTOFNEXTWORDX_RESET_VALUE\r\n                            && expectedStartOfNextWordX < positionX) /* &&\r\n                            //only bother adding a space if the last character was not a space\r\n                            lastPosition.getTextPosition().getCharacter() != null &&\r\n                            !lastPosition.getTextPosition().getCharacter().endsWith( \" \" ) ) */\r\n                    {\r\n                        line.add(WordSeparator.getSeparator());\r\n                    }\r\n{code}",
        "Adding page from one doc to another (as a layer) results in faulty doc Using the process laid out in testLayerImport() of http://java2s.com/Open-Source/Java/PDF/PDFBox-1.4.0/org/apache/pdfbox/util/TestLayerUtility.java.htm , a PDF document is generated that can be viewed in both Adobe Reader X (10.1.3) and SumatraPDF.\r\n\r\nBut when opening some of the tools in Reader X, an error box gets displayed. It warns about a potentially corrupt file and potentially incorrect display\r\n\r\nFor example, opening the resulting PDF, pressing F4 to view the layer utils will trigger this behavior.\r\n\r\nI used page 1 from\r\n\r\n- (1): http://www.enterasys.com/company/literature/a4-ds.pdf\r\n- (2): http://www.tex.ac.uk/tex-archive/info/symbols/comprehensive/symbols-a4.pdf\r\n\r\nrespectively, to create a PDF with page 1 of (1) overlayed with page 1 of (2). \r\nThese are just random Google results. The error was triggered with more concrete files of my own as well\r\n\r\nSince the PDF displays fine on initial load, it wouldn't be so bad if it wasn't exactly the layering I was after (overlaying, toggling display of individual layers)\r\n\r\nI tried different variations:\r\n- created a new document and importPage() from (1)\r\n- did not create a new document but used (1) directly\r\n- a few permutations of adding page/saving/re-loading or not\r\n\r\nAlternatively - is there a way to add a layer/OCG without creating an XObject form off it?\r\n\r\nBest,\r\nTobias"
    ],
    [
        "PDFBOX-2322",
        "PDFBOX-2551",
        "Not Implemented exception when rendering PDF to image The renderer cannot handle the PDF file.\r\n\r\nOccurs on:\r\nPDFRenderer.renderImageWithDPI(0, 96);",
        "Wrong barcode printing for embedded font Couldn't print file with embedded font \"code 128\".  Code for printing:\r\n\r\nPDDocument document = load(new FileInputStream(\"barcode_printing_problem.pdf\"));\r\nPrinterJob printJob = getPrinterJob();\r\nprintJob.setPrintService(getPrinter(\"MY_PRINTER));\r\ndocument.silentPrint(printJob);"
    ],
    [
        "PDFBOX-3000",
        "PDFBOX-1292",
        "Transparency Group issues This is a follow-up issue for transparency group issues from PDFBOX-2423. More details to come.",
        "Rendering of certain documents results in large tracts of blank space - even though contents can be extracted Rendering of certain PDF documents results in large tracts of blank space being shown where text actually exists (the contents can be extracted).\r\n\r\nConfirmed to render correctly when using:\r\nLinux:\r\n- Document Viewer (evince) 3.2.1\r\n- Adobe Reader 9\r\n- Xpdf 3.02\r\nWindows:\r\n- Adobe Reader X\r\n"
    ],
    [
        "PDFBOX-1335",
        "PDFBOX-167",
        "ArrayIndexOutOfBoundsException while loading ttf font \r\nWhile loading TTF font I'm getting exception (below). That font is OpenSans-Regular.ttf from http://www.google.com/webfonts\r\n\r\n\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 931\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadDescriptorDictionary(PDTrueTypeFont.java:360)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:166)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:142)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadTTF(PDTrueTypeFont.java:129)\r\n",
        "wrong words highlighted [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1487217\nOriginally submitted by nobody on 2006-05-12 01:51.\n\nPDFBox appears to have a problem properly highlighting\nwords from the following PDF. I am using a very simple\nservlet to do this, and it works fine for most PDFs.\nWith this one, however, it highlights the wrong words.\nUnfortunately I am not smart enough to figure out what\nis going on myself, so could anybody help me with this?\n\nThe files can be found here:\nhttp://www.impressie.nl/matthijs/PDFHighlight.java\nhttp://www.impressie.nl/matthijs/Rectificatie%20van%20Richtlijn%20Handhaving%20van%20Intellectuele-eigendomsrechten.pdf\n\nMatthijs Bierman\nmatthijs@impressie.nl\n\n[comment on SourceForge]\nOriginally sent by nobody.\nLogged In: NO \n\nThat document is in a password-protected area, so it can't be read by anyone else! I have a similar problem with this doc:\nhttp://www.usc.edu/schools/business/FBE/seminars/papers/AE_4-28-06_FISMAN-parking.pdf\n\n... but I think I've figured this one out. The second page of this document is entirely blank, and checking by hand I can see that the highlights after p1 are all in positions that would be correct if they were one page further on; it appears that the page count isn't being incremented for the blank page. Tracing this back in the code I see this:\n\n            PDStream contentStream = nextPage.getContents();\n            if( contentStream != null )\n            {\n                COSStream contents = contentStream.getStream();\n                processPage( nextPage, contents );\n            }\n\n(PDFTextStripper.java line 255). That's skipping the blank page and giving me the wrong page no, I think - and I guess that the problem can be resolved by moving currentPageNo++ from inside processPage to just above that test.\n\n-- Brian.Ewins@gmail.com"
    ],
    [
        "PDFBOX-2019",
        "PDFBOX-461",
        "Annotations produced by Annotation.java example are not rendered correctly The sample PDF produced by /examples/src/main/java/org/apache/pdfbox/examples/pdmodel/Annotation.java cannot be properly displayed by the pdfbox-app-2.0.0-SNAPSHOT's PDFReader function -- the circle, square, and line annotations are not visible.\r\n\r\nUnknown if this is a problem with the Annotation.java example, the pdfbox-app, or with the library itself.",
        "Disable javadoc creation timestamp I'm optimizing the automatic generation and deployment of the PDFBox web site, and there is a \"Generated by javadoc on ...\" comment in all the generated javadoc files that makes them appear as modified even if no other content is the file is changed. I'd like to set up a regexp replace rule that drops this comment from the generated javadoc files."
    ],
    [
        "PDFBOX-2138",
        "PDFBOX-1240",
        "Corrupted words when using PDFTextStripper >> I am using PDFTextStripper (embedded into another application) to get \r\n>> the raw text of PDFs so far with good results but recently a PDF file \r\n>> has appeared where the output of the PDFTextStripper was corrupted. I \r\n>> got sentences like:\r\n>>\r\n>>    \r\n>>\r\n>> \"There is al o con ern that b nkers may be pushed to misprice risk \r\n>> (No. 6) by the pres ures of c mpetition and an abunda ce of central b \r\n>> nk-provided liquidity.\"\r\n\r\n> Additionally some portions of text appear \r\n> twice in the output: first correctly and then corrupted. I have \r\n> attached an output created with PDFBox's command line options.\r\n> If you compare lines 357- 365 with lines 421-429 you see that it is \r\n> the same paragraph, first ok and then with characters missing. In the \r\n> original source this paragraph is unique.\r\n> The same seems to happen for the other instances where text is corrupted.\r\n\r\nI also tried it directly on the command line with the same results: input and output files are attached.\r\n\r\n",
        "Extract Images from PDF file using PDFBox in C# public class ExtractImage\r\n    {\r\n        private int imageCounter = 1;\r\n        private static string PASSWORD = \"-password\";\r\n        private static string PREFIX = \"-prefix\";\r\n\r\n        public ExtractImage()\r\n        {\r\n\r\n        }\r\n\r\n        public void extractImage(string []args)\r\n        {\r\n            if(args.Length<1||args.Length>4)\r\n            {\r\n                usage();\r\n            }\r\n            else\r\n            {\r\n                string pdfFile = \"\";\r\n                string password = \"\";\r\n                string prefix = null;\r\n                for (int i = 0; i < args.Length; i++)\r\n                {\r\n                    if(args[i]==PASSWORD)\r\n                    {\r\n                        i++;\r\n                        if (i >= args.Length)\r\n                        {\r\n                            usage();\r\n                        }\r\n                        password = args[i];\r\n                    }\r\n                    else if (args[i]==PREFIX)\r\n                    {\r\n                        i++;\r\n                        if(i>=args.Length)\r\n                        {\r\n                            usage();\r\n                        }\r\n                        prefix = args[i];\r\n                    }\r\n                    else\r\n                    {\r\n                        if(pdfFile==null)\r\n                        {\r\n                            pdfFile = args[i];\r\n                        }\r\n                    }\r\n                }\r\n                if(pdfFile==null)\r\n                {\r\n                    usage();\r\n                }\r\n                else\r\n                {\r\n                    if(prefix==null && pdfFile.Length>4)\r\n                    {\r\n                        prefix = pdfFile.Substring(0, pdfFile.Length - 4);\r\n                    }\r\n\r\n                    PDDocument document=null;\r\n                    try\r\n                    {\r\n                        document = PDDocument.load(pdfFile);\r\n                        if( document.isEncrypted() )\r\n                        {\r\n                     \r\n                            StandardDecryptionMaterial spm = new StandardDecryptionMaterial(password);\r\n                            document.openProtection(spm);\r\n                            AccessPermission ap = document.getCurrentAccessPermission();\r\n                             \r\n                            \r\n                            if( ! ap.canExtractContent() )\r\n                            {\r\n                                    Console.WriteLine(\"Error: You do not have permission to extract images.\" );\r\n                            }\r\n                        }\r\n                     \r\n                        List   pages = document.getDocumentCatalog().getAllPages();\r\n                        java.util.Iterator   iter = pages.iterator();\r\n                        while( iter.hasNext() )\r\n                        {\r\n                            PDPage page = (PDPage)iter.next();\r\n                            PDResources resources = page.getResources();\r\n                            java.util.Map   images = resources.getImages();\r\n                            if( images != null )\r\n                            {\r\n                                Iterator   imageIter = images.keySet().iterator();\r\n                                while( imageIter.hasNext() )\r\n                                {\r\n                                    string   key = (String  )imageIter.next();\r\n                                    PDXObjectImage image = (PDXObjectImage)images.get( key );\r\n                                    string   name = getUniqueFileName( key, image.getSuffix() );\r\n                                    Console.WriteLine( \"Writing image:\" + name );\r\n                                    image.write2file( name );\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception)\r\n                    {\r\n                        \r\n                        throw;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        private string getUniqueFileName(string prefix, string suffix)\r\n        {\r\n            string uniqueName = null;\r\n            java.io.File f = null;\r\n            f = null;\r\n            while (f == null || f.exists())\r\n            {\r\n                uniqueName = prefix + \"-\" + imageCounter;\r\n                f =new File(uniqueName + \".\" + suffix);\r\n                imageCounter++;\r\n            }\r\n            return uniqueName;\r\n        }\r\n\r\n        private void usage()\r\n        {\r\n            Console.Error.WriteLine(\"Usage: java org.pdfbox.ExtractImages [OPTIONS] <PDF file>\\n\" +\r\n                                    \" -password <password> Password to decrypt document\\n\" +\r\n                                    \" -prefix <image-prefix> Image prefix(default to pdf name)\\n\" +\r\n                                    \" <PDF file> The PDF document to use\\n\");\r\n            Environment.Exit(1);\r\n        }\r\n    }\r\n\r\nReference: http://svn.apache.org/repos/asf/pdfbox/trunk/pdfbox/src/main/java/org/apache/pdfbox/ExtractImages.java \r\nI tested but i have a problem.It ran  if(args.Length<1||args.Length>4) and stopped in usage().It loop.Please help me.Many thanks.\r\n                                                   {\r\n                                                       usage();\r\n                                                   }"
    ],
    [
        "PDFBOX-2876",
        "PDFBOX-944",
        "Better support for embedding of simple TrueType fonts PDTrueType font no longer has any non-deprecated methods which support embedding. This is because PDType0Font provides a much better user experience, as Unicode support is usually expected.\r\n\r\nHowever, there are cases where its useful to have simple TrueType embedding but the current code assumes WinAnsiEncoding. Seeing as simple fonts are always tied to an Encoding, I'm going to add a new constructor load(document, inputStream, encoding), which makes this explicit, and will break our reliance on WinAnsiEncoding.",
        "number of pages returns the incorrect number for some PDFs This is a regression bug which appeared between 1.3.1 and 1.4.0, as the former returns the correct page count while the latter does not.  Unfortunately, the PDF which demonstrates this problem is confidential, so I can not attach it here, however I will describe the things which may be causing this problem as best I can.\r\n\r\nThe problem does not occur after using the \"uncompress\" feature of pdftk.  The problem does not occur after using PdfDecompressor from PDFBox.  The original file which was given to me is Linearized.  In Adobe Acrobat Standard -> File -> Properties, it says the Application was \"Adobe Photoshop CS4 Windows\", the PDF Producer was \"Adobe Photoshop for Windows -- Image Conversion Plug-in\" and the PDF Version is 1.7 (Acrobat 8.x).  Fast Web View is set to \"No\".  I suspect that the problem has to do with the fact that it's Lineraized or the fact that it uses ObjStm.  I don't have enough time to trace through this, so I'm either going to revert back to PDFBox 1.3.1 or pre-process all the ObjStm objects, save the uncompressed file, and then process that.  The latter is less efficient, but I think it'll handle more cases.  I just wanted to make sure to open an issue here on JIRA so we can eventually get a proper solution to this problem."
    ],
    [
        "PDFBOX-2581",
        "PDFBOX-2538",
        "Text corruption I use PDFBox 1.8.8 and try to add new text to existing pdf file. The problem is that text added by me is looking compressed for this specific pdf\r\n\r\n \r\n\r\n[original pdf (i think this file is source of problem)|https://www.dropbox.com/s/foeb9raub20lbnx/1.pdf?dl=0]\r\n\r\n(it is working for other pdfs).\r\n\r\n\r\n[pdfbox generated file|https://www.dropbox.com/s/4e5ozksm5ycv7v2/2.pdf?dl=0]\r\n \r\n\r\n \r\n[image of problem with explanation|https://www.dropbox.com/s/8r7hwq4d1i5yuxz/2014-12-23-11-04-14-5937500.png?dl=0]\r\n \r\n\r\nIt was not shown in all originally but i fixed problem with this command (set font display mode)\r\n\r\n{code}\r\ncontent.appendRawCommands(\"0 Tr \");  \r\n{code}\r\n\r\nI was working with pdf matrix and checked almost everything ... and do not see way how may i fix the problem...\r\n{code}\r\ncontent.setTextMatrix(1, 0, 0, 1, 0, 0);\r\n{code}\r\nquestions:\r\n\r\n1) why pdfbox not  ignore  page  font settings and use  default  options of font on page?\r\n\r\n2) what mode was used in my pdf to archive such kind transformation how  i  may  fix   problem  to  show  font   correctly?\r\n\r\n\r\n{code}\r\nprivate static void writePdfBoxStamp(PDDocument document, int page,\r\n        float topLeftX, float topLeftY, float width, float height,\r\n        String text, float  itemFontSize, int[] color, int rotation) throws IOException {\r\n\r\n    PDPage pdfPage = (PDPage) document.getDocumentCatalog().getAllPages().get(page);\r\n    PDPageContentStream content = new PDPageContentStream(document, pdfPage, true, true);\r\n\r\n\r\n    // COSDictionary pageFonts = pdfPage.getResources().getCOSDictionary();\r\n\r\n\r\n    //border draw\r\n    float lineWidth = 2;\r\n\r\n    float bottomLeftX = topLeftX;\r\n    float bottomLeftY = topLeftY - height;\r\n    float topRightX = topLeftX + width;\r\n    float topRightY = topLeftY;\r\n\r\n    float radius = 10;\r\n\r\n    content.setLineWidth(lineWidth);\r\n    content.setStrokingColor(new Color(color[0], color[1], color[2]));\r\n\r\n\r\n    content.setNonStrokingColor(new Color(color[0], color[1], color[2]));\r\n\r\n    PDFont font = PDType1Font.HELVETICA_BOLD;\r\n    int fontSize = (int) itemFontSize;\r\n\r\n\r\n    float linesHeight = font.getFontDescriptor().getFontBoundingBox()\r\n            .getHeight()\r\n            / 1000 * fontSize;\r\n    float txtLineWidth = font.getStringWidth(text)\r\n            / 1000 * fontSize;\r\n\r\n    content.setFont(font, fontSize);\r\n\r\n    content.beginText();\r\n\r\n    content.setFont(font, fontSize);\r\n\r\n    float  posTextX = topLeftX + (width-txtLineWidth)/2;\r\n    float  posTextY = topLeftY  - height/2 - linesHeight/2 + lineWidth;\r\n\r\n\r\n\r\n    if (rotation > 0) {\r\n        int  step = 0;\r\n        // clockwise rotation\r\n        if (rotation == 90) {\r\n            step = 6;\r\n            posTextX = topLeftX + (width + linesHeight)/2 - lineWidth;\r\n            posTextY = topLeftY - (height + txtLineWidth)/2;\r\n        }\r\n        if (rotation == 270) {\r\n            step = -6;\r\n            posTextX = topLeftX + (width - linesHeight/2)/2;\r\n            posTextY = topLeftY - (height - txtLineWidth)/2;\r\n        }\r\n        content.setTextRotation(-step*Math.PI*0.25, posTextX, posTextY);\r\n\r\n    } else {\r\n        content.moveTextPositionByAmount(posTextX,posTextY);\r\n\r\n    }\r\n\r\n    content.appendRawCommands(\"0 Tr \"); //set normal text procession\r\n\r\n    content.drawString(text);\r\n\r\n\r\n    content.endText();\r\n\r\n    content.stroke();\r\n\r\n\r\n    content.close();\r\n}\r\n{code}",
        "avoid \"-1 : Unknown error\" message in preflight e.g. error 4 in PDFBOX-2513\r\n\r\nafter all, we know what the reason is.\r\n\r\nIdeas:\r\n1) create COSStreamException extends IOException in COSStream.java\r\n2) in SinglePageValidationProcess.validateContent() examine the root cause exception type to classify smarter than just ERROR_UNKOWN_ERROR\r\n\r\nany other thoughts?"
    ],
    [
        "PDFBOX-501",
        "PDFBOX-2707",
        "Open a trueType Font PDF, content become square box Dear all,\r\n\r\n    I tried to open a PDF file generated by crystal report XI 3.1. The font is using Courier New. All the content becomes a square. What can I do ?\r\n\r\nRegards,\r\nGabriel.",
        "Remove redundant IOUtils.closeQuietly IOUtils has 4 closeQuietly methods where one with Closeable argument would do."
    ],
    [
        "PDFBOX-170",
        "PDFBOX-1983",
        "Another converting date error with LucenePDFDocument [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1495545\nOriginally submitted by sbartocci on 2006-05-26 06:55.\n\nI'm using Lucene with PDFBox but It seems there is an \nerror in converting date when the CreationDate field \nis a set as text field in Document properties:\n\n(xmp file)\n<rdf:Description rdf:about=''\n  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>\n  <pdf:CreationDate--Text>27/10/2005 \n14:59:39</pdf:CreationDate--Text>\n  <pdf:Producer>Amyuni PDF Converter</pdf:Producer>\n</rdf:Description>\n\ninstead if the field is formatted like this:\n\n(xmp file)\n<rdf:Description rdf:about=''\n  xmlns:xap='http://ns.adobe.com/xap/1.0/'>\n  <xap:CreatorTool>PScript5.dll Version \n5.2.2</xap:CreatorTool>\n  <xap:ModifyDate>2005-09-\n27T15:57:14+02:00</xap:ModifyDate>\n  <xap:CreateDate>2005-09-\n27T15:57:14+02:00</xap:CreateDate>\n</rdf:Description>\n\nthe library works without any exception.\n\nThe exception found is:\n\nError converting date:27/10/2005 14:59:39\n\njava.io.IOException: Error converting date:27/10/2005 \n14:59:39\n at org.pdfbox.util.DateConverter.toCalendar\n(DateConverter.java:237)\n at org.pdfbox.util.DateConverter.toCalendar\n(DateConverter.java:134)\n at org.pdfbox.cos.COSDictionary.getDate\n(COSDictionary.java:704)\n at \norg.pdfbox.pdmodel.PDDocumentInformation.getCreationDa\nte(PDDocumentInformation.java:232)\n at \norg.pdfbox.searchengine.lucene.LucenePDFDocument.addCo\nntent(LucenePDFDocument.java:297)\n at \norg.pdfbox.searchengine.lucene.LucenePDFDocument.getDo\ncument(LucenePDFDocument.java:187)\n\n\n\nBest regards\nStefano",
        "Unable to add TIF images, CCITTFactory not working As used in the AddImageToPDF example, the following line generates an error with tif image:\r\n\r\nPDImageXObject ximage =  CCITTFactory.createFromRandomAccess(document, new RandomAccessFile(new File(imagePath), \"r\"));\r\n\r\njava.io.IOException: Stream was not read\r\n        at org.apache.pdfbox.cos.COSStream.getDecodeResult(COSStream.java:235)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.<init>(PDImageXObject.java:80)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.<init>(PDImageXObject.java:70)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromRandomAccess(CCITTFactory.java:50)"
    ],
    [
        "PDFBOX-3164",
        "PDFBOX-1683",
        "XFDF annotations partially incorrectly applied to existing PDF or exceptions when parsing I am currently investigating in using PDFBox (my tests used PFDBox 2.0RC2) for a small use case \u201estamping\u201c annotations from a given XFDF format (created by Qoppa\u2019s jPDFEditor/jPDFNotes, www.qoppa.com) into a given PDF/A-1b file.\r\n\r\nThis works with a surprisingly minimal set of Java code line \uf04a But: obviously not all XFDF elements are supported and/or there are bugs in reading XFDF up to now. \r\n\r\nI just wanted to let you know about my experiences.\r\n\r\na)\tDrawing lines painted by a pencil (element: \u201c<gesture>\u201d) do not show up at all after stamping them. Why?\r\n\r\nSample data to test with:\r\n<ink name=\"C2B070EBB736993EA25F4545350AD2C3\" style=\"solid\" width=\"4.0\" flags=\"print\" date=\"D:20151207122033+01&apos;00&apos;\" color=\"#00ff00\" opacity=\"1.0\" page=\"0\" subject=\"Bleistift\" rect=\"62.4562,1378.1637,167.5599,1402.8388\" title=\"matstoll\"><inklist><gesture>68.4562,1385.1637;69.7534,1385.1637;73.6451,1385.1637;77.5368,1385.1637;82.7258,1387.7582;89.212,1389.0554;93.1037,1390.3525;96.9954,1390.3525;100.8871,1391.6498;104.7788,1392.947;111.2649,1394.2443;116.4539,1394.2443;121.6428,1395.5415;125.5345,1395.5415;130.7235,1395.5415;134.6152,1395.5415;139.8041,1395.5415;143.6958,1395.5415;148.8848,1395.5415;151.4792,1395.5415;155.3709,1396.8387;156.6682,1396.8387;157.9654,1396.8387;160.5599,1396.8387</gesture></inklist><contents>Pencil line</contents></ink>\r\nb)\tPolygons (at least when created with jPDFNotes) throw an exception when reading:\r\nException in thread \"main\" java.lang.NumberFormatException: For input string: \"1318.7075;1054.6517\"\r\n             at sun.misc.FloatingDecimal.readJavaFormatString(Unknown Source)\r\n             at sun.misc.FloatingDecimal.parseFloat(Unknown Source)\r\n             at java.lang.Float.parseFloat(Unknown Source)\r\n             at org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon.initVertices(FDFAnnotationPolygon.java:101)\r\n             at org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon.<init>(FDFAnnotationPolygon.java:78)\r\n             at org.apache.pdfbox.pdmodel.fdf.FDFDictionary.<init>(FDFDictionary.java:196) \r\n\r\nSample data to test with:\r\n<polygon name=\"534DC02A197B56578FFA6AE5F178100F\" style=\"solid\" width=\"9.0\" flags=\"print\" date=\"D:20151207121013+01&apos;00&apos;\" color=\"#0000ff\" opacity=\"1.0\" page=\"0\" subject=\"Polygon\" rect=\"857.5527,1117.7167,1063.6517,1334.1936\" title=\"matstoll\">\r\n<vertices>866.5527,1318.7075;1054.6517,1325.1936;1032.5987,1126.7167;876.9306,1179.9034;866.5527,1318.7075;</vertices>\r\n</polygon>\r\n\r\nc)\tA cloudy polygon cannot be read either \u2013 I assume a general issue reading polygons.\r\n\r\nSample data to test with:\r\n<polygon name=\"0276B0ECDCA680FDB0C0AE8377AE0FAA\" style=\"cloudy\" width=\"4.0\" flags=\"print\" date=\"D:20151207122247+01&apos;00&apos;\" intensity=\"2\" color=\"#ff5500\" opacity=\"1.0\" page=\"0\" subject=\"Cloud/Wolke\" rect=\"278.8037,1105.6361,563.5944,1216.9184\" title=\"matstoll\" IT=\"PolygonCloud\"><vertices>310.0391,1147.4725;420.304,1205.8481;555.2164,1117.6361;342.4699,1117.6361;286.6888,1134.5002;310.0391,1147.4725;</vertices></polygon>\r\nd)\tA freetext (\u201c<freetext>\u201d) element will not show up correctly:\r\nb1) Though \u201cwidth=0.0\u201d for the box, it PDFBox will render a box around the text\r\nb2) Though font is set to \u201cfont: Courier 12pt; color:#000000\u201d a wrong font will be rendered\r\nb3) The color setting will be ignored: my tests setting a color of font and border to red showed up a textbox with black border and black text.\r\ne)\tA freetext element with legend options does not show up correctly:\r\ne1) Colors are wrong/ignored\r\ne2) Font size not correct\r\ne3) Legend arrow not drawn\r\n\r\nSample data to test with:\r\n<freetext name=\"95DB90502D987FDE0DD5446ED48C098A\" style=\"solid\" width=\"3.0\" justification=\"left\" flags=\"print\" date=\"D:20151207122813+01&apos;00&apos;\" color=\"#4055ff\" callout=\"356.7395,1471.7811,479.2464,1372.3664,494.2464,1327.1395\" page=\"0\" subject=\"Legend textfield\" fringe=\"137.5069,-0.0,0.0,86.9147\" rect=\"356.7395,1269.4126,704.3984,1471.7811\" head=\"OpenArrow\" title=\"matstoll\" IT=\"FreeTextCallout\"><contents>This is a legend with arrow</contents><defaultstyle>font: Courier 24pt; color:#BFAAFF</defaultstyle><defaultappearance>1.0 0.7490196078431373 0.0 rg /Helv 12 Tf</defaultappearance></freetext>\r\nThere might be more of such issues \u2013 but I think this should be sufficient info for now to check how to proceed.\r\n\r\nAdobe Acrobat renders all these test cases correctly by the way, so I assume the XFDF elements are all correct.\r\n\r\nI can provide the sample code if needed \u2013 where shall I upload it \u2013 if needed?\r\n\r\nAs I do not find that much info about the support of XFDF in various PDF libraries \u2013 what about the official support in PDFBox? Should all of the samples work? What are the plans to do so?\r\n\r\nThanks a lot in advance.\r\n",
        "2.0  build fails Failed tests: \r\n\r\ntestDateConverter(org.apache.pdfbox.util.TestDateUtil): null expected:<2008-11-04T0[0]:00:00+00:00> but was:<2008-11-04T0[5]:00:00+00:00>\r\n\r\ntestExtract(org.apache.pdfbox.util.TestDateUtil): expected:\r\n<java.util.GregorianCalendar[time=1115870400000,areFieldsSet=true,\r\nareAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[\r\nid=\"UTC\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null\r\n],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2005,MONTH=4,\r\nWEEK_OF_YEAR=20,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,\r\nDAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,\r\nHOUR=4,HOUR_OF_DAY=4,MINUTE=0,SECOND=0,MILLISECOND=0,\r\nZONE_OFFSET=0,DST_OFFSET=0]>\r\nbut was:\r\n<java.util.GregorianCalendar[time=?,areFieldsSet=false,\r\nareAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[\r\nid=\"UTC\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null\r\n],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=2005,MONTH=4,\r\nWEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=12,DAY_OF_YEAR=?,\r\nDAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=0,\r\nHOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=?,\r\nZONE_OFFSET=?,DST_OFFSET=?]>\r\n\r\nTests run: 134, Failures: 2, Errors: 0, Skipped: 0\r\n\r\n...\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------"
    ],
    [
        "PDFBOX-2501",
        "PDFBOX-367",
        "Page render without barcode I have tryed this code:\r\n{code}\r\n        try {\r\n            PDDocument doc = PDDocument.load(f);\r\n            PDPage page = (PDPage) doc.getDocumentCatalog().getAllPages().get(0);\r\n            BufferedImage image;\r\n            image = page.convertToImage();\r\n            File outputfile = new File(\"/home/daniel/image.png\");\r\n            ImageIO.write(image, \"png\", outputfile);\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(Impresora.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n{code}\r\nUsing the PDF attached\r\n\r\nAnd get the PNG attached\r\n\r\nIn the rendering process I get the following error... in the 'convertToImage()' call\r\n{code}\r\n2014-11-14 13:56:12,592 WARN [org.apache.pdfbox.util.PDFStreamEngine] - <java.lang.ArrayIndexOutOfBoundsException>\r\njava.lang.ArrayIndexOutOfBoundsException\r\n    at java.lang.System.arraycopy(Native Method)\r\n    at org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage.createImage(PDInlinedImage.java:218)\r\n    at org.apache.pdfbox.util.operator.pagedrawer.BeginInlineImage.process(BeginInlineImage.java:69)\r\n    at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:557)\r\n    at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:268)\r\n    at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)\r\n    at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:215)\r\n    at org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:139)\r\n    at org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:801)\r\n    at org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:732)\r\n{code}\r\nOne for each of the 4 barcodes in PDF file\r\n\r\nAs you can see, te page is rendered OK but without any barcode\r\n\r\nHow could I render completily OK?",
        "Export control notifications PDFBox uses the Bouncy Castle crypto libraries for handling encrypted documents. This meets the definition of ECCN 5D002, and thus we need to make the required export control notifications.\n\nSee:\n\n    http://www.apache.org/dev/crypto.html\n    http://www.apache.org/licenses/exports/\n    http://www.access.gpo.gov/bis/ear/txt/ccl5-pt2.txt"
    ],
    [
        "PDFBOX-2963",
        "PDFBOX-740",
        "Remove Bouncy Castle Reference PDFBox Versions 1.8.X and 2.0.X add Bouncy Castle as a security provider explicitly (Hard coded)\r\n\r\nReferencing bouncy castle explicitly ties PDF box to a specific provider implementation.\r\n\r\nInstead of referencing BouncyCastleProvider explicitly provide an option to select another provider or alternatively allow a way to override the default. \r\n\r\nVersion 1.8.X:\r\nhttps://github.com/apache/pdfbox/blob/1.8.10/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlersManager.java\r\n{code}\r\npublic static SecurityHandlersManager getInstance()\r\n    {\r\n        if(instance == null)\r\n        {\r\n            instance = new SecurityHandlersManager();\r\n            Security.addProvider(new BouncyCastleProvider());\r\n        }\r\n        return instance;\r\n    }\r\n{code}\r\nVersion 2.0.0:\r\n\r\nhttps://github.com/apache/pdfbox/blob/trunk/pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java\r\n{code}\r\n   static\r\n    {\r\n        Security.addProvider(new BouncyCastleProvider());\r\n    }\r\n{code}",
        "PDF Replace String Hello Sir,\r\n\r\nWe are facing an issue with one of our current requirement which is to read content from one of the PDF document which has some placeholders in it. These placeholders are required to be replaced with new values and the then to save the document in PDF format with these new values. We have looked at the class ReplaceString.java which provides this functionality of replacing a single string in the adobe document, but we will not be able to use this class as we have approx 15 strings to be replaced. We are looking for a functionality which can help us to replace these 15 strings once the file is read and before saving the file with new string values. We have tried the following approach, we looked at the source of ReplaceString.Java file and used the source code to replace the multiple strings, what we have observed during debugging that while reading the document the returned token contains only the random portion of the placeholder string and not the complete word (sometimes it contains first 3 characters of the word and sometimes last 4 characters of the word); we never get the token with complete placeholder word or string. We are using JDK 1.4.2_16 version on 64 bit windows system. Any help to realize the required fucntionality is highly appreciated.\r\n\r\nThanks and Regards,\r\nNaga Kishore Vankayala"
    ],
    [
        "PDFBOX-2067",
        "PDFBOX-1536",
        "Error creating JPEG image with SMask JPEGFactory.createFromImage() has problems with images with transparency (alpha data).",
        "Improve the ExtractEmbeddedFiles example to deal with different kind of trees representing the embedded files I found two different kinds of EmbeddedFile-Trees:\r\n\r\n- a root tree node containing all embedded files as names array and no kids\r\n- a root tree node containing the embedded files as kid nodes no names array"
    ],
    [
        "PDFBOX-2715",
        "PDFBOX-2479",
        "Pages in a PDF being dropped with just an error-log message Trying to excatly pages from PDF documents like this\r\n\r\n{code}\r\nPDDocument doc = PDDocument.load(new ByteArrayInputStream(pdf));\r\nList allPages = doc.getDocumentCatalog().getAllPages();\r\n{code}\r\n\r\nBut not all pages get read, and the only indication something is wrong is this error-logging:\r\n\r\n{noformat}\r\nERROR org.apache.pdfbox.pdmodel.PDPageNode.getAllKids()#202: No Kids found in getAllKids(). Probably a malformed pdf.\r\n{noformat}\r\nI'm getting one of these error-lines for each page that isn't read. I'm attaching two different files with this problem. One gives me 4 out of 6 pages, and the other gives me none of the 4 pages. Both documents read fine in Acrobat Reader and in Okular where all the pages get shown.",
        "NPE in PDICCBased.getColorSpaceType I get this exception with the attached file:\r\n{code}\r\njava.lang.NullPointerException\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.getColorSpaceType(PDICCBased.java:296)\r\n\tat org.apache.pdfbox.preflight.content.PreflightStreamEngine.isDeviceIndependent(PreflightStreamEngine.java:452)\tat org.apache.pdfbox.preflight.content.PreflightStreamEngine.isDeviceIndependent(PreflightStreamEngine.java:452)\r\n\tat org.apache.pdfbox.preflight.content.PreflightStreamEngine.validColorSpace(PreflightStreamEngine.java:401)\r\n\tat org.apache.pdfbox.preflight.content.PreflightStreamEngine.checkColorOperators(PreflightStreamEngine.java:384)\r\n\tat org.apache.pdfbox.preflight.content.PreflightContentStream.processOperator(PreflightContentStream.java:154)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:457)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:421)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:394)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:164)\r\n\tat org.apache.pdfbox.preflight.content.PreflightContentStream.validPageContentStream(PreflightContentStream.java:72)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validateContent(SinglePageValidationProcess.java:182)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validate(SinglePageValidationProcess.java:87)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validatePage(PageTreeValidationProcess.java:56)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validate(PageTreeValidationProcess.java:45)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:88)\r\n\tat org.apache.pdfbox.preflight.PreflightDocument.validate(PreflightDocument.java:168)\r\n\tat pdfboxpageimageextraction.PreflightTest.main(PreflightTest.java:46)\r\n{code}\r\n\r\nThe logfile also has this:\r\n{code}\r\nERROR [main] org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:133 - Can't read embedded ICC profile, using alternate color space: DeviceRGB\r\n{code}"
    ],
    [
        "PDFBOX-1930",
        "PDFBOX-2081",
        "TimesNewRoman font should be substituted The file from PDFBOX-1606 is missing the font TimesNewRoman but we should be able to do a better job than substituting Helvetica as is currently done.",
        "Lines that exceeds clipping area are not drawn PDF contains shapes that are partly on the paper and partly outside (shape overflows paper borders).\r\nThose shapes are not rendered to image.\r\n\r\nIt is caused by clipping area.\r\nWhen I replace line in PDFDrawer.strokePath()\r\n{noformat}\r\ngraphics.setClip(getGraphicsState().getCurrentClippingPath());\r\n{noformat}\r\nto\r\n{noformat}\r\ngraphics.setClip(null);\r\n{noformat}\r\nthen everything is rendered correctly.\r\n\r\nPossibly bug in Java?"
    ],
    [
        "PDFBOX-16",
        "PDFBOX-3204",
        "Replace existing font with new font [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1016101\nOriginally submitted by benlitchfield on 2004-08-25 09:16.\n\nCreate a class, maybe an example that allows a user to \nreplace a font with a font in the filesystem or an existing \nfont in the PDF.  This is useful when a collection of PDF \ndocuments have been appended and contain many \nembedded fonts like \n'BDED50A3 Times New Roman'\n'GH34DFH Times New Roman'\n\nIn order to reduce file size it would be nice to be able to \nreduce these to one embedded font.\n\nWhere the font is embedded multiple times but is really \nthe same font over and over.\n\nBen",
        "JVM crashes on PDFRenderer.renderImageWithDPI When running the following Scala program on one of the attached PDFs:\r\n\r\n{code}\r\nimport org.apache.pdfbox.pdmodel.PDDocument\r\nimport org.apache.pdfbox.rendering.PDFRenderer\r\nimport java.io.File\r\n\r\nobject FigureExtractorBatchCli {\r\n  def main(args: Array[String]): Unit = {\r\n    new PDFRenderer(PDDocument.load(new File(\"problem.pdf\"))).renderImageWithDPI(0, 195)\r\n  }\r\n}\r\n{code}\r\n\r\na fatal error occurs with the JVM at [the call to java.awt.Graphics2D.draw|https://github.com/apache/pdfbox/blob/6f3417a1863b308a9ce48722c2da1d62f09c9a35/pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java#L578].\r\n\r\nFor *problem.pdf* this only happens at a DPI >= 195. For *problem2.pdf* it's DPI >= 5. For *problem3.pdf* it happens at any DPI."
    ],
    [
        "PDFBOX-991",
        "PDFBOX-3072",
        "org.apache.pdfbox.cos.COSDocument finalize, did not close a PDF Document The error below keeps occurring when I run several PDF files.\r\n\r\n[Error]Mar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:18:24 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document[/Error]\r\n\r\nHere's my code:\r\n\r\npublic void methodForPDF() throws SQLException\r\n{\r\n     //fullFilePath is always changing and this method is called by another method for several times.\r\n     PDDocument doc = null;\r\n     PDActionURI uri = null;\r\n     ResultSet resultSet = null;\r\n     Statement statement = null;\r\n     int newURI = 0, type = 0;\r\n     String newuri = \"\";\r\n     String oldLink =\"\", line=\"\", oldId=\"\";\r\n     int pos = 0;\r\n     CharSequence char0 = \"abc\";\r\n     File f = new File(fullFilePath);\r\n     try\r\n     {\r\n           statement = dbConnection.createStatement(); \r\n           doc = PDDocument.load(fullFilePath, false);\r\n\t\t    \r\n           List allPages = doc.getDocumentCatalog().getAllPages();\r\n           for( int i=0; i<allPages.size(); i++ )\r\n           {\r\n\t PDPage page = (PDPage)allPages.get( i );\r\n\t List annotations = page.getAnnotations();\r\n\r\n\t for( int j=0; j<annotations.size(); j++ )\r\n\t {\r\n\t        PDAnnotation annot = (PDAnnotation)annotations.get( j );\r\n\t        if( annot instanceof PDAnnotationLink )\r\n                        {\r\n                               PDAnnotationLink link = (PDAnnotationLink)annot;\r\n                               PDAction action = link.getAction();\r\n                               if( action instanceof PDActionURI )\r\n                               {\r\n                                     uri = (PDActionURI)action;\r\n    \t                     String oldURI = uri.getURI();\r\n    \t                     if(oldURI.contains(char0))\r\n    \t                     { \r\n    \t                            \r\n    \t                            line = oldURI;\r\n    \t                            pos = line.lastIndexOf(\"=\");\r\n    \t                            oldLink = line.substring(0, pos+1);\r\n    \t                        \r\n    \t                            line = line.replace(oldLink, newWebformUrl+\"?\"+newArtName);\r\n    \t                            pos = line.lastIndexOf(\"=\");\r\n    \t                            oldId = line.substring(pos+1, line.length());\r\n    \t                        \r\n\t\t            resultSet = statement.executeQuery(\"SELECT newid, type \"\r\n\t\t\t          + \"FROM prrm.temp_migration_lookup WHERE oldid = \" + oldId);\r\n\t\t                            \r\n\t\t            if (null != resultSet) {\r\n\t\t\t  while (resultSet.next()) {\r\n\t\t\t         newURI = resultSet.getInt(\"newid\");\r\n\t\t\t         type = resultSet.getInt(\"type\");\r\n\t\t\t   }\r\n\t\t             }\r\n\t\t\t                     \r\n\t\t            newuri = newURI + \"\";\r\n   \t\t            String newurl = line.replace(oldId,newuri);\r\n   \t\t            newurl = newurl + \"?type=\" + type;\r\n   \t\t            //System.out.println( \"Page \" + (i+1) +\": Replacing \" + oldURI + \" with \" + newurl );\r\n   \t\t            uri.setURI( newurl );\r\n    \t                      }\r\n\t\t           \r\n\t\t   }\r\n\t           }\r\n\t }\r\n            }\r\n\t\t            \r\n            doc.save(fullFilePath);\r\n            resultSet.close();\r\n            statement.close();\r\n            doc.close();\r\n           System.out.println(\"1: Close 1 File\");\r\n\t\t            \r\n     } catch (IOException e) {\r\n          e.printStackTrace();\r\n     } catch (COSVisitorException e) {\r\n          // TODO Auto-generated catch block\r\n          e.printStackTrace();\r\n     }\r\n     finally\r\n     {\r\n           if( doc != null )\r\n           {\r\n                  try {\r\n                     doc.close();\r\n                     doc = null;\r\n                     System.out.println(\"2: Close 1 File\");\r\n\t  } catch (IOException e) {\r\n\t       // TODO Auto-generated catch block\r\n                       e.printStackTrace();\r\n\t  }\r\n            }\r\n       }\r\n }\r\n\r\nHere's the results of the run:\r\n\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\nMar 28, 2011 10:56:41 AM org.apache.pdfbox.cos.COSDocument finalize\r\nWARNING: Warning: You did not close a PDF Document\r\n1: Close 1 File\r\n2: Close 1 File\r\nDone 1 PDF file",
        "Allow missing page type I came across a PDF document with missing type in the page dictionary. According to the spec that's required and PDFBox has a check and throws an IllegalState if the page is requested to the PDPageTree. Acrobat and other libs handle the same doc so I think the constraint could be relaxed a little, consider valid if type is Page or missing, and consider invalid if it's something else, what do you think?"
    ],
    [
        "PDFBOX-1776",
        "PDFBOX-439",
        "Print pdf with font embedded(SimSun TrueType(CID) Identity-H) Hello,\r\nCan you please help me on the issue as below?\r\n[Issue]\r\nprint PDF file witch has font embedded subset.\r\n\r\nI am trying to use PDFBOX 1.8.2 to print PDF file.\r\nWhen I use printJob.print() to print PDF file, I got the error like this:\r\n\r\n  <2013/11/08 11:14:53 org.apache.pdfbox.filter.FlateFilter decode\r\n   fatal: FlateFilter: stop reading corrupt stream due to a DataFormatException>\r\n\r\nAnd I checked the property of the PDF file and it's like below:\r\n[Font]\r\n  SimSun(embedded subset)\r\n   type: TrueType(CID)\r\n   enconding: Identity-H\r\n\r\nHere is my java Code:\r\n[Code]\r\n    PDDocument document = PDDocument.load( pdfFileName );\r\n    PrinterJob printJob = PrinterJob.getPrinterJob();\r\n    printJob.setJobName(new File(pdfFileName).getName());\r\n    if(printerName != null )\r\n    {\r\n        PrintService[] printService = PrinterJob.lookupPrintServices();\r\n        boolean printerFound = false;\r\n        for(int i = 0; !printerFound && i < printService.length; i++)\r\n        {\r\n            if(printService[i].getName().indexOf(printerName) != -1)\r\n            {\r\n                printJob.setPrintService(printService[i]);\r\n                printerFound = true;\r\n            }\r\n        }\r\n    }\r\n    printJob.setPageable(new PDPageable(document, printJob));\r\n    if( silentPrint || printJob.printDialog())\r\n    {\r\n    \tprintJob.print();\r\n    }\r\n\r\nI'm sorry, i can't find the way to attatch the pdf file.\r\n\r\nIs it possible for PDFBOX 1.8.2 to print pdf properly?\r\nwhat about PDFBOX 2.0?\r\n\r\nThanks in advance.\r\nRegards",
        "Incorrect text for Exolab.pdf in Regression Test When looking through text for an unrelated issue, I noticed that the file Exolab.pdf in the regression test produced the following line,\r\n\r\nJAJAVVAA CODINING STANDAG STANDARD.......................................................................................................................1\r\nwhen the line should say,\r\nJAVA CODING STANDARD .......................................................................................................................1\r\n\r\nAlso this line,\r\n\r\n5 COD5 CODE EXAMPLMPLES................................S ...................................................................................................................................26\r\nshould be\r\n5 CODE EXAMPLES...................................................................................................................................26\r\nHowever, Adobe has trouble with this one as well. \r\n\r\nThese two issues only occurred when the file was run with the -sort option enabled. \r\n\r\nHowever, In both the unsorted and sorted tests this line was improperly handled:\r\n\r\nAPPENDIX A : DOCUMENT HISTORYT HISTORYT HISTORY...................................................................................................33 \r\nshould produce\r\nAPPENDIX A : DOCUMENT HISTORY ...................................................................................................33\r\n\r\nI ran into this test using the current trunk. \r\n\r\nThe Exolab.pdf file is located in the ..\\source\\trunk\\test\\input folder "
    ],
    [
        "PDFBOX-2683",
        "PDFBOX-871",
        "Remove SignatureInterface dependency from COSDocument COSDocument holds a reference of the SignatureInterface for signing. This should be moved somewhere to the pdmodel package, maybe into PDDocument.",
        "Implement Apache project branding requirements We should implement the requirements from http://www.apache.org/foundation/marks/pmcs.html latest in Q1 next year."
    ],
    [
        "PDFBOX-1321",
        "PDFBOX-446",
        "PDF rendered as black box  Images in PDF being rendered as black boxes, but in Acrobat Reader everything is fine.",
        "A empty page produces a NPE   Wildan reported a issue during converting a document to images on the user list. He gets an NPE during converting the pages into images. After looking a the document, Daniel and I quickly found the issue and a solution to avoid the NPE. \r\n\r\n\r\n"
    ],
    [
        "PDFBOX-1988",
        "PDFBOX-2583",
        "PDFBox ExtractText issue of PDF with no embedded fonts I have been using PDFBox 1.8.4 to extract text from several different PDF files fine.  I use the latest PDFBox app with ExtractText command line.  There is one PDF that PDFBox (and iText) fails to extract any text even though I can extract the text with Adobe Reader and also pdftotext.exe part of XPdf.  \"java -jar pdfbox-app-1.8.4.jar ExtractText Test1.pdf Out.txt\".  I don't want to have to rely on using pdftotext.exe from a PC since this is part of an automated application.  I think the error relates to an unknown font type and having to use the few fonts installed in the jar file.  I tried running the API classes and trying to force a font from a certain location but I still got errors.  I thought I loaded the font with the loadTTF method but I don't know if that did anything with the font.  I would really like to have this working straight from the ExtractText class anyway.\r\nHere are the errors I am getting.  I tried this from both a Windows 7 PC and our IBM i in the PASE environment but I get the same errors.  The section starting processEncodedText and on repeats a few times so I just included the first entries.\r\n\r\n \r\n\r\nMar 10, 2014 3:50:44 PM org.apache.pdfbox.pdmodel.font.PDFontFactory createFont                           \r\nWARNING: Substituting TrueType for unknown font subtype=                                                  \r\nMar 10, 2014 3:50:45 PM org.apache.pdfbox.util.PDFStreamEngine processOperator                            \r\nWARNING: java.lang.NullPointerException                                                                   \r\nThrowable occurred: java.lang.NullPointerException                                                        \r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadDescriptorDictionary(PDTrueTypeFont.java:375)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.ensureFontDescriptor(PDTrueTypeFont.java:221)    \r\n\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.<init>(PDTrueTypeFont.java:119)    \r\n        at org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:121)  \r\n        at org.apache.pdfbox.pdmodel.PDResources.getFonts(PDResources.java:204)             \r\n        at org.apache.pdfbox.util.PDFStreamEngine.getFonts(PDFStreamEngine.java:604)        \r\n        at org.apache.pdfbox.util.operator.SetTextFont.process(SetTextFont.java:54)         \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:554) \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:268)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:215)   \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:456)     \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:381)    \r\n        at org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:340)       \r\n        at org.apache.pdfbox.ExtractText.startExtraction(ExtractText.java:275)              \r\n        at org.apache.pdfbox.ExtractText.main(ExtractText.java:85)                          \r\n        at org.apache.pdfbox.PDFBox.main(PDFBox.java:58)                                    \r\nMar 10, 2014 3:50:45 PM org.apache.pdfbox.util.PDFStreamEngine processEncodedText           \r\nWARNING: java.lang.NullPointerException                                                     \r\n\r\nThrowable occurred: java.lang.NullPointerException                                            \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:355)\r\n        at org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:45)                 \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:554)   \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:268)  \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)  \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:215)     \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:456)       \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:381)      \r\n        at org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:340)         \r\n        at org.apache.pdfbox.ExtractText.startExtraction(ExtractText.java:275)                \r\n        at org.apache.pdfbox.ExtractText.main(ExtractText.java:85)                            \r\n        at org.apache.pdfbox.PDFBox.main(PDFBox.java:58)                                      \r\nMar 10, 2014 3:50:45 PM org.apache.pdfbox.util.PDFStreamEngine processOperator                \r\nWARNING: java.lang.NullPointerException                                                       \r\nThrowable occurred: java.lang.NullPointerException                                            \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:364)\r\n\r\n        at org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:45)                 \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:554)   \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:268)  \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)  \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:215)     \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:456)       \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:381)      \r\n        at org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:340)         \r\n        at org.apache.pdfbox.ExtractText.startExtraction(ExtractText.java:275)                \r\n        at org.apache.pdfbox.ExtractText.main(ExtractText.java:85)                            \r\n        at org.apache.pdfbox.PDFBox.main(PDFBox.java:58)                                      \r\n\r\n\r\nThanks,\r\n\r\nCraig Strong",
        "Error when rendering a PDF with annotations I am using the 2.0.0-SNAPSHOT version deployed on the 23rd of December. When I try to render the attached PDF, I get the following error:\r\njava.io.IOException: Expected 'Font' dictionary but found 'Subtype'\r\n\tat org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:51) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.pdmodel.PDResources.getFont(PDResources.java:91) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.contentstream.operator.text.SetFontAndSize.process(SetFontAndSize.java:50) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:809) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:471) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processAnnotation(PDFStreamEngine.java:312) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.showAnnotation(PDFStreamEngine.java:390) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.rendering.PageDrawer.showAnnotation(PageDrawer.java:776) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:167) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderPage(PDFRenderer.java:204) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:137) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:70) ~[pdfbox-2.0.0-20141223.230019-865.jar:?]\r\n\r\nI tried to render the same PDF with the 1.8.7 version and it works. There seems to be a regression."
    ],
    [
        "PDFBOX-183",
        "PDFBOX-564",
        "java.lang.NullPointerException in highlighter.generateXMLHig [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1517476\nOriginally submitted by nobody on 2006-07-05 05:11.\n\nSample code :\n\ntry\n   {\n    URL pdfURL = new URL( mPdfUrl );\n    \n    doc = PDDocument.load( pdfURL.openStream() );\n    PDFHighlighter highlighter = new PDFHighlighter();\n    highlighter.generateXMLHighlight( doc,\nmHighlightWords.split( \" \" ), fiw );\n     \n   }\n   catch (Exception e)\n\nUsing ADLIB converted PDF ( see attach file )\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1517476&file_id=183934\ncv1.pdf (application/pdf), 109109 bytes\npdf",
        "Change the wrapped exception to extend Exception and pass the wrapped exception for more standard/better printout of wrapped exceptions Wrapped exceptions are now handled by Java. So wrapped exception can be replaced with the following code for better exception reporting/handling. Including better integrations with logging utilities such as slf4j which \"understand\" java wrapped exceptions.\r\n\r\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage org.apache.pdfbox.exceptions;\r\n\r\n\r\n/**\r\n * An exception that that holds a sub exception.\r\n *\r\n * Actually, this class is no longer required as this is now better suppored by java.lang.Exception.\r\n * \r\n * @author <a href=\"mailto:ben@benlitchfield.com\">Ben Litchfield</a>\r\n * @version $Revision: 1.2 $\r\n */\r\npublic class WrappedException extends Exception\r\n{\r\n\t/**\r\n     * constructor comment.\r\n     *\r\n     * @param e The root exception that caused this exception.\r\n     */\r\n    public WrappedException( Exception e )\r\n    {\r\n        super(e);\r\n    }\r\n}"
    ],
    [
        "PDFBOX-1647",
        "PDFBOX-3046",
        "Not able to parse PDF files using PHP and Linux Hi, I am trying to extract texts using pdfbox-app1.0.8.jar, I am able to extract it in windows xp pc but when I am trying to execute the same program in Go Daddy Linux server, the program is not working i.e not extracting the texts from the pdf. Below is the program, that I am using to extract texts from pdf files.\r\n\r\n        require_once 'pdf_lib/pdf_box/PDFBox/ExtractText.php';\r\n\r\n\t$jar = \"pdf_lib/pdf_box/lib/pdfbox-app-1.8.2.jar\";\r\n\t$pdf_box = new PDFBox\\PDFBox($jar);\r\n\t$extract_text = new PDFBox\\ExtractText($pdf_box);\r\n\r\n\t$extract_text->parse($pdfLocation);\r\n\r\n",
        "Specific PDF prints really (REALLY) slow On Windows 10 I have printed a test page using the MS Publisher Color Printer (which outputs a Postscript-file) and converted that file to PDF using GhostScript ps2pdf.\r\n\r\nThe resulting single-page PDF file is printed really, really slow (180-190 seconds) while other documents (even generated using ps2pdf) print a lot faster (some seconds).\r\n\r\nI can't figure out why this is. I guess it has someting to do with the used font, but other PDF printing libraries (jPedal, jPDFPrint) are able print the same documents in a couple of seconds."
    ],
    [
        "PDFBOX-551",
        "PDFBOX-453",
        "NoSucheElementException in PDFXrefStreamParser.parse A PDF which I have, which I unfortunately can not upload here, has triggered the following exception:\r\n\r\nCaused by: java.util.NoSuchElementException                                                                                                                          \r\n        at java.util.AbstractList$Itr.next(AbstractList.java:350)                                                                                                    \r\n        at org.apache.pdfbox.pdfparser.PDFXrefStreamParser.parse(PDFXrefStreamParser.java:115)                                                                       \r\n        at org.apache.pdfbox.cos.COSDocument.parseXrefStreams(COSDocument.java:538)                                                                                  \r\n        at org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:203)        ",
        "FlateFilter decode() throwing OutOfMemoryError When parsing certain PDF files an OutOfMemoryError occurs at FlateFilter line 100. The files in question are not big.\r\n\r\nAn exception occured in\t parsing the PDF Document.\r\njava.lang.OutOfMemoryError\r\n\tat java.util.zip.Inflater.inflateBytes(Native Method)\r\n\tat java.util.zip.Inflater.inflate(Inflater.java:221)\r\n\tat java.util.zip.InflaterInputStream.read(InflaterInputStream.java:135)\r\n\tat org.apache.pdfbox.filter.FlateFilter.decode(FlateFilter.java:100)\r\n\tat org.apache.pdfbox.cos.COSStream.doDecode(COSStream.java:279)\r\n\tat org.apache.pdfbox.cos.COSStream.doDecode(COSStream.java:221)\r\n\tat org.apache.pdfbox.cos.COSStream.getUnfilteredStream(COSStream.java:156)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:367)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:325)\r\n\tat org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:50)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:493)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:214)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:173)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:335)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:259)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:215)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:148)\r\n"
    ],
    [
        "PDFBOX-3176",
        "PDFBOX-889",
        "Add a removeRegion method in PDFTextSTripperByArea class Hi,\r\n\r\nI am parsing a very complicated PDF, for which I had to enable (setSortByPosition as true), otherwise the Parser is not able to do sequential text extraction.\r\n\r\nSo I decided to use PDFTextStripperByArea class, and then make rectangles to extract text. But problem here is that If I make many rectangles in a single page, again there is no logical sequence of text extracted, So to get around this it will be awesome to have a method to remove regions, then we can add a region extract text, remove that region , then again add new region and so on....\r\n\r\nI have already done a POC in my local computer and it works fine. added this method and tested.\r\n\r\npublic void removeRegion(String regionName) {\r\n    this.regions.remove(regionName);\r\n    this.regionArea.remove(regionName);\r\n}\r\n\r\nI can contribute this code myself, if you suggest, let me know, thanks and regards\r\nPraveer",
        "Empty page causes NPE in importPage An empty page does not need to have a Contents item.\r\nPDDocument.importPage() fails with a NullPointerException when such an empty page is imported.\r\n\r\n\r\n\r\n### Eclipse Workspace Patch 1.0\r\n#P pdfbox\r\nIndex: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java\r\n===================================================================\r\n--- pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java\t(revision 1026306)\r\n+++ pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java\t(working copy)\r\n@@ -322,16 +322,19 @@\r\n         try\r\n         {\r\n             PDStream src = page.getContents();\r\n-            PDStream dest = new PDStream( new COSStream( src.getStream(), document.getScratchFile() ) );\r\n-            importedPage.setContents( dest );\r\n-            os = dest.createOutputStream();\r\n+            if (src != null)\r\n+            {\r\n+                PDStream dest = new PDStream( new COSStream( src.getStream(), document.getScratchFile() ) );\r\n+                importedPage.setContents( dest );\r\n+                os = dest.createOutputStream();\r\n \r\n-            byte[] buf = new byte[10240];\r\n-            int amountRead = 0;\r\n-            is = src.createInputStream();\r\n-            while((amountRead = is.read(buf,0,10240)) > -1)\r\n-            {\r\n-                os.write(buf, 0, amountRead);\r\n+                byte[] buf = new byte[10240];\r\n+                int amountRead = 0;\r\n+                is = src.createInputStream();\r\n+                while((amountRead = is.read(buf,0,10240)) > -1)\r\n+                {\r\n+                    os.write(buf, 0, amountRead);\r\n+                }\r\n             }\r\n             addPage( importedPage );\r\n         }\r\n"
    ],
    [
        "PDFBOX-1088",
        "PDFBOX-778",
        "Class PDDocument Method getPageMap returns a ClassCastException Trying to get the map of bookmarks to page numbers by using method getPageMap but throws a java.lang.ClassCastException: org.apache.pdfbox.pdmodel.PDPage",
        "OutOfMemory when extracting text from pdf I have to extract text from hundreds of documents, but at a certain point I get an out of memory exception.\r\nIt seems that the memory leak is related to a single file that I attached.\r\n\r\nPlease let me know if you need more details.\r\n\r\nThis is the stacktrace of the exception:\r\nException in thread \"main\" java.lang.OutOfMemoryError: Java heap space\r\n\tat java.util.Arrays.copyOf(Arrays.java:2734)\r\n\tat java.util.ArrayList.ensureCapacity(ArrayList.java:167)\r\n\tat java.util.ArrayList.add(ArrayList.java:351)\r\n\tat org.apache.pdfbox.pdfparser.PDFStreamParser.parse(PDFStreamParser.java:103)\r\n\tat org.apache.pdfbox.cos.COSStream.getStreamTokens(COSStream.java:119)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:207)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:367)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:291)\r\n\tat org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:247)\r\n\tat it.polimi.utils.TextStripper.getFullText(TextStripper.java:57)\r\n\tat it.polimi.utils.TextStripper.getFullText(TextStripper.java:72)\r\n\tat it.polimi.utils.TextStripper.getContent(TextStripper.java:30)\r\n\tat applications.ExtractAbstracts.convert(ExtractAbstracts.java:47)\r\n\tat applications.ExtractAbstracts.convert(ExtractAbstracts.java:36)\r\n\tat applications.ExtractAbstracts.main(ExtractAbstracts.java:17)"
    ],
    [
        "PDFBOX-1640",
        "PDFBOX-2776",
        "space in pdf in my pdf i have white space between columns, in earlier versions of pdfbox, white space used to get printed as empty line in the text file, however in the latest version the same is remove.\r\n\r\nplease check",
        "support \"Long Term Validation\" signature extensions (LTV) in recent acrobat readers, every signature is commented w.r.t. \"LTV\"\r\n\r\nETSI TS 102 778-4 V1.1.2 (2009-12) Technical Specification\r\nreferenced as part 4 in\r\nhttp://en.wikipedia.org/wiki/PAdES \r\n\r\nIt would be great if pdf signatures created with PDFBox would assist in creatign those.\r\n\r\nTarget test setup: \r\n1) input of an unsigned PDF-1.5 document\r\n2) signature with\r\na) local key pair\r\nb) hsm\r\nc) remote signature service (e.g. via soap)\r\n3) add ocsp response for LTV (crls typically are larger)\r\n==> Result: signed pdf where acrobat reader claims it to be \"LTV enabled\"\r\n\r\nsee also PDFBOX-1848\r\n\r\nmore in \r\nhttp://stackoverflow.com/questions/26090558/ltv-enabled-signature-in-pdf\r\n"
    ],
    [
        "PDFBOX-1957",
        "PDFBOX-1558",
        "PDFCreator and PDFBox I am having problem when try to convert PDF, created by PDFCreator, in Text. The character are wrong. Any suggesting ?",
        "Unused PDSignature class should be removed In 1.8.0, the uses of class org.apache.pdfbox.pdmodel.interactive.form.PDSignature have been replace with ....form.PFSignatureField, but the old ...form.PDSignature class still exists.\r\n\r\nThis can be confusing when upgrading to PDFBox 1.8.0 -- code that tests for the presence of PDSignature instances will compile, but fail to work correctly. Removing the old PDSignature will give upgraders a more helpful compilation error.\r\n\r\nThe old ...form.PDSignature class should be removed or the new ...form.PDSignatureField should be renamed to completely replace it."
    ],
    [
        "PDFBOX-310",
        "PDFBOX-159",
        "Unknown encoding for 'H' [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1797094\nOriginally submitted by balvinder_dang on 2007-09-18 07:08.\n\nUnknown encoding for 'H'\n at org.pdfbox.encoding.EncodingManager.getEncoding(EncodingManager.java:83)\n at org.pdfbox.pdmodel.font.PDFont.getEncoding(PDFont.java:627)\n at org.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:476)\n at org.pdfbox.util.PDFStreamEngine.showString(PDFStreamEngine.java:332)\n at org.pdfbox.util.operator.ShowText.process(ShowText.java:66)\n at org.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:494)\n at org.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:207)\n at org.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:160)\n at org.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:355)\n at org.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:268)\n at org.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:220)\n at org.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:140)",
        "Field renaming character set problem [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1482334\nOriginally submitted by mmajis on 2006-05-05 02:30.\n\nIf I take an XFA PDF, remove the XFA form, rename one\nof the AcroForm fields and open the resulting PDF in\nAcrobat, the field name is garbled.\n\nTo begin with, it seems the field name is UTF-16BE\nencoded. PDFBox writes the new /T entry in ISO-8859-1\nsince it finds no character values larger than 255. if\nI change the source code to write UTF-16BE with the two\nprefix bytes 0xFF and 0xFE (not sure of the byte order\nhere), the field name shows correctly in Acrobat."
    ],
    [
        "PDFBOX-1526",
        "PDFBOX-2439",
        "Problem with multiple images on a page I'm having trouble adding multiple images on a PDPage\r\n\r\nThis is the method that adds images:\r\n[...]\r\n private void addImage(PDDocument document, PDPage page, String\r\nimageName, int x, int y) throws IOException {\r\n        System.out.println(\"Image Name: \" + imageName);\r\n\r\n        PDXObjectImage image = new PDJpeg(document, new\r\nFileInputStream(imageName));\r\n        PDPageContentStream contentStream = new\r\nPDPageContentStream(document, page, true, false);\r\n        int oldWidth = 200;\r\n        int oldHeight = 300;\r\n        int newWidth = 150;\r\n        int newHeight = (newWidth * oldHeight) / oldWidth;\r\n        image.setHeight(newHeight);\r\n        image.setWidth(newWidth);\r\n        contentStream.drawImage(image, x, y);\r\n        contentStream.close();\r\n    }\r\n[...]t\r\n\r\neven if the image name changes only the first image is repeatedly drawn on page.\r\n\r\nand If I move the line:\r\n       PDXObjectImage image = new PDJpeg(document, new\r\nFileInputStream(imageName));\r\nafter\r\n       PDPageContentStream contentStream = new\r\nPDPageContentStream(document, page, true, false);\r\n\r\nthe resulting page is blank.\r\n",
        "[PATCH] ArrayIndexOutOfBoundsException in multithreaded system When it loads replacement font from OS i sometimes get:\r\n\r\nException in thread \"Thread-27\" java.lang.ArrayIndexOutOfBoundsException: 40036\r\n\tat org.apache.fontbox.ttf.GlyfSimpleDescript.readFlags(GlyfSimpleDescript.java:197)\r\n\tat org.apache.fontbox.ttf.GlyfSimpleDescript.<init>(GlyfSimpleDescript.java:78)\r\n\tat org.apache.fontbox.ttf.GlyphData.initData(GlyphData.java:58)\r\n\tat org.apache.fontbox.ttf.GlyphTable.getGlyph(GlyphTable.java:161)\r\n\tat org.apache.pdfbox.rendering.font.TTFGlyph2D.getPathForGID(TTFGlyph2D.java:140)\r\n\tat org.apache.pdfbox.rendering.font.TTFGlyph2D.getPathForCharacterCode(TTFGlyph2D.java:92)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.drawGlyph2D(PageDrawer.java:392)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.showGlyph(PageDrawer.java:372)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.showText(PDFStreamEngine.java:411)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.showText(PageDrawer.java:346)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.showTextStrings(PDFStreamEngine.java:322)\r\n\tat org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted.process(ShowTextAdjusted.java:38)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:482)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processSubStream(PDFStreamEngine.java:236)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processSubStream(PDFStreamEngine.java:201)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:155)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:177)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderPage(PDFRenderer.java:228)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:160)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImageWithDPI(PDFRenderer.java:109)"
    ],
    [
        "PDFBOX-95",
        "PDFBOX-2371",
        "ClassCastException in FlateFilter [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1297272\nOriginally submitted by yves_bussard on 2005-09-20 22:35.\n\nHi Ben,\n\nThere is another Bug in FlateFilter.decode(). Let's\nhave a look at the following stream in the attached\ndocument:\n\n174 0 obj\n<<\n/Length 94\n/LayerCreator /Neevia\n/LayerID <c5593367f4b69653b3dd4f771209026a>\n/LayerXML 177 0 R\n/Filter [ /FlateDecode ]\n/DecodeParms [ null ]\n>>\nstream\n     <the 94 bytes of the stream>\nendstream\nendobj\n\nAs described in the PDF Reference this document uses\nthe possibility to define an array of filters instead\nof just one filter(name). In the above case the array\ncontains only one element (filter). In this case it\nshould also define an array of dictionaries (one for\neach filter) which it does.\n\nNow the decode() method is passed a parametere options\nwhich imho should be the dictionary with the parameters\nfor this filter instance. Instead the options parameter\n actually is the stream itself (COSStream is derived\nfrom COSDictionary) which contains the filter\nparameters in DecodeParms. Now if you have a COSArray\nof COSDictionaries in the entry DecodeParms then you\nhave no way of knowing which set (index) of parameters\nyou should use. I think that the parameter options\nshould contain the dictionary with the parameters\nitself (not the stream). This affects a few places\ncalling the method. \n\nAlso another bug is on line 78 in the same method:\n\n            predictor = dict.getInt(\"Predictor\");\n            colors = dict.getInt(\"Colors\");\n -->       bitsPerPixel =\noptions.getInt(\"BitsPerComponent\");\n            columns = dict.getInt(\"Columns\");\n\nthe parameter BitsPerComponent is stored at the same\nlocation as columns. Therefore it should be from the\nvariable dict that the BitsPerComponent are retrieved.\nTo me it looks as if originally the parameter options\nused to be the decode parameters and it has been\nchanged later on (I don't know for which reason).\n\ncheers\nYves",
        "Overlay page off by one when using -useAllPages When using the new -useAllPages option added in 1.8.7, the usePageNum doesn't account for the fact that the specificOverlayPage is indexed by zero and the output ends up with overlay pages shifted\r\n\r\ne.g. The output page 1 has page 2 from the overlay.\r\n\r\nWe need to subtract 1 from the pageNumber when getting the overlay page number.\r\n\r\nint usePageNum = (pageNumber - 1) % numberOfOverlayPages;\r\n\r\n"
    ],
    [
        "PDFBOX-287",
        "PDFBOX-2688",
        "Inserting TIF / BMP / GIF into PDF [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1748641\nOriginally submitted by robertsearle on 2007-07-05 10:13.\n\nI would like three new classes---PDtif, PDbmp, and PDgif.  These classes should work like PDJpeg.  I really hope the constructor is the same (pdfDoc, inputStream).",
        "sun.java2d.Disposer leak when using pdf to image conversion in a server(tomcat) I am running with 6GB of heap space and running PDF to PNG conversion in a servlet container(tomcat). This happens only when running thousands of requests for conversion.\r\n\r\nJVM memory statistics shows heap space never going above 1GB and non-heap memory is also constant but the linux process or windows process seems to consume around 8GB of memory.\r\n\r\nHeap dump shows that the largest object is sun.java2d.Disposer and is around 200MB.\r\n\r\nIt seems that the leaked memory is native memory used by java2d and not accounted in the heap memory statistic but this growth of sun.java2d.Disposer memory is proportional to the growth of process memory(linux 'top' command).\r\n\r\n{code}\r\n\t\tBufferedImage image = null;\r\n\r\n\t\tByteArrayInputStream pdfStream = getpdfbytesfromExistingDoc();\r\n\t\tPDDocument document = null;\r\n\t\tPDPage page = null;\r\n\t\tCOSDocument cosDoc = null;\r\n\t\tPDFParser parser = null;\r\n\t\ttry {\r\n\t\t\tparser = new PDFParser(pdfStream);\r\n\t\t\tparser.parse();\r\n\t\t\tcosDoc = parser.getDocument();\r\n\t\t\tdocument = new PDDocument(cosDoc);\r\n\t\t\t@SuppressWarnings(\"unchecked\")\r\n\t\t\tList<PDPage> pages = document.getDocumentCatalog().getAllPages();\r\n\t\t\tpage = pages.get(0);\r\n\t\t\tint imageType = BufferedImage.TYPE_INT_ARGB;\r\n\t\t\timage = page.convertToImage(imageType, 72);\r\n\t\t} finally {\r\n\t\t\tif (cosDoc != null) {\r\n\t\t\t\tcosDoc.close();\r\n\t\t\t}\r\n\t\t\tif (parser != null) {\r\n\t\t\t\tparser.clearResources();\r\n\t\t\t}\r\n\t\t\tif (document != null) {\r\n\t\t\t\tif (page != null) {\r\n\t\t\t\t\tpage.clear();\r\n\t\t\t\t}\r\n\t\t\t\tdocument.close();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn image;\r\n\t}\r\n{code}"
    ],
    [
        "PDFBOX-2265",
        "PDFBOX-436",
        "ArrayIndexOutOfBoundsException in PDICCBased.loadICCProfile I get this exception with the attached file:\r\n{code}\r\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 1\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.loadICCProfile(PDICCBased.java:116)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDICCBased.<init>(PDICCBased.java:84)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:135)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:55)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN.<init>(PDDeviceN.java:87)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:123)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:55)\r\n\tat org.apache.pdfbox.pdmodel.graphics.shading.PDShading.getColorSpace(PDShading.java:212)\r\n{code}\r\n\r\nThe cause is this line:\r\n{code}\r\nfloat[] initial = new float[getColorSpaceType()];\r\n{code}\r\nreplacing it with this line that makes more sense\r\n{code}\r\nfloat[] initial = new float[getNumberOfComponents()];\r\n{code}\r\ngets rid of the exception. I assume that this is a typo, i.e. wrong line was hit in the IDE in the popup. \r\n\r\nThe file now renders without exception. There's a different exception in 1.8, see PDFBOX-2267.",
        "PDFontFactory.createFont returns null if the given parameter fontCache is null As Bart Allen described on the dev-list the method PDFontFactory.createFont always returns null if the the given fontCache is null"
    ],
    [
        "PDFBOX-361",
        "PDFBOX-220",
        "NullPointerException in PDPageNode.getAllKids [Issue from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?func=detail&aid=2008371&group_id=78314&atid=552832\r\n\r\nThe parser cannot seem to find the Pages object in files created with\r\nAcrobat Pro 9. A sample file is attached.\r\n\r\npublic static void main(String[] argv) throws Exception {\r\nString name = \"./test.pdf\";\r\nPDDocument doc = PDDocument.load(name);\r\ndoc.close();\r\nPDPageNode root = doc.getDocumentCatalog().getPages();\r\nArrayList<PDPage> pages = new ArrayList<PDPage>();\r\nroot.getAllKids(pages);\r\nSystem.out.println(\"pages.size() == \"+pages.size());\r\n}\r\n\r\nException in thread \"main\" java.lang.NullPointerException\r\nat org.pdfbox.pdmodel.PDPageNode.getAllKids(PDPageNode.java:194)\r\nat org.pdfbox.pdmodel.PDPageNode.getAllKids(PDPageNode.java:182)\r\n\r\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&file_id=283367&aid=2008371\r\n\r\n[Comment on SourceForge]\r\nDate: 2008-07-02 00:57\r\nSender: foundart\r\nLogged In: YES \r\nuser_id=1693709\r\nOriginator: YES\r\n\r\nThis happens with the latest code from CVS and also in older versions.\r\n\r\n[Comment on SourceForge]\r\nDate: 2008-07-14 17:25\r\nSender: orthello\r\nLogged In: YES \r\nuser_id=853566\r\nOriginator: NO\r\n\r\nWe are experiencing the same problem.  Offending pdf available if any of\r\nyou need it (jwilson@nmcourt.fed.us).  Looks like pdfbox does not support\r\nsome new feature introduced in Acrobat 9.\r\n\r\n[Comment on SourceForge]\r\nDate: 2008-07-14 23:20\r\nSender: foundart\r\nLogged In: YES \r\nuser_id=1693709\r\nOriginator: YES\r\n\r\nIn Acrobat 8, the default was to generate PDFs following version 1.4 of\r\nthe PDF specification.  In Acrobat 9, the default is to to generate PDFs\r\nfollowing version 1.5 of the PDF specification.  PDF1.5 has objects known\r\nas cross-reference streams and it turns out that PDFBox does not parse them\r\ncorrectly.\r\n\r\n",
        "print problem [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1606058\nOriginally submitted by siranovic on 2006-11-30 05:57.\n\nWe have a problem printing a PDF using PDFBox-0.7.3\nError we get is ( java.lang.RuntimeException: Not yet implemented ) after silentPrint() method. Our PDF contains croatian letters and jpeg pictures. If it can somehow help you we generate this document with Apache FOP. I attached a sample PDF.\n\nRegards\nDavor Siranovic\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1606058&file_id=205110\nerror.pdf (application/pdf), 45575 bytes\nPDF with croatian letters and jpeg"
    ],
    [
        "PDFBOX-1613",
        "PDFBOX-2760",
        "The ability to inject the time/random component into the COSWriter process to write a PDF document allows some advanced signature creation scenarios where the signature is generated on a separate server that does not hold the full PDF document. I have developed a prototype server based signing service for the Swedish National eID infrastructure.\r\nI'll skip the details, but I recently switched to PDFBox for the PDF signing process and it works great. However, I had to modify the COSWriter class to get this working.\r\n\r\nI'm writing to check whether you would consider adding the functionality I need to future version of PDFBox.\r\n\r\nThe problem is the the signature service is just producing the signature, it is not trusted to handle the PDF document.\r\nThe government service having the PDF document signed is using PDFBox in a 2 step process.\r\n\r\n1) To produce the SignedAttributes DER Object of the CMS signature to be created. This is the part that is hashed and signed by the signature service.\r\n2) After receiving the signature and signature certs from the signature service, completing the PDF signature by delivering the complete PKCS#7 object to PDFBox using the externally generated signature value and certs.\r\n\r\nThere are probably a more pure way to handle this, but Since PDFBox allows me to create a signature interface that produces the SignedData. I found it to be the easiest way to run the signature process 2 times.\r\n1st pass using dummy key and dummy certs. This only to obtain the SignedAttributes.\r\n2nd pass by delivering a SignedData object that include the Signature value and certs produced by the signature service.\r\n\r\nNow in order to do this, I have to control the random seed added by the COSWriter, or else the signature created by the signature service will not match the hash in the SignedAttributes produced in the second pass.\r\n\r\nMy modification is provided below.\r\nI simply provided an extra input parameter to the write function where I can provide the long seed\r\n\r\nI then added a backwards compatible write function where the long seed is current time.\r\n\r\nBy providing the same seed to pass 1 and pass 2, I can get the externally created signature to match the SignedAttributes produced in the first pass.\r\nThe write function below is identical to the original COSWriter function except that it takes the idTime value from the function input parameter instead of getting it from System.currentTimeMillis().\r\n\r\nModified functions of COSWriter:\r\n\r\n  /**\r\n   * This will write the pdf document.\r\n   *\r\n   * @param doc The document to write.\r\n   *\r\n   * @throws COSVisitorException If an error occurs while generating the data.\r\n   */\r\n  public void write(PDDocument doc) throws COSVisitorException {\r\n      write(doc, System.currentTimeMillis());\r\n  }\r\n\r\n  /**\r\n   * This will write the pdf document.\r\n   *\r\n   * @param doc The document to write.\r\n   * @param idTime The time seed used to generate the id\r\n   *\r\n   * @throws COSVisitorException If an error occurs while generating the data.\r\n   */\r\n  public void write(PDDocument doc, long idTime) throws COSVisitorException {\r\n      document = doc;\r\n      if (incrementalUpdate) {\r\n          prepareIncrement(doc);\r\n      }\r\n\r\n      // if the document says we should remove encryption, then we shouldn't encrypt\r\n      if (doc.isAllSecurityToBeRemoved()) {\r\n          this.willEncrypt = false;\r\n          // also need to get rid of the \"Encrypt\" in the trailer so readers\r\n          // don't try to decrypt a document which is not encrypted\r\n          COSDocument cosDoc = doc.getDocument();\r\n          COSDictionary trailer = cosDoc.getTrailer();\r\n          trailer.removeItem(COSName.ENCRYPT);\r\n      } else {\r\n          SecurityHandler securityHandler = document.getSecurityHandler();\r\n          if (securityHandler != null) {\r\n              try {\r\n                  securityHandler.prepareDocumentForEncryption(document);\r\n                  this.willEncrypt = true;\r\n              } catch (IOException e) {\r\n                  throw new COSVisitorException(e);\r\n              } catch (CryptographyException e) {\r\n                  throw new COSVisitorException(e);\r\n              }\r\n          } else {\r\n              this.willEncrypt = false;\r\n          }\r\n      }\r\n\r\n      COSDocument cosDoc = document.getDocument();\r\n      COSDictionary trailer = cosDoc.getTrailer();\r\n      COSArray idArray = (COSArray) trailer.getDictionaryObject(COSName.ID);\r\n      if (idArray == null || incrementalUpdate) {\r\n          try {\r\n\r\n              //algorithm says to use time/path/size/values in doc to generate\r\n              //the id.  We don't have path or size, so do the best we can\r\n              MessageDigest md = MessageDigest.getInstance(\"MD5\");\r\n\r\n              md.update(Long.toString(idTime).getBytes(\"ISO-8859-1\"));\r\n              COSDictionary info = (COSDictionary) trailer.getDictionaryObject(COSName.INFO);\r\n              if (info != null) {\r\n                  Iterator<COSBase> values = info.getValues().iterator();\r\n                  while (values.hasNext()) {\r\n                      md.update(values.next().toString().getBytes(\"ISO-8859-1\"));\r\n                  }\r\n              }\r\n              idArray = new COSArray();\r\n              COSString id = new COSString(md.digest());\r\n              idArray.add(id);\r\n              idArray.add(id);\r\n              trailer.setItem(COSName.ID, idArray);\r\n          } catch (NoSuchAlgorithmException e) {\r\n              throw new COSVisitorException(e);\r\n          } catch (UnsupportedEncodingException e) {\r\n              throw new COSVisitorException(e);\r\n          }\r\n      }\r\n      cosDoc.accept(this);\r\n  }\r\n\r\n\r\n\r\n\r\nFinally. The way I use this in my signature process is by using this altered static function saveIncremental from the PDFDocument class.\r\nSince this function is static, I just call this duplicated function instead of the one in the PDFDocument class.\r\nHere I use my altered COSWriter  (CsCOSWriter).\r\n\r\n\r\n    /**\r\n     * Save the pdf as incremental. This method is a modification of the same\r\n     * method of PDDcoument. This method use an altered COSWriter that allows\r\n     * control over the time used to create the ID of the document. This way it\r\n     * is possible to perform two consecutive signature generation passes that\r\n     * produce the same document hash.\r\n     *\r\n     * @param doc The document being written with signature creation\r\n     * @param input An input file stream of the document being written\r\n     * @param output An output file stream for the result document\r\n     * @param idTime The time in milliseconds from Jan 1st, 1970 GMT when the\r\n     * signature is created. This time is also used to calculate the ID of the\r\n     * document.\r\n     * @throws IOException if something went wrong\r\n     * @throws COSVisitorException if something went wrong\r\n     */\r\n    public static void saveIncremental(PDDocument doc, FileInputStream input, OutputStream output, long idTime) throws IOException, COSVisitorException {\r\n        //update the count in case any pages have been added behind the scenes.\r\n        doc.getDocumentCatalog().getPages().updateCount();\r\n        CsCOSWriter writer = null;\r\n        try {\r\n            // Sometimes the original file will be missing a newline at the end\r\n            // In order to avoid having %%EOF the first object on the same line\r\n            // as the %%EOF, we put a newline here.  If there's already one at\r\n            // the end of the file, an extra one won't hurt. PDFBOX-1051\r\n            output.write(\"\\r\\n\".getBytes());\r\n            writer = new CsCOSWriter(output, input);\r\n            writer.write(doc, idTime);\r\n            writer.close();\r\n        } finally {\r\n            if (writer != null) {\r\n                writer.close();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n",
        "NPE in MoveText.process() {code}\r\njava.lang.NullPointerException\r\n\tat org.apache.pdfbox.contentstream.operator.text.MoveText.process(MoveText.java:41)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:829)\r\n\tat org.apache.pdfbox.preflight.content.PreflightContentStream.processOperator(PreflightContentStream.java:140)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:810)\r\n\tat org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading.process(MoveTextSetLeading.java:45)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processOperator(PDFStreamEngine.java:829)\r\n\tat org.apache.pdfbox.preflight.content.PreflightContentStream.processOperator(PreflightContentStream.java:140)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processStreamOperators(PDFStreamEngine.java:490)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processStream(PDFStreamEngine.java:456)\r\n\tat org.apache.pdfbox.contentstream.PDFStreamEngine.processPage(PDFStreamEngine.java:167)\r\n\tat org.apache.pdfbox.preflight.content.PreflightContentStream.validatePageContentStream(PreflightContentStream.java:72)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validateContent(SinglePageValidationProcess.java:186)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validate(SinglePageValidationProcess.java:89)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:83)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:55)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validatePage(PageTreeValidationProcess.java:60)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validate(PageTreeValidationProcess.java:48)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:83)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:121)\r\n\tat org.apache.pdfbox.preflight.PreflightDocument.validate(PreflightDocument.java:164)\r\n\tat com.mycompany.preflightmasstest.PreflightChecker.run(PreflightChecker.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n{code}\r\nThe cause is this:\r\n{code}\r\nET\r\n240.48 515.64 1.44 0.6 re\r\nf\r\n243.36 515.64 1.44 0.6 re\r\nf\r\n246.24 515.64 1.44 0.6 re\r\nf\r\n249.12 515.64 1.44 0.6 re\r\nf\r\n252 515.64 1.44 0.6 re\r\nf\r\n254.88 515.64 1.44 0.6 re\r\nf\r\n257.76 515.64 1.44 0.6 re\r\nf\r\n260.64 515.64 1.44 0.6 re\r\nf\r\n263.52 515.64 1.44 0.6 re\r\nf\r\n266.4 515.64 1.44 0.6 re\r\nf\r\n269.28 515.64 1.44 0.6 re\r\nf\r\n23.93.96 1.44 0.6 re\r\nf\r\n1 .0.44--32 -1.18 TD\r\n{code}\r\ni.e. the operator is called outsitde of BT...ET.\r\n"
    ],
    [
        "PDFBOX-1462",
        "PDFBOX-3170",
        "Use file backed buffer for FlateFilter? org.apache.pdfbox.filter.FlateFilter#decompress can cause OOM (depending on the size of the document and configured heap of course.) Consider using something like http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/io/FileBackedOutputStream.html to constraint memory pressure.\r\n\r\n\r\nBest,\r\nEdoardo",
        "Created PDF does not open in Adobe Reader DC When creating a PDF with a single veeeery long line, the resulting PDF cannot be opened in Adobe Reader DC.\r\nThe code is the same as in PDFBOX-3168 except that the string is 300 times the length."
    ],
    [
        "PDFBOX-3025",
        "PDFBOX-2589",
        "Test case for unwanted spaces in text extraction ",
        "Improve examples Our examples are in need of improvement before 2.0 is released. Many examples are using obsolete APIs and don't follow our coding conventions. Many are too simple or too complex."
    ],
    [
        "PDFBOX-3072",
        "PDFBOX-1045",
        "Allow missing page type I came across a PDF document with missing type in the page dictionary. According to the spec that's required and PDFBox has a check and throws an IllegalState if the page is requested to the PDPageTree. Acrobat and other libs handle the same doc so I think the constraint could be relaxed a little, consider valid if type is Page or missing, and consider invalid if it's something else, what do you think?",
        "Typos within the thumbnail datatype R\u00fcdiger Rauschenbach reported some minor typos within the thumbnail datatype implementation of jempbox, see [1] for further details.\r\n\r\n[1] http://markmail.org/thread/tv52uf6jo6b7k3dd "
    ],
    [
        "PDFBOX-1044",
        "PDFBOX-2353",
        "Handle function parameters more abstract When numbers are parsed, PDFBox uses the floating point to detect wether the number is a float (floating point exists) or an integer (no floating point). This may lead to a ClassCastException.",
        "ArrayIndexOutOfBoundsException in Type2CharString.drawAlternatingCurve The file from PDFBOX-2348 fails with this exception:\r\n{code}\r\njava.lang.ArrayIndexOutOfBoundsException: Array index out of range: 3\r\n\tat java.util.Vector.get(Vector.java:744)\r\n\tat org.apache.fontbox.cff.Type2CharString.drawAlternatingCurve(Type2CharString.java:333)\r\n\tat org.apache.fontbox.cff.Type2CharString.handleCommand(Type2CharString.java:181)\r\n\tat org.apache.fontbox.cff.Type2CharString.access$000(Type2CharString.java:32)\r\n\tat org.apache.fontbox.cff.Type2CharString$1.handleCommand(Type2CharString.java:104)\r\n\tat org.apache.fontbox.cff.CharStringHandler.handleSequence(CharStringHandler.java:45)\r\n\tat org.apache.fontbox.cff.Type2CharString.convertType1ToType2(Type2CharString.java:107)\r\n\tat org.apache.fontbox.cff.Type2CharString.<init>(Type2CharString.java:58)\r\n\tat org.apache.fontbox.cff.CIDKeyedType2CharString.<init>(CIDKeyedType2CharString.java:46)\r\n\tat org.apache.fontbox.cff.CFFCIDFont.getType2CharString(CFFCIDFont.java:233)\r\n\tat org.apache.pdfbox.pdmodel.font.PDCIDFontType0.getType2CharString(PDCIDFontType0.java:210)\r\n\tat org.apache.pdfbox.rendering.font.CIDType0Glyph2D.getPathForCharacterCode(CIDType0Glyph2D.java:63)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.drawGlyph2D(PageDrawer.java:431)\r\n{code}"
    ],
    [
        "PDFBOX-1896",
        "PDFBOX-291",
        "Support MMType1 (Multiple Master) Fonts MMType1 Fonts are not supported. They are described on p.416 of the 1.7 spec. I attach a sample file.",
        "Text Extraction strips 1 char when extracting a twin pair [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1761570\nOriginally submitted by nalundgaard on 2007-07-26 13:51.\n\nSee attached file. We found a bug in PDFBox where it appears to randomly delete 1 character of a twin pair of characters. \n\nFor example, we've noticed that what shows up as 1001 in a PDF file (in Acrobat) may become 101 in the text output of TextStripper.exe. This appears to happen to a large number of twin pairs, as evidenced by the attached file. \n\nNote that the file was created using Microsoft Word 11.3.5 on Mac OS X using the \"print to PDF\" feature of Mac OS X 10.4.10. \n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1761570&file_id=238686\ndoublesTest.zip (application/zip), 40221 bytes\nThis zip file contains a test PDF file and the text output from running ExtractText.exe on it, in version 0.7.2 and 0.7.3"
    ],
    [
        "PDFBOX-51",
        "PDFBOX-1599",
        "PDFToImage fails to render correctly [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1180840\nOriginally submitted by the_limper on 2005-04-11 08:56.\n\nPDPage.convertToImage() fails to work correctly.\n\nAttached are two documents that illustrate failures.\n\n1) mtxfidelity.pdf is a file that has the text appear\nbut the layout is incorrect.\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1180840&file_id=129420\nmtxFidelity.pdf (application/pdf), 4585 bytes\nsimple PDF file\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1180840&file_id=129421\ntest.pdf (application/pdf), 70518 bytes\nanother file with rendering issues\n\n[comment on SourceForge]\nOriginally sent by abruegl.\nLogged In: YES \nuser_id=1229585\n\nI would love to use this library for this use only. If this\nclass and method worked (seems to work ok on 1/3 of many\npdfs I have tested) I would be very happy, and would most\nlikey be filling out a donation form.\n\n[comment on SourceForge]\nOriginally sent by the_limper.\nLogged In: YES \nuser_id=1252642\n\n2) test.pdf is a file where the layout is correct but the\ntext is displayed as empty squares",
        "ConvertToImage gets ClassCastException with Checkboxes in PDFForm When creating an image from a PDF Form we get an CastCastException in:\r\nException in thread \"main\" java.lang.ClassCastException: org.apache.pdfbox.cos.COSName cannot be cast to org.apache.pdfbox.cos.COSStream\r\n        at org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary.getNormalAppearance(PDAppearanceDictionary.java:103)\r\n        at org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:140)\r\n        at org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:781)\r\n        at org.apache.pdfbox.examples.util.Extraction$BarcodeLocator.getBarcode(Extraction.java:418)\r\n        at org.apache.pdfbox.examples.util.Extraction$BarcodeLocator.access$000(Extraction.java:379)\r\n        at org.apache.pdfbox.examples.util.Extraction.<init>(Extraction.java:103)\r\n        at org.apache.pdfbox.examples.util.Extraction.main(Extraction.java:138)\r\n\r\nAn further analysis shows that it seems to be related to checkboxes on the PDF Form. I fixed it temporarily using:\r\n\r\ntry\r\n\t\t\t{\r\n\t\t\t\tCOSStream as = (COSStream)map.getDictionaryObject( asName );\r\n\t\t\t\tactuals.put( asName.getName(), new PDAppearanceStream( as ) );\r\n\t\t\t}\r\n\t\t\tcatch (ClassCastException ex)\r\n\t\t\t{\r\n\t\t\t\tSystem.err.println(\"Exception name: \" + asName.getName());\r\n\t\t\t}\r\nin PDAppearanceDictionary.java.\r\n\r\nBest regards\r\nJens"
    ],
    [
        "PDFBOX-451",
        "PDFBOX-1871",
        "PDFImageWriter does not convert chinese PDF correctly i am using PDFImageWriter to write a Chinese PDF to jpeg file. The jpeg files do not contain the Chinese characters, instead it contains series of boxes. The Chinese PDF used is present in  PDFBox\\test\\pdfparser\\genko_oc_shiryo1.pdf",
        "Content appears a few px higher when rasterizing PDF PDFBox seems to be off by a little bit vertically when you rasterize a PDF. This is in comparison to both Adobe's PDF library and many other PDF viewers such as Chrome's and the one in OS X.\r\n\r\nI've attached an example PDF where there's some text with a green rectangle around it. The rectangle is has about 2x as much space above it compared to below it, but in PDFBox's raster, the rectangle is closer to the top than is is to the bottom.\r\n\r\nThis is obvious at 300 dpi but at 96 dpi it's hard to tell for sure. Anecdotally, I've noticed that when rendering text at about 74 dpi, PDFBox seems to be off by about 1px.\r\n\r\nI've attached both a PDFBox raster and one made with Adobe's PDF library for comparison.\r\njava -jar pdfbox-app-1.8.3.jar PDFToImage -imageType PNG -resolution 300 -color rgba test-text-alignment-textbox.pdf"
    ],
    [
        "PDFBOX-2187",
        "PDFBOX-495",
        "ArrayIndexOutOfBoundsException in TIFFFaxDecoder I get ArrayIndexOutOfBoundsExceptions at two locations with several files from the digitalcorpora site:\r\n\r\n{code}\r\nException in thread \"AWT-EventQueue-0\" java.lang.ArrayIndexOutOfBoundsException: 16\r\n        at org.apache.pdfbox.filter.ccitt.TIFFFaxDecoder.decodeT6(TIFFFaxDecoder\r\n.java:1002)        at org.apache.pdfbox.filter.CCITTFaxFilter.decode(CCITTFaxFilter.java:95)\r\n...\r\n{code}\r\n\r\nor\r\n\r\n{code}\r\nException in thread \"AWT-EventQueue-0\" java.lang.ArrayIndexOutOfBoundsException:1\r\n       at org.apache.pdfbox.filter.ccitt.TIFFFaxDecoder.decodeT6(TIFFFaxDecoder.java:916)       at org.apache.pdfbox.filter.CCITTFaxFilter.decode(CCITTFaxFilter.java:95)\r\n{code}\r\n\r\nThe fix, which is also used by others who use the same code and which solves both exceptions, is to increase w by one in this segment:\r\n\r\n{code}\r\n        this.prevChangingElems = new int[w];\r\n        this.currChangingElems = new int[w];\r\n{code}",
        "PDFTextStripperByArea extracts text only from 1 region, despite several regions being defined When trying to extract the text from several areas defined in the PDFTextStripperByArea,  it only\r\nretrieves the text from one. The problem can be seen with the following steps: \r\n\r\nDivide a page in 4 regions and add the regions to the stripper in\r\nthe following order:\r\n1-upper left, 2-upper right, 3-lower left, 4-lower right.\r\n\r\nAfter calling \"extractRegions\" function, only the text for the third\r\none is retrieved.\r\n\r\nIf the third region is not added (i.e., only regions 1, 2 and 4 are added), only the text for region 2 is retrieved."
    ],
    [
        "PDFBOX-641",
        "PDFBOX-1731",
        "PDNameTreeNode: Keys in Names shall be sorted According to PDF 32000-1:2008 page 89, paragraph following table 36, the keys in Names shall be sorted. So the parameter for setNames(Map) and the return value for getNames() should better be a SortedMap.",
        "Converting pdf to Image I'm trying to convert a pdf page to image but an exception occurs:\r\n\r\n17:28:20,652 ERROR [org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap] (Thread-69) Something went wrong ... the pixelmap doesn't contain any data.\r\n17:28:20,654 WARN  [org.apache.pdfbox.util.operator.pagedrawer.Invoke] (Thread-69) getRGBImage returned NULL\r\n17:28:20,661 INFO  [org.apache.pdfbox.util.PDFStreamEngine] (Thread-69) unsupported/disabled operation: i\r\n17:28:36,809 ERROR [stderr] (Thread-70) Exception in thread \"Thread-70\" java.lang.OutOfMemoryError: Java heap space\r\n\r\n17:28:36,811 ERROR [stderr] (Thread-70) \tat java.awt.image.DataBufferByte.<init>(DataBufferByte.java:92)\r\n\r\n17:28:36,812 ERROR [stderr] (Thread-70) \tat java.awt.image.ComponentSampleModel.createDataBuffer(ComponentSampleModel.java:415)\r\n\r\n17:28:36,814 ERROR [stderr] (Thread-70) \tat java.awt.image.Raster.createWritableRaster(Raster.java:941)\r\n\r\n17:28:36,814 ERROR [stderr] (Thread-70) \tat javax.imageio.ImageTypeSpecifier.createBufferedImage(ImageTypeSpecifier.java:1073)\r\n\r\n17:28:36,815 ERROR [stderr] (Thread-70) \tat javax.imageio.ImageReader.getDestination(ImageReader.java:2896)\r\n\r\n17:28:36,816 ERROR [stderr] (Thread-70) \tat com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:1066)\r\n\r\n17:28:36,817 ERROR [stderr] (Thread-70) \tat com.sun.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:1034)\r\n\r\n17:28:36,818 ERROR [stderr] (Thread-70) \tat javax.imageio.ImageIO.read(ImageIO.java:1448)\r\n\r\n17:28:36,818 ERROR [stderr] (Thread-70) \tat javax.imageio.ImageIO.read(ImageIO.java:1352)\r\n\r\n17:28:36,819 ERROR [stderr] (Thread-70) \tat org.apache.pdfbox.pdmodel.graphics.xobject.PDJpeg.getRGBImage(PDJpeg.java:264)\r\n\r\n17:28:36,820 ERROR [stderr] (Thread-70) \tat org.apache.pdfbox.util.operator.pagedrawer.Invoke.process(Invoke.java:83)\r\n\r\n17:28:36,821 ERROR [stderr] (Thread-70) \tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:554)\r\n\r\n17:28:36,823 ERROR [stderr] (Thread-70) \tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:268)\r\n\r\n17:28:36,824 ERROR [stderr] (Thread-70) \tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)\r\n\r\n17:28:36,825 ERROR [stderr] (Thread-70) \tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:215)\r\n\r\n17:28:36,826 ERROR [stderr] (Thread-70) \tat org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:125)\r\n\r\n17:28:36,827 ERROR [stderr] (Thread-70) \tat org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:769)\r\n\r\n\r\nMy code:\r\npublic static List<BufferedImage> getPdfPagesAsImages(String pdfPath)\r\n\t\t\tthrows IOException {\r\n\t\tFile f = new File(pdfPath);\r\n\t\tPDDocument pdfDocument = null;\r\n\t\tpdfDocument = PDDocument.loadNonSeq(f, null);\r\n\t\tList<BufferedImage> bImages = new ArrayList<BufferedImage>();\r\n\t\ttry {\r\n\t\t\tSystem.out.println(pdfPath);\r\n\t\t\tint resolution = 185;\r\n\t\t\tif (pdfDocument != null) {\r\n\t\t\t\t@SuppressWarnings(\"unchecked\")\r\n\t\t\t\tList<PDPage> pages = (List<PDPage>) pdfDocument\r\n\t\t\t\t\t\t.getDocumentCatalog().getAllPages();\r\n\t\t\t\tfor (PDPage p : pages) {\r\n\t\t\t\t\tBufferedImage convertedImage = p.convertToImage(\r\n\t\t\t\t\t\t\tBufferedImage.TYPE_INT_RGB, resolution);\r\n\t\t\t\t\tif (isNegativeImage(convertedImage)) {\r\n\t\t\t\t\t\tbImages.add(invertNegativeImage(convertedImage));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbImages.add(convertedImage);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (FileNotFoundException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\te.getMessage();\r\n\t\t\te.getCause();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\te.getMessage();\r\n\t\t\te.getCause();\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\te.getMessage();\r\n\t\t\te.getCause();\r\n\t\t} finally {\r\n\t\t\tpdfDocument.close();\r\n\t\t}\r\n\t\treturn bImages;\r\n\t}\r\n\r\n\r\nI atached my pdf.\r\nI have e10000 pdf to verify and about 30% throws this kind of exception\r\n"
    ],
    [
        "PDFBOX-133",
        "PDFBOX-519",
        "Text is not sorted when characters are rotated [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1430380\nOriginally submitted by benlitchfield on 2006-02-12 17:12.\n\nCertain PDFs have text that is rotated, but not the \nwhole page, need to be able to sort this and deal with \nspaces properly.\n\nSee rotated-page-again.pdf",
        "NullPointerException in SetNonStrokingSeparation.java Caused by a failure to check for a null return from PDSeparation.getColorValues()\r\n\r\njava.lang.NullPointerException\r\n \tat org.apache.pdfbox.util.operator.SetNonStrokingSeparation.process(SetNonStrokingSeparation.java:56)\r\n \tat org.apache.pdfbox.util.operator.SetStrokingColor.process(SetStrokingColor.java:78)\r\n \tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:510)\r\n \tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:223)\r\n \tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:182)\r\n \tat org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:92)\r\n \tat org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:686)"
    ],
    [
        "PDFBOX-2765",
        "PDFBOX-2820",
        "Add method to subset fonts for document pre-save I have a custom COSWriter which compresses all streams and runs a SHA1 sum over each object, only writing one instance of each object with the same SHA1 sum.\r\n\r\nThis really helps compress PDFs.\r\n\r\nI use this by calling MyCustomCOSWriter.write(PDDocument);\r\n\r\nThe trouble is that I have no way of calling the font subsetting that happens in PDDocument.save(). \r\n\r\nCould we have a method to perform that font subsetting manually?",
        "Configure and enable checkstyle for fontbox. The fontbox sub-tree contains an apparently old checkstyle configuration file, which no longer works for checkstyle 5 or later. I'm not sure if it is being used or not. In any case, it would be useful (IMO) to update this configuration and enable the use of checkstyle:check in the validate phase and checkstyle:checkstyle in the site phase. The former goal is useful for inducing a fail at build time, while the latter is useful for report generation.\r\n\r\nI will attach a patch to this issue that implements the above. For the time being, I've temporarily disabled a few checks due to their producing a rather large number of warnings. Once this initial patch is merged, I will post another patch that re-enables the checks and fixes existing warnings.\r\n\r\nNote that the current checkstyle plugin (version 2.15) employs checkstyle 6.1.1 by default."
    ],
    [
        "PDFBOX-2506",
        "PDFBOX-194",
        "Antialiasing Hints set into Graphics2D does not seem to work after it was already used. The following in Pagedrawer.java does not seem to work.\r\n\r\n{code}\r\npublic void drawPage( Graphics g, PDPage p, Dimension pageDimension ) throws IOException\r\n    {\r\n        graphics = (Graphics2D)g;\r\n//hints set here does not seem to work\r\n        graphics.setRenderingHint( RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON );\r\n        graphics.setRenderingHint( RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON );\r\n{code}\r\nIn PDPage.java, the Graphics2D object is first manipulated before bing passed over to PageDrawer. Setting of hints into Graphics2D in PageDrawer does not seem to work.\r\n{code}\r\n    public BufferedImage convertToImage(int imageType, int resolution) throws IOException\r\n    {\r\n        Graphics2D graphics = (Graphics2D)retval.getGraphics();\r\n//possible fix: hints set here works\r\n        graphics.setBackground( TRANSPARENT_WHITE );\r\n        graphics.clearRect( 0, 0, retval.getWidth(), retval.getHeight() );\r\n        graphics.translate(translateX,translateY);\r\n        graphics.rotate((float)Math.toRadians(rotationAngle));\r\n        graphics.scale( scaling, scaling );\r\n        PageDrawer drawer = new PageDrawer();\r\n        drawer.drawPage( graphics, this, pageDimension );\r\n        drawer.dispose();\r\n        graphics.dispose();\r\n        return retval;\r\n    }\r\n{code}",
        "PDPageXYZDestination jumps one page too far [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1549236\nOriginally submitted by nobody on 2006-08-30 05:05.\n\nWhen using PDPageXYZDestination with zoom -1, top 0 and\nleft 0 (other valeus, too) it jumps one page further\nthan it should.\nThis also means that PDPageXYZDestination can't jump to\nthe first page"
    ],
    [
        "PDFBOX-1448",
        "PDFBOX-794",
        "Printing based on the document orientation We are using PDFBox in our current project to print a pdf file directly to an attached network printer. Printing PDF documents having only portrait pages within worked like a charm. \r\n \r\nHowever we experienced problems with PDFs having LANDSCAPE pages defined, as the orientation is currently always defined by the printer service and not by the PDDocument. This may be desireable in some situations but undesirable in others. Printing PDFs with PORTRAIT and LANDSCAPE pages in one document may lead to strange print results as the landscape pages are truncated to a PORTRAIT width.\r\n\r\nIt would be good to have a possibility to change the mechanism how the orientation will be determined. This also would allow to fix the following bugs without breaking the current semantics:\r\nPDFBOX-985\r\nPDFBOX-819\r\nPDFBOX-222",
        "PDPage convertToImage generates white image with no contents When converting a PDPage to an image where the mediaBox, cropBox, and trimBox width/height are slightly larger than that of the PDDocument pageFormat height/width, the resulting image appears blank.  A warning message appears in the log 'getRGBImage returned NULL'.  The PDF is rendered fine."
    ],
    [
        "PDFBOX-2535",
        "PDFBOX-1095",
        "mention subtype in COSStream IOException and not only in ResourcesValidationProcess.java",
        "PDFToImage image rendering fails on pdf with embedded picture(s) "
    ],
    [
        "PDFBOX-1015",
        "PDFBOX-2868",
        "Draw Rotated Box While developing an app using PDFBox, I had a need to draw a rotated box.  I did not see a function in the PDPageContentStream, so I built my own.  The code is below.  Perhaps it could be included as a method in the PDPageContentStream class in a future release?  If such a method already exists somewhere, I apologize for creating white noise with this post.\r\n\r\n    /**\r\n     * Method to draw a box, rotated counterclockwise about the start point.\r\n     * @param cs ContentStream to which the box should be added.\r\n     * @param rotation Rotation, in degrees.\r\n     * @param startX Bottom-left (pre-rotation) x-coordinate\r\n     * @param startY Bottom-left (pre-rotation) y-coordinate\r\n     * @param width Box width\r\n     * @param height Box height\r\n     * @param lineWidth Line Width\r\n     */\r\n    private void drawRotatedBox(\r\n            PDPageContentStream cs,\r\n            float rotation,\r\n            float startX,\r\n            float startY,\r\n            float width,\r\n            float height,\r\n            float lineWidth) {\r\n        logger.trace(\"Entered Method: {drawRotatedBox}\");\r\n        \r\n        try {\r\n            double rads = Math.toRadians(rotation);\r\n            cs.setLineWidth(lineWidth);\r\n            float[][] coords = new float[4][2];\r\n            //bottom-left\r\n            coords[0][0] = startX;\r\n            coords[0][1] = startY;\r\n            //bottom-right\r\n            coords[1][0] = coords[0][0]+(float)(Math.cos(rads)*width);\r\n            coords[1][1] = coords[0][1]+(float)(Math.sin(rads)*width);\r\n            //top-right\r\n            coords[2][0] = coords[1][0]-(float)(Math.sin(rads)*height);\r\n            coords[2][1] = coords[1][1]+(float)(Math.cos(rads)*height);\r\n            //top-left\r\n            coords[3][0] = coords[2][0]-(float)(Math.cos(rads)*width);\r\n            coords[3][1] = coords[2][1]-(float)(Math.sin(rads)*width);\r\n            \r\n            //draw the box\r\n            cs.moveTo(coords[0][0], coords[0][1]);\r\n            cs.lineTo(coords[1][0], coords[1][1]);\r\n            cs.lineTo(coords[2][0], coords[2][1]);\r\n            cs.lineTo(coords[3][0], coords[3][1]);\r\n            //close the box.  shift +/- 1/2 the line width to ensure complete closure\r\n            cs.lineTo(coords[0][0]+(lineWidth/2), coords[0][1]-(lineWidth/2));\r\n            \r\n//            Display coordinate map during debugging\r\n//            for (int i=0; i<4; i++){\r\n//                int j=0;\r\n//                    logger.trace(\"x: \" + coords[i][j] + \"; y: \" + coords[i][j+1]);\r\n//            }\r\n            \r\n            coords=null;  //gc\r\n            cs.stroke();\r\n        } catch (IOException ioe) {\r\n            logger.error(\"Problem occurred while drawing the rotated box.\");\r\n        }\r\n\r\n        logger.trace(\"Method Complete: {drawRotatedBox}\");\r\n    }\r\n\r\n",
        "NPE in Acroform getValueAsString The most common exception in the first run of 2.0.0-trunk against govdocs1 is this:\r\n{noformat}\r\njava.lang.NullPointerException\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField.getValueAsString(PDNonTerminalField.java:181)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.addFieldString(PDF2XHTML.java:615)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.processAcroField(PDF2XHTML.java:580)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.extractAcroForm(PDF2XHTML.java:567)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.endDocument(PDF2XHTML.java:201)\r\n\tat org.apache.pdfbox.text.PDFTextStripper.writeText(PDFTextStripper.java:250)\r\n\tat org.apache.tika.parser.pdf.PDF2XHTML.process(PDF2XHTML.java:137)\r\n\tat org.apache.tika.parser.pdf.PDFParser.parse(PDFParser.java:132)\r\n{noformat}\r\n"
    ],
    [
        "PDFBOX-1277",
        "PDFBOX-3202",
        "NPE when extracting image inside form Unsing current HEAD version:\r\n\r\njava -cp app/target/pdfbox-app-1.7.0-SNAPSHOT.jar org.apache.pdfbox.ExtractImages /tmp/in.pdf \r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat org.apache.pdfbox.ExtractImages.processResources(ExtractImages.java:166)\r\n\tat org.apache.pdfbox.ExtractImages.processResources(ExtractImages.java:195)\r\n\tat org.apache.pdfbox.ExtractImages.extractImages(ExtractImages.java:150)\r\n\tat org.apache.pdfbox.ExtractImages.main(ExtractImages.java:64)\r\n",
        "Rename structure element setter of PDOutlineItem While playing around with the library I stumbled over a naming inconsistency between the getter and setter of a {{PDOutlineItem}} structure element.\r\n\r\nThe getter is named {{getStructureElement}} whereas the setter is named {{setStructuredElement}} which is a bit confusing."
    ],
    [
        "PDFBOX-50",
        "PDFBOX-2436",
        "Hierarchical PDRadioCollections cannot be processed. [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1178668\nOriginally submitted by mystikspiral on 2005-04-07 09:23.\n\nIf there is a hierarchical series of PDRadioCollections, \nthe list cannot be processed past the first instance of \nPDRadioCollection.  This is due to the fact that that the \ngetKids() method of PDRadioCollection is hard-coded to \nreturn a List of PDCheckbox objects. \n\nSimplified Example (See attached File):\nApplicant.Coverage (Coverage is a PDRadioCollection) \nApplicant.Coverage.Medical (Medical is a \nPDRadioCollection) \nApplicant.Coverage.Dental (Dental is a \nPDRadioCollection) \n\nPDRadioCollection Coverage = theForm.getField\n(\"Applicant.Coverage\");\nList kids = Coverage.getKids();\n...iterate kids....\nif(kid_1 instanceof PDRadioCollection){\n   //this should be true\n}\nelse if(kid_1 instanceof PDField){ {\n   //instead, we go here because the List contains \nPDCheckbox objects.\n}\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1178668&file_id=128963\nPDRadioCollection.java (java/*), 5833 bytes\nModified PDRadioCollection.java that fixes nested Radio Button objects.\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nI don't see the PDF on the FTP site, can you try to upload it \nagain, thanks.\n\nBen\n\n[comment on SourceForge]\nOriginally sent by mystikspiral.\nLogged In: YES \nuser_id=1245859\n\nI have resolved this issue, at least in so far as my \nrequirements dictated.  Instead of returning a List od \nPDCheckbox objects, the PDFieldFactory is now used to \ncreate the appropriate field in the lsit.  I am attaching \nPDRadioCollection.java for your review.  I hope you can use \nthis to close this issue with little to no effort on your end.\n\nNote the modified version of PDRadioCollection.java is taken \nfrom a slightly old nightly build, PDFBox-0.7.1-dev-20050328.\n\nThanks.\n\n[comment on SourceForge]\nOriginally sent by mystikspiral.\nLogged In: YES \nuser_id=1245859\n\nUploading file to ftp.pdfbox.org \ncalled \"Nested_PDRadioCollections.pdf\" because the upload \nas an attachment to this report failed beacause the size \nrestrictions were exceeded.  \n\nSorry for any confusion.",
        "Parsing error PDDocument.load method returns without exception, but document model is incomplete.\r\n\r\nYou can try it by this code on attached file:\r\n{code}\r\nPDDocument document = PDDocument.load(new File(inFN), null);\r\nint size = document.getSignatureDictionaries().size();\r\nSystem.out.println(\"Signatures count:\" +size);\r\n{code}\r\n\r\nOutput is 1, but there are two signatures in PDF document.\r\n\r\nPDFParser.class produces IOException and ignores it on line 196. Rest of the document is ignored.\r\n\r\nloadNoSeq method works, but I cannot use it, because I want to attach a new signature."
    ],
    [
        "PDFBOX-2855",
        "PDFBOX-736",
        "Allow some flexibility for divergences from the standard on Seq vs Bag in DomXMPParser While working on TIKA-1285 (migrate to PDFBox 2.0.0), [~rpialum] noticed that the DomXmpParser was failing on some XMP with:\r\n\r\n{noformat}\r\norg.apache.xmpbox.xml.XmpParsingException: Invalid array type, expecting Seq and found Bag [prefix=dc; name=creator]\r\n\tat org.apache.xmpbox.xml.DomXmpParser.manageArray(DomXmpParser.java:449)\r\n\tat org.apache.xmpbox.xml.DomXmpParser.createProperty(DomXmpParser.java:338)\r\n\tat org.apache.xmpbox.xml.DomXmpParser.parseChildrenAsProperties(DomXmpParser.java:305)\r\n\tat org.apache.xmpbox.xml.DomXmpParser.parseDescriptionRoot(DomXmpParser.java:234)\r\n\tat org.apache.xmpbox.xml.DomXmpParser.parse(DomXmpParser.java:198)\r\n\tat org.apache.tika.parser.pdf.PDFParser.extractMetadata(PDFParser.java:202)\r\n{noformat}\r\n\r\nOne file that triggers this is available on Tika-1252 [here| https://issues.apache.org/jira/secure/attachment/12632592/Sample%20%28Acrobat%204.x%29.pdf ]\r\n\r\nThe raw xmp for that file includes: \r\n{noformat}\r\n         <dc:creator>\r\n            <rdf:Bag>\r\n               <rdf:li>Single Author</rdf:li>\r\n            </rdf:Bag>\r\n         </dc:creator>\r\n{noformat}\r\n\r\nOn TIKA-1252, I confirmed that this is against the spec [link|https://issues.apache.org/jira/browse/TIKA-1252?focusedCommentId=13919846&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13919846] and [~alexandre.madurell@gmail.com] confirmed that this was what Acrobat was generating [link|https://issues.apache.org/jira/browse/TIKA-1252?focusedCommentId=13919858&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13919858].\r\n\r\nSo, would it be easy enough to allow for some divergence from the standard?\r\n\r\nCode to reproduce issue in tika setup:\r\n{noformat}\r\n    @Test\r\n    public void oneOffMetadataTest() throws Exception {\r\n        PDDocument doc = PDDocument.load(this.getClass().getResourceAsStream(\"/test-documents/sampleAcrobat_4_x.pdf\"));\r\n        DomXmpParser p = new DomXmpParser();\r\n        p.setStrictParsing(false);\r\n        p.parse(doc.getDocumentCatalog().getMetadata().exportXMPMetadata());\r\n    }\r\n{noformat}",
        "Implementation of the DeviceN colorspace The DeviceN colorspace needs to be implemented."
    ],
    [
        "PDFBOX-1258",
        "PDFBOX-580",
        "2.4.9 Invalid color space..ok with commercial validators AutoPPDFA.pdf is not valid, error(s):\r\n2.4.9:Invalid Color space, Invalid Color space, ICCBased ColorSpace is forbidden.",
        "Use a dummy color instead of failing with unsupported color spaces At work we encounter some PDF files with color spaces that PDFBox does not support. Currently an IOException gets thrown whenever such color spaces are being accessed, which is not ideal especially (as often is the case) when the troublesome color space is only used for some small part of the document. It would be nicer if PDFBox just logged a warning about the problem and used some dummy color for the entire troublesome color space.\r\n\r\nFor the record, the IOException trace we're seeing is:\r\n\r\norg.apache.pdfbox.pdmodel.graphics.color.PDColorState java.io.IOException: Not implemented java.io.IOException: Not implemented\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDPattern.createColorSpace(PDPattern.java:92)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.getJavaColorSpace(PDColorSpace.java:85)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorState.createColor(PDColorState.java:138)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorState.getJavaColor(PDColorState.java:112)\r\n\tat org.apache.pdfbox.pdfviewer.PageDrawer.fillPath(PageDrawer.java:260)\r\n\tat org.apache.pdfbox.util.operator.pagedrawer.FillEvenOddRule.process(FillEvenOddRule.java:56)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:516)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:229)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:188)\r\n\tat org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:99)\r\n\tat org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:692)\r\n\tat org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:663)"
    ],
    [
        "PDFBOX-2516",
        "PDFBOX-1423",
        "Further align AcroForms and Fields PDModel with PDF specification The PDModel for AcroForms and the fields being part of it  (o.a.p.pdmodel.interactive.form) needs to be enhanced. Sample issues:\r\n\r\n - RadioButton and Checkbox don\u2019t support DV entries although they should\r\n - inheritable attributes only support inheritance either form their parent or the root of the AcroForms model which is not inline with the specification",
        "\"An error exists on this page. Acrobat may not display the page correctly.\" after generate the pdf. Open it within Adobe Reader X has no problem, but if print it, a window pops up with \"An error exits on this page. Acrobat may not display the page correctly. Please contact the person who created the PDF document to correct the problem\", printed result looks ok. \r\nIt seems there is no such popup message on Adobe Reader 9."
    ],
    [
        "PDFBOX-211",
        "PDFBOX-2077",
        "Regression: ArrayIndexOutOfBoundsException in PDFBox 0.7.3 [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1585354\nOriginally submitted by cfmfluit on 2006-10-26 13:38.\n\nWhile extracting the text from a PDF using\nPDFTextStripper I get the following exception:\n\nException in thread \"Thread-6\"\njava.lang.ArrayIndexOutOfBoundsException: 4\n at\norg.fontbox.cmap.CMapParser.parseNextToken(CMapParser.java:294)\n at org.fontbox.cmap.CMapParser.parse(CMapParser.java:103)\n at\norg.pdfbox.pdmodel.font.PDFont.parseCmap(PDFont.java:535)\n at org.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:387)\n at\norg.pdfbox.util.PDFStreamEngine.showString(PDFStreamEngine.java:325)\n at\norg.pdfbox.util.operator.ShowTextGlyph.process(ShowTextGlyph.java:80)\n at\norg.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:452)\n at\norg.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:215)\n at\norg.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:174)\n at\norg.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:336)\n at\norg.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:259)\n at\norg.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:216)\n at\norg.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:149)\n at\norg.semanticdesktop.aperture.extractor.pdf.PdfExtractor.processDocument(PdfExtractor.java:91)\n at\norg.semanticdesktop.aperture.extractor.pdf.PdfExtractor.extract(PdfExtractor.java:52)\n at\norg.semanticdesktop.aperture.extractor.util.ThreadedExtractorWrapper$ExtractionThread.run(ThreadedExtractorWrapper.java:158)\n\nI'm using PDFBox 0.7.3. With version 0.7.2 text\nextraction on this file worked fine.\n\nThe PDF file is not online anymore and I don't know\nwhether the author would appreciate it if I put it\nonline somewhere, but I can send it to you if you like\n(mail me at chris AT aduna-software.com).\n\n[comment on SourceForge]\nOriginally sent by junprevo.\nLogged In: YES \nuser_id=1663139\nOriginator: NO\n\nHi, ben \nI did some work on this bug. don't know how to send my code to you. I will just paste my fix here. \n\ninside CMapParser.java\n\nin the method\nprivate Object parseNextToken(PushbackInputStream is)\n        throws IOException\n{\n ..........\n\n case 60: // '<'\n        {\n            int theNextByte = is.read();\n            if(theNextByte == 60)\n            {\n                Map <Object, Object> result = new HashMap <Object, Object> ();\n                for(Object key = parseNextToken(is); (key instanceof LiteralName) && key != \">>\"; key = parseNextToken(is))\n                {\n                    Object value = parseNextToken(is);\n                    result.put(((LiteralName)key).name, value);\n                }\n\n                retval = result;\n                break;\n            }\n            // increase array size from 4 to 6 \n            byte [] buffer = new byte[6];\n            int multiplyer = 16;\n            int bufferIndex = -1;\n            for(;theNextByte != -1 && theNextByte != 62; theNextByte = is.read())\n            {\n                int intValue = 0;\n                if(theNextByte >= 48 && theNextByte <= 57)\n                    intValue = theNextByte - 48;\n                else\n                if(theNextByte >= 65 && theNextByte <= 70)\n                    intValue = (10 + theNextByte) - 65;\n                else\n                if(theNextByte >= 97 && theNextByte <= 102)\n                    intValue = (10 + theNextByte) - 97;\n                else\n                    throw new IOException(\"Error: expected hex character and not \" + (char)theNextByte + \":\" + theNextByte);\n                intValue *= multiplyer;\n                if(multiplyer == 16)\n                {\n                    bufferIndex++;\n                    multiplyer = 1;\n                } else\n                {\n                    multiplyer = 16;\n                }\n                \n                if(bufferIndex==buffer.length)\n                {  \n                   byte [] tempbuffer=buffer;\n                   buffer = new byte [buffer.length+2];\n                   for(int ts=0; ts<tempbuffer.length;ts++)\n                   {\n                     buffer[ts]=tempbuffer[ts];  \n                   }\n                }\n                buffer[bufferIndex] += intValue;\n                \n                \n            }\n\n            byte finalResult[] = new byte[bufferIndex + 1];\n            System.arraycopy(buffer, 0, finalResult, 0, bufferIndex + 1);\n            retval = finalResult;\n            break;\n        }\n............ \n\n}\n\n[comment on SourceForge]\nOriginally sent by fotb.\nLogged In: YES \nuser_id=1662347\nOriginator: NO\n\nI have also this problem.\n\nDoes anyone know if there has been any resolution to the ArrayIndexOutOfBoundsException:4  problem.\nI have extracted text from 300 pdfs using  0.7.3.  All extractions were successful except 3.  I recieved this error message when trying to extract text from these 3 pds (java.lang.ArrayIndexOutOfBoundsException:4).  I am able to open the pdfs fine and they have no special security applied to them.  Any ideas as to why PDFBOX 0.7.3 is hiccuping while trying to process these files?:\n\n\n     \n\n\n[comment on SourceForge]\nOriginally sent by fotb.\nLogged In: YES \nuser_id=1662347\nOriginator: NO\n\nI have also this problem.\n\nDoes anyone know if there has been any resolution to the ArrayIndexOutOfBoundsException:4  problem.\nI have extracted text from 300 pdfs using  0.7.3.  All extractions were successful except 3.  I recieved this error message when trying to extract text from these 3 pds (java.lang.ArrayIndexOutOfBoundsException:4).  I am able to open the pdfs fine and they have no special security applied to them.  Any ideas as to why PDFBOX 0.7.3 is hiccuping while trying to process these files?:\n\n\n     \n\n\n[comment on SourceForge]\nOriginally sent by martin_weindel.\nLogged In: YES \nuser_id=1646209\nOriginator: NO\n\nSame problem with following PDF: http://www.vmware.com/pdf/server_datasheet.pdf",
        "Empty (invalid) DecodeParms is added to image PDF contains image (xobject), it as no \"/DecodeParms\".\r\nPDFBox adds empty \"/DecodeParms\" to this image which results to invalid PDF and Adobe reader complains about it.\r\n\r\nProblem is caused by calling PDResources.getXObjects().\r\n\r\nIt is very similar to PDFBOX-2042"
    ],
    [
        "PDFBOX-3153",
        "PDFBOX-2515",
        "Direct JPEG extraction results in invalid images in 2.0.0 releases. When I run pdfbox-app ExtractImages on a PDF containing an image with a DeviceRGB colorspace, the resulting JPEG file is very large (5.3MB, while the source PDF is 320KB).\r\n\r\nI see this with the 2.0.0-RC2 release, I also encounter the problem with a build from today's trunk.\r\n\r\nIf I modify the code to force usage of ImageIO, a valid JPEG file results.\r\n\r\nThe image extracts properly in the 1.8.10 version.",
        "Improve the non sequential parser to be used when signing a pdf After removing/replacing the usage of the old parser (see PDFBOX-2430), there is just one purpose left which still requires the old parser, signing a pdf. We have to improve the non sequential pars, so that we can finally remove the old one."
    ],
    [
        "PDFBOX-2584",
        "PDFBOX-2234",
        "Text extraction reports zero character widths  We are using PDFBox API to get position of characters within a document\r\nHave found a problem with one document:: text extraction properly extracting text but set all character's width to zero\r\n\r\nCode is pretty simple\r\n{code}\r\n            File input = new File(\"stip_2c.pdf\");\r\n            document = PDDocument.load(input);\r\n            \r\n            PDFTextStripper extractor = new PDFTextStripper();\r\n            Writer output = new StringWriter();\r\n\r\n            extractor.writeText(document, output);\r\n{code}\r\n\r\nWe are examining then value of Extractor.charactersByArticle member for characters widths\r\n\r\n- Have found the issue in 1.8.4\r\nall chars widths were == zero\r\n\r\n- in version 1.8.8\r\nall chars widths were == zero except whitespaces.\r\nSee new validation added in 1.8.8\r\nFile \r\npdfbox-1.8.8-src\\pdfbox\\src\\main\\java\\org\\apache\\pdfbox\\util\\PDFStreamEngine.java\r\nline 369\r\n{code}        if (spaceWidthText == 0)\r\n        {\r\n            spaceWidthText = 1.0f; // if could not find font, use a generic value\r\n        }        {code}\r\n\r\n- in version 2.0.0 problem still exists\r\n",
        "[PATCH] Invalid Color space preflight error on Java 8 java -cp pdf-box-svn/preflight/target/preflight-2.0.0-SNAPSHOT.jar:pdf-box-svn/app/target/pdfbox-app-2.0.0-SNAPSHOT.jar:pdf-box-svn/xmpbox/target/xmpbox-2.0.0-SNAPSHOT.jar:lib/commons-io-1.3.1.jar org.apache.pdfbox.preflight.Validator_A1b expected.pdf\r\n\r\nJava 7:\r\nThe file expected.pdf is a valid PDF/A-1b file\r\n\r\nJava 8:\r\nThe fileexpected.pdf is not valid, error(s) :\r\n2.4.3 : Invalid Color space, The operator \"G\" can't be used without Color Profile\r\n"
    ],
    [
        "PDFBOX-271",
        "PDFBOX-2689",
        "Updated PDFText2HTML [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1708294\nOriginally submitted by rrufai on 2007-04-26 11:13.\n\nHi Ben,\n\nI was wondering, are you accepting member to the project? \n\nI'm using the PDFBox for importing PDF documents and would need more formatting information that is currently supported by PDFBox. The attached is what I've done so far: handles line breaks, bold, italics. Also added some comment delimiters for page boundaries.\n\nTwo things I'll want to handle next are: \n\n1. Underline\n2. Subscripts and superscripts\n\nLater on, I'll want to also handle the following:\n\n1. Images\n2. Hyperlinks\n3. Tables (I know this might be hard)\n\nI'll need all the help I can get in the form of pointers and clues.\n\nI look forward to reading from you soon.\n\nMany, many thanks for providing us with a great library.\n\nRegards,\n\nRaimi Rufai\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552835&aid=1708294&file_id=226946\nTextPosition.java (text/x-java-source), 6743 bytes\n\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552835&aid=1708294&file_id=226945\nPDFStreamEngine.java (text/x-java-source), 19797 bytes\n\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552835&aid=1708294&file_id=226943\nPDFText2HTML.java (text/x-java-source), 10342 bytes\n\n\n[comment on SourceForge]\nOriginally sent by rrufai.\nLogged In: YES \nuser_id=1776491\nOriginator: YES\n\nFile Added: TextPosition.java\n\n[comment on SourceForge]\nOriginally sent by rrufai.\nLogged In: YES \nuser_id=1776491\nOriginator: YES\n\nFile Added: PDFStreamEngine.java\n\n[comment on SourceForge]\nOriginally sent by rrufai.\nLogged In: YES \nuser_id=1776491\nOriginator: YES\n\nFile Added: PDFText2HTML.java",
        "Implement page transitions I implemented page transitions as described in the spec 32000-1:2008 chapter 12.4.4.1\r\nI'm attaching the diff file and the test pdf document. Feel free to use it and/or change it."
    ],
    [
        "PDFBOX-2563",
        "PDFBOX-3105",
        "[PATCH] Use cmap for Type0/TTF fallback java -jar ~/pdf-box-svn/app/target/pdfbox-app-2.0.0-SNAPSHOT.jar PDFToImage VariousKFontsNotembeded218.PDF\r\n\r\nThis patch addresses some of the issues in PDFBOX-2509.",
        "Image with mask missing in rendering {quote}The png logo shows up in other pdf readers but not in pdf.js{quote}\r\n\r\nAnd we have the same problem. And GS too.\r\n\r\nThe file is broken.\r\n\r\nI get the \"bad\" effect in Acrobat Reader if I insert \"/ImageMask true\" in the mask. If I set it to false then the rendering is good. This leads me to the conclusion that this part of the spec is to be taken literally: \"However, if the image dictionary's ImageMask entry is true, the sample data shall be interpreted as a stencil mask for applying the graphics state's nonstroking colour parameters (see 8.9.6.2, \"Stencil Masking\").\" i.e. that if /ImageMask isn't there or is false, the mask is to be ignored.\r\n\r\nThis can be confirmed by a trick: at the beginning of the content stream, change \"1 1 1 rg\" (white) to \"1 0 1 rg\" (pink). Display with Adobe Reader, the white square is there. If masking had been working, only the seal would be seen without a white square.\r\n\r\nIf your eyes are good, you can see the dirt below the seal, which can also be seen in the unedited PDF. If the masking had been working, the dirt wouldn't be seen.\r\n\r\nSo for PDFBox, I'll simply change to apply the mask only if /ImageMask true."
    ],
    [
        "PDFBOX-677",
        "PDFBOX-775",
        "Lines not showing in PrintPDF print-out (Table borders and SVG figures) I am generating a single-page PDF file via XSLT/FOP, consisting of multiple\r\ntables of varying complexity and consisting of several figures created via SVG\r\nprimitives (rect, path, text) in the used stylesheet.\r\n\r\nAfter generating and exporting the document to the file system, I want to print\r\nit programmatically via PDFBox's PrintPDF class. This succeeds apparently, but\r\nthe resulting print-out lacks _all_ of the lines in the document: all table\r\nborders (of various sizes) are missing, and all figures are missing too (a large\r\ndiagram and several small symbols within the text). All texts are printed\r\ncorrectly, except for the heading of the document, which is written in a bold\r\nand bigger font.\r\n\r\nThis problem occurs on every printer at my disposal (two physical laser printers\r\nand one virtual pdf printer). The problem does not occur when opening and/or\r\nprinting the originally exported document via Adobe Reader - the document shows\r\nand prints perfectly. The problem is always reproducible. I am using the (as of now) latest PDFBox\r\nversion 1.1.0 on a JDK 1.5.0u18 on Windows XP Professional SP3.\r\n\r\nWhen converting the pdf with PDFBox's PDFToImage class, the problem becomes\r\nsmaller, but persists nonetheless: the resulting JPG lacks a good third of the\r\ntable borders, but shows all of the SVG-based lines correctly.\r\n\r\nI searched the bug tracker and the mailinglist archives but could not find a\r\nrecent matching discussion or tracker item. PDFBox seems to have had problems\r\nwith table borders already (I remember reading about line styles and weights not\r\nbeing rendered correctly), but all of those seem to date back to version numbers\r\naround version 0.8.\r\n\r\nI posted this problem to the user list ( http://pdfbox.markmail.org/message/a75wdvtk52xbxvjk?page=1 ) after searching the archives and this tracker and was told to open an issue on this tracker. I'll follow up with the mentioned samples in a minute.\r\n\r\nAny help would be appreciated!\r\n\r\nMany thanks in advance and have a good day,\r\n\r\n--Christoph Schmidt ",
        ".NET Version build error! Error message:\r\n\r\n[javac] N:\\pdf\\a\\pdfbox\\src\\main\\java\\org\\apache\\pdfbox\\pdmodel\\font\\PDType1\r\nCFont.java:589: \u627e\u4e0d\u5230\u7b26\u53f7(Can not find symbol)\r\n[javac] \u7b26\u53f7\uff1a \u65b9\u6cd5 addEntry(org.apache.fontbox.cff.encoding.CFFEncoding.Ent\r\nry)\r\n[javac] \u4f4d\u7f6e\uff1a \u7c7b org.apache.pdfbox.pdmodel.font.PDType1CFont.PDFEncoding\r\n[javac] addEntry(parentEntries.next());\r\n[javac] ^\r\n[javac] N:\\pdf\\a\\pdfbox\\src\\main\\java\\org\\apache\\pdfbox\\pdmodel\\font\\PDType1\r\nCFont.java:611: \u627e\u4e0d\u5230\u7b26\u53f7 (Can not find symbol)\r\n[javac] \u7b26\u53f7\uff1a \u65b9\u6cd5 addEntry(org.apache.fontbox.cff.charset.CFFCharset.Entry\r\n)\r\n[javac] \u4f4d\u7f6e\uff1a \u7c7b org.apache.pdfbox.pdmodel.font.PDType1CFont.PDFCharset\r\n[javac] addEntry(parentEntries.next());\r\n[javac] ^\r\n\r\n\r\n\r\n\r\nBecause the jar path  is older version in the build.xml .\r\n\r\nError example:\r\n\r\n\r\n    <property name=\"project.name\" value=\"pdfbox\"/>\r\n    <property name=\"project.version\" value=\"1.2.0-SNAPSHOT\" />\r\n\r\n    <property name=\"maven.repo1\" value=\"http://repo1.maven.org/maven2\" />\r\n    <property name=\"maven.repo2\" value=\"http://repo2.maven.org/maven2\" />\r\n\r\n    <property name=\"fontbox.name\" value=\"fontbox-1.1.0\" />\r\n    <property name=\"fontbox.url\" value=\"${maven.repo1}/org/apache/pdfbox/fontbox/1.1.0/${fontbox.name}.jar\" />\r\n    <property name=\"fontbox.jar\" value=\"${jar.dir}/${fontbox.name}.jar\" />\r\n\r\n    <property name=\"jempbox.name\" value=\"jempbox-1.1.0\" />\r\n    <property name=\"jempbox.url\" value=\"${maven.repo1}/org/apache/pdfbox/jempbox/1.1.0/${jempbox.name}.jar\" />\r\n    <property name=\"jempbox.jar\" value=\"${jar.dir}/${jempbox.name}.jar\" />\r\n\r\n    <property name=\"bcprov.name\" value=\"bcprov-jdk15-1.44\" />\r\n    <property name=\"bcprov.url\" value=\"${maven.repo2}/org/bouncycastle/bcprov-jdk15/1.44/${bcprov.name}.jar\" />\r\n    <property name=\"bcprov.jar\" value=\"${jar.dir}/${bcprov.name}.jar\" />\r\n\r\n    <property name=\"bcmail.name\" value=\"bcmail-jdk15-1.44\" />\r\n    <property name=\"bcmail.url\" value=\"${maven.repo2}/org/bouncycastle/bcmail-jdk15/1.44/${bcmail.name}.jar\" />\r\n    <property name=\"bcmail.jar\" value=\"${jar.dir}/${bcmail.name}.jar\" />\r\n\r\n    <property name=\"junit.name\" value=\"junit-3.8.2\" />\r\n    <property name=\"junit.url\" value=\"${maven.repo2}/junit/junit/3.8.2/${junit.name}.jar\" />\r\n    <property name=\"junit.jar\" value=\"${jar.dir}/${junit.name}.jar\" />\r\n\r\n    <property name=\"logging.name\" value=\"commons-logging-1.1.1\" />\r\n    <property name=\"logging.url\" value=\"${maven.repo1}/commons-logging/commons-logging/1.1.1/${logging.name}.jar\" />\r\n    <property name=\"logging.jar\" value=\"${jar.dir}/${logging.name}.jar\" />\r\n\r\n    <property name=\"icu4j.name\" value=\"icu4j-3.8\" />\r\n    <property name=\"icu4j.url\" value=\"${maven.repo1}/com/ibm/icu/icu4j/3.8/${icu4j.name}.jar\" />\r\n    <property name=\"icu4j.jar\" value=\"${jar.dir}/${icu4j.name}.jar\" />\r\n\r\n    <property name=\"checkstyle.url\" value=\"${maven.repo2}/checkstyle/checkstyle/4.4/checkstyle-4.4.jar\" />\r\n    <property name=\"checkstyle.jar\" value=\"${tool.dir}/checkstyle.jar\" />\r\n    <property name=\"beanutils.url\" value=\"${maven.repo2}/commons-beanutils/commons-beanutils-core/1.7.0/commons-beanutils-core-1.7.0.jar\" />\r\n    <property name=\"beanutils.jar\" value=\"${tool.dir}/commons-beanutils.jar\" />\r\n    <property name=\"antlr.url\" value=\"${maven.repo2}/antlr/antlr/2.7.6/antlr-2.7.6.jar\" />\r\n    <property name=\"antlr.jar\" value=\"${tool.dir}/antlr.jar\" />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReview:\r\n\r\n    <property name=\"project.name\" value=\"pdfbox\"/>\r\n    <property name=\"project.version\" value=\"1.2.1-SNAPSHOT\" />\r\n\r\n    <property name=\"maven.repo1\" value=\"http://repo1.maven.org/maven2\" />\r\n    <property name=\"maven.repo2\" value=\"http://repo2.maven.org/maven2\" />\r\n\r\n    <property name=\"fontbox.name\" value=\"fontbox-1.2.1\" />\r\n    <property name=\"fontbox.url\" value=\"${maven.repo1}/org/apache/pdfbox/fontbox/1.2.1/${fontbox.name}.jar\" />\r\n    <property name=\"fontbox.jar\" value=\"${jar.dir}/${fontbox.name}.jar\" />\r\n\r\n    <property name=\"jempbox.name\" value=\"jempbox-1.2.1\" />\r\n    <property name=\"jempbox.url\" value=\"${maven.repo1}/org/apache/pdfbox/jempbox/1.2.1/${jempbox.name}.jar\" />\r\n    <property name=\"jempbox.jar\" value=\"${jar.dir}/${jempbox.name}.jar\" />\r\n\r\n    <property name=\"bcprov.name\" value=\"bcprov-jdk16-1.45\" />\r\n    <property name=\"bcprov.url\" value=\"${maven.repo2}/org/bouncycastle/bcprov-jdk16/1.45/${bcprov.name}.jar\" />\r\n    <property name=\"bcprov.jar\" value=\"${jar.dir}/${bcprov.name}.jar\" />\r\n\r\n    <property name=\"bcmail.name\" value=\"bcmail-jdk16-1.45\" />\r\n    <property name=\"bcmail.url\" value=\"${maven.repo2}/org/bouncycastle/bcmail-jdk16/1.45/${bcmail.name}.jar\" />\r\n    <property name=\"bcmail.jar\" value=\"${jar.dir}/${bcmail.name}.jar\" />\r\n\r\n    <property name=\"junit.name\" value=\"junit-4.8.1\" />\r\n    <property name=\"junit.url\" value=\"${maven.repo2}/junit/junit/4.8.1/${junit.name}.jar\" />\r\n    <property name=\"junit.jar\" value=\"${jar.dir}/${junit.name}.jar\" />\r\n\r\n    <property name=\"logging.name\" value=\"commons-logging-1.1.1\" />\r\n    <property name=\"logging.url\" value=\"${maven.repo1}/commons-logging/commons-logging/1.1.1/${logging.name}.jar\" />\r\n    <property name=\"logging.jar\" value=\"${jar.dir}/${logging.name}.jar\" />\r\n\r\n    <property name=\"icu4j.name\" value=\"icu4j-4.0.1\" />\r\n    <property name=\"icu4j.url\" value=\"${maven.repo1}/com/ibm/icu/icu4j/4.0.1/${icu4j.name}.jar\" />\r\n    <property name=\"icu4j.jar\" value=\"${jar.dir}/${icu4j.name}.jar\" />\r\n\r\n    <property name=\"checkstyle.url\" value=\"${maven.repo2}/checkstyle/checkstyle/5.0/checkstyle-5.0.jar\" />\r\n    <property name=\"checkstyle.jar\" value=\"${tool.dir}/checkstyle.jar\" />\r\n    <property name=\"beanutils.url\" value=\"${maven.repo2}/commons-beanutils/commons-beanutils-core/1.8.3/commons-beanutils-core-1.8.3.jar\" />\r\n    <property name=\"beanutils.jar\" value=\"${tool.dir}/commons-beanutils.jar\" />\r\n    <property name=\"antlr.url\" value=\"${maven.repo2}/antlr/antlr/2.7.7/antlr-2.7.7.jar\" />\r\n    <property name=\"antlr.jar\" value=\"${tool.dir}/antlr.jar\" />"
    ],
    [
        "PDFBOX-2674",
        "PDFBOX-923",
        "Remove two unused methods from COSStream Remove two methods I added 3 months ago to COSStream in PDFBOX-2296 / [ https://svn.apache.org/r1632382 ], this was related to length repair in the old parser. Because the old parser no longer exists, these two methods can be removed.",
        "pdf gets messed up when updated with xfdf data we load a pdf file and update it with an xfdf file, the resulting pdf is all mixed up.\r\n( you can open pdf_output.pdf to see how it looks)\r\n\r\n\t\tPDDocument pdf = PDDocument.load(\"ar104-1.10.0.pdf\");\r\n\t\tPDDocumentCatalog docCatalog = pdf.getDocumentCatalog();\r\n\t\tPDAcroForm acroForm = docCatalog.getAcroForm();\t\r\n\t\tFDFDocument fdfdoc=FDFDocument.loadXFDF(new File(\"form_data.xfdf\"));\r\n\t\tacroForm.importFDF(fdfdoc);\r\n\t\tpdf.save(\"pdf_output.pdf\");\r\n\t\tSystem.out.println(\"pdf created successfully\");\r\n\r\nPlease see attached \r\n\r\n1. input pdf file \r\n2. the xfdf file( created from the content submitted by the input file) and \r\n3. the messed up output pdf file\r\n\r\n"
    ],
    [
        "PDFBOX-2539",
        "PDFBOX-1270",
        "[PATCH] Allow non static FontProvider I would like to use multiple instances of fontprovider in thread safe way",
        "Change internal page resolution to float everywhere Was: PDPage.convertToImage() : Parameter \"resolution\" should be float\r\n\r\nIs there any specific reason why the method signature reads \"int resolution\", not \"float resolution\"?\r\n\r\nI want to create an image of a certain pixel size, so it would be easier/faster to calculate the exact resolution instead of resizing the image afterwards. "
    ],
    [
        "PDFBOX-744",
        "PDFBOX-156",
        "Landscape PDF Rasterized as Portrait The Rotate entry on Page objects is not taken into account when converting a PDF into an image.",
        "PDOutlineItem does not implement equals [imported from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1475739\r\nOriginally submitted by robertwenner on 2006-04-24 12:23.\r\n\r\nThis code\r\n\r\nPDOutlineItem a = outline.getFirstChild();\r\nPDOutlineItem b = outline.getFirstChild();\r\nif (!a.equals(b)) {\r\n    throw new RuntimeException(\"Not equal\");\r\n}\r\n\r\nthrows, because PDOutlineItem does not implement equals().\r\n\r\nI'd like to compare nodes to each other while\r\ntraversing the outline. How do I do that without equals\r\nor hashCode working properly?\r\n\r\nThanks,\r\n\r\nRobert"
    ],
    [
        "PDFBOX-984",
        "PDFBOX-2991",
        "When create images from PDF File with characters from PT-BR it\u00b4s printing wrong ",
        "Improper word concatenation when extracting pdf The code below will output text for a pdf. Words that are on different lines are concatenated together\r\n\r\n    PDDocument pdDoc = PDDocument.load(new File(\"sample-resume.pdf\"));\r\n    StringWriter writer = new StringWriter();\r\n    new PDFTextStripper().writeText(pdDoc, writer);\r\n    pdDoc.close();\r\n    System.out.println(writer.toString());"
    ],
    [
        "PDFBOX-820",
        "PDFBOX-616",
        "Support TIFF predictor 2 with FlateDecode, patch included A patch which adds support for TIFF predictor 2 within FlateDecode. Currently the patch only supports 8 bits per component. Handling 4 bits per component could be implemented but I have no test document.\r\nThe patch can be tested against http://pediatrics.aappublications.org/cgi/reprint/125/1/1\r\nthe title graphic (Im0 at page 1) uses predictor type 2.",
        "Invalid Images Returned When getting images from a PDF document using PDXObjectImage (code fragment below), it returns an image with invalid characteristics.  The PDXObjectImage is not null, but attributes like .getColorSpace() return null.  The image has a height and width, but the getRGBImage() method returns null.\r\n\r\nThis happens on EVERY image of the attached file.  Code fragment and output is shown below.  \r\n\r\nIf I use the write2file() method of PDXObjectImage to write out the image to a fil, then I get a valid image.  (At least, it displays fine.)\r\n\r\nCode Fragment:\r\n\r\n                // Get a list of pages from the input PDF document\r\n                List pages = InputDoc.getDocumentCatalog().getAllPages();\r\n                // Process each page\r\n                int i = 0;\r\n                for (Object obj : pages)\r\n                {\r\n                    String Barcode = null;\r\n                    i++;\r\n                    PDPage page = (PDPage)obj;\r\n                    // Get the image on the page and process it\r\n                    PDResources resources = page.getResources();\r\n                    Map images = resources.getImages();\r\n                    System.out.println(\"Found \" + images.size() + \" images on Page \" + i);\r\n                    if( images != null )\r\n                    {\r\n                        Iterator imageIter = images.keySet().iterator();\r\n                        while ( imageIter.hasNext() )\r\n                        {\r\n                            String key = (String)imageIter.next();\r\n                            System.out.println(\"key = \" + key);\r\n                            PDXObjectImage image = (PDXObjectImage)images.get( key );\r\n                            if (image != null)\r\n                            {\r\n                                System.out.println(\"Image subtype = \" + image.SUB_TYPE.toString());\r\n                                System.out.println(\"Image suffix = \" + image.getSuffix());\r\n                            System.out.println(\"PDX image has height = \" + image.getHeight()\r\n                                                + \" and width \" + image.getWidth());\r\n                            // Convert image to a Buffered Image, so we can\r\n                            // look for a barcode and decode it\r\n                            BufferedImage RGBimage = image.getRGBImage();\r\n                            if (RGBimage == null)\r\n                                System.out.println(\"RGBimage is null\");\r\n                            }\r\n                        }\r\n                    }\r\n\r\nOutput:\r\n\r\nFound 1 images on Page 1\r\nkey = Obj3\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 2\r\nkey = Obj8\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 3\r\nkey = Obj13\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 4\r\nkey = Obj18\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 5\r\nkey = Obj23\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 6\r\nkey = Obj28\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 7\r\nkey = Obj33\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 8\r\nkey = Obj38\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 9\r\nkey = Obj43\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\nFound 1 images on Page 10\r\nkey = Obj48\r\nImage subtype = Image\r\nImage suffix = tiff\r\nPDX image has height = 2335 and width 1651\r\nRGBimage is null\r\n\r\n"
    ],
    [
        "PDFBOX-2175",
        "PDFBOX-2883",
        "Making OverlayPDF accessible as library With PDFBOX-1596 there has already been such a request. But it seems that you missed the main point of the provided patch, which is IMHO making some methods public and provide setters for the private fields.\r\n\r\nI tried 2.0.0-SNAPSHOT and the Overlay class is not yet useable as a library.",
        "Unify memory handling PDFBOX now has at least 2 different mechanisms to use main memory vs. keeping large data in temporary file: in case of provided input stream the stream is copied to temporary file and all read PDF streams are handled by RandomAccessBuffer/ScratchFile.\r\n\r\nIn PDFBOX-2882 I've done a re-implementation for ScratchFile which is quite fast and allows to set a maximum amount of memory to be used for its pages before it starts using the scratch file. This implementation could be used as the general 'backend' for all buffered streams and even the file input stream copy. As long as the PDF fits into the allowed maximum memory it should equally fast as RandomAccessBuffer while it allows for good control of memory usage by going to scratch file if needed. This prevents OOM in case of large files.\r\n\r\nIn order to use this the PDDocument methods should be changed to not have a 'useScratchFile' parameter but to take a MemoryHandling object which details the Buffering strategy (using ScratchFile; what amount of main memory can be used, ...).\r\n\r\nI've opened this issue for discussing. Since we need API changes in PDDocument it should be done before 2.0 release."
    ],
    [
        "PDFBOX-2471",
        "PDFBOX-47",
        "AES encryption failing to write Acroform field names and values When writing a PDF using AES 256 bit encryption, the field names / values from the Acroform are not being persisted correctly. If I encrypt using RC4 128 bit, they are persisted correctly. I am using snapshot pdfbox:2.0.0-20141023.180319-636.\r\n\r\nI dug into this, and it looks to me the problem is with COSWriter.visitFromString, which invokes  SecurityHandler.decryptString (there is no SecurityHandler.encryptString).",
        "Support rights-enabled PDF document [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552835&aid=1172294\nOriginally submitted by napierwong on 2005-03-28 19:57.\n\nA rights-enabled PDF form can be fill-in and save with \nAdobe Reader. If PDFBox can implement features to \nturn on the rights-enabled functionality in a PDF \ndocument, a complete e-form processing model can be \nimplemented.\n\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552835&aid=1172294&file_id=145685\nincometaxform.pdf (application/pdf), 108497 bytes\nSample e-Form with right-enabled feature\n\n[comment on SourceForge]\nOriginally sent by napierwong.\nLogged In: YES \nuser_id=1247742\n\nYes, there is a sample from Adobe. Please check the \nattachment.\n\n\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nI will need to verify that this is an open API and that Adobe \nallows software to be written to change these restrictions.  If \nyou could attach/upload(ftp.pdfbox.org) an example document \nthat would be helpful as well.\n\nBen Litchfield\n\n[comment on SourceForge]\nOriginally sent by nobody.\nLogged In: NO \n\nI agree.  This is a vital function for those of us that want\nto use PDFs without dropping $50,000 (US) on Adobe LiveCycle\nor buy a ton of licenses for Acrobat."
    ],
    [
        "PDFBOX-2882",
        "PDFBOX-531",
        "Improve performance when using scratch file The current scratch file implementation uses many direct I/O calls which slows down parsing compared with in-memory scratch buffer considerably.",
        "Minor change to expose separating beads option through ExtractText cmd utility The ExtractText cmd utility does not allow control over the separate beads option of the PDFTextStripper class. The attached patch adds a new cmd line arg (-ignoreBeads) to specify not to separate by beads."
    ],
    [
        "PDFBOX-2999",
        "PDFBOX-1409",
        "Optimize COSStream scratch file usage The usage of scratch file buffers in COSStreams is quite sloppy. A never filled buffer is created in the beginning and existing buffers are discarded without being closed when a variant of {{createOutputStream}} is called. Furthermore it should be clarified if requesting an input stream without having created an output stream before is ok and if a returned input stream keeps valid after a new output stream is created (which is crucial for proper buffer-closing). \r\n\r\nThis issue should resolve some of the shortcomings and document the expected or even required usage of COSStream. ",
        "Create Preflight documentation Add documentation about the preflight module. "
    ],
    [
        "PDFBOX-850",
        "PDFBOX-2534",
        "PDPage convertToImage returns white page When using convertToImage() it executes without exception but returns only white or empty page. \r\nThis seems not to be related to PDFBox-794. That pdf is displayed well.\r\nI have tested it with the trunk version (4.10.2010)",
        "Less pages shown with the non-sequential parser The attached file has 3 pages when rendered with the non-Sequential parser and 7 pages when rendered with the old parser."
    ],
    [
        "PDFBOX-1003",
        "PDFBOX-2991",
        "Incorrect width calculation for form fields that do not scroll When a form field is marked non scrollable, current implementation does not work. There appears to be unfinished code that in the end does not set the font size.",
        "Improper word concatenation when extracting pdf The code below will output text for a pdf. Words that are on different lines are concatenated together\r\n\r\n    PDDocument pdDoc = PDDocument.load(new File(\"sample-resume.pdf\"));\r\n    StringWriter writer = new StringWriter();\r\n    new PDFTextStripper().writeText(pdDoc, writer);\r\n    pdDoc.close();\r\n    System.out.println(writer.toString());"
    ],
    [
        "PDFBOX-1080",
        "PDFBOX-696",
        "Improve TextPosition.isDiacritic and ICU4JImpl normalizeDiac performance Character.getType with cText.charAt(0) and index range checks are invoked unnecessarily three times instead of only one time.\r\n\r\nCurrent 1.6.0 implementation:\r\n\r\n    public boolean isDiacritic()\r\n    {\r\n        String cText = this.getCharacter();\r\n        return (cText.length() == 1 &&  (Character.getType(cText.charAt(0)) == Character.NON_SPACING_MARK\r\n                || Character.getType(cText.charAt(0)) == Character.MODIFIER_SYMBOL\r\n                || Character.getType(cText.charAt(0)) == Character.MODIFIER_LETTER));\r\n    }\r\n\r\nPlease use something like this:\r\n\r\n    public boolean isDiacritic()\r\n    {\r\n        final String cText = this.getCharacter();\r\n        if (cText.length() != 1) return false;\r\n        final int type = Character.getType(cText.charAt(0));\r\n        return (type == Character.NON_SPACING_MARK\r\n                || type == Character.MODIFIER_SYMBOL\r\n                || type == Character.MODIFIER_LETTER);\r\n    }\r\n\r\n\r\nCheck the ICU4JImpl.normalizeDiac method also",
        "PDTrueTypeFont limits number of glyph widths to 256. This can easily be removed. Currently the support for fonts with exotic glyphs are limited at best. Making PDFBox render chinese characters has proved to be a bit of a pain ... :-)\r\n\r\nOne blocker we ran into was the limitation of glyph widths to 256 individual widths. In PDTrueTypeFont.java, we find this in loadDescriptorDictionary():\r\n\r\n            int firstChar = 0;\r\n            int maxWidths=256;\r\n            HorizontalMetricsTable hMet = ttf.getHorizontalMetrics();\r\n            int[] widthValues = hMet.getAdvanceWidth();\r\n            List widths = new ArrayList(maxWidths);\r\n\r\nThe \"int maxWidths=256\" affects the remaining code so glyph widths for codepoints larger than 256 are ignored. We found that there is no need to impose such a limitation, and that having it makes it impossible to generate a proper /W dictionary when generating a cidfonttype2. Simply replacing the hard coded value 256 with the following seems to be a perfectly usable solution:\r\n\r\n            int firstChar = 0;\r\n            //int maxWidths=256;  <---- No hard coded value\r\n            int maxWidths = glyphToCCode.length;            // <---- rather use the counted number of codepoints\r\n            HorizontalMetricsTable hMet = ttf.getHorizontalMetrics();\r\n            int[] widthValues = hMet.getAdvanceWidth();\r\n            List widths = new ArrayList(maxWidths);\r\n            Integer zero = new Integer( 250 );\r\n\r\nIs it possible to have this change added to 1.2.0?\r\n\r\nAlso we would be more than happy to contribute some code that shows how you can use PDFBox to produce PDF's containing special characters (asian, chinese etc) by using codepoint-to-glyph mapping and copy-paste working (/tounicode). The code allows API users to simply use UTF-8 strings and not worry about any of the tricky font handling details.\r\n\r\n"
    ],
    [
        "PDFBOX-2843",
        "PDFBOX-485",
        "widthOfSpace() appears wrong in TextPosition When using the following override method of PDFTextStripper I am getting a large difference in values for TextPosition.getWidthOfSpace() between version 1.8.6 and pdfbox-2.0.0-20150611.100833-1423\r\n\r\n{code}\r\n@Override\r\n protected void processTextPosition(TextPosition textPos)\r\n {\r\n    float spaceWidth = textPos.getWidthOfSpace();\r\n    float width = textPos.getWidth();\r\n    System.out.println(textPos.getCharacter() + \" - Width of Space=\" + spaceWidth + \" - width=\" + width);\r\n    builder.append(textPos.getCharacter());\r\n }\r\n{code}\r\n\r\nIn 1.8.6 average character width is around 5 and space width is around 2.5\r\n\r\nIn 2.0 average character width is around 5 and space width is around 27",
        "Fonts not printed on HP laserjet (1320 & 8150) when having landscape orientation When printing the attached file on either of the two mentioned printers, only empty rectangles were printed.\r\nThe Text was visible on the PDFReader preview, but was missing in the printout.\r\n\r\nAfter having read http://netstripe.com/info/appnote/app_031.html, I changed the code to rotate the page instead\r\nof the font. Now the text is printed correctly. I will provide my changes if needed."
    ],
    [
        "PDFBOX-2547",
        "PDFBOX-43",
        "maybe encoding error Hi,\r\nI just download a pdf form page:\r\nhttp://download.jw.org/files/media_books/32/es15_P.pdf\r\nand wants extract text from this document.\r\nI use command:\r\njava -jar pdfbox-app-1.8.7.jar ExtractText -encoding UTF-8 es15_P.pdf resultFile-UTF-8.txt\r\nBut I see some problems for exmaple:\r\n1. I see in text file 'STX' and 'ETX' instead of '\u0119' and '\u0105'.\r\n2. extractor return a text 'naprzyk\u0142admi\u0142e' instead of 'na przyk\u0142ad mi\u0142e' (page 4, line 6).\r\n\r\nMaybe it is some small problems.",
        "spaces in extracted text [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1153181\nOriginally submitted by benlitchfield on 2005-02-27 17:45.\n\nSee \"Wenjie broken text.pdf\"  There are spaces \nbetween words.\n\nBen\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nThis issue is fixed for nont standard type3 fonts, \nwhich \"Wenjie broken text.pdf\" uses.\n\nThe extra spaces in the ocalc.pdf is a different problem that is \nstill being looked into.\n\nBen\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nFYI, This problem is seen with PDFs that use Type3 fonts.  A \nsolution is in the works.\n\nBen\n\n[comment on SourceForge]\nOriginally sent by benlitchfield.\nLogged In: YES \nuser_id=601708\n\nIn the ocalc.pdf there are some spacing issues as well\n\nFor example\n\"deviat e from the existing textb ooks, I would certain ly make \nmajor changes by emphasizing several\"\n\n[comment on SourceForge]\nOriginally sent by fuwenjie.\nLogged In: YES \nuser_id=1219597\n\nI found that it is sometimes happened that the font size is not \nassigned correctly.  The font size would all be 1.0 in that \ncase.  Under that circumstance, it is seldom happened that \nthe width is not correct either.  In those cases, the width is \noften less than 1.0 which is obviously impossible.\n\nA word in the original text may break into serveral parts and \nthe return value of GetY() of each part may not right, causing \nthe characters overlapes with others.\n\nThe incorrect Y value and width may obstruct us in reforming \nthe word according to the Y value and width of each part."
    ],
    [
        "PDFBOX-337",
        "PDFBOX-1153",
        "Patch for two bugs: 1 in PDDocument.load 1 in PDFMergerUtili [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1889131\nOriginally submitted by bwingenroth on 2008-02-07 14:27.\n\nI've come across two bugs that the attached patch addresses.  I don't claim to fully understand these bugs, nor do I know whether my patch fixes the root issues -- I only know that using this patch allows me to continue using PDFBox.\n\nI came across a ClassCastException in PDDocument.load.  It actually manifests as an IOWrapperException caused by the ClassCastException.  In getObjectsByType inside the file COSDocument.java, you grab the COSdictionary and attempt to cast each item as a COSName.  I've found a PDF that opens fine in Acrobat that apparently contains a COSObject inside that dictionary which throws the ClassCastException.  My patch for COSDocument.java wraps the cast in a try block and silently discards the ClassCastException.  This looks like it's safe, since the code seems to want to match a COSName against a type passed into the function.  If the item isn't castable as a COSName, then I assume it could never pass anyway, so my patch ignores it.\n\nThe second issue -- in PDFMergerUtility.java -- is that srcNums can be null.  \n\nCOSArray srcNums = (COSArray)srcLabels.getDictionaryObject( COSName.getPDFName( \"Nums\" ) );\n\nMy patch tests srcNums to make sure it isn't null before iterating over it.\n\nAgain, I don't know that I've addressed the underlying causes behind these issues, but I have successfully patched the nightly build from 20080205 with these changes and haven't noticed any ill effects.\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1889131&file_id=265468\nPDFBox-0.7.4-dev-20080205.patch (application/octet-stream), 2757 bytes\nPatch for bugs in PDDocument.load and PDFMergerUtility",
        "Use dictionary lookups to increase text extraction accuracy There are still some cases where the text extraction code incorrectly inserts spaces inside words extracted from a PDF document. We could increase extraction accuracy with an optional dictionary lookup mechanism that checks each extracted word or token against a dictionary of common words. If the lookup fails (and the amount of empty space after the token is small), the token is concatenated with the next one. If that concatenated token matches a word in the dictionary, the intervening space can very likely be dropped."
    ],
    [
        "PDFBOX-1267",
        "PDFBOX-2433",
        "The rectangle doesn not match PDFTextStripperByArea() I use the panel which is front of the axAcroPDF.\r\nI draw rectangle the point of which I got exactly.\r\nThen I put this POINT(left top right bottom) as parameters in \r\nRectangle2D POINT = new Rectangle(left, top, right, bottom);\r\nstripper.addRegion(\"testRegion\", POINT);\r\nto extract region to Powerpoint\r\nBut the ectangle does not match what i want\r\nPOINT(left top right bottom)\r\nMay anyone help me to solve this problem?\r\nMany thanks.",
        "PDFPrinter does not print Acroform fields In v 1.8, if you set a PDPageable to a PrinterJob and told it to print(), it would print AcroForm fields if they existed.\r\nNow, with PDFPrinter (a great improvement in many respects!) the AcroForm fields don't print anymore.\r\nI have tried pinpointing the problem in PDFPrinter, PDFRenderer, and PageDrawer, but unsuccessfully.\r\nPerhaps I am doing it wrong.  Here is some code:\r\n\r\n{code}\r\nPDAcroForm form = document.getDocumentCatalog().getAcroForm();\r\nPDFieldTreeNode f = form.getField(\"referral\");\r\nf.setValue(\"test\");\r\nPDFPrinter pdfPrinter = new PDFPrinter(document);\r\npdfPrinter.silentPrint();\r\n{code}"
    ],
    [
        "PDFBOX-1196",
        "PDFBOX-971",
        "Object offsets should be of type long + PATCH Currently object offsets are stored as integer (32 bit). However the PDF specification does not limit a PDF document to 2GB. The only restriction is the XREF table which supports 10 digit values for object offsets. Thus we could have offsets >2GB (<10GB). The attached patch changes all locations (as far as I could find them) dealing with object offsets to long type.\r\nSince this is a rather small change which should not have greater performance/space impact I recommend to include it. Otherwise we would have to include checks that the parsed file is smaller then Integer.MAX_VALUE.",
        "ExtractImages ignores -prefix ExtractImages utility ignores the -prefix option, doesn't output expected filenames.\r\n\r\nString name = getUniqueFileName( key, image.getSuffix() );\r\n\r\nshould be \r\n\r\nString name = getUniqueFileName( prefix, image.getSuffix() );\r\n"
    ],
    [
        "PDFBOX-925",
        "PDFBOX-2964",
        "ExtractText china  pdf  ,but pdfbox  distinguish  Korea,The  pdf 1.2 is ok,since 1.3 error ",
        "Checkbox getOnValue() throws NPE calling getOnValue() results in an NPE if the checkbox has multiple widgets assigned to it."
    ],
    [
        "PDFBOX-492",
        "PDFBOX-1424",
        "Testfiles without suitable license All testfiles without a suitable license to store them in svn are attached to this issue. They will be automatically downloaded by ant during the build process if a testtask is called.",
        "Wrong glyph (Persian)  is used in extacted text instead of the original glyph (Persian) in PDF file Hi\r\nI am very new to PDFBox and I am dealing with Persian PDF files. When I convert Persian PDF files using PDFBox-app, some Persian glyphs like \u0645 are displayed wrongly in the extracted text. For example, the word \"\u0647\u0633\u062a\u0645\" in Persian is extracted as \"\u0647\u0633\u062a\u0646\" and \"\u0645\u0646\" in Persian is extracted as \"\u0647\u0646\". Also, the word \"\u0633\u0644\u0627\u0645\" is extracted as \"\u0633\u0627\u0644\u0645\". By the way, I have tested extracting text from a complete Persian PDF file with multiple pages; the result is disappointing. Actually, it is totally wrong. Please let me know if I should upload an example Persian PDF file."
    ],
    [
        "PDFBOX-759",
        "PDFBOX-1681",
        "Special characters not extracted When trying to extract characters for mathematic formulas, there appear to be lots of characters that don't seem to have any meaning.\r\nTake the example on page 80 the last formula with the binomial coefficient. The first opening bracket, when extracted using the Foxit Reader or Adobe Reader gets a character with the int value 18 and the closing bracket is the int value 19. Now when I look at the TextPosition objects using PDFBox, there is one character to the left of the 5 and that one has the glyph name spacehackarabic/space and the int value 32. \r\nThe next problem is that there seems to be a character at the same position as the 5, a 'controlLF'. What does it do at the same position as that number? \r\nMpw after the character 2 are 3 other characters, another 'controlLF' and two 'spacehackarabic/space'. There is no indication whatsoever abouth the bracket. What do those extra characters mean? And why doesn't it show the character for the bracket that I am able to extract using the other PDF readers?\r\n\r\nThe PDF can be downloaded from http://upload.wikimedia.org/wikibooks/de/f/f6/Mathematik_Stochastik.pdf",
        "java.lang.IllegalArgumentException: Color parameter outside of expected range: Red When calling page.convertToImage() for a pdf file from the ghostscript installation, I get this stack trace:\r\n06.08.2013 11:46:52.086 WARN  [main] org.apache.pdfbox.pdmodel.graphics.color.PDColorState:244 - Unable to create the color instance [74.0, 0.0, 0.0] in color space Lab{  }; guessing color ... \r\nColor interpolation failed; using black instead\r\njava.lang.IllegalArgumentException: Color parameter outside of expected range: Red\r\njava.lang.IllegalArgumentException: Color parameter outside of expected range: Component 0 \r\n\tat java.awt.Color.<init>(Color.java:538)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorState.createColor(PDColorState.java:190)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorState.getJavaColor(PDColorState.java:121)\r\n\tat org.apache.pdfbox.pdfviewer.PageDrawer.processTextPosition(PageDrawer.java:216)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:485)\r\n\tat org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:45)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:529)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:258)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:225)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:205)\r\n\tat org.apache.pdfbox.pdfviewer.PageDrawer.drawPage(PageDrawer.java:141)\r\n\tat org.apache.pdfbox.pdmodel.PDPage.convertToImage(PDPage.java:781)\r\n\tat pdfboxpageimageextraction.ExtractImages.doPdf(ExtractImages.java:118)\r\n\tat pdfboxpageimageextraction.ExtractImages.main(ExtractImages.java:67)\r\n\r\nThe file is rendered, but the color of the third text is incorrect."
    ],
    [
        "PDFBOX-2637",
        "PDFBOX-59",
        "PDF parse failing to capture right order of text (2 columns) When I am converting a document with two columns the order of the columns are inverted in the text file. I only could notice because it is an index list. The page I start to see the problem is the page 303. In the second file I have the same problem the page is 341.\r\n\r\nI have tried: setSortByPosition(true) and the columns got scrambled.\r\n\r\nI have tried to copy and paste from the pdf preview and the copy is as it should.\r\n\r\nAnd I have tried to use PDFXStream and it parses in the right way.\r\n\r\nHere are the files I have seen the issue:\r\nhttp://www.sbu.se/upload/Publikationer/Content0/1/Autismspektrumtillst%C3%A5nd_fulltext.pdf\r\n\r\nhttp://www.sbu.se/upload/publikationer/content0/1/forstamningssyndrom_fulltext.pdf\r\n\r\nThe problem is in this sequence, in the first file:\r\n\r\n362 A u t i s m s p e k t r u m t i l l s t\u00e5 n d \u2013  d i Ag n o s t i k  o c h i n s At s e r ,  \r\nv\u00e5 r d e n s  o r g A n i s At i o n o c h pAt i e n t e n s  d e l A k t i g h e t\r\nautism and mental retardation: a case study \r\nof 14 siblings from five families. J Pediatr \r\nNurs 2007;22:410-8.\r\n\r\n9. Stoner JB, Angell ME. Parent perspec-\r\ntives on role engagement: An investigation  \r\nof parents of children with ASD and their \r\nself-reported roles with education profes-\r\nsionals. Focus Autism Other Dev Disabl \r\n2006;21:177-89.\r\n\r\n10. Stoner JB, Angell ME, House JJ,  \r\nBock SJ. Transitions: Perspectives from \r\nparents of young children with Autism \r\nSpectrum Disorder (ASD). J Dev Phys \r\nDisabil 2007;19:23-39.\r\n\r\n11. Kuhaneck HM, Burroughs T, Wright J, \r\nLemanczyk T, Darragh AR. A qualitative \r\nstudy of coping in mothers of children with \r\nan autism spectrum disorder. Phys Occup \r\nTher Pediatr 2010;30:340-50.\r\n\r\n12. Sivberg B. Coping strategies and paren-\r\ntal attitudes, a comparison of parents with \r\nchildren with autistic spectrum disorders \r\nand parents with non-autistic children.  \r\nInt J Circumpolar Health 2002;61  \r\nSuppl 2:36-50.\r\n\r\n13. Antonovsky A. H\u00e4lsans mysterium. \r\nStockholm: Natur och Kultur. ISBN  \r\n91-27-02193-9; 1991.\r\n\r\n14. Antonvsky A. H\u00e4lsans mysterium: \r\nStockholm: Natur och Kultur; 2005.\r\n\r\n15. Shu BC. Quality of life of family care- \r\ngivers of children with autism: The moth-\r\ner\u2019s perspective. Autism 2009;13:81-91.\r\n\r\n16. Cullen LA, Barlow JH, Cushway D. \r\nPositive touch, the implications for parents \r\n\r\nReferenser\r\n1. Clarke J, van Amerom G. Asperger\u2019s \r\nsyndrome: differences between parents\u2019 \r\nunderstanding and those diagnosed. Soc \r\nWork Health Care 2008;46:85-106.\r\n\r\n2. Tobias A. Supporting students with \r\nautistic spectrum disorder (ASD) at \r\nsecondary school: A parent and student \r\nperspective. Educational Psychology in \r\nPractice 2009;25:151-65.\r\n\r\n3. M\u00fcller E, Schuler A, Yates GB. Social \r\nchallenges and supports from the perspec-\r\ntive of individuals with Asperger syndrome \r\nand other autism spectrum disabilities. \r\nAutism 2008;12:173-90.\r\n\r\n4. Carbone PS, Behl DD, Azor V,  \r\nMurphy NA. The medical home for  \r\nchildren with autism spectrum disorders:  \r\nparent and pediatrician perspectives.  \r\nJ Autism Dev Disord 2010;40:317-24.\r\n\r\n5. Benderix Y, Nordstrom B, Sivberg B. \r\nParents\u2019 experience of having a child with \r\nautism and learning disabilities living in  \r\na group home: a case study. Autism 2006; \r\n10:629-41.\r\n\r\n6. Renty J, Roeyers H. Satisfaction with \r\nformal support and education for children \r\nwith autism spectrum disorder: the voices \r\nof the parents. Child Care Health Dev \r\n2006;32:371-85.\r\n\r\n7. Farrugia D. Exploring stigma: medical  \r\nknowledge and the stigmatisation of parents  \r\nof children diagnosed with autism spec- \r\ntrum disorder. Sociol Health Illn 2009; \r\n31:1011-27.\r\n\r\n8. Benderix Y, Sivberg B. Siblings\u2019 experi-\r\nences of having a brother or sister with \r\n\r\n----------------------------------------------------------\r\nSecond File: pg 341 or 344\r\n\r\nPostnatal Depression Scale, and assessment \r\nof risk factors for postnatal depression. J \r\nAffect Disord 2003;76:151-6.\r\n\r\n66. Adouard F, Glangeaud-Freudenthal \r\nNM, Golse B. Validation of the Edinburgh \r\npostnatal depression scale (EPDS) in a \r\nsample of women with high-risk pregnan-\r\ncies in France. Arch Womens Ment Health \r\n2005;8:89-95.\r\n\r\n67. Bunevicius A, Kusminskas L,  \r\nBunevicius R. Validation of the Lithuanian  \r\nversion of the Edinburgh Postnatal Depres- \r\nsion Scale. Medicina (Kaunas) 2009;45: \r\n544-8.\r\n\r\n68. Chaudron LH, Szilagyi PG, Tang W, \r\nAnson E, Talbot NL, Wadkins HI, et al. \r\nAccuracy of depression screening tools for \r\nidentifying postpartum depression among \r\nurban mothers. Pediatrics 2010;125:e609-\r\n17. Epub 2010 Feb 15.\r\n\r\n69. Matthey S, Barnett B, Kavanagh DJ, \r\nHowie P. Validation of the Edinburgh \r\nPostnatal Depression Scale for men, and \r\ncomparison of item endorsement with their \r\npartners. J Affect Disord 2001;64:175-84.\r\n\r\n70. Rowe HJ, Fisher JR, Loh WM. The  \r\nEdinburgh Postnatal Depression Scale \r\ndetects but does not distinguish anxiety  \r\ndisorders from depression in mothers of  \r\ninfants. Arch Womens Ment Health 2008; \r\n11:103-8.\r\n\r\n71. Boyce PM, Stubbs J, Todd AL. The  \r\nEdinburgh Postnatal Depression Scale: \r\nValidation for an Australian sample.  \r\nAust N Z J Psychiatry 1993;27:472-476.\r\n\r\n72. Leonardoua AA, Zervas YM,  \r\nPapageorgiou CC, Marks MN, Tsartsara \r\nEC, Antsaklis A, et al. Validation of the \r\nEdinburgh Postnatal Depression Scale \r\n\r\nPostnatal Depression Scale: validation in \r\na Norwegian community sample. Nord J \r\nPsychiatry 2001;55:113-7.\r\n\r\n59. Navarro P, Ascaso C, Garcia-Esteve \r\nL, Aguado J, Torres A, Martin-Santos R. \r\nPostnatal psychiatric morbidity: a vali- \r\ndation study of the GHQ-12 and the  \r\nEPDS as screening tools. General  \r\nHospital Psychiatry 2007;29:1-7.\r\n\r\n60. Phillips J, Charles M, Sharpe L,  \r\nMatthey S. Validation of the subscales  \r\nof the Edinburgh Postnatal Depression \r\nScale in a sample of women with unsettled \r\ninfants. J Affect Disord 2009;118:101-12.\r\n\r\n61. Beck CT, Gable RK. Comparative ana- \r\nlysis of the performance of the Postpartum  \r\nDepression Screening Scale with two other  \r\ndepression instruments. Nurs Res 2001;50: \r\n242-50.\r\n\r\n62. Bunevicius A, Kusminskas L, Pop VJ, \r\nPedersen CA, Bunevicius R. Screening for \r\nantenatal depression with the Edinburgh \r\nDepression Scale. J Psychosom Obstet \r\nGynaecol 2009;30:238-43.\r\n\r\n63. Aydin N, Inandi T, Yigit A,  \r\nHodoglugil NN. Validation of the Turkish \r\nversion of the Edinburgh Postnatal Depres-\r\nsion Scale among women within their first \r\npostpartum year. Soc Psychiatry Psychiatr \r\nEpidemiol 2004;39:483-6.\r\n\r\n64. Garcia-Esteve L, Ascaso C, Ojuel J,  \r\nNavarro P. Validation of the Edinburgh \r\nPostnatal Depression Scale (EPDS) in  \r\nSpanish mothers. J Affect Disord 2003; \r\n75:71-6.\r\n\r\n65. Berle JO, Aarre TF, Mykletun A,  \r\nDahl AA, Holsten F. Screening for  \r\npostnatal depression. Validation of the  \r\nNorwegian version of the Edinburgh ",
        "PDChoiceField setValue() #31 [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1205771\nOriginally submitted by nobody on 2005-05-20 09:27.\n\nThe \"opt\" tuple of a listbox/combobox is a COSArray.\nThe elements of the array are either a simple \nCOSString, or a COSArray of 2 COSStrings.  (the latter \nrepresents a listbox item and a value)\n\nPDChoiceField.setValue assumes that the type of \nEVERY element in the \"opt\" array matches the type of \nthe FIRST element in the \"opt\" array.  This is not the \ncase.  Based on how the PDF form field was \ncreated, \"opt\" array contains a mix of both simple \nCOSString elements and compound COSArray \nelements.\n\nThe setValue() code must be restructured to check the \ntype of each item in the \"opt\" array."
    ],
    [
        "PDFBOX-1972",
        "PDFBOX-101",
        "WrappedIOException no longer needed in Java 1.6 Java 1.6 added the IOException(Throwable cause) constructor which means that WrappedIOException is no longer needed.\r\n\r\nWrappedIOException is never caught anywhere, only its superclass IOException is, so this is an easy change to make.",
        "ImportXFDF results in PDF with larger text fields [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1327309\nOriginally submitted by roso on 2005-10-14 22:02.\n\nUsing PDFBox-0.7.2\n\nImportXFDF (and ImportFDF) results in PDF with larger text\nIf focus on field text size is back to normal\nExit the field and the font becomes large again, some\nfields display same string overlayed"
    ],
    [
        "PDFBOX-2084",
        "PDFBOX-2338",
        "Make TestImageIOUtils optional in 1.8 for Fedora packaging On the user mailing list, Orion Poplawski reported that he cannot package PDFBox in Fedora because it loads external software for the test, namely levigo JBIG2 and jai_imageio. This is unwelcome, per a \"Fedora builders cannot access anything remotely\" rule. Not having these libraries fail TestImageIOUtils, which is part of the TestAll class. I will separate this test from the rest.",
        "IllegalStateException: recursive definition I get this exception with the attached file:\r\n{code}\r\nWARNUNG: Using fallback font 'TimesNewRomanPSMT' for 'Symbol,Italic'\r\nSep 10, 2014 12:59:30 PM org.apache.pdfbox.pdmodel.font.PDSimpleFont toUnicode\r\nWARNUNG: No Unicode mapping for character code 119 in font Symbol,Italic\r\nException in thread \"AWT-EventQueue-0\" java.lang.IllegalStateException: recursive definition\r\n        at org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic(PDSimpleFont.java:186)\r\n        at org.apache.pdfbox.pdmodel.font.PDFont.isSymbolic(PDFont.java:370)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.codeToGID(PDTrueTypeFont.java:289)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getWidthFromFont(PDTrueTypeFont.java:250)\r\n        at org.apache.pdfbox.pdmodel.font.PDFont.getWidth(PDFont.java:216)\r\n{code}\r\nThe file probably does have a problem, AR claims that the /BBox value for \"Symbol,Italic\" is incorrect. However it displays the file, and so does GSView."
    ],
    [
        "PDFBOX-989",
        "PDFBOX-1685",
        "Scale Pdf: Fit to Printable Area Unable to scale Pdf to Fit into page. \r\n\r\nSetting a margin and an imageable area work fine but the contents of the pdf are not scaled to fit into the printable area. This results in parts of the pdf being cut off and thus the library unusable.\r\n\r\nPageFormat pForm = new PageFormat();\r\nPaper paper = new Paper();\r\npaper.setSize(594.936, 841.536);\r\n \r\ndouble margin = 36; // half inch\r\npaper.setImageableArea(margin, margin, paper.getWidth() - margin * 2, paper.getHeight()  - margin * 2);\r\npForm.setPaper(paper);",
        "Verify interpretation of rdf:about for PDF/A There was a discussion about handling rdf:about for PDF/A validation on the PDF Associations mailing list which I'm allowed to share:\r\n\r\n<snip>\r\nIn this case we have a PDF with an XMP metadata stream containing two\r\n<rdf:RDF> entries, one with rdf:about set to a blank string, the other with\r\nit set to a UUID. The PDF/A specification (ISO-19005-1:2005(E) para 6.7.2)\r\nsimply says that the stream must conform to the \"XMP specification 2004\r\nrevision\" which reads (p21):\r\n\r\nThe rdf:about attribute on the rdf:Description element is a required\r\nattribute that identifies the resource whose metadata this XMP describes.\r\nThe value of this attribute must follow URI syntax and may be either:\r\n\r\n\u25cf  an empty string (as in the example above), which means that the XMP is\r\nphysically local to the resource being described. Applications must rely on\r\nknowledge of the file format to correctly associate the XMP with the\r\nresource.\r\n\r\n\u25cf  a unique instance ID that is generated every time a file is saved. The\r\nnext section gives guidelines for creating instance IDs.\r\n\r\nThe XMP packet must describe a single entity, and my reading of the above\r\nis a combination of empty-string and a unique UUID can meet this\r\nrequirement - this is how both our software and Acrobat X and XI behave.\r\nHowever it's ambiguous, and this clause was revised in the 2012 revision\r\n(ISO 16684-1:2011(E) para 7.4) to this:\r\n\r\nIf the XMP data model has an AboutURI (6.1, \u201cXMP packets\u201d), that same URI\r\nshall be the value of an rdf:about attribute in each top-level\r\nrdf:Description element. Otherwise, the rdf:about attributes for all top-\r\nlevel rdf:Description elements shall be present with an empty value. The\r\nrdf:about attribute shall not be used in more deeply nested rdf:Description\r\nelements.\r\nFor compatibility with very early XMP usage, it is recommended that XMP\r\nreaders tolerate a missing rdf:about attribute and treat it as present with\r\nan empty value. It is also recommended that XMP readers tolerate a mix of\r\nempty and non-empty rdf:about values, as long as all non-empty values are\r\nidentical.\r\n\r\nWhich means that an empty string and a unique UUID are technically\r\nincorrect, but it's recommended they be tolerated for compatibility\r\npurposes.\r\n\r\n</snip>\r\n\r\nI might be good to check our interpretation as\r\n\r\n<snip\r\nBFO and Acrobat X and XI think this is valid, PDFBox and\r\npdf-tools.com online validator lean the other and classify this document\r\nas invalid.\r\n</snip>\r\n\r\nto see if we should change our interpretation. If there is new input on the pdfa.org mailinglist I'll capture it here too."
    ],
    [
        "PDFBOX-981",
        "PDFBOX-1106",
        "PDColorspaceFactory does not recognize colorspace DeviceGray (patch included herein) I was trying to use PDFTextStripper to extract text from a large corpus of PDF files. In some of them, the method:\r\n\r\norg.apache.pdfbox.pdmodel.graphics.color.PDColorSpaceFactory.createColorSpace( COSBase colorSpace, Map colorSpaces )\r\n\r\nfails to recognize the case when the colorSpace argument is of type COSArray and the array's (first) element corresponds to COSName.DEVICEGRAY. Adding that case successfully parses the files that failed with the stock pdfbox-1.5.0. Below is a diff of my patched PDColorSpaceFactory that handles the case where the colorspace name is DeviceGray. Incidentally, it occurs to me that another (possibly better) approach is to call through to createColorSpace(String) when no other case matches.\r\n\r\n% diff PDColorSpaceFactory.java.orig PDColorSpaceFactory.java\r\n94a95,97\r\n> else if ( type.getName().equals( PDDeviceGray.NAME) ) {\r\n> retval = new PDDeviceGray();\r\n> }",
        "PDFMergerUtility corrupts file attachments When combining files that contain (PDF) file attachments, the attachments carry over, but are corrupted in the merged file.\r\n\r\nCode used:\r\n\t\tPDFMergerUtility merger = new PDFMergerUtility();\r\n\t\tmerger.addSource(\"c:/gilad/testing/in/1.pdf\");\r\n\t\tmerger.addSource(\"c:/gilad/testing/in/2.pdf\");\r\n\t\tmerger.setDestinationFileName(\"c:/gilad/testing/in/merged.pdf\");\r\n\t\ttry {\r\n\t\t\tmerger.mergeDocuments();\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}"
    ],
    [
        "PDFBOX-959",
        "PDFBOX-1696",
        "Text extraction slow and /tmp fills upwith AWT font files During text extraction there is NO need to create AWT fonts.\r\nHowever the current Type1C Font code creates the AWT always while initializing.\r\n\r\nThis has several really bad side effects:\r\n1. Wasted time creating the AWT font.\r\n2. The font files are copied into /tmp which fills up after a few thousand text extractions.\r\n3. The AWT is created in a synchronized region so is single threaded.\r\n\r\nThe patch is quite simple.  Just delay creation of the AWT fint until required.\r\n",
        "Bug in org.apache.pdfbox.io.Ascii85OutputStream \t There's a bug in ASCII85OutputStream.java in \r\n\r\n     public final void write(byte[] b,int off, int sz)\r\n\r\nThe effect of the bug is that buffers with length < 3 produce no output. Fix:\r\n\r\nafter \r\n\r\n     if(count < 3) \r\n     {\r\n\r\nadd this line:\r\n\r\n         flushed = false;\r\n\r\nbetter: delete the whole function and let the superclass handle it. I doubt that the current implementation saves much time."
    ],
    [
        "PDFBOX-1244",
        "PDFBOX-1149",
        "the text content extracted by PDFBOX is not as the same as it is displayed in Adobe reader Hello, \r\nI useed pdfbox extract text content from the PDF document in the appendix, founded the extracted text is \"\u5e74\u9884\" but the text displayed in Adobe reader is \"\u5e74\u671f\".  I want to know how to get the correct text content (as Adobe reader showing) from this kind of PDF documents by PDFBOX.\r\n",
        "Parser is not sufficiently robust; + sign in front of integer causes exception WARN  2011-1027 14:53:15.902 [redcondor.spam.PdfTextExtractor] unexpected exception while extracting text from PDF\r\njava.lang.RuntimeException: java.io.IOException: Value is not an integer: +256\r\n        at org.apache.pdfbox.pdfparser.PDFStreamParser$1.tryNext(PDFStreamParser.java:178)\r\n        at org.apache.pdfbox.pdfparser.PDFStreamParser$1.hasNext(PDFStreamParser.java:187)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:266)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:251)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:225)\r\n        at org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:442)\r\n        at org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:366)\r\n        at org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:322)\r\n        at org.apache.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:242)\r\n        at redcondor.spam.PdfTextExtractor.extractText(PdfTextExtractor.java:63)\r\n        at redcondor.spam.ParsedMailMessage$Part.parse(ParsedMailMessage.java:1000)\r\n        at redcondor.spam.ParsedMailMessage$Part.<init>(ParsedMailMessage.java:782)\r\n        at redcondor.spam.ParsedMailMessage.<init>(ParsedMailMessage.java:168)\r\n        at model.rules.filtering.filterable.FilterableFile.newRuleContext(FilterableFile.java:301)\r\n        at model.rules.filtering.filterable.FilterableFile.getRuleContext(FilterableFile.java:295)\r\n        at model.rules.filtering.filterable.FilterableFile.getSize(FilterableFile.java:341)\r\n        at model.rules.filtering.filters.AbstractFilter.getSize(AbstractFilter.java:260)\r\n        at redcondor.conditions.SizeCondition.evaluate(SizeCondition.java:118)\r\n        at redcondor.conditions.SizeCondition.evaluate(SizeCondition.java:21)\r\n        at core.conditions.AllCondition.evaluate(AllCondition.java:102)\r\n        at model.rules.engine.CompiledRule.evaluate(CompiledRule.java:200)\r\n        at model.rules.engine.providers.RuleEngineProvider.match(RuleEngineProvider.java:353)\r\n        at run.antispam.services.AntiSpamServiceProvider.match(AntiSpamServiceProvider.java:532)\r\n        at model.rules.filtering.filters.rule.RuleFilter.getRule(RuleFilter.java:81)\r\n        at model.rules.filtering.filters.rule.RuleFilter.getCachedRule(RuleFilter.java:88)\r\n        at model.rules.filtering.filters.rule.RuleFilter.getResponse(RuleFilter.java:122)\r\n        at model.rules.filtering.filters.AbstractFilteringService$InstrumentedFilter.getResponse(AbstractFilteringService.java:220)\r\n        at model.rules.filtering.services.stacks.DefaultFilteringTask.execute(DefaultFilteringTask.java:157)\r\n        at model.rules.filtering.services.stacks.AbstractFilterStackService.execute(AbstractFilterStackService.java:123)\r\n        at model.rules.filtering.services.stacks.AbstractFilterStackService.filter(AbstractFilterStackService.java:227)\r\n        at model.rules.filtering.services.stacks.inbound.InboundFilterStackService.filter(InboundFilterStackService.java:254)\r\n        at run.smtp.services.spoolers.inbox.InboxService.notifyMessageReady(InboxService.java:425)\r\n        at redcondor.net.smtp.spooler.AbstractSpooler.notifyObjectReceived(AbstractSpooler.java:546)\r\n        at redcondor.net.smtp.spooler.AbstractSpooler.notifyObjectReceived(AbstractSpooler.java:62)\r\n        at redcondor.services.threaded.WorkerThread.pumpObject(WorkerThread.java:291)\r\n        at redcondor.services.threaded.WorkerThread.pumpObject(WorkerThread.java:244)\r\n        at redcondor.services.threaded.WorkerPool.notifyWorking(WorkerPool.java:209)\r\n        at redcondor.services.threaded.WorkerPool$Worker.run(WorkerPool.java:451)\r\nCaused by: java.io.IOException: Value is not an integer: +256\r\n        at org.apache.pdfbox.cos.COSNumber.get(COSNumber.java:96)\r\n        at org.apache.pdfbox.pdfparser.PDFStreamParser.parseNextToken(PDFStreamParser.java:347)\r\n        at org.apache.pdfbox.pdfparser.PDFStreamParser.access$000(PDFStreamParser.java:46)\r\n        at org.apache.pdfbox.pdfparser.PDFStreamParser$1.tryNext(PDFStreamParser.java:175)\r\n        ... 37 more\r\n\r\n"
    ],
    [
        "PDFBOX-1169",
        "PDFBOX-716",
        "Images extracted from PDF are loosing color (are shown in blackcolor) Using PDFBox, tried to read file (eBook-Mini.pdf, which is attached)\r\nWhen images are extracted using below mentioned code, the extracted images aren't as per the ones in PDF, they have lost color.\r\nChecked extracting images, using other tools and images were extracted correctly.\r\nAttached images extracted using PDFBox as well.\r\n\r\n",
        "right parenthess are not handled properly in bookmarks Bookmarks with a right parenthesis are not parsed correctly.  Instead of a right parenthesis \")\", a backslash \"\\\" is output.  For example \"(L(I((S)P)))\" becomes \"(L(I((S\\P\\\\\\\".\r\n\r\nI'm attaching a file which demonstrates the issue.  Sample code segment to reproduce this:\r\ndoc = PDDocument.load(inputFile);\r\nPDDocumentOutline root = doc.getDocumentCatalog().getDocumentOutline();\r\nif(root != null) {\r\n    PDOutlineItem item = root.getFirstChild();\r\n    System.out.println(\"title = \" + item.getTitle());\r\n}\r\n\r\nI'll post a patch if I can figure out where this issue lies."
    ],
    [
        "PDFBOX-441",
        "PDFBOX-2188",
        "remove CosName nameMap cache The CosName class keeps a cache of all instances created in a static synchronized map.  I am guessing this is for performance reasons to avoid creating objects, but in our system it is causing performance problems.  We are running 7 threads extracting text from pdf's, and we can see a large number of conflicts reading from nameMap.\r\n\r\nThe CosName map is also a potential memory leak, which forces users to periodically clear it, as noted in PDFBOX-351\r\n\r\nCan nameMap be removed altogether?\r\n\r\n\r\nAt the least, if PDSimpleFont replaced, \r\n\r\n COSName.getPDFName( \"FontDescriptor\" ) \r\n\r\nwith \r\n\r\nCOSName.FONT_DESC\r\n\r\nIt would reduce contention.\r\n",
        "java.io.IOException: Expected a name or array but got: COSObject{1823, 0} I get this with the attached file:\r\n\r\n{code}\r\n04.07.2014 19:20:59.356 ERROR [main] org.apache.pdfbox.pdmodel.PDResources:329 - error while creating a colorspace\r\njava.io.IOException: Expected a name or array but got: COSObject{1823, 0}\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:162)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:55)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:145)\r\n\tat org.apache.pdfbox.pdmodel.PDResources.getColorSpaces(PDResources.java:325)\r\n\tat org.apache.pdfbox.util.operator.SetNonStrokingColorSpace.process(SetNonStrokingColorSpace.java:44)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:499)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:264)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:223)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:199)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:183)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderPage(PDFRenderer.java:228)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:160)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImageWithDPI(PDFRenderer.java:109)\r\n\tat pdfboxziptest.PDFBoxZipTest.doPdf(PDFBoxZipTest.java:101)\r\n\tat pdfboxziptest.PDFBoxZipTest.main(PDFBoxZipTest.java:72)\r\n{code}\r\n\r\nIn the PDF:\r\n{code}\r\n36 0 obj\r\n[ \r\n/Pattern 1823 0 R \r\n]\r\nendobj\r\n{code}\r\n\r\n{code}\r\n1823 0 obj\r\n[ \r\n/ICCBased 1851 0 R \r\n]\r\nendobj\r\n{code}\r\n\r\nI assume that it is indeed a syntax error, but I don't really get how it should have been done, and whether it can be fixed."
    ],
    [
        "PDFBOX-4",
        "PDFBOX-2052",
        "Migrate JempBox sources to Apache We should migrate the latest JempBox sources from SourceForge to Apache.",
        "PDFCloneUtility does not handle COSStreamArray A document which has COSStreamArray's, cannot be cloned. There is no handling for COSStreamArray."
    ],
    [
        "PDFBOX-2255",
        "PDFBOX-2001",
        "Text not rendered bold  File from PDFBOX-265\r\n\r\njava -jar ~/pdf-box-svn/app/target/pdfbox-app-2.0.0-SNAPSHOT.jar PDFToImage PDFBOX265-problem.pdf",
        "Digital Signature information (parser bug?) We have a signed PDF but signature is described without key \"Sig\".\r\nAs you can see in the standard PDF 32000-1:2008 - Table 252 - Entries in a signature dictionary, this key is optional :\r\n\"(Optional) The type of PDF object that this dictionary describes; if present, shall be Sig for a signature dictionary. \"\r\n\r\nBut PDFBox seems to limit its research of signature only if this key \"Sig\" is present.\r\n\r\nWhat is your position about that?\r\n"
    ],
    [
        "PDFBOX-839",
        "PDFBOX-2083",
        "Use COSName constant instead of COSString Within the constructor of the class PDDocumentCatalog a COSString is used to set the type of that class. That's wrong, a COSName has to be useed a instead.",
        "Some characters overlap other characters, font changed Hi, please forgive my english first.\r\nI tried to convert a pdf file to images, using pdfbox 1.8.4 within tika-app-1.5.jar.\r\nThe jpeg files I got were not ideal.\r\nThe content in the images were different from the pdf file.\r\nSome characters were in different places, and some characters overlapped others.\r\nThere were many lines of console information which read:\r\n'13:49:07,094 WARN [PDSimpleFont:107] Changing font on <l> from <Courier New Italic> to the default font \r\n13:49:07,094 WARN [PDSimpleFont:107] Changing font on <l> from <Courier New Italic> to the default font \r\n13:49:07,095 WARN [PDSimpleFont:107] Changing font on <y> from <Courier New Italic> to the default font \r\n13:49:07,095 WARN [PDSimpleFont:107] Changing font on <l> from <Courier New Italic> to the default font \r\n...'\r\nCould you give me some instruction, tell me how to solve this problem, how to get ideal images?\r\nThanks a lot.\r\n\r\nI attached the pdf file and one of the images.\r\nAnd here are my code:\r\nPDDocument doc = PDDocument.load(input + \".pdf\");\r\nList<PDPage> pages = doc.getDocumentCatalog().getAllPages(); \r\nfor (int i = 0; i < pages.size(); i++) { \r\n    PDPage page = pages.get(i); \r\n    BufferedImage image = page.convertToImage(); \r\n    Iterator<ImageWriter> iter = ImageIO.getImageWritersBySuffix(\"JPG\"); \r\n    ImageWriter writer = iter.next(); \r\n    File outFile = new File(input + i + \".jpg\");\r\n    FileOutputStream out = new FileOutputStream(outFile); \r\n    ImageOutputStream outImage = ImageIO.createImageOutputStream(out); \r\n    writer.setOutput(outImage); \r\n    writer.write(new IIOImage(image, null, null)); \r\n    writer.dispose(); \r\n    out.close(); \r\n} \r\ndoc.close();"
    ],
    [
        "PDFBOX-2794",
        "PDFBOX-2143",
        "UnsupportedOperationException: not supported for Type 3 fonts As reported by Manfred P. on the user mailing list:\r\n{code}\r\nException in thread \"main\" java.lang.UnsupportedOperationException: not supported for Type 3 fonts\r\n        at org.apache.pdfbox.pdmodel.font.PDType3Font.readEncodingFromFont(PDType3Font.java:68)\r\n        at org.apache.pdfbox.pdmodel.font.PDSimpleFont.readEncoding(PDSimpleFont.java:118)\r\n        at org.apache.pdfbox.pdmodel.font.PDType3Font.<init>(PDType3Font.java:56)\r\n        at org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:79)\r\n{code}\r\n",
        "Unable to add png file in to pdf I am trying to draw png file in to pdf, I am getting out of memory error.\r\nCould you suggest me how to resolve?"
    ],
    [
        "PDFBOX-3106",
        "PDFBOX-644",
        "Allow access to font data In CFFFont we used to have:\r\npublic Map<String, byte[]> getCharStringsDict()\r\nnow we have:\r\nList<byte[]> getCharStringBytes()\r\n\r\nAlso we used to be able to create our own new MaximumProfileTable() but this is not public anymore.\r\n\r\nCan it be public also.",
        "Move FontBox and JempBox under the same trunk with PDFBox As discussed on dev@, I'd like to move all our component under the same trunk. The proposed project structure is:\r\n\r\n    trunk/pdfbox\r\n    trunk/fontbox\r\n    trunk/jempbox\r\n"
    ],
    [
        "PDFBOX-1983",
        "PDFBOX-2247",
        "Unable to add TIF images, CCITTFactory not working As used in the AddImageToPDF example, the following line generates an error with tif image:\r\n\r\nPDImageXObject ximage =  CCITTFactory.createFromRandomAccess(document, new RandomAccessFile(new File(imagePath), \"r\"));\r\n\r\njava.io.IOException: Stream was not read\r\n        at org.apache.pdfbox.cos.COSStream.getDecodeResult(COSStream.java:235)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.<init>(PDImageXObject.java:80)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject.<init>(PDImageXObject.java:70)\r\n        at org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory.createFromRandomAccess(CCITTFactory.java:50)",
        "Regression in text extraction between 1.8.5 and 1.8.6 Looks like a character mapping issue crept in some time between 1.8.5 and 1.8.6 on this [file|http://digitalcorpora.org/corp/nps/files/govdocs1/701/701542.pdf]? \r\n\r\nWith both seq and NonSeq parsers, the correct text was extracted via ExtractText in 1.8.5.  In 1.8.6, java -jar pdfbox-app-1.8.6.jar ExtractText yields text starting with: {noformat}7>PFLK>I 9>NH ;BNRF@B\r\n=%;% .BM>NPJBKP LC PEB 3KPBNFLN\r\n9>@FCF@ -L>OP ;@FBK@B >KA 5B>NKFKD -BKPBN\r\n:BOB>N@E 9NLGB@P ;QJJ>NT .B@BJ?BN (&&*\r\n\"&++&,-+\u00c6$( #&+-&%+$-& !).&)-*+\u00c6&,{noformat}"
    ],
    [
        "PDFBOX-2750",
        "PDFBOX-2330",
        "Rendering in poor quality in 2.0 but not in 1.8.* The attached PDF is rendered in poor quality in 2.0, but not in 1.8.* (submitted by Vanja K. on the user mailing list).",
        "Typo on usage message; \"PDFDBox\" instead of \"PDFBox\" Silly diff below :)\r\n\r\nIndex: tools/src/main/java/org/apache/pdfbox/tools/PDFBox.java\r\n===================================================================\r\n--- tools/src/main/java/org/apache/pdfbox/tools/PDFBox.java     (revision 1623301)\r\n+++ tools/src/main/java/org/apache/pdfbox/tools/PDFBox.java     (working copy)\r\n@@ -113,7 +113,7 @@\r\n \r\n     private static void showMessageAndExit() \r\n     {\r\n-        System.err.println(\"PDFDBox version: \\\"\"+ Version.getVersion()+ \"\\\"\");\r\n+        System.err.println(\"PDFBox version: \\\"\"+ Version.getVersion()+ \"\\\"\");\r\n         System.err.println(\"\\nUsage: java pdfbox-app-x.y.z.jar <command> <args..>\");\r\n         System.err.println(\"\\nPossible commands are:\\n\");\r\n         System.err.println(\"  ConvertColorspace\");\r\n"
    ],
    [
        "PDFBOX-1878",
        "PDFBOX-2489",
        "Tags are not being displayed in Adobe Acrobat Tags panel when merging pdfs The merged PDF output produced by the PDFMergerUtility does not display the tags correctly in the Tags panel of Adobe Acrobat. (Tested in Acrobat Pro XI trial version). Have not tested in another PDF tool that can display tags (not sure if another tool can do this).\r\n\r\nA single blank entry is shown instead of the actual structure tree of the combined source pdfs.\r\nThough, it seems the reading order (based on the tag structure) is still preserved (based on the testing of adobe reader's read aloud feature).\r\n\r\nPossibly related to fix on tag merging:\r\nhttps://issues.apache.org/jira/browse/PDFBOX-1342\r\n\r\nAlthough the tag merging logic is wrong is 1.8.2 (as only the first page is tagged which was fixed as indicated in PDFBOX-1342), the tags appear correctly in the Tag panel.\r\n\r\nThis bug prevents users from modifying the tag structure in Acrobat as the tag entries are missing.\r\n",
        "StackOverflowError in PDSimpleFont.isFontSymbolic {code}\r\njava.lang.StackOverflowError\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic(PDSimpleFont.java:177)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isSymbolic(PDFont.java:394)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isStandard14(PDFont.java:517)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isStandard14(PDSimpleFont.java:338)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic(PDSimpleFont.java:182)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isSymbolic(PDFont.java:394)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isStandard14(PDFont.java:517)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isStandard14(PDSimpleFont.java:338)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic(PDSimpleFont.java:182)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isSymbolic(PDFont.java:394)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isStandard14(PDFont.java:517)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isStandard14(PDSimpleFont.java:338)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic(PDSimpleFont.java:182)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isSymbolic(PDFont.java:394)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isStandard14(PDFont.java:517)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isStandard14(PDSimpleFont.java:338)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isFontSymbolic(PDSimpleFont.java:182)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isSymbolic(PDFont.java:394)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.isStandard14(PDFont.java:517)\r\n\tat org.apache.pdfbox.pdmodel.font.PDSimpleFont.isStandard14(PDSimpleFont.java:338)\r\n....\r\n{code}\r\nthis happens both with rendering and with preflight. AR displays an error that the BBox value is incorrect."
    ],
    [
        "PDFBOX-1471",
        "PDFBOX-2652",
        "Parsing of xmp properties set in xml attributes is not done The attached xmp file is not parsed correctly, attributes are forgotten",
        "Document Outlines (Bookmark) and Link Annotation validation do not validate /Dest item The BookmarkValidationProcess and LinkAnnotationValidator classes does not validate the /Dest item. It should do so like is already done in GoToAction.\r\n{quote}Destinations may be associated with outline items (see Section 8.2.2, \"Document Outline\"), annotations (\"Link Annotations\" on page 622), or actions (\"Go-To Actions\" on page 654 and \"Remote Go-To Actions\" on page 655).{quote}"
    ],
    [
        "PDFBOX-2692",
        "PDFBOX-3190",
        "Possibility to use our own and/or overwrite PageDrawer class We use PDFBox to render PDF's. Additionally, we have the posibility to add different kinds of annotation (stamp, marks, free text, notes..) like in a wysiwyg-editor. To do this, it is necessary that we paint these annotations on our own.\r\n\r\nAnother reason is not to paint all parts: for example we have a pdf with an embedded picture. Behind the picture we have the OCR-text to this picture. This text is only needed for searching und should not be painted.\r\n\r\nThus it would be useful to use our own derived PageDrawer. As I see there are some things to change.\r\n\r\na.) remove the final from PagerDrawer-class.\r\nb.) make some global-variables (graphics, xform, pageSize...) protected,\r\nc.) also some methods like setRenderingHints should be protected\r\nd.) maybe the possibility to say to the PDFRender which PageDrawer should be used.",
        "Links don't work in firefox I added links to the PDF I attached using the following code:\r\n\r\n{code:java}\r\nPDPageXYZDestination destination = new PDPageXYZDestination();\r\n        destination.setPage((PDPage) doc.getDocumentCatalog().getAllPages().get(0));\r\n        //destination.setPageNumber(0); //TODO Set actual page number\r\n        destination.setLeft(0);\r\n        destination.setTop((int) PAGE_HEIGHT);\r\n\r\n        PDAnnotationLink link = new PDAnnotationLink();\r\n        link.setAction(new PDActionGoTo());\r\n        link.setDestination(destination);\r\n        link.setInvisible(false);\r\n        PDBorderStyleDictionary borderThick = new PDBorderStyleDictionary();\r\n        borderThick.setWidth(0f);\r\n        link.setBorderStyle(borderThick);\r\n        page.getAnnotations().add(link);\r\n\r\n        PDRectangle rect = new PDRectangle();\r\n        rect.setLowerLeftX(MARGIN_LEFT);\r\n        rect.setLowerLeftY(textLowerLeftY);\r\n        rect.setUpperRightX(PAGE_WIDTH - MARGIN_RIGHT);\r\n        rect.setUpperRightY(textLowerLeftY + TEXT_HEIGHT);\r\n        link.setRectangle(rect);\r\n{code}\r\n\r\nSee the attached file.\r\n\r\nThe links work fine in Sumatra PDF, Adobe Reader DC 2015 and in Chrome. But in Firefox they don't work.\r\n\r\nIs this due to an error in my code, in Firefox or in PDFBox?"
    ],
    [
        "PDFBOX-1885",
        "PDFBOX-1988",
        "Add reference to ECM REWOO Scope Hello,\r\n\r\nwe, REWOO Technologies AG, are a software company in Germany and provide the Enterprise Content Managment product REWOO Scope which uses the pdfbox library to read and index PDF documents. We would like to ask to be added to your reference page http://pdfbox.apache.org/references.html as suggested on that page.\r\n\r\n\r\nSuggested text for the reference page:\r\n\r\nProject name: ECM REWOO Scope\r\nProject link: http://www.rewoo.de\r\nLicense: Commercial\r\nProject description: REWOO Scope is an Enterprise Content Management (ECM) software to organize, structure and consolidate enterprise data. pdfbox is an integral part to read and index PDF documents.\r\n\r\n\r\nThank you in advance\r\n\r\nBest greetings from Karlsruhe, Germany",
        "PDFBox ExtractText issue of PDF with no embedded fonts I have been using PDFBox 1.8.4 to extract text from several different PDF files fine.  I use the latest PDFBox app with ExtractText command line.  There is one PDF that PDFBox (and iText) fails to extract any text even though I can extract the text with Adobe Reader and also pdftotext.exe part of XPdf.  \"java -jar pdfbox-app-1.8.4.jar ExtractText Test1.pdf Out.txt\".  I don't want to have to rely on using pdftotext.exe from a PC since this is part of an automated application.  I think the error relates to an unknown font type and having to use the few fonts installed in the jar file.  I tried running the API classes and trying to force a font from a certain location but I still got errors.  I thought I loaded the font with the loadTTF method but I don't know if that did anything with the font.  I would really like to have this working straight from the ExtractText class anyway.\r\nHere are the errors I am getting.  I tried this from both a Windows 7 PC and our IBM i in the PASE environment but I get the same errors.  The section starting processEncodedText and on repeats a few times so I just included the first entries.\r\n\r\n \r\n\r\nMar 10, 2014 3:50:44 PM org.apache.pdfbox.pdmodel.font.PDFontFactory createFont                           \r\nWARNING: Substituting TrueType for unknown font subtype=                                                  \r\nMar 10, 2014 3:50:45 PM org.apache.pdfbox.util.PDFStreamEngine processOperator                            \r\nWARNING: java.lang.NullPointerException                                                                   \r\nThrowable occurred: java.lang.NullPointerException                                                        \r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.loadDescriptorDictionary(PDTrueTypeFont.java:375)\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.ensureFontDescriptor(PDTrueTypeFont.java:221)    \r\n\r\n        at org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.<init>(PDTrueTypeFont.java:119)    \r\n        at org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:121)  \r\n        at org.apache.pdfbox.pdmodel.PDResources.getFonts(PDResources.java:204)             \r\n        at org.apache.pdfbox.util.PDFStreamEngine.getFonts(PDFStreamEngine.java:604)        \r\n        at org.apache.pdfbox.util.operator.SetTextFont.process(SetTextFont.java:54)         \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:554) \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:268)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:215)   \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:456)     \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:381)    \r\n        at org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:340)       \r\n        at org.apache.pdfbox.ExtractText.startExtraction(ExtractText.java:275)              \r\n        at org.apache.pdfbox.ExtractText.main(ExtractText.java:85)                          \r\n        at org.apache.pdfbox.PDFBox.main(PDFBox.java:58)                                    \r\nMar 10, 2014 3:50:45 PM org.apache.pdfbox.util.PDFStreamEngine processEncodedText           \r\nWARNING: java.lang.NullPointerException                                                     \r\n\r\nThrowable occurred: java.lang.NullPointerException                                            \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:355)\r\n        at org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:45)                 \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:554)   \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:268)  \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)  \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:215)     \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:456)       \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:381)      \r\n        at org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:340)         \r\n        at org.apache.pdfbox.ExtractText.startExtraction(ExtractText.java:275)                \r\n        at org.apache.pdfbox.ExtractText.main(ExtractText.java:85)                            \r\n        at org.apache.pdfbox.PDFBox.main(PDFBox.java:58)                                      \r\nMar 10, 2014 3:50:45 PM org.apache.pdfbox.util.PDFStreamEngine processOperator                \r\nWARNING: java.lang.NullPointerException                                                       \r\nThrowable occurred: java.lang.NullPointerException                                            \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEngine.java:364)\r\n\r\n        at org.apache.pdfbox.util.operator.ShowText.process(ShowText.java:45)                 \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:554)   \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:268)  \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:235)  \r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:215)     \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:456)       \r\n        at org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:381)      \r\n        at org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:340)         \r\n        at org.apache.pdfbox.ExtractText.startExtraction(ExtractText.java:275)                \r\n        at org.apache.pdfbox.ExtractText.main(ExtractText.java:85)                            \r\n        at org.apache.pdfbox.PDFBox.main(PDFBox.java:58)                                      \r\n\r\n\r\nThanks,\r\n\r\nCraig Strong"
    ],
    [
        "PDFBOX-135",
        "PDFBOX-579",
        "AES Support [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1432143\nOriginally submitted by nobody on 2006-02-15 05:05.\n\nHi, it should be right time now to add AES support\nwhich is in default enabled on all encrypted PDF\ndocuments made by Adobe Acrobat 7.0.\n\nSince AES is supported by java JCE it should not be a\nbig deal. Currently only Big Faceless PDF Library seems\nto support it.\n\nThanks for big help.",
        "WrappedIOException Version 1.5 PDF NET compile I am trying to extract text from newer versions of PDF files using C# code.  With version 0.7.3 I can successfully extract PDF version 1.4 but it will not work on 1.5.  I downloaded 0.8.0 incubating and ran ExtractText.  It gives warnings on the 1.4 version but still works.  With the 1.5 PDF version it gives\r\n\r\nException in thread \"main\" org.apache.pdfbox.exceptions.WrappedIOException\r\n\tAt org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:237)\r\n\tAt org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:861)\r\n\tAt org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:825)\r\n\tAt org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:750)\r\nCaused by: java.util.NoSuchElementException\r\n\tAt java.util.ArrayList$Itr.next(ArrayList.java:757)\r\n\tAt org.apache.pdfbox.pdfparser.PDFXrefStreamParser.parse(PDFXrefStreamParser.java:115)\r\n\tAt org.apache.pdfbox..cos.COSDocument.parseXRefStreams(COSDocument.java:538)\r\n\tAt org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:205)\r\n\t... 4 more\r\n\r\nAm I missing something in my setup or do I need to download/create a new NET DLL file.  I have not found explicit instructions on using IKVM to create the NET library so I am a bit leery of attempting that at the moment.\r\n"
    ],
    [
        "PDFBOX-1218",
        "PDFBOX-2578",
        "width = 0 if a type1 font uses a standard base 14 font The width of each character will be 0 if a type1 font uses one of the standard 14 fonts.",
        "Fuzzy matching of base 14 fonts The file from PDFBOX-2573 has a font \"Helvetica~1d3\" which Adobe Reader recognises as a \"base 14\" Helvetica. We should implement a similarly forgiving font-matching mechanism for cases where there is no FontDescriptor."
    ],
    [
        "PDFBOX-1346",
        "PDFBOX-3056",
        "Can't assign an arbitrary string value to an editable acroform combobox If the field flags \"Combo\" and \"Edit\" of an acro form choice field are both set, the field is an editable combo box and can hold arbitrary string values. See ISO32000-1:2008 Section 12.7.4.4 \"Choice Fields\", Table 230 \"Field flags specific to choice fields\".\r\n\r\nProblem:\r\nThe implementation of the method org.apache.pdfbox.pdmodel.interactive.form.PDChoiceField#setValue(String) does not check for the special case of an editable combo box and raises an exception, if you try to set a value not in the options list.\r\n\r\nThe provided patch fixes the problem.",
        "Make PDFTextStreamEngine public I'd like to experiment with writing my own text extractor that works better for my use case than PDFTextStripper does. Hopefully I can port some of the improvements to PDFTextStripper if I get something working well. I'd really like PDFTextStreamEngine and its constructor to have increased visibility as I believe that it's pretty reasonable for people to be able write their own PDFTextStrippers without having to reimplement showGlyph."
    ],
    [
        "PDFBOX-382",
        "PDFBOX-2561",
        "PDDocument apparently unclosed even after calling close() I can open a PDDocument, extract information from it, and then close it.  However if I then open another PDDocument, I get an exception 'You did not close the PDF Document'.  Looking at the relevant code in incubator svn, nothing stands out as being obviously wrong.\r\n\r\nTo reproduce:\r\n\r\n% cat PDFBoxBugReduction.java \r\nimport org.pdfbox.pdmodel.PDDocument;\r\nimport org.pdfbox.pdmodel.PDDocumentInformation;\r\n\r\npublic class PDFBoxBugReduction {\r\n    public static void main(String[] args) {\r\n        for (String s : args) {\r\n            PDFBoxBugReduction fi = new PDFBoxBugReduction(s);\r\n            System.err.println(\"File \" + s);\r\n        }\r\n    }\r\n    \r\n\r\n    public PDFBoxBugReduction(String filename) {\r\n        PDDocument doc = null;\r\n        try {\r\n            try {\r\n                doc = new PDDocument().load(filename);\r\n                PDDocumentInformation info = doc.getDocumentInformation();\r\n            } finally {\r\n                if (doc != null) {\r\n                    System.err.println(\"Closing document \" + filename + \"...\");\r\n                    org.pdfbox.cos.COSDocument cos = doc.getDocument();\r\n                    cos.close();\r\n                    System.err.println(\"Closed \" + cos);\r\n                    doc.close();\r\n                }\r\n                \r\n            }\r\n            \r\n        } catch (java.io.IOException e) {\r\n            System.err.println(\"IOException=\" + e);\r\n            System.exit(1);\r\n        }\r\n    }\r\n}\r\n% java -version              \r\njava version \"1.5.0_16\"\r\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_16-b06-284)\r\nJava HotSpot(TM) Client VM (build 1.5.0_16-133, mixed mode, sharing)\r\n% javac -cp PDFBox-0.7.3.jar PDFBoxBugReduction.java                      \r\n% java -cp PDFBox-0.7.3.jar:. PDFBoxBugReduction ../part1.pdf ../part2.pdf\r\nClosing document ../part1.pdf...\r\nClosed org.pdfbox.cos.COSDocument@2a54f9\r\nFile ../part1.pdf\r\njava.lang.Throwable: Warning: You did not close the PDF Document\r\n\tat org.pdfbox.cos.COSDocument.finalize(COSDocument.java:418)\r\n\tat java.lang.ref.Finalizer.invokeFinalizeMethod(Native Method)\r\n\tat java.lang.ref.Finalizer.runFinalizer(Finalizer.java:83)\r\n\tat java.lang.ref.Finalizer.access$100(Finalizer.java:14)\r\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:160)\r\nClosing document ../part2.pdf...\r\nClosed org.pdfbox.cos.COSDocument@6672d6\r\nFile ../part2.pdf\r\n% \r\n\r\nOddly, replacing\r\n \r\n    doc = new PDDocument().load(filename);\r\n\r\nby\r\n\r\n    doc = new PDDocument();\r\n    doc.load(filename);\r\n\r\n...makes the problem go away.  Is the wrong thing perhaps being returned by load()?",
        "Rendering of PDIndexed line incorrect Page 4 of the attached file ( http://www.jagpdf.org/doc/samples/jagpdf_doc_color_spaces.pdf , linked from http://www.jagpdf.org/doc/jagpdf/usersguide/graphics.htm ) has three colors that are rendered incorrectly. The initialization is correct, however toRGB() gets passed float values that are indices, i.e. 0.0, 1.0, 2.0, so it is wrong to multiply them with 255.\r\n\r\nSee also PDFBOX-1997 and [ https://svn.apache.org/r1607674 ] which had a similar problem.\r\n\r\nBefore committing I'll first run my test suite."
    ],
    [
        "PDFBOX-1187",
        "PDFBOX-834",
        "Cut dependency between pdfbox and jempbox pdfbox artifact depends on jempbox only in PDMetadata class where two methods export or import XMPMetadata :\r\n* exportXMPMetadata\r\n* importXMPMetadata\r\n\r\nThe work on serializing/unserializing could be done in the calling code without complexity (see attached patch)\r\n\r\nPlease give opinion",
        "IIOException: Error 2 when displaying PDF containing CCITT Group 3 compressed images A client sent me a PDF that failed with:\r\nSEVERE: javax.imageio.IIOException: Error 2\r\nat com.sun.media.imageioimpl.plugins.tiff.TIFFFaxDecompressor.decodeBlackCodeWord(TIFFFaxDecompressor.java:1389)\r\ncom.sun.media.imageioimpl.plugins.tiff.TIFFFaxDecompressor.decodeT6(TIFFFaxDecompressor.java:1140)\r\ncom.sun.media.imageioimpl.plugins.tiff.TIFFFaxDecompressor.decodeRaw(TIFFFaxDecompressor.java:680)\r\ncom.sun.media.imageio.plugins.tiff.TIFFDecompressor.decode(TIFFDecompressor.java:2514)\r\n\r\nIt turns out this happens with images using CCITT Group 3 (T.4) compressed images with no \"K\" key in the DecodeParams (i.e. K=0). Group 4 is set on the TIFF which leads to a decoding error. Extracting the TIFF, the software info field is malformed, too."
    ],
    [
        "PDFBOX-2184",
        "PDFBOX-2144",
        "CMMException: Invalid profile data Jenkins builds are intermittently failing with the error:\r\n\r\n{code}\r\njava.awt.color.CMMException: Invalid profile data\r\n\tat sun.awt.color.CMM.checkStatus(CMM.java:131)\r\n\tat sun.awt.color.ICC_Transform.<init>(ICC_Transform.java:88)\r\n\tat java.awt.color.ICC_ColorSpace.toRGB(ICC_ColorSpace.java:144)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB.toRGB(PDDeviceRGB.java:79)\r\n\tat org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.toPaint(PDColorSpace.java:255)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.getNonStrokingPaint(PageDrawer.java:666)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.fillPath(PageDrawer.java:739)\r\n\tat org.apache.pdfbox.util.operator.pagedrawer.FillNonZeroRule.process(FillNonZeroRule.java:37)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:488)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:254)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:221)\r\n\tat org.apache.pdfbox.util.operator.pagedrawer.Invoke.process(Invoke.java:130)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:488)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:254)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:221)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:197)\r\n\tat org.apache.pdfbox.rendering.PageDrawer.drawPage(PageDrawer.java:183)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderPage(PDFRenderer.java:228)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:160)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:83)\r\n\tat org.apache.pdfbox.rendering.PDFRenderer.renderImage(PDFRenderer.java:70)\r\n\tat org.apache.pdfbox.util.TestRendering.render(TestRendering.java:78)\r\n{code}",
        "Provide a pluggable font manager Our J2EE application has all fonts and resources configured and stored in its database. No files are accessed directly from file system or from system environment. To make PDFBox compatible with this philosophy, we need the FontManager in pdfbox and fontbox to be pluggable, e.g. as shown in the attached patch.\r\n\r\nThe proposal defines a FontManager interface and default implementation which is the original one. FontManager then needs to be configured on and propagated from PDFStreamEngine and PageDrawer. It should also be configurable on PDFRenderer, which is not shown in the patch. There I would suggest to introduce a configuration object which would take care about all the current and future options of PDFRenderer.\r\n"
    ],
    [
        "PDFBOX-737",
        "PDFBOX-1755",
        "Fix potential NullPointer exception in PDPageNode getAllKids(List result, COSDictionary page, boolean recurse) throws a NullPointerException when page.getDictionaryObject( COSName.KIDS ) returns null.  I have a PDF where this actually happens but I can not provide it due to the confidential information it contains.  I confirmed that once I added the null check that the code worked as expected (the documents I was merging were visible, the page count was correct, etc.).  Patch will be attached momentarily.",
        "Wrong widthOfSpace For some TextPositions in this particular PDF (after being processed with PDFStreamEngine), the getWidthOfSpace method returns 0.\r\n\r\nI've traced the bug to `processEncodedText` in `PDFStreamEngine`: when  `spaceWidthText` is converted to display units, `textMatrix.getValue(0,0)` returns 0. Being a factor in the conversion expression, sets the result to 0.\r\n\r\nfloat spaceWidthDisp = spaceWidthText * fontSizeText * horizontalScalingText * textMatrix.getValue(0, 0)\r\n                    * ctm.getValue(0, 0);\r\n\r\nThe conversion is correct if that factor is removed from the expression.\r\n"
    ],
    [
        "PDFBOX-1327",
        "PDFBOX-2787",
        "Parser:  java.io.IOException: Unknown dir object c='>' cInt=62 peek='>' peekInt=62  Exception in thread \"main\" java.io.IOException: Unknown dir object c='>' cInt=62 peek='>' peekInt=62 org.apache.pdfbox.io.PushBackInputStream@7d2a1e44\r\n\tat org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:1098)\r\n\tat org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionaryValue(BaseParser.java:179)\r\n\tat org.apache.pdfbox.pdfparser.BaseParser.parseCOSDictionary(BaseParser.java:292)\r\n\tat org.apache.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:1000)\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:543)\r\n\tat org.apache.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:184)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1069)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1036)\r\n\tat org.apache.pdfbox.pdmodel.PDDocument.load(PDDocument.java:1007)\r\n",
        "Allow to import selected pages with the corresponding AcroForm fields and annotations When a page is imported into a document using importPage() addPage() the annotations and AcroForm fields are not imported which might be irritating for the user.\r\n\r\nAlthough one could do it with additional code we should provide a mechanism to make that easier."
    ],
    [
        "PDFBOX-2649",
        "PDFBOX-487",
        "Character widths incorrect in a loaded font {code}\r\n@Test\r\ntestRelativeWidth() {\r\nPDFont font = PDType0Font.load(document, this.getClass().getResourceAsStream(\"/LiberationSans-Regular.ttf\"));\r\nfloat wO = font.getStringWidth(\"O\");\r\nfloat wP = font.getStringWidth(\"P\");\r\nfloat wN = font.getStringWidth(\"N\");\r\nAssert.assertTrue(\"O must be wider than P\", wO>wP);\r\nAssert.assertTrue(\"O must be wider than N\", wO>wN);\r\n}\r\n{code}\r\n\r\nI can see that there is a confusion in the process between GID and CID values. The reason may not be entirely clear to me, but PDCIDFontType2Embedder.buildWidths(COSDictionary cidFont) seems to name \"cid\" something that in my opinion is still a glyph id. And when it comes to PDCIDFont.getWidth(int), the \"widths\" map that should presumably contain cid->width values in reality contains git->width.",
        "Font size not rendered with the needed precision When previewing the attached file using the PDFReader, the font size is not correct. The last paragraph (the one with the huge hex string that is split over several lines) should be exactly as long as the \r\nseparator lines. See how the font size changes if the preview is resized, leaving a wider or narrower margin at the end of the page.\r\n\r\nThis can be solved by adding\r\n        graphics.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);\r\n\r\nto the drawPage method of the PageDrawer. After applying the change, always fits the page exactly, independent of the preview window size."
    ],
    [
        "PDFBOX-2505",
        "PDFBOX-3205",
        "ArrayIndexOutOfBoundsException in PDColor constructor {code}\r\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1\r\n        at java.util.ArrayList.elementData(Unknown Source)\r\n        at java.util.ArrayList.get(Unknown Source)\r\n        at org.apache.pdfbox.cos.COSArray.get(COSArray.java:210)\r\n        at org.apache.pdfbox.pdmodel.graphics.color.PDColor.<init>(PDColor.java:54)\r\n        at org.apache.pdfbox.contentstream.operator.color.SetColor.process(SetColor.java:41)\r\n        at org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor.process(SetNonStrokingDeviceCMYKColor.java:38)\r\n{code}\r\nThe attached file has a \"k\" without arguments.\r\nThis is only in 2.0, not in 1.8. In 1.8 SetNonStrokingCMYKColor initializes the array with size 4 (ok, it will crash if there are 5 arguments), in 2.0 SetNonStrokingDeviceCMYKColor / SetColor take what is there.\r\n\r\nTwo possible solutions in SetColor:\r\n1) initialize \"components\" with the initial colors of the colorspace\r\n2) initialize \"components\" with empty array\r\n\r\nBoth solutions get rid of the exception. Solution 2 is used in another constructor.\r\n\r\nWhich one is better? (I'd prefer solution 1 because it has the correct array size and would also change the other constructor)\r\n",
        "How Can i fix this message \"unsupported/disabled operation: i\" Hi.\r\nWhen i convert pdf to image(e.g jpg, png), then I can saw this message, \r\n\" org.apache.pdfbox.util.PDFStreamEngine processOperator \r\n\uc815\ubcf4: unsupported/disabled operation: i \"\r\nand also saw another message. \r\n\"org.apache.pdfbox.util.PDFImageWriter writeImage \r\n\uc815\ubcf4: Writing: D:\\ImageSaveRep\\test/e10579/e1057934.jpg\"\r\n\r\nAfter i saw this message, i can see blank image.\r\nDo you know how to fix that??\r\n\r\nplease let me know some answer.\r\n\r\nThis is my source\r\n\r\ndocument = PDDocument.load(sourceDir);\r\nList<PDPage> list = document.getDocumentCatalog().getAllPages();\r\nString fName = sourceFile.getName().replace(\".pdf\", \"\"); \r\n       \r\n int pageNumber = 1;\r\n for (PDPage page : list) {\r\n\r\n\tBufferedImage image = page.convertToImage();\r\n\r\n\tString createFileName = destinationDir+\"/\" + fileName +\"_\"+ String.format(\"%03d\", pageNumber)+\".\"+convertFormat;\r\n\r\n\tOutputStream os = new FileOutputStream(createFileName);\r\n\r\n\tImageIOUtil.writeImage(image, convertFormat, os, Integer.parseInt(convertDPI), Float.parseFloat(convertQuality));\r\n\r\n\t pageNumber++;\r\n}\r\ndocument.close();\t"
    ],
    [
        "PDFBOX-620",
        "PDFBOX-97",
        "Text extract fails on some PDF files but not others... Having the same problem with 0.7.3, 0.7.4-dev and 0.8.0 - in 0.7.3 I get text with nulls, e.g. \"Dermoapo made 'interactive updates' a key part onullits stratenull nullr launnull chinnulla new skincare rannull in a competitive market. nulle resultnullIncreased sales nullr pharmacies that used the updates.\" while in 0.8.0 it appears as \"Dermoapo made 'interactive updates' a key part o?its strate? ?r laun?\r\nchin?a new skincare ran? in a competitive market. ?e result?Increased \r\nsales ?r pharmacies that used the updates.\" \r\n\r\nMaybe this is a font problem? Or encoding? I debugged the code in PDFTextStripper and and these appear in the charactersByArticle field even before normalization. \r\n\r\nIn 0.8.0 I get some info logs from the engine:\r\n\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: re\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: W\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: n\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: cs\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: scn\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: f\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: CS\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: SCN\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: M\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: m\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: l\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: S\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: BDC\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: c\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: v\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: y\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: h\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: g\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: G\r\nSP INFO  20:52:12 PDFStreamEngine - unsupported/disabled operation: EMC\r\n\r\nI got the same error with icu4j 3.6.1 and 4.2.1\r\n\r\n",
        "error extracting fields from pdf with usage rights. [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1305400\nOriginally submitted by benlitchfield on 2005-09-26 18:55.\n\nSee: usage_rights_form.pdf\n\nthis is my scenario: \n1. I create form with Adobe Form Designer (included in \nAcrobat Professional 7). \nThe form is complex and has lots of JavaScript to \nvalidate, change, and even dynamically fill data from \nremote Web Service! \n2. Then I add usage rights with Reader Extension \nServer, so that the form can be signed with digital \nsignature with the free version of Reader \n3. Then, place the PDF form file on a WEB server (ex. \nApache) and \"give\" it to the users :) \n \nSo far, so good! When a user fills in the form fields, he \nor she submits the whole PDF file back to a server \napplication for further processing. In my case this app is \na Java Servlet. \n \nWhat I need is to extract all the fields from the pdf file \nincluding the digital signature. \nI know that this has been discussed already, BUT the \nsimple code does not work. I suppose that the problem \nis with the output pdf file from Form Designer. \nThe \"not working part\" is this: \n \nPDDocument pdfDocument = PDDocument.load\n(pdfFile); \nPDAcroForm form = pdfDocument.getDocumentCatalog\n().getAcroForm(); \nList flist = form.getFields(); \n \nHere in \"flist\" I get a single element which is null. \n-----------------------------------------\nHi, again. I was on a travel so the \"pdf problem\" was off \nfor a while, but now it is up and bugging me again. \nHere is what I got: I have a form designed with Designer \n7, which has a button of type \"submit pdf\". This is \nbecause the form has a digital signature field and if I \nchoose \"submit xml\" the Sig filed is not submited. The \nsubmit action is to a Java servlet where I dump the byte \nstream to a file. \nWhat I would like to do is get the data from each field \nincluding the digital signature so I can validate it. The \nPrintFields example works as long as the form is NOT \nsigned. In my case I could get the form structure but all \nthe fields (filed.getValue() or field.toString()) are null, and \non the digital signature the is nothing in the COS \ndictionary about certificate or something. \n-------------------------------------------------------------------\nHello, I found where is the problem. When I sign and \nsave the document in pdf-1.6 format in the raw pdf file I \nget 3 pdf forms. I guess history changes are also saved. \nThe first form is blank (fields/textboxes are blank/null), \nthe second is with values and the digital signature and \nthe third is the same as the second one but is saved \nbecause (I guess again) the Submit button was pressed \nand this is a change. \nAs I looked at the code of PDFBox more careful I \nsupose that the pdf box gets the first form only which in \nmy case is blank."
    ],
    [
        "PDFBOX-803",
        "PDFBOX-142",
        "Improved handling erronous data between endstream and endobj lines I found that a PDF created by Exstream Dialogue Version 5.0.039 had \">> \" between the endstream and endobj sections.  When this happened, PDFBox threw an exception.  This patch ignores junk characters between these sections so the files can be processed.  A log message is written warning the user of the violation of the spec.  For reference, here's the object I found in the file (excluding the stream data):\r\n27     0 obj\r\n<<\r\n/Filter [/A85 /Fl]\r\n/Length 322\r\n>>\r\nstream\r\n(data from stream omitted)\r\nendstream\r\n>> endobj \r\n%PDF Font (F315)\r\n\r\nAs a side note Exstream seems to have sold their Dialogue software to HP, and the current version is 7.  This means the bug is likely fixed in the latest version, but there are still some older PDFs out there which PDFBox should be able to handle without throwing an exception.",
        "PDF to image bugs [imported from SourceForge]\r\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1448751\r\nOriginally submitted by rstraube on 2006-03-13 02:17.\r\n\r\nPDFToImage doesn't support colors, field contents and\r\nvertical text. \r\nI know, that the PDFToImage is only a beta version.\r\nWhen do you plan to release a full version?\r\n\r\n[attachment on SourceForge]\r\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1448751&file_id=170693\r\nTestformular11.jpg (image/jpeg), 157344 bytes\r\nresult after conversion \r\n\r\n[attachment on SourceForge]\r\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1448751&file_id=170692\r\nTestformular1.pdf (application/pdf), 53793 bytes\r\nPDF test form\r\n\r\n[comment on SourceForge]\r\nOriginally sent by benlitchfield.\r\nLogged In: YES \r\nuser_id=601708\r\n\r\nThanks for the bug report and the example PDF documents.\r\n\r\nHere are my thoughts on the unsupported parts of that PDF\r\n\r\n1)colors should be easy to add, they do already work in \r\ncertain situations\r\n2)Field contents should not be too bad either, just need to \r\nexecute that appearance stream\r\n3)Vertical text might be a little more difficult\r\n\r\nA full version of PDFToImage is a huge amount of work.  I \r\nam adding pieces as I can but it will be a long time before \r\na high quality version is available.\r\n\r\nBen"
    ],
    [
        "PDFBOX-2592",
        "PDFBOX-644",
        "Allow sharing of COS objects between different documents A number of users on the mailing list have asked about how to import pages from other PDFs as forms, our current solution is LayerUtility, which is depends on PDFCloneUtility. Both these classes are surprisingly complex for what should be a simple task.\r\n\r\nThe two main tasks which these classes perform is copying the page's COSStream and cloning every relevant COS object. However, there seems to be no real need to do any of this copying and cloning - there's nothing about any of the COS objects which is specific to a given document. While a COSStream can share the same backing file as the COSDocument, this isn't a problem for COSWriter, even then we need only make sure that an exception is thrown if a COSStream is used after its parent COSDocument is closed.\r\n\r\nNote that there *is* one artificial dependency between COSDictionary and COSArrays and their parent COSDocument, that is that calling close() on the COSDocument clears the contents of all child COSDictionary and COSArrays. However, there's no need for this, it seems to have come about due to some long past confusion regarding how garbage collection works in Java - we all know that it's not necessary to set objects to null or clear lists when we are done with them.\r\n\r\nI propose that we get rid of the unnecessary object and list clearing in COSDocument#close() and add some checks to COSStream to throw user-friendly exceptions when reading from a closed backing stream. This will allow us to directly share COS objects between different COSDocuments, allowing simple \"x = y\" copying and making LayerUtility and PDFCloneUtility unnecessary. Instead of:\r\n\r\n{code}\r\nCOSStream pageStream = (COSStream)page.getStream().getCOSObject();\r\nPDStream newStream = new PDStream(targetDoc, pageStream.getUnfilteredStream(), false);\r\nPDFormXObject form = new PDFormXObject(newStream);\r\n\r\nPDResources pageRes = page.getResources();\r\nPDResources formRes = new PDResources();\r\nPDFCloneUtility cloner = new PDFCloneUtility(document);\r\ncloner.cloneMerge(pageRes, formRes);\r\nform.setResources(formRes);\r\n{code}\r\n\r\nWe could have:\r\n{code}\r\nPDFormXObject form = new PDFormXObject(page.getStream());\r\nform.setResources(page.getResources());\r\n{code}",
        "Move FontBox and JempBox under the same trunk with PDFBox As discussed on dev@, I'd like to move all our component under the same trunk. The proposed project structure is:\r\n\r\n    trunk/pdfbox\r\n    trunk/fontbox\r\n    trunk/jempbox\r\n"
    ],
    [
        "PDFBOX-1854",
        "PDFBOX-3138",
        "Include AFM files for Core 14 fonts I noticed that the build process for PDFBox includes downloading the core 14 AFM files however they are under an Apache-compatible license (see LEGAL-35) so can be included directly in the source tree.",
        "PDTextField doesn't accept any Hebrew characters as new value Trying to set a UTF-8 encoded Hebrew string as the value of a PDTextField fails with the following exception:\r\n\r\n{code}\r\nException in thread \"main\" java.lang.IllegalArgumentException: No glyph for U+05D7 in font AdobeHebrew-Regular\r\n\tat org.apache.pdfbox.pdmodel.font.PDType1CFont.encode(PDType1CFont.java:300)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:283)\r\n\tat org.apache.pdfbox.pdmodel.PDPageContentStream.showText(PDPageContentStream.java:341)\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter.format(PlainTextFormatter.java:213)\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.insertGeneratedAppearance(AppearanceGeneratorHelper.java:373)\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.setAppearanceContent(AppearanceGeneratorHelper.java:237)\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper.setAppearanceValue(AppearanceGeneratorHelper.java:144)\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.PDTextField.constructAppearances(PDTextField.java:263)\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField.applyChange(PDTerminalField.java:221)\r\n\tat org.apache.pdfbox.pdmodel.interactive.form.PDTextField.setValue(PDTextField.java:218)\r\n\tat SetHebrewFieldValueTest.main(SetHebrewFieldValueTest.java:22)\r\n{code}\r\n\r\nI've tried using multiple fonts for the field, all of which can handle Hebrew characters just fine, and got the same results in all of them.\r\nSee attached files for a demonstration of the issue."
    ],
    [
        "PDFBOX-438",
        "PDFBOX-295",
        "FlateFilter: endless loop because of missing length check (for encrypted pdfs) if mayRead is set to zero than following statement is executed endlessly:\r\nwhile ((amountRead = decompressor.read(buffer, 0, Math.min(mayRead,BUFFER_SIZE))) != -1)\r\n                    {\r\n                        result.write(buffer, 0, amountRead);\r\n                    }\r\n\r\nwe just have to check that  mayRead > 0 zero.",
        "CMapParser \"cidrange\" support [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=149227&atid=773646&aid=1769918\nOriginally submitted by yt_okamoto on 2007-08-08 03:20.\n\nHi Ben,\n\nFontBox couldn't parse some cmap files which contain \"cidrange\" property (ex. 90ms-RKSJ-H) correctly. Extract text from PDF which contain such encoding by PDFBox, it will fail as follows.\n\njava.io.IOException: Unknown encoding for '90ms-RKSJ-H'\n at org.pdfbox.encoding.EncodingManager.getEncoding(EncodingManager.java:82)\n at org.pdfbox.pdmodel.font.PDFont.getEncoding(PDFont.java:618)\n at org.pdfbox.pdmodel.font.PDFont.encode(PDFont.java:471)\n at org.pdfbox.util.PDFStreamEngine.showString(PDFStreamEngine.java:325)\n at org.pdfbox.util.operator.ShowText.process(ShowText.java:64)\n at org.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:452)\n at org.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:215)\n at org.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:174)\n at org.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:336)\n at org.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:259)\n at org.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:216)\n at org.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:149)\n at TempTestMain.main(TempTestMain.java:56)\n\nRegards,\nYuta"
    ],
    [
        "PDFBOX-2080",
        "PDFBOX-1852",
        "Barcode getting color inverted in pdf to image conversion While converting a 1 page pdf to an image (both attached below), the image converts properly, however the barcodes colours invert.\r\n\r\nThe code used to do the conversion looks like this right now:\r\n\r\n      public static void convertPDFToJPG(String src){\r\n\r\n            try{\r\n\r\n                  //load pdf file in the document object\r\n                  PDDocument doc=PDDocument.load(new FileInputStream(src));\r\n                  //Get all pages from document and store them in a list\r\n                  List<PDPage> pages=doc.getDocumentCatalog().getAllPages();\r\n                  //create iterator object so it is easy to access each page from the list\r\n                  Iterator<PDPage> i= pages.iterator();\r\n                  int count=1; //count variable used to separate each image file\r\n                  //Convert every page of the pdf document to a unique image file\r\n                  System.out.println(\"Please wait...\");\r\n                  while(i.hasNext()){\r\n                        PDPage page=i.next(); \r\n                        BufferedImage bi=page.convertToImage( BufferedImage.TYPE_INT_RGB,  300);\r\n                        FileOutputStream fos = new FileOutputStream(new File(\"d:\\\\slika2_3.jpg\"));\r\n                        //ImageIO.write(bi, \"jpg\", new File(\"d:\\\\pdfimageold.jpg\"));\r\n                        boolean foundWriter = ImageIOUtil.writeImage(bi, \"jpg\", fos, 300);\r\n                        count++;\r\n                  \r\n                  }\r\n                  System.out.println(\"Conversion complete\");\r\n            }catch(IOException ie){ie.printStackTrace();}\r\n      }\r\n",
        "[PATCH] Alternative patch to speed up TestImageIOUtils This is an alternative to the PDFBOX-1850 patch to speed up TestImageIOUtils.\r\n\r\nRather than using multi-threading, this patch reduces the scope of the TestImageIOUtils test. The purpose of TestImageIOUtils is to check thatImageIOUtils can write jpeg, bmp and wbmp files without throwing an exception. Looking at the mailing list archive http://mail-archives.apache.org/mod_mbox/pdfbox-commits/201112.mbox/%3C20111218154622.3EE76238899C@eris.apache.org%3E we can see that the original issue was that the JPEG compression configuration broke BMP writing. It is therefore sufficient to convert only a single PDF file to each of the output formats in order to test this.\r\n\r\nThe test is not quite so simple though, as TestImageIOUtils is also used for processing embedded images in PDF files and so needs to be tested on appropriate PDF files, this is not something that the current test suite was actually doing. I've therefore added some test PDF files containing PNGs,  JPEGs, and pixmaps. These are from libharu https://github.com/libharu/libharu and are under the ZLIB/LIBPNG license.\r\n\r\nBecause TestImageIOUtils now only needs to be run on three files it takes around 2sec on my machine rather than over 30sec."
    ],
    [
        "PDFBOX-365",
        "PDFBOX-276",
        "Updating Lucene version (was: Error in LucenPDFDocument class) When the method\n\n LucenePDFDocument.getDocument(new File(\"filename\"));\n\nis called I got the following stack trace. Seems PDFBox is not compatible with latest version of Lucene. \n\nException in thread \"main\" java.lang.NoSuchMethodError: org.apache.lucene.document.Document.add(Lorg/apache/lucene/document/Field;)V\n\tat org.pdfbox.searchengine.lucene.LucenePDFDocument.addUnindexedField(LucenePDFDocument.java:224)\n\tat org.pdfbox.searchengine.lucene.LucenePDFDocument.convertDocument(LucenePDFDocument.java:265)\n\tat org.pdfbox.searchengine.lucene.LucenePDFDocument.getDocument(LucenePDFDocument.java:377)\n\tat PDFTest.main(PDFTest.java:55)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:90)",
        "IOException on parsing a PDF file [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1722594\nOriginally submitted by doublep-enw on 2007-05-21 05:10.\n\nWhen parsing the attached file, PDFBox throws the following exception:\n\njava.io.IOException: expected='/' actual='?'--1 org.pdfbox.io.PushBackInputStream@159f498\n    at org.pdfbox.pdfparser.BaseParser.parseCOSName(BaseParser.java:774)\n    at org.pdfbox.pdfparser.BaseParser.parseCOSDictionary(BaseParser.java:217)\n    at org.pdfbox.pdfparser.BaseParser.parseDirObject(BaseParser.java:910)\n    at org.pdfbox.pdfparser.PDFParser.parseObject(PDFParser.java:432)\n    at org.pdfbox.pdfparser.PDFParser.parse(PDFParser.java:176)\n\nThe file does look strange inside, but PDF viewers don't seem to care.\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1722594&file_id=229983\nNotIndexedDocument.pdf (application/pdf), 8728 bytes\nunparseable file"
    ],
    [
        "PDFBOX-2944",
        "PDFBOX-2822",
        "false negative on pdf/a validation: 1.0.14 : Syntax error, Object {16:0} has an offset of 0  ? Happens with a nighly build earlier this month\r\n\r\nBFO Validator and\r\nhttp://www.pdf-tools.com/pdf/pdfa-online-pruefen.aspx claim it to be valid\r\n\r\nIntarsys and SolidDocuments claim it not to be valid.\r\n{code}\r\nAnmeldung.pdf not PDF/A1-b-compliant. (e0316)\r\nAnmeldung.pdf not PDF/A1-a-compliant. (e0316)\r\nPDF_A1B errors:\r\n1: 1.0.14 : Syntax error, Object {16:0} has an offset of 0\r\n2: 1.0.14 : Syntax error, Object {17:0} has an offset of 0\r\n3: 1.0.14 : Syntax error, Object {22:0} has an offset of 0\r\n4: 1.0.14 : Syntax error, Object {28:0} has an offset of 0\r\n5: 1.0.14 : Syntax error, Object {32:0} has an offset of 0\r\n6: 1.0.14 : Syntax error, Object {33:0} has an offset of 0\r\n7: 1.0.14 : Syntax error, Object {34:0} has an offset of 0\r\n8: 1.0.14 : Syntax error, Object {38:0} has an offset of 0\r\n9: 1.0.14 : Syntax error, Object {43:0} has an offset of 0\r\n10: 1.0.14 : Syntax error, Object {47:0} has an offset of 0\r\n11: 1.0.14 : Syntax error, Object {48:0} has an offset of 0\r\n12: 1.0.14 : Syntax error, Object {49:0} has an offset of 0\r\n13: 1.0.14 : Syntax error, Object {53:0} has an offset of 0\r\n14: 1.0.14 : Syntax error, Object {59:0} has an offset of 0\r\n15: 1.0.14 : Syntax error, Object {63:0} has an offset of 0\r\n16: 1.0.14 : Syntax error, Object {64:0} has an offset of 0\r\n17: 1.0.14 : Syntax error, Object {65:0} has an offset of 0\r\n18: 1.0.14 : Syntax error, Object {69:0} has an offset of 0\r\n19: 1.0.14 : Syntax error, Object {74:0} has an offset of 0\r\n20: 1.0.14 : Syntax error, Object {78:0} has an offset of 0\r\n21: 1.0.14 : Syntax error, Object {79:0} has an offset of 0\r\n22: 1.0.14 : Syntax error, Object {80:0} has an offset of 0\r\n23: 1.0.14 : Syntax error, Object {84:0} has an offset of 0\r\n24: 1.0.14 : Syntax error, Object {89:0} has an offset of 0\r\n25: 1.0.14 : Syntax error, Object {93:0} has an offset of 0\r\n26: 1.0.14 : Syntax error, Object {94:0} has an offset of 0\r\n27: 1.0.14 : Syntax error, Object {95:0} has an offset of 0\r\n28: 1.0.14 : Syntax error, Object {99:0} has an offset of 0\r\n29: 1.0.14 : Syntax error, Object {103:0} has an offset of 0\r\n30: 1.0.14 : Syntax error, Object {107:0} has an offset of 0\r\n31: 1.0.14 : Syntax error, Object {108:0} has an offset of 0\r\n32: 1.0.14 : Syntax error, Object {109:0} has an offset of 0\r\n33: 1.0.14 : Syntax error, Object {113:0} has an offset of 0\r\n34: 1.0.14 : Syntax error, Object {119:0} has an offset of 0\r\n35: 1.0.14 : Syntax error, Object {123:0} has an offset of 0\r\n36: 1.0.14 : Syntax error, Object {124:0} has an offset of 0\r\n37: 1.0.14 : Syntax error, Object {125:0} has an offset of 0\r\n38: 1.0.14 : Syntax error, Object {129:0} has an offset of 0\r\n39: 1.0.14 : Syntax error, Object {133:0} has an offset of 0\r\n40: 1.0.14 : Syntax error, Object {137:0} has an offset of 0\r\n41: 1.0.14 : Syntax error, Object {138:0} has an offset of 0\r\n...\r\n{code}",
        "infinite loop of searching for a key in PDResources error in code of class - org.apache.pdfbox.pdmodel.PDResources\r\n{code}\r\n    private COSName createKey(COSName kind, String prefix)\r\n    {\r\n        COSDictionary dict = (COSDictionary)resources.getDictionaryObject(kind);\r\n        if (dict == null)\r\n        {\r\n            return COSName.getPDFName(prefix + 1);\r\n        }\r\n\r\n        // find a unique key\r\n        String key;\r\n        do\r\n        {\r\n            key = prefix + (dict.keySet().size() + 1);\r\n        }\r\n        while (dict.containsKey(key));    <--------------- infinite loop of searching for a key\r\n        return COSName.getPDFName(key);\r\n    }\r\n{code}\r\nmy test code:\r\n{code}\r\npublic class pdfmain_svg {\r\n\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t\tSystem.out.println(\"hello\");\r\n\t\tPDDocument document = PDDocument.load(new File(\r\n\t\t\t\t\"d:\\\\Project\\\\pdfbox-image\\\\Acro6JSGuide.pdf\"));\r\n\r\n\t\tfloat fontSize = 10f;\r\n\r\n\t\tPDFont font = PDType0Font.load(document, new File(\r\n\t\t\t\t\"c:\\\\Windows\\\\Fonts\\\\Arial.TTF\"));\r\n\r\n\t\tfor (int pageIndex = 0; pageIndex < document.getNumberOfPages(); pageIndex++) {\r\n\t\t\tSystem.out.println(\"page index = \" + pageIndex);\r\n\t\t\tPDPage page = document.getPage(pageIndex);  \r\n\t\t\tPDPageContentStream contentStream = new PDPageContentStream(\r\n\t\t\t\t\tdocument, page, true, true);\r\n\t\t\tcontentStream.setFont(font, fontSize); <---------------- hang on page 6\r\n\t\t\tcontentStream.setNonStrokingColor(Color.LIGHT_GRAY);\r\n\t\t\tcontentStream.beginText();\r\n\t\t\tcontentStream.newLineAtOffset(100, 100);\r\n\t\t\tcontentStream.showText(\"Test printing\");\r\n\t\t\tcontentStream.endText();\r\n\t\t\tcontentStream.close();\r\n\t\t}\r\n\t\tFile f = new File(\"d:\\\\work\\\\kostya.pdf\");\r\n\t\tdocument.save(f);\r\n\t\tdocument.close();\r\n\t\tSystem.out.println(\"f=\" + f.getAbsolutePath() + \": \" + f.exists());\r\n\t}\r\n\r\n}\r\n\r\n{code}"
    ],
    [
        "PDFBOX-2753",
        "PDFBOX-556",
        "Improve rendering of filled thin lines While working on PDFBOX-1658 I noticed that the file also contains some thin lines which disappear when rendering at lower resolutions. The problem is due to the PDF having filled paths with a width < 1px being used, rather than using stroked paths. Because these paths are rectangular, they're triggering our heuristic gradient detector which disables anti-aliasing.\r\n\r\nThe solution is to increase the threshold for disabling anti-aliasing to paths with a width and height > 1, and this file now renders perfectly, even at 72 dpi.\r\n\r\nSee the discussion in PDFBOX-1658 for further information.",
        "Performance regression from 0.7.3 to 0.8.0 After upgrading from version 0.7.3 to 0.8.0 our pdf indexing for lucene takes a lot longer than expected.\r\n\r\nE.g. a single pdf needs 1150ms to be indexed compared to 750ms with version 0.7.3 ==>  +50%\r\n\r\nMy first thought was that more pdfs are indexed or even indexed correctly with 0.8.0. But that shouldn't be an impact more than 50%.\r\n\r\nProfiling with YourKit shows that a lot of time is spent in the method BaseParser.readUntilEndStream and it's invocation of cmpCircularBuffer. Maybe somebody find out how to improve the performance here.\r\n\r\nThe method readUntilEndStream handles endobj tags in the stream also which impacts of course the performance, but this is OK.\r\n\r\n"
    ],
    [
        "PDFBOX-2952",
        "PDFBOX-1275",
        "Log statement on level 'severe' while nothing else indicates error I use PdfBox to insert a little bit of text at the top of my PDF-documents. I have found one case (one input document) where Fontbox emits a log record on level severe/error, without throwing any exception, and where I cannot see any problems with the output PDF document when inspecting it manually.\r\n\r\nThe log record causes noise and disturbance for our operations guys, who use some automatic log monitoring tool that will raise an alarm for any log record with level \"severe\"/\"error\", and that will even raise a notice for log records with level \"warning\".\r\n\r\nI can configure our logging tool to ignore all logging from the Fontbox Java class as a workaround, but I would prefer not to.\r\n\r\nI will try to attach to this Jira issue a zip file with the PDF document in case and a small, self-contained Java application that allows you to easily reproduce the problem.\r\n\r\nThe log record looks like this:\r\n{noformat}\r\nSep 01, 2015 1:18:18 PM org.apache.fontbox.cmap.CMap addMapping\r\nSEVERE: Mapping code should be 1 or two bytes and not 4\r\n{noformat}",
        "Glyph error, CID 0  -- passes compercial validators as a valid PDF/A Seybold.pdf.pdf is not valid, error(s) :\r\n3.3.1 : Glyph error, CID 0 is missing from the Composite Font format \"TradeGothic-Identity-H-Identity-H\"\r\n"
    ],
    [
        "PDFBOX-315",
        "PDFBOX-791",
        "NullPointerException in trunk version [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1808718\nOriginally submitted by dougcook on 2007-10-06 11:49.\n\nThis with the latest code versions (0.7.4-dev). \n\nIn doing text extraction of the file:\n\nhttp://www.crcv.com.au/resources/Grape%20and%20Wine%20Quality/Posters/Use%20of%20NIR%20to%20measure%20oxidation%20in%20white%20wine.pdf\n\nI get:\njava.lang.NullPointerException\nat org.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:95)\nat org.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:72)\nat org.pdfbox.pdmodel.PDResources.getFonts(PDResources.java:136)\nat org.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:192)\nat org.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:174)\nat org.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:336)\nat org.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:259)\nat org.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:216)\nat org.pdfbox.util.PDFTextStripper.getText(PDFTextStripper.java:149)",
        "PDFToImage : add the ability to select the area to export int the pages added a -cropbox option to be able to select the area to export as an image.\r\nThe option affect each converted page.\r\nSee the patch attached"
    ],
    [
        "PDFBOX-3078",
        "PDFBOX-175",
        "Text height coming in at half size, regression from 1.8 Running 11/1 Dvlp build.\r\nPrintTextLocations on attached file has height of 2.9, which is incorrect.\r\n\r\nString[30.699997,144.80005 fs=9.0 xscale=9.0 height=2.9236078 space=2.5020003 width=5.0040016]1\r\nString[35.704,144.80005 fs=9.0 xscale=9.0 height=2.9236078 space=2.5020003 width=5.003998]2\r\nString[40.707996,144.80005 fs=9.0 xscale=9.0 height=2.9236078 space=2.5020003 width=5.003998]8\r\nString[45.711994,144.80005 fs=9.0 xscale=9.0 height=2.9236078 space=2.5020003 width=5.003998]6\r\nString[50.715992,144.80005 fs=9.0 xscale=9.0 height=2.9236078 space=2.5020003 width=5.003998]2\r\nString[63.79999,144.80005 fs=9.0 xscale=9.0 height=2.9236078 space=2.5020003 width=4.2210045]^\r\n\r\nSame file, Version 1.8 has height of 6.5, which is about right:\r\nString[30.699997,144.80005 fs=9.0 xscale=9.0 height=6.327 space=2.5020003 width=5.0040016]1\r\nString[35.704,144.80005 fs=9.0 xscale=9.0 height=6.327 space=2.5020003 width=5.0040016]2\r\nString[40.708,144.80005 fs=9.0 xscale=9.0 height=6.4980006 space=2.5020003 width=5.0040016]8\r\nString[45.712,144.80005 fs=9.0 xscale=9.0 height=6.4980006 space=2.5020003 width=5.0040016]6\r\nString[50.716003,144.80005 fs=9.0 xscale=9.0 height=6.4980006 space=2.5020003 width=5.0040016]2\r\nString[63.800007,144.80005 fs=9.0 xscale=9.0 height=3.8160002 space=2.5020003 width=4.220997]^",
        "PDFParser: AccessControlException [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1505750\nOriginally submitted by braine on 2006-06-13 18:29.\n\nI'm getting minor variations on the following error\nwhen I try to create a PDDocument in an Applet from a URL.\n\n>> java.security.AccessControlException: access denied\n(java.util.PropertyPermission java.io.tmpdir read)\n>>  at\njava.security.AccessControlContext.checkPermission(Unknown\nSource)\n>>  at\njava.security.AccessController.checkPermission(Unknown\nSource)\n>>  at\njava.lang.SecurityManager.checkPermission(Unknown Source)\n>>  at\njava.lang.SecurityManager.checkPropertyAccess(Unknown\nSource)\n>>  at java.lang.System.getProperty(Unknown Source)\n>>  at\norg.pdfbox.pdfparser.PDFParser.<init>(PDFParser.java:72)\n>>  at\norg.pdfbox.pdfparser.PDFParser.<init>(PDFParser.java:85)\n>>  at\norg.pdfbox.pdmodel.PDDocument.load(PDDocument.java:577)\n>>  at BTpdf.initialize(BTpdf.java:41)\n     :\n     :\n     :\n\n-----------------------------------------------------\nI've tried:\n1) \"PDDocument.load( InputStream input)\"\n2) \"PDDocument.load( File file)\"\n3) \"PDDocument.load( String filename)\"\n\nAll methods give me the AccessControlException, but\nwith one subtle difference:\n\nA) Using the InputStream method via:\n\n>   URL  url = new URL(\n\"http://localhost/Images/btP72.pdf\");\n>   PDDocument doc = \"PDDocument.load( url.openStream() );\n\nor:\n>   byte data[] = new byte[ (new URL(\n\"http://localhost/Images/btP72.pdf\")).openConnection().urlConn.getContentLength()\n];\n>   int  dRead  = fileLoc.openStream().read( data);\n>   doc         = PDDocument.load( new\nByteArrayInputStream( data) );\n\nI get:\n\n>> java.security.AccessControlException: access denied\n>>+ (java.util.PropertyPermission java.io.tmpdir read)\n\n\nB) Using the File and String methods via:\n\n>   File f = new File(\n\"http://localhost/Images/btP72.pdf\");\n>   PDDocument doc = PDDocument.load( f);\n\nor:\n>   PDDocument doc = \"PDDocument.load(\n\"http://localhost/Images/btP72.pdf\");\n\nI get:\n>> java.security.AccessControlException: access denied\n>>+ (java.io.FilePermission\nhttp:\\localhost\\Images\\btP72.pdf read)\n\n-----------------------------------------------------\n\nI'm speculating at the moment, but it looks as though\nPDFParser is attempting to look at the PDF file as\nthough it existed on my disk and not from the web.\n\nI'm using\nPDFBox version: PDFBox-0.7.2\nWindows XP SP2\n\n\n\n\n[comment on SourceForge]\nOriginally sent by braine.\nLogged In: YES \nuser_id=1091957\n\nI found that I can bypass this problem by placing my code in\na JAR file and signing it (I also signed the PDFBox.jar\nfile, although I'm not sure that is necessary).\n\nEven with this bypass, I think it would be better if I\ndidn't need to sign the code.  I also feel that printing PDF\nfiles is important enough for web applications, that it\nwould be worth while to create a subset of PDFBox that only\ncreates images for printing.  This should have two advantages:\n1) Smaller JAR files will be travelling around the web.\n2) There should be no need to create temporary disk files."
    ],
    [
        "PDFBOX-748",
        "PDFBOX-2970",
        "Unable to extract special characters from pdf Using below code\r\n\r\nDim ObjBytesRead As String\r\nDim doc As Org.pdfbox.pdmodel.PDDocument = Org.pdfbox.pdmodel.PDDocument.load(FileName)\r\nDim stripper As New Org.pdfbox.util.PDFTextStripper\r\nObjBytesRead = stripper.getText(doc)\r\n\r\nI am unable to extract special characters(\"_\") from pdf",
        "Add capability to flatten AcroForm form fields There should be a capability to flatten AcroForm form fields. "
    ],
    [
        "PDFBOX-2243",
        "PDFBOX-2968",
        "java.lang.IllegalArgumentException: negative dash phase I get this exception with the attached file:\r\n{code}\r\njava.lang.IllegalArgumentException: negative dash phase\r\n        at java.awt.BasicStroke.<init>(Unknown Source)\r\n        at org.apache.pdfbox.rendering.PageDrawer.getStroke(PageDrawer.java:691)\r\n        at org.apache.pdfbox.rendering.PageDrawer.strokePath(PageDrawer.java:707)\r\n        at org.apache.pdfbox.util.operator.graphics.StrokePath.process(StrokePath.java:36)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngine.java:564)\r\n{code}\r\n\r\nThe reason is this:\r\n{code}\r\n[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]-2407.142 d\r\n{code}\r\nIt doesn't make sense to have a negative dash phase start, so I will adjust negative numbers to 0 and put out a warning.",
        "PDDocumentNameDictionary getDests applies a broken fallback logic As discussed here http://mail-archives.apache.org/mod_mbox/pdfbox-users/201509.mbox/browser\r\nCurrently the PDDocumentNameDictionary::getDests looks for destinations in the Names dests item which is a name tree. If nothing is found, the algorithm fetches the Catalog dests and wraps them in a PDDestinationNameTreeNode, which is wrong since the Catalog dests are a dictionary and not a name tree, resulting in a warning message:  \"NameTreeNode does not have \"names\" nor \"kids\" objects\""
    ],
    [
        "PDFBOX-2630",
        "PDFBOX-2348",
        "\"loop in destinations\" not detected by preflight The Bavaria testsuite requests to detect \"Contains loops in destinations\" in the attached file. I'm not sure what they mean, but PDF-Tools detects this and we don't: \r\n{quote}\r\nThe value of the key Prev is 212 0 R but must be 0 0 R.\r\nThe value of the key Prev is 214 0 R but must be 0 0 R.\r\nThe value of the key Prev is 215 0 R but must be 214 0 R.\r\nThe value of the key Prev is 213 0 R but must be 212 0 R.\r\nThe value of the key Prev is 217 0 R but must be 0 0 R.\r\nThe value of the key Prev is 218 0 R but must be 217 0 R.\r\nThe value of the key Prev is 219 0 R but must be 218 0 R.\r\nThe value of the key Prev is 216 0 R but must be 213 0 R.\r\nThe value of the key Prev is 220 0 R but must be 216 0 R.\r\nThe value of the key Prev is 222 0 R but must be 0 0 R.\r\nThe value of the key Prev is 223 0 R but must be 222 0 R.\r\nThe value of the key Prev is 224 0 R but must be 223 0 R.\r\nThe value of the key Prev is 221 0 R but must be 220 0 R.\r\nThe value of the key Prev is 226 0 R but must be 0 0 R.\r\nThe value of the key Prev is 225 0 R but must be 221 0 R.\r\nThe value of the key Prev is 211 0 R but must be 0 0 R.\r\nThe value of the key Prev is 210 0 R but must be 0 0 R.\r\n{quote}\r\n",
        "NullPointerException regression Type0FontValidator.java:90 In may 2014, this problem did not yet exist, but the patches since appear to have introduced it.\r\n\r\njava.lang.NullPointerException\r\n\tat org.apache.pdfbox.preflight.font.Type0FontValidator.checkMandatoryFields(Type0FontValidator.java:90)\r\n\tat org.apache.pdfbox.preflight.font.Type0FontValidator.validate(Type0FontValidator.java:76)\r\n\tat org.apache.pdfbox.preflight.process.reflect.FontValidationProcess.validate(FontValidationProcess.java:72)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validateFonts(ResourcesValidationProcess.java:106)\r\n\tat org.apache.pdfbox.preflight.process.reflect.ResourcesValidationProcess.validate(ResourcesValidationProcess.java:84)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validateResources(SinglePageValidationProcess.java:164)\r\n\tat org.apache.pdfbox.preflight.process.reflect.SinglePageValidationProcess.validate(SinglePageValidationProcess.java:83)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:52)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validatePage(PageTreeValidationProcess.java:58)\r\n\tat org.apache.pdfbox.preflight.process.PageTreeValidationProcess.validate(PageTreeValidationProcess.java:47)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.callValidation(ContextHelper.java:73)\r\n\tat org.apache.pdfbox.preflight.utils.ContextHelper.validateElement(ContextHelper.java:88)\r\n\tat org.apache.pdfbox.preflight.PreflightDocument.validate(PreflightDocument.java:168)\r\n\r\nFormat.PDF_A1B\r\n\r\nsee also PDFBOX-2299"
    ],
    [
        "PDFBOX-2029",
        "PDFBOX-825",
        "PDDocument.load(Inputstream) throws IOException, when the inputstream is from a word document ",
        "Wrong opacity for images with indexed color space  In class PDPixelMap used to decode images the handling of opacity for images with color space PDIndexed is wrong.\r\n\r\nTest PDF: http://onlinelibrary.wiley.com/doi/10.1002/ajh.21765/pdf\r\n(or another PDF with image and color space /Indexed)\r\n\r\nPicture Im2 at page 4 of the test PDF is empty (all pixels white).\r\n\r\nThe reason:\r\nIn PDPixelMap at line 205 (rev. 988513) an opacity variable is set depending on first value of Decode parameter.\r\nThis parameter often is not specified (null) and default value is [0, 2^n-1].  Thus the code:\r\nboolean isOpaque = (decode != null && decode.getInt(0) == 1) ? true : false;\r\nsets isOpaque to false, resulting in all white pixel.\r\nExchanging 'true' and 'false' would help but I even can't imagine why a first value of '1' should\r\nbe interpreted as an opacity parameter? Am I missing something (some kind of workaround)?\r\n\r\nIf there are no good reasons for keeping the opaque parameter I would propose removing it and setting alpha to 0xff in every case."
    ],
    [
        "PDFBOX-1507",
        "PDFBOX-941",
        "Getting Issue at text reading  <?xml version=\"1.0\" encoding=\"UTF-8\"?><alto xmlns=\"http://www.loc.gov/standards/\r\nalto/alto-v2.0.xsd\"><Description><MeasurementUnit>inch1200</MeasurementUnit></De\r\nscription><Layout>\r\n<Page>\r\n<PrintSpace>\r\n<TextBlock>\r\n<TextLine>\r\nFeb 04, 2013 8:40:03 PM org.apache.pdfbox.util.PDFStreamEngine processOperator\r\nWARNING: java.lang.NullPointerException\r\njava.lang.NullPointerException\r\n        at org.apache.pdfbox.util.PDFTextStripper.processTextPosition(PDFTextStr\r\nipper.java:954)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEn\r\ngine.java:498)\r\n        at org.apache.pdfbox.util.operator.ShowTextGlyph.process(ShowTextGlyph.j\r\nava:62)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngin\r\ne.java:556)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngi\r\nne.java:271)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngi\r\nne.java:237)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.\r\njava:218)\r\n        at cli.org.apache.pdfbox.examples.util.PrintWordLocations.processDocumen\r\nts(PrintWordLocation.cs:185)\r\n        at cli.org.apache.pdfbox.examples.util.PrintWordLocations.Main(PrintWord\r\nLocation.cs:228)\r\n        at cli.System.AppDomain._nExecuteAssembly(Unknown Source)\r\n        at cli.System.AppDomain.ExecuteAssembly(Unknown Source)\r\n        at cli.Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly(U\r\nnknown Source)\r\n\r\nFeb 04, 2013 8:40:03 PM org.apache.pdfbox.util.PDFStreamEngine processOperator\r\nWARNING: java.lang.NullPointerException\r\njava.lang.NullPointerException\r\n        at org.apache.pdfbox.util.PDFTextStripper.processTextPosition(PDFTextStr\r\nipper.java:954)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEn\r\ngine.java:498)\r\n        at org.apache.pdfbox.util.operator.ShowTextGlyph.process(ShowTextGlyph.j\r\nava:62)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngin\r\ne.java:556)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngi\r\nne.java:271)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngi\r\nne.java:237)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.\r\njava:218)\r\n        at cli.org.apache.pdfbox.examples.util.PrintWordLocations.processDocumen\r\nts(PrintWordLocation.cs:185)\r\n        at cli.org.apache.pdfbox.examples.util.PrintWordLocations.Main(PrintWord\r\nLocation.cs:228)\r\n        at cli.System.AppDomain._nExecuteAssembly(Unknown Source)\r\n        at cli.System.AppDomain.ExecuteAssembly(Unknown Source)\r\n        at cli.Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly(U\r\nnknown Source)\r\n\r\nFeb 04, 2013 8:40:03 PM org.apache.pdfbox.util.PDFStreamEngine processOperator\r\nWARNING: java.lang.NullPointerException\r\njava.lang.NullPointerException\r\n        at org.apache.pdfbox.util.PDFTextStripper.processTextPosition(PDFTextStr\r\nipper.java:954)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEn\r\ngine.java:498)\r\n        at org.apache.pdfbox.util.operator.ShowTextGlyph.process(ShowTextGlyph.j\r\nava:62)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngin\r\ne.java:556)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngi\r\nne.java:271)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngi\r\nne.java:237)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.\r\njava:218)\r\n        at cli.org.apache.pdfbox.examples.util.PrintWordLocations.processDocumen\r\nts(PrintWordLocation.cs:185)\r\n        at cli.org.apache.pdfbox.examples.util.PrintWordLocations.Main(PrintWord\r\nLocation.cs:228)\r\n        at cli.System.AppDomain._nExecuteAssembly(Unknown Source)\r\n        at cli.System.AppDomain.ExecuteAssembly(Unknown Source)\r\n        at cli.Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly(U\r\nnknown Source)\r\n\r\nFeb 04, 2013 8:40:03 PM org.apache.pdfbox.util.PDFStreamEngine processOperator\r\nWARNING: java.lang.NullPointerException\r\njava.lang.NullPointerException\r\n        at org.apache.pdfbox.util.PDFTextStripper.processTextPosition(PDFTextStr\r\nipper.java:954)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processEncodedText(PDFStreamEn\r\ngine.java:498)\r\n        at org.apache.pdfbox.util.operator.ShowTextGlyph.process(ShowTextGlyph.j\r\nava:62)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processOperator(PDFStreamEngin\r\ne.java:556)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngi\r\nne.java:271)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngi\r\nne.java:237)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.\r\njava:218)\r\n        at cli.org.apache.pdfbox.examples.util.PrintWordLocations.processDocumen\r\nts(PrintWordLocation.cs:185)\r\n        at cli.org.apache.pdfbox.examples.util.PrintWordLocations.Main(PrintWord\r\nLocation.cs:228)\r\n        at cli.System.AppDomain._nExecuteAssembly(Unknown Source)\r\n        at cli.System.AppDomain.ExecuteAssembly(Unknown Source)\r\n        at cli.Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly(U\r\nnknown Source)\r\n\r\n</TextLine>\r\n</TextBlock>\r\n</PrintSpace>\r\n</Page>\r\n\r\n\r\nWe have converted Java code in C# from https://github.com/cokernel/pdf2alto\r\n",
        "extracting Japanese characters gives garbage when extracting text from this pdf file, I got this exception, and the text extracted was gibberish.\r\n\r\n44 [main] ERROR org.apache.pdfbox.pdmodel.font.PDFont  - Error: Could not parse predefined CMAP file for 'Adobe-Japan1-UCS2'\r\n\r\nPDFBox 1.2.1 worked fine with the same file, I wonder why 1.4.0 could not."
    ],
    [
        "PDFBOX-731",
        "PDFBOX-754",
        "Inconsistencies in TextPositionComparator and sortByPosition Specifying sortByPosition on PDFTextStripper can result in scrambling of text.  The problem is caused largely by inconsistencies in TextPositionComparator, which does not always satisfy the required comparator constraint that if a < b and b < c, then a < c.  As a result, a true sort is sometimes not achievable.  This is caused by the comparator being too flexible with what is regarded as being on the same \"line\".\r\n\r\nI modified the comparator to be more strict when deciding which characters are on the same line, specifically:\r\n\r\n1. Two pieces of text can't be on the same line if one's font is double or more the size of the other's.\r\n2. Two pieces of text can't be on the same line if one's baseline is more than half the smaller font point size from the other's baseline.\r\n\r\nI'm sure there are probably (superscript?) cases where these two conditions may be too strict, but at least they should (I think but haven't tried to prove :) result in a < b < c.  The comparator source I have used is below, feel free to use or modify it in any way.\r\n\r\nFinally, PDFTextStripper needs to be more discriminating in inserting line breaks.  Specifically, if the x position of a text segment is < the x position of the last text segment, the there is an implicit line-break.  To fix this, I changed:\r\n{code}\r\n     if(!overlap(positionY, positionHeight, maxYForLine, maxHeightForLine))\r\n{code}\r\nto:\r\n{code}\r\n     if(!overlap(positionY, positionHeight, maxYForLine, maxHeightForLine) || (sortByPosition && positionX < lastPosition.getXDirAdj()))\r\n{code}\r\nRevised comparator source:\r\n{code}\r\npublic class TextPositionComparator implements Comparator\r\n{\r\n        private int strictCompare(Object o1, Object o2)\r\n\t{\r\n\t\tTextPosition pos1 = (TextPosition)o1;\r\n        TextPosition pos2 = (TextPosition)o2;\r\n        \r\n        // Get the text direction adjusted coordinates\r\n        \r\n        float pos1YBottom = pos1.getYDirAdj();\r\n        float pos2YBottom = pos2.getYDirAdj();\r\n\r\n        if (pos1YBottom < pos2YBottom)\r\n        \treturn -1;\r\n        else if (pos1YBottom > pos2YBottom)\r\n        \treturn 1;\r\n        \r\n        float x1 = pos1.getXDirAdj();\r\n        float x2 = pos2.getXDirAdj();\r\n        \r\n        if (x1 < x2)\r\n        \treturn -1;\r\n        else if (x1 > x2)\r\n        \treturn 1;\r\n        \r\n        return 0;\r\n\t}\r\n\t\r\n\tpublic int compare(Object o1, Object o2)\r\n\t{\r\n\t\tTextPosition pos1 = (TextPosition)o1;\r\n        TextPosition pos2 = (TextPosition)o2;\r\n\r\n        /* Only compare text that is in the same direction. */\r\n        if (pos1.getDir() < pos2.getDir())\r\n            return -1;\r\n        else if (pos1.getDir() > pos2.getDir())\r\n            return 1;\r\n\r\n        float size1 = pos1.getFontSize();\r\n        float size2 = pos2.getFontSize();\r\n        \r\n        if (size1 <= size2/2 || size1 >= size2*2)\r\n        \treturn strictCompare(o1, o2);\r\n\r\n        float fontsize = size1;\r\n        \r\n        if (size2 < size1)\r\n        \tfontsize = size2;\r\n        \r\n        float pos1YBottom = pos1.getYDirAdj();\r\n        float pos2YBottom = pos2.getYDirAdj();\r\n\r\n        if (pos1YBottom <= pos2YBottom - fontsize/2 || pos1YBottom >= pos2YBottom + fontsize/2)\r\n        \treturn strictCompare(o1, o2);\r\n        \r\n        // Get the text direction adjusted coordinates\r\n        float x1 = pos1.getXDirAdj();\r\n        float x2 = pos2.getXDirAdj();\r\n\r\n        if (x1 < x2)\r\n        \treturn -1;\r\n        else if (x1 > x2)\r\n        \treturn 1;\r\n        \r\n        return 0;\r\n\t}\r\n}\r\n{code}\r\n\r\nYMMV.\r\n\r\n",
        "Move Resources to org.apache.pdfbox.resources It's a good practice for a Java library to put all it's classes and other resources within a single package name hierarchy. To do this in PDFBox, I'd like to move the resources we now have at /Resources to /org/apache/pdfbox/resources. This prevents potential naming clashes and makes things easier for downstream projects (like pdfbox-app) that want to repackage PDFBox."
    ],
    [
        "PDFBOX-526",
        "PDFBOX-2944",
        "Add ability to read encrypted file & write unencrypted flie Currently, the COSWriter determines whether or not to use encryption, which makes sense, however there's no way to tell it you don't want to use encryption.  So if you open an encrypted document, there's no way to write out an unencrypted document (you can write out a document without a password, but it'll still be encrypted).  This means that encrypted documents can't be merged even if the password is known.\r\n\r\nI have a patch which will allow writing out unencrypted documents.  By default it'll work as it did before, but there's a new function which can be called to mark the document to be written out with no protection.  I'll upload the patch soon.",
        "false negative on pdf/a validation: 1.0.14 : Syntax error, Object {16:0} has an offset of 0  ? Happens with a nighly build earlier this month\r\n\r\nBFO Validator and\r\nhttp://www.pdf-tools.com/pdf/pdfa-online-pruefen.aspx claim it to be valid\r\n\r\nIntarsys and SolidDocuments claim it not to be valid.\r\n{code}\r\nAnmeldung.pdf not PDF/A1-b-compliant. (e0316)\r\nAnmeldung.pdf not PDF/A1-a-compliant. (e0316)\r\nPDF_A1B errors:\r\n1: 1.0.14 : Syntax error, Object {16:0} has an offset of 0\r\n2: 1.0.14 : Syntax error, Object {17:0} has an offset of 0\r\n3: 1.0.14 : Syntax error, Object {22:0} has an offset of 0\r\n4: 1.0.14 : Syntax error, Object {28:0} has an offset of 0\r\n5: 1.0.14 : Syntax error, Object {32:0} has an offset of 0\r\n6: 1.0.14 : Syntax error, Object {33:0} has an offset of 0\r\n7: 1.0.14 : Syntax error, Object {34:0} has an offset of 0\r\n8: 1.0.14 : Syntax error, Object {38:0} has an offset of 0\r\n9: 1.0.14 : Syntax error, Object {43:0} has an offset of 0\r\n10: 1.0.14 : Syntax error, Object {47:0} has an offset of 0\r\n11: 1.0.14 : Syntax error, Object {48:0} has an offset of 0\r\n12: 1.0.14 : Syntax error, Object {49:0} has an offset of 0\r\n13: 1.0.14 : Syntax error, Object {53:0} has an offset of 0\r\n14: 1.0.14 : Syntax error, Object {59:0} has an offset of 0\r\n15: 1.0.14 : Syntax error, Object {63:0} has an offset of 0\r\n16: 1.0.14 : Syntax error, Object {64:0} has an offset of 0\r\n17: 1.0.14 : Syntax error, Object {65:0} has an offset of 0\r\n18: 1.0.14 : Syntax error, Object {69:0} has an offset of 0\r\n19: 1.0.14 : Syntax error, Object {74:0} has an offset of 0\r\n20: 1.0.14 : Syntax error, Object {78:0} has an offset of 0\r\n21: 1.0.14 : Syntax error, Object {79:0} has an offset of 0\r\n22: 1.0.14 : Syntax error, Object {80:0} has an offset of 0\r\n23: 1.0.14 : Syntax error, Object {84:0} has an offset of 0\r\n24: 1.0.14 : Syntax error, Object {89:0} has an offset of 0\r\n25: 1.0.14 : Syntax error, Object {93:0} has an offset of 0\r\n26: 1.0.14 : Syntax error, Object {94:0} has an offset of 0\r\n27: 1.0.14 : Syntax error, Object {95:0} has an offset of 0\r\n28: 1.0.14 : Syntax error, Object {99:0} has an offset of 0\r\n29: 1.0.14 : Syntax error, Object {103:0} has an offset of 0\r\n30: 1.0.14 : Syntax error, Object {107:0} has an offset of 0\r\n31: 1.0.14 : Syntax error, Object {108:0} has an offset of 0\r\n32: 1.0.14 : Syntax error, Object {109:0} has an offset of 0\r\n33: 1.0.14 : Syntax error, Object {113:0} has an offset of 0\r\n34: 1.0.14 : Syntax error, Object {119:0} has an offset of 0\r\n35: 1.0.14 : Syntax error, Object {123:0} has an offset of 0\r\n36: 1.0.14 : Syntax error, Object {124:0} has an offset of 0\r\n37: 1.0.14 : Syntax error, Object {125:0} has an offset of 0\r\n38: 1.0.14 : Syntax error, Object {129:0} has an offset of 0\r\n39: 1.0.14 : Syntax error, Object {133:0} has an offset of 0\r\n40: 1.0.14 : Syntax error, Object {137:0} has an offset of 0\r\n41: 1.0.14 : Syntax error, Object {138:0} has an offset of 0\r\n...\r\n{code}"
    ],
    [
        "PDFBOX-1005",
        "PDFBOX-3002",
        "Unnecessary filling new array with zeros in RandomAccessBuffer::write(byte[], int, int) it is not required to fill new array with zeros, because it's done by JVM",
        "PDF files not closed after load fails In 2.0, PDF files are not closed affter load() if the parsing fails. I will fix this and also add tests (in 2.0 and 1.8) to make sure that PDF files are closed after load(). See also the discussion with Timo Boehme in [PDFBOX-2883|https://issues.apache.org/jira/browse/PDFBOX-2883?focusedCommentId=14935447&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14935447]."
    ],
    [
        "PDFBOX-2950",
        "PDFBOX-118",
        "Chinese font substitution issue java -jar pdfbox-app-1.8.10.jar PDFToImage 20150829A01_pdf.pdf",
        "Text extraction fails for pages in landscape format [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1410876\nOriginally submitted by lenuweit on 2006-01-20 07:22.\n\nText extraction fails for some PDFs (see attached one\ngenerated by PS printer/Ghostscript) under the\nfollowing circumstances:\n- page is in landscape format\n- setSortByPosition is true\n\nExtraction works fine if page is in portrait format.\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1410876&file_id=164169\ntestpdfbox.pdf (application/pdf), 5442 bytes\nsample PDF (1 page in landscape)"
    ],
    [
        "PDFBOX-876",
        "PDFBOX-1922",
        "PDFBox crashed JVM when importing certain PDF When importing certain PDF, the JVM crashed with the following error:\r\n\r\n#\r\n# An unexpected error has been detected by Java Runtime Environment:\r\n#\r\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x6d2f3bf0, pid=6704, tid=6316\r\n#\r\n# Java VM: Java HotSpot(TM) Client VM (11.3-b02 mixed mode windows-x86)\r\n# Problematic frame:\r\n# C  [fontmanager.dll+0x13bf0]\r\n#\r\n# An error report file with more information is saved as:\r\n# C:\\Program Files\\Genuitec\\Common\\plugins\\com.genuitec.eclipse.easie.tomcat.myeclipse_7.5.0.zmyeclipse75020090612\\tomcat\\bin\\hs_err_pid6704.log\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://java.sun.com/webapps/bugreport/crash.jsp\r\n# The crash happened outside the Java Virtual Machine in native code.\r\n# See problematic frame for where to report the bug.\r\n#\r\n\r\nI was able to trace down where I used PDFImageWrite and try to convert the first page of PDF to PNG image.  \r\nI tried to update the font and still seem to be problem.\r\n\r\nAny help would be really appreciated.\r\nThanks,",
        "NonSequentialParser not reading version in header and trailer On older pdf files, the NonSequentialParser returns a different PDFVersion than the traditional parser via the call: document.getDocument().getVersion().  \r\n\r\nI think this is because NonSequentialParser is not reading the header but relying on the default 1.4 if no version is found in the trailer.\r\n\r\nMany apologies if this is a duplicate.  I feel like I've seen this issue elsewhere, but I can't track it down."
    ],
    [
        "PDFBOX-298",
        "PDFBOX-1235",
        "pdfToImage: unstable [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552834&aid=1773675\nOriginally submitted by nobody on 2007-08-14 00:42.\n\ncurrently the pdf to image conversion does only work partially. there are a few problems i would like to address with the patch:\n- draw ALL jpeg image which are inlined in the pdf doc.\n  some of the jpeg image have some kind of \".Adobe\"\n  header instead of the \"JFIF\" header. ImageIO is unable  \n  to read the jpegs starting with the \".adobe\" header.\n- catch a few nullpointer exceptions so that the draw\n  \"flow\" is not interrupted\n- currently the PDType0Font class draws nothing at all,\n  resp. throws which breaks as well the draw \"flow\".\n  because i did not know how the type0 font should be\n  drawn i simply extended from type1 (which is not cool)\n  so that at least text is drawn.\n\na lot more pdfs are drawn as images with this changes in a more or less good quality.\n\nyou will find all \"touched\" files in the attached zip file.\n\nbtw: i did the relying on the \"PDFBox-0.7.4-dev-20070716\" dev load.\n\nfor any questions send my an email to: philipp.koch@day.com\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552834&aid=1773675&file_id=241160\npdfbox-patch.zip (application/x-zip-compressed), 13219 bytes\npatch\n\n[comment on SourceForge]\nOriginally sent by danielwilson.\nLogged In: YES \nuser_id=1737686\nOriginator: NO\n\nThis seems to work well -- given one more change that Philipp emailed me.\n\nYou need to add this overload of write2file to org\\pdfbox\\pdmodel\\graphics\\xobject\\PDXObjectImage.java\n\n\n    /**\n     * Writes the image to a file with the filename + an appropriate suffix, like \"Image.jpg\".\n     * The suffix is automatically set by the\n     * @param file the file\n     * @throws IOException When somethings wrong with the corresponding file.\n     */\n    public void write2file(File file) throws IOException\n    {\n        FileOutputStream out = null;\n        try\n        {\n            out = new FileOutputStream(file);\n            write2OutputStream(out);\n            out.flush();\n        }\n        finally\n        {\n            if( out != null )\n            {\n                out.close();\n            }\n        }\n    }",
        "Exception in thread \"main\" java.util.zip.ZipException: unknown compression method Exception in thread \"main\" java.util.zip.ZipException: unknown compression method\r\n\tat java.util.zip.InflaterInputStream.read(Unknown Source)\r\n\tat org.pdfbox.filter.FlateFilter.decode(FlateFilter.java:97)\r\n\tat org.pdfbox.cos.COSStream.doDecode(COSStream.java:290)\r\n\tat org.pdfbox.cos.COSStream.doDecode(COSStream.java:243)\r\n\tat org.pdfbox.cos.COSStream.getUnfilteredStream(COSStream.java:170)\r\n\tat org.pdfbox.pdmodel.common.PDStream.createInputStream(PDStream.java:226)\r\n\tat org.pdfbox.pdmodel.common.PDStream.getByteArray(PDStream.java:481)\r\n\tat org.pdfbox.pdmodel.graphics.xobject.PDPixelMap.getRGBImage(PDPixelMap.java:138)\r\n\tat com.phani.PDFTextParser.read_pdf(PDFTextParser.java:143)\r\n\tat com.phani.PDFTextParser.main(PDFTextParser.java:108)\r\n"
    ],
    [
        "PDFBOX-2251",
        "PDFBOX-1671",
        "NoSuchElementException when reading cmap format 4 subtable I get this with the attached file:\r\n{code}\r\nException in thread \"main\" java.util.NoSuchElementException\r\n        at java.util.HashMap$HashIterator.nextEntry(Unknown Source)\r\n        at java.util.HashMap$KeyIterator.next(Unknown Source)\r\n        at java.util.Collections.max(Unknown Source)\r\n        at org.apache.fontbox.ttf.CMAPEncodingEntry.processSubtype4(CMAPEncodingEntry.java:404)\r\n        at org.apache.fontbox.ttf.CMAPEncodingEntry.initSubtable(CMAPEncodingEntry.java:92)\r\n        at org.apache.fontbox.ttf.CMAPTable.read(CMAPTable.java:72)\r\n        at org.apache.fontbox.ttf.TrueTypeFont.readTable(TrueTypeFont.java:277)\r\n        at org.apache.fontbox.ttf.TTFParser.parseTables(TTFParser.java:143)\r\n        at org.apache.fontbox.ttf.TTFParser.parseTTF(TTFParser.java:124)\r\n        at org.apache.fontbox.ttf.TTFParser.parseTTF(TTFParser.java:98)\r\n{code}\r\nWhile the 1.8 version recovers, the 2.0 version doesn't. My fix prevents the exception and puts out a warning. Adobe Reader can render the file, although  there is a weird glyph between \"program\" and \"administration\", and between \"claimants\" and \"eligibility\".",
        "Error printing document java.lang.ArrayIndexOutOfBoundsException: 346 Hello\r\nI'm trying to print PDF using pdfbox (2.0.0) with fontbox (2.0.0) but unsuccessfully.\r\n\r\nI think there is problem with font substitution.\r\n\r\nI'm attaching pdf file, log, and source code."
    ],
    [
        "PDFBOX-1091",
        "PDFBOX-940",
        "NPE in PDFont.getEncodingFromFont I'm using solr version 3.3 and am trying to index pdf documents.  I keep getting the following error:\r\n\r\norg.apache.solr.handler.dataimport.DataImportHandlerException: Unable to read content Processing Document # 199\r\n        at org.apache.solr.handler.dataimport.DataImportHandlerException.wrapAndThrow(DataImportHandlerException.java:72)\r\n        at org.apache.solr.handler.dataimport.TikaEntityProcessor.nextRow(TikaEntityProcessor.java:130)\r\n        at org.apache.solr.handler.dataimport.EntityProcessorWrapper.nextRow(EntityProcessorWrapper.java:238)\r\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:591)\r\n        at org.apache.solr.handler.dataimport.DocBuilder.buildDocument(DocBuilder.java:617)\r\n        at org.apache.solr.handler.dataimport.DocBuilder.doFullDump(DocBuilder.java:267)\r\n        at org.apache.solr.handler.dataimport.DocBuilder.execute(DocBuilder.java:186)\r\n        at org.apache.solr.handler.dataimport.DataImporter.doFullImport(DataImporter.java:359)\r\n        at org.apache.solr.handler.dataimport.DataImporter.runCmd(DataImporter.java:427)\r\n        at org.apache.solr.handler.dataimport.DataImporter$1.run(DataImporter.java:408)\r\nCaused by: org.apache.tika.exception.TikaException: Unexpected RuntimeException from org.apache.tika.parser.ParserDecorator$1@6f340905\r\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:199)\r\n        at org.apache.tika.parser.AutoDetectParser.parse(AutoDetectParser.java:135)\r\n        at org.apache.solr.handler.dataimport.TikaEntityProcessor.nextRow(TikaEntityProcessor.java:128)\r\n        ... 8 more\r\nCaused by: java.lang.NullPointerException\r\n        at org.apache.pdfbox.pdmodel.font.PDFont.getEncodingFromFont(PDFont.java:832)\r\n        at org.apache.pdfbox.pdmodel.font.PDFont.determineEncoding(PDFont.java:293)\r\n        at org.apache.pdfbox.pdmodel.font.PDFont.<init>(PDFont.java:178)\r\n        at org.apache.pdfbox.pdmodel.font.PDSimpleFont.<init>(PDSimpleFont.java:79)\r\n        at org.apache.pdfbox.pdmodel.font.PDType1Font.<init>(PDType1Font.java:139)\r\n        at org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:109)\r\n        at org.apache.pdfbox.pdmodel.font.PDFontFactory.createFont(PDFontFactory.java:76)\r\n        at org.apache.pdfbox.pdmodel.PDResources.getFonts(PDResources.java:115)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processSubStream(PDFStreamEngine.java:243)\r\n        at org.apache.pdfbox.util.PDFStreamEngine.processStream(PDFStreamEngine.java:225)\r\n        at org.apache.pdfbox.util.PDFTextStripper.processPage(PDFTextStripper.java:441)\r\n        at org.apache.pdfbox.util.PDFTextStripper.processPages(PDFTextStripper.java:365)\r\n        at org.apache.pdfbox.util.PDFTextStripper.writeText(PDFTextStripper.java:321)\r\n        at org.apache.tika.parser.pdf.PDF2XHTML.process(PDF2XHTML.java:56)\r\n        at org.apache.tika.parser.pdf.PDFParser.parse(PDFParser.java:89)\r\n        at org.apache.tika.parser.ParserDecorator.parse(ParserDecorator.java:91)\r\n        at org.apache.tika.parser.CompositeParser.parse(CompositeParser.java:197)\r\n        ... 10 more",
        "[pdmodel.font.PDFont] Error: Could not parse predefined CMAP  file for 'PDFXC-Indentity0-0' Hi,\r\n\r\n   when i am trying to upload a pdf document the following error is thrown in the tomcat.. i am using pdfbox-1.4.0.jar..\r\n\r\n17:29:33,465  ERROR [pdmodel.font.PDFont] Error: Could not parse predefined CMAP  file for 'PDFXC-Indentity0-0'\r\n\r\nplease find the solution\r\n"
    ],
    [
        "PDFBOX-3139",
        "PDFBOX-1436",
        "Custom FontMapper cant be used CIDFontMapping and FontMapping have private constructor so not sure how you can even use this FontMapper",
        "Embedded font can't be read I have a pdf that has embedded fonts. When I load the file with the pdfbox-app-1.7.1.jar PDFReader I get the message below. When I look at the PDF the characters are not rendered properly. This works properly on PDF readers of the Ipad, iOS, and AdobeAcrobat windows.\r\n\r\nNov 02, 2012 10:53:21 AM org.apache.pdfbox.pdmodel.font.PDTrueTypeFont getawtFont\r\nINFO: Can't read the embedded font HMKLBW+HelveticaNeue-Bold\r\nNov 02, 2012 10:53:22 AM org.apache.pdfbox.pdmodel.font.PDTrueTypeFont getawtFont\r\nINFO: Using font Arial instead"
    ],
    [
        "PDFBOX-1450",
        "PDFBOX-2062",
        "document how to encrypt with AES 256 with the release of 2.0 please add a java code sample how to do this on the web-site and link to it from \r\nhttp://pdfbox.apache.org/commandlineutilities/Encrypt.html\r\n\r\nsee also see also PDFBOX-953  and see also PDFBOX-135",
        "Setting a PDFFormField's value with a specific font size causes the font size to change on click Setting the font size of a PDField causes the font size to change on click on the field. It starts out with incorrect font size. When the field is clicked, it displays in the font size correctly. Clicking outside the field, reverts back to the incorrect font size.\r\n\r\nThis behavior was also mentioned in PDFBOX-1419 in passing.\r\n\r\n\r\nCode:\r\n{code}\r\npdfFormField.getDictionary.setString(COSName.DA, \"/Helv 10 Tf 0 g\u201d)\r\npdfFormField.setValue(\"Hello\u201d)\r\n{code}\r\n\r\nA simple example of such a PDF [is here|http://monosnap.com/file/5fxGhQSdXszX4DIoTyGguZ3ploinAC]."
    ],
    [
        "PDFBOX-2251",
        "PDFBOX-650",
        "NoSuchElementException when reading cmap format 4 subtable I get this with the attached file:\r\n{code}\r\nException in thread \"main\" java.util.NoSuchElementException\r\n        at java.util.HashMap$HashIterator.nextEntry(Unknown Source)\r\n        at java.util.HashMap$KeyIterator.next(Unknown Source)\r\n        at java.util.Collections.max(Unknown Source)\r\n        at org.apache.fontbox.ttf.CMAPEncodingEntry.processSubtype4(CMAPEncodingEntry.java:404)\r\n        at org.apache.fontbox.ttf.CMAPEncodingEntry.initSubtable(CMAPEncodingEntry.java:92)\r\n        at org.apache.fontbox.ttf.CMAPTable.read(CMAPTable.java:72)\r\n        at org.apache.fontbox.ttf.TrueTypeFont.readTable(TrueTypeFont.java:277)\r\n        at org.apache.fontbox.ttf.TTFParser.parseTables(TTFParser.java:143)\r\n        at org.apache.fontbox.ttf.TTFParser.parseTTF(TTFParser.java:124)\r\n        at org.apache.fontbox.ttf.TTFParser.parseTTF(TTFParser.java:98)\r\n{code}\r\nWhile the 1.8 version recovers, the 2.0 version doesn't. My fix prevents the exception and puts out a warning. Adobe Reader can render the file, although  there is a weird glyph between \"program\" and \"administration\", and between \"claimants\" and \"eligibility\".",
        "Remove dependency on lucene The current pdfbox version extracts all needed data from a pdf document and uses lucene to create an index for the lucene search engine. \r\n\r\nTo avoid the dependency on lucene pdfbox should only extract the data which can be used to create a lucene index outside from pdfbox. That would decrase the number of external jars and woukld eliminate an other potential issue because of changing apis like those coming with lucene 3.0. \r\n\r\nI've created 2 new classes (one for the extraction and one as example how to use that feature) based on existing code and attached it as patch.\r\n\r\nWDYT?\r\n\r\nIf that patch will be added to the trunk the existing code will be removed including both lucene jars.\r\n"
    ],
    [
        "PDFBOX-1972",
        "PDFBOX-3113",
        "WrappedIOException no longer needed in Java 1.6 Java 1.6 added the IOException(Throwable cause) constructor which means that WrappedIOException is no longer needed.\r\n\r\nWrappedIOException is never caught anywhere, only its superclass IOException is, so this is an easy change to make.",
        "Scratch file already closed using PDStream I get when i try to create a PDStream from a page contents:\r\nException in thread \"main\" java.io.IOException: Scratch file already closed\r\n\tat org.apache.pdfbox.io.ScratchFile.checkClosed(ScratchFile.java:390\r\n\r\nWe used to be able to do:\r\nPDStream pdStream = page.getContents();"
    ],
    [
        "PDFBOX-2631",
        "PDFBOX-838",
        "Single radio-button group has no children (Continuation of https://issues.apache.org/jira/browse/PDFBOX-2617)\r\n\r\nA group of radio-buttons is an object of the PDRadioCollection class and each child of that group is an PDCheckbox object.\r\nHowever, if the group only contains one widget the getKids method of the PDRadioCollection object returns null.\r\nThere should be at least one child for any such group.",
        "Problem with text extraction I want to make a parser that will parse some bookie pdf list with odds. I have two files. One is working flawlessly and the other one have problems although the two files are almost in identical form. The file uploaded (listaMillenium.pdf) has problems with text extraction and the other file (listaMeridian.pdf) is working fine.\r\n\r\nThis is the code i used:\r\n\r\n                 try {\r\n\t            doc = PDDocument.load(\"listaMillenium.pdf\");\r\n\t           \r\n\t            PDFTextStripper stripper = new PDFTextStripper();                \r\n\t            stripper.setStartPage( 6 );\r\n\t            stripper.setEndPage( 6 );\r\n\t \r\n\t            stripper.setSortByPosition(true);\r\n\t            stripper.setShouldSeparateByBeads(true);\r\n\t            stripper.setSuppressDuplicateOverlappingText(true);\r\n\r\n\t            stripper.setWordSeparator(\"~\");\r\n\t            stripper.writeText(doc, sw);\r\n\t        } finally {\r\n\t             if (doc != null) {\r\n\t                 doc.close();\r\n\t             }\r\n\t        }\r\n\r\nOn page 6 of the uploaded document (listaMillenium.pdf) you can see the output lines like this:\r\n\r\nnedelja 37 - 14.09. Utorak, 15.09. Sreda i 16.09. \u010cetvrtak~strana 6\r\n~Football~UEFA Europa League~Rezultat~KONA\u010cAN ISHOD~DUPLA \u0160ANSA~POLUVREME-KRAJ~Hen~HENDIKEP\r\n~dan~\u010das~\u0161ifra~45~90~1~X~2~1X~12~X2~1-1~1-X~1-2~X-1~X-X~X-2~2-1~2-X~2-2~H~H1~HX~H2\r\n~Cet~19:00~4041*~Salzburg~Man. City~5.60~3.25~1.60~2.06~1.24~1.07~10.5~13.5~32.0~10.5~5.65~4.25~35.0~13.0~2.50~1~2.06~3.50~2.07\r\n~Cet~19:00~4042*~Juventus~Lech P.~1.20~5.25~10.5~1.08~3.50~1.50~21.0~70.0~4.75~9.00~20.0~40.0~19.0~27.0~-1~1.40~3.85~3.50\r\n~Cet~19:00~4043*~Aris~Atl. Madrid~3.50~3.20~1.95~1.67~1.25~1.21~7.00~13.0~30.0~7.25~5.05~4.80~30.0~13.0~3.25~1~1.67~3.30~2.80\r\n~Cet~19:00~4044*~Leverkusen~Rosenborg~1.35~4.00~8.30~1.01~1.16~2.70~1.95~17.0~50.0~4.05~7.00~17.0~35.0~15.0~15.0~-1~1.63~3.70~2.70\r\n~Cet~19:00~4045*~Lille~Sporting L.~1.80~3.20~4.10~1.15~1.25~1.80~2.95~13.0~30.0~4.65~5.25~7.95~30.0~13.0~7.80~-1~2.45~3.45~1.80\r\n~Cet~19:00~4046*~Levski Sofia~Gent~2.00~3.20~3.35~1.23~1.25~1.64~3.35~13.0~30.0~4.85~5.00~7.00~30.0~13.0~6.75~-1~2.95~3.25~1.63\r\n~Cet~19:00~4047*~Dinamo Z.~Villarreal~3.35~3.20~2.00~1.64~1.25~1.23~6.75~13.0~30.0~7.00~5.00~4.85~30.0~13.0~3.35~1~1.63~3.25~2.95\r\n~Cet~19:00~4048*~Club Brugge~PAOK~2.10~3.15~3.15~1.26~1.26~1.58~3.50~13.0~30.0~4.95~5.00~6.65~30.0~13.0~6.40~-1~3.20~3.25~1.57\r\n~Cet~19:00~4049*~AZ Alkmaar~Sheriff Tiraspol~1.50~3.40~6.70~1.04~1.23~2.26~2.25~15.0~40.0~4.15~6.05~12.5~32.0~14.0~11.5~-1~1.87~3.60~2.24\r\n~Cet~19:00~4050*~Dinamo K.~BATE~1.40~3.75~7.65~1.02~1.18~2.52~2.05~17.0~40.0~4.10~6.65~15.0~32.0~14.0~14.0~-1~1.70~3.70~2.52\r\n~Cet~19:00~4051*~Sparta P.~Palermo~2.50~3.05~2.60~1.37~1.27~1.40~4.45~12.5~30.0~5.65~5.00~5.80~28.0~12.5~4.65~-1~4.40~3.20~1.40\r\n~Cet~19:00~4052*~Lausanne~CSKA Moscow~6.70~3.40~1.50~2.26~1.23~1.04~11.5~14.0~32.0~12.5~6.05~4.15~40.0~15.0~2.25~1~2.24~3.60~1.87\r\n~Cet~21:05~4053*~Anderlecht~Zenit~2.60~3.05~2.50~1.40~1.27~1.37~4.65~12.5~28.0~5.80~5.00~5.65~30.0~12.5~4.45~1~1.40~3.20~4.40\r\n~Cet~21:05~4054*~AEK~Hajduk~1.60~3.25~5.60~1.07~1.24~2.06~2.50~13.0~35.0~4.25~5.65~10.5~32.0~13.5~10.5~-1~2.07~3.50~2.06\r\n~CeCet~21:021:05~4055*~Stuttgart~Y. Boys~1.60~3.25~5.60~1.07~1.24~2.06~2.50~13.0~35.0~4.25~5.65~10.5~32.0~13.5~10.5~-1~2.07~3.50~2.06\r\n\r\nLast line in this listing has problems. It has duplicate values somehow.\r\nYou can find this issue on almost every page of this list. Other lists (that i have not uploaded) have same problems.\r\nAs i said, other file (listaMeridian.pdf) does not have this issue.\r\n\r\nMaybe this will help you fix this and it will surely help me. :)\r\n"
    ],
    [
        "PDFBOX-2960",
        "PDFBOX-3098",
        "ClassCastException when pattern name is indirect object {code}\r\nException in thread \"AWT-EventQueue-0\" java.lang.ClassCastException: org.apache.pdfbox.cos.COSObject cannot be cast to org.apache.pdfbox.cos.COSName\r\n        at org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace.create(PDColorSpace.java:134)\r\n{code}",
        "getFontFile2() doesn't extract a valid font file for CID Type 2 fonts I tried to extract an CID Type 2 font (proceed as described in the ExtractTTFFonts.java example). It seems that the extracted font isn't valid due the missing cmap table. Maybe it's possible to add an default table?"
    ],
    [
        "PDFBOX-335",
        "PDFBOX-1928",
        "Version incompatibility with Lucene? [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1887932\nOriginally submitted by nobody on 2008-02-06 06:30.\n\nIt may seem that the code that does text extraction for Lucene is not compatible with the later versions of Lucene.\n\nI had to revert all the way back to to Lucene 2.0.0 from 2006 in order to make PDF Box be able to parse PDF documents for Lucene.\n\nManual recompilation of the PDFBox source is not really an option due to a large number of dependencies which we don't have the resources to keep track of.\n\nA recompilation and release compatible with Lucene 2.3.0 would be much appreciated!\n\nknutf@firstventura.com",
        "PDResources.getFonts() and PDresources.getXObjects() change underlying COSDictionary The methods getFonts() and getXObjects() in PDResources change the underlying COSDictionary."
    ],
    [
        "PDFBOX-2334",
        "PDFBOX-2670",
        "codeToGID NPE I get an NPE with the attached file:\r\n{code}\r\nSep 09, 2014 9:05:40 PM org.apache.pdfbox.pdmodel.font.PDSimpleFont toUnicode\r\nWARNUNG: No Unicode mapping for character code 82 in font Arial\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.codeToGID(PDTrueTypeFont.java:291)\r\n\tat org.apache.pdfbox.pdmodel.font.PDTrueTypeFont.getWidthFromFont(PDTrueTypeFont.java:250)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.getWidth(PDFont.java:216)\r\n\tat org.apache.pdfbox.pdmodel.font.PDFont.getDisplacement(PDFont.java:182)\r\n\tat org.apache.pdfbox.util.PDFStreamEngine.showText(PDFStreamEngine.java:449)\r\n{code}\r\nDon't know if it is related to PDFBOX-2310.",
        "Move orphaned COSObjectKey class COSObjectKey is orphaned in the persistence.util module, yet it's clearly a part of our COS model, indeed COSDocument which is in org.apache.pdfbox.cos, depends on it.\r\n\r\nWe should move COSObjectKey to org.apache.pdfbox.cos."
    ],
    [
        "PDFBOX-82",
        "PDFBOX-3107",
        "Strange encoding in PDF-file [imported from SourceForge]\nhttp://sourceforge.net/tracker/index.php?group_id=78314&atid=552832&aid=1261693\nOriginally submitted by mai00 on 2005-08-16 23:16.\n\nI've got a PDF-file with a strange encoding. When I use\nExtractText it gives me lines of \nMT73MT110MT102MT111MT45MT66.... \n\nI tried to use other extracting tools like pdftohtml\nand it could extract the text in plain English.\n\nMaybe I'm just doing something wrong with the encoding\nbut I tried different things and could't extract the\nright text.\n\n\n[attachment on SourceForge]\nhttp://sourceforge.net/tracker/download.php?group_id=78314&atid=552832&aid=1261693&file_id=145929\nstrangeEncoding.pdf (application/pdf), 155806 bytes\nPDF-File with strange encoding\n\n[comment on SourceForge]\nOriginally sent by mai00.\nLogged In: YES \nuser_id=1310361\n\nHello,\nI have found more files which are strange encoded but e.g.\ncan be extracted by Adobe. I though it might have to do with\nthe Font. All of these files don't provide a BaseFont and I\nthink it might be because maybe this files were created on\nUnix systems. Maybe if somehow the font can be provided or\nsomeone can find out which font is used one can find out how\nto decode the text.\n\n[comment on SourceForge]\nOriginally sent by salchow.\nLogged In: YES \nuser_id=1316887\n\nI have got exactly the same problem. I registred a bug (ID \n1250097) and asked a question in the forum at the begining \nof August under the title : \"Text Extraction unsuccessful with \nPDFBox\". Unfortunately, I haven't got any solution yet. \nIf you find a way to solve this problem, i am interested in ...\nThanks\nSalchow",
        "Asterisk character not displaying properly in Adobe Reader From Matt B. in the user mailing list:\r\n{quote}\r\nI have an odd issue with the asterisk character not displaying properly in Adobe Reader (XI or DC)\r\nThe \"*\" is displayed on the document as a hollow box, all other characters seem to be ok. \r\n\r\nI thought it was an issue with my code, so I gave it a try in the HelloWorldTTF.java example, and got the same results...with various different TTF fonts as well.\r\n\r\nAttached is the test.pdf output file, using the LiberationSans-Regular.ttf font and input message \"1*1\".\r\nIt was created using a 2.0.0-SNAPSHOT that I built earlier this morning, but I also had the same results using the RC1 binaries.\r\n{quote}"
    ],
    [
        "PDFBOX-1317",
        "PDFBOX-2408",
        "PDFBox giving AcroFields size zero for some pdf document. \r\nI am working on PDF Form fill utility and found some of pdf return blank acrofield array. \r\n\r\nDownload PDF document from below mentioned link\r\n\r\nhttps://skydrive.live.com/redir?resid=C420713A859E927D!118&authkey=!AJqh1odSC8MqMrE\r\n\r\nIt will give blank list of acrofields.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "false negative? 1.2.1 : Body Syntax error, Single space expected  ... \"mm_image2pdfa.pdf\" is not valid, error(s) : Tue Oct 07 10:00:30 CEST 2014\r\n- 1: 1.2.1 : Body Syntax error, Single space expected [offset=235859; key=235859; line=; object=COSObject{14, 0}]\r\n- 2: 1.2.1 : Body Syntax error, Single space expected [offset=235637; key=235637; line=; object=COSObject{13, 0}]\r\n- 3: 1.2.1 : Body Syntax error, Single space expected [offset=15; key=15; line=; object=COSObject{1, 0}]\r\n- 4: 1.2.1 : Body Syntax error, Single space expected [offset=232167; key=232167; line=; object=COSObject{5, 0}]\r\n- 5: 1.2.1 : Body Syntax error, Single space expected [offset=32399; key=32399; line=; object=COSObject{6, 0}]\r\n- 6: 1.2.1 : Body Syntax error, Single space expected [offset=2688; key=2688; line=; object=COSObject{2, 0}]\r\n- 7: 1.2.1 : Body Syntax error, Single space expected [offset=32169; key=32169; line=; object=COSObject{4, 0}]\r\n- 8: 1.2.1 : Body Syntax error, Single space expected [offset=232040; key=232040; line=; object=COSObject{3, 0}]\r\n- 9: 1.2.1 : Body Syntax error, Single space expected [offset=231334; key=231334; line=; object=COSObject{10, 0}]\r\n- 10: 1.2.1 : Body Syntax error, Single space expected [offset=231143; key=231143; line=; object=COSObject{9, 0}]\r\n- 11: 1.2.1 : Body Syntax error, Single space expected [offset=32617; key=32617; line=; object=COSObject{7, 0}]\r\n- 12: 1.2.1 : Body Syntax error, Single space expected [offset=32708; key=32708; line=; object=COSObject{8, 0}]\r\n- 13: 1.2.1 : Body Syntax error, Single space expected [offset=231640; key=231640; line=; object=COSObject{11, 0}]\r\n- 14: 1.2.1 : Body Syntax error, Single space expected [offset=232223; key=232223; line=; object=COSObject{12, 0}]"
    ]
]