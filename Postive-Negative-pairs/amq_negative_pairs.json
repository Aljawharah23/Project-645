[
    [
        "AMQ-5910",
        "AMQ-1828",
        "When sending/receiving by count, the final reports show incorrect counts When sending or receiving messages by count, the code runs in a loop against a counter and completes once the count is reached. The reports printed out at the end frequently show a number that is less by up to ~30 messages when count=30000. The JMX statistics of the broker confirm that the number of messages specified on the command line were consumed or sent, so this appears to have something to do with the reporting part.",
        "Classpath in \"jaxb-impl\" META-INF/MANIFEST.MF does not match included library When I first deployed and used the resource adapter, it could not find it's \"jaxb-api-2.1.jar\".\n\nSee the attached \"jaxb-impl-MANIFEST.diff\".\n\nThe META-INF/MANIFEST.MF of jaxb-impl-2.0.3.jar lists the classpath as:\n\nClass-Path: jaxb-api.jar activation.jar jsr173_1.0_api.jar jaxb1-impl.\n jar\n\n... but the file names is \"jaxb-api-2.1.jar\" \n\n\nApplying the patch to the META-INF/MANIFEST.MF in \"jaxb-api-2.1.jar\" and updating that jar in \"activemq-rar-5.1.0.rar\" resolves the problem.\n\nI could reproduce the failing jar with the 5.1.0 source, but I couldn't find out where in the build process it fails.\nMaybe it's the  \"jaxb-impl\" pom in the maven repository.\n\n"
    ],
    [
        "AMQ-2736",
        "AMQ-4888",
        "KahaDB doesn't clean up old files Over time, we're seeing that kahadb doesn't clean up old journal files. As a result, we eventually run out of disk space, or rather, we hit our usage limits and our producers are slowed down by the producer flow control mechanism. Others have experienced this problem too (for example, see http://mail-archives.apache.org/mod_mbox/activemq-users/201002.mbox/%3C27502591.post@talk.nabble.com%3E)\n\nFor now, we're moving back to the old amqPersistenceStore. \n\n",
        "Embedded broker requires 50GB of temporary space When starting an embedded broker via\r\n\r\n    broker = new BrokerService();\r\n    broker.setPersistent(false);\r\n    broker.addConnector(\"tcp://127.0.0.1:61616\");\r\n    broker.start();\r\n\r\nIt issues an _ERROR_ saying:\r\n\r\nBrokerService                    | he.activemq.broker.BrokerService 1925 | 141 - org.apache.activemq.activemq-core - 5.7.0 | Temporary Store limit is 51200 mb, whilst the temporary data directory: /path/paxexam/activemq-data/localhost/tmp_storage only has 47743 mb of usable space\r\n\r\nWhy would the broker require 50GB of temporary space?"
    ],
    [
        "AMQ-740",
        "AMQ-2566",
        "java.lang.UnsupportedOperationException thrown when creating a consumer gregw reported the following stack trace:\n\njava.lang.UnsupportedOperationException\n        at java.util.AbstractCollection.add(AbstractCollection.java:216)\n        at java.util.AbstractCollection.addAll(AbstractCollection.java:318)\n        at org.apache.activemq.store.journal.JournalPersistenceAdapter.getDestinations(JournalPersistenceAdapter.java:139)        at org.apache.activemq.broker.region.AbstractRegion.getInactiveDestinations(AbstractRegion.java:193)\n        at org.apache.activemq.broker.region.TopicRegion.getInactiveDestinations(TopicRegion.java:254)\n        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:157)\n        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:113)\n        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:296)\n        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:73)\n        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:77)\n        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:73)\n        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:86)\n        at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:427)\n        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:295)\n        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)\n        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)\n        at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:68)\n        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:73)\n        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1131)\n        at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1667)\n        at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:196)\n        at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:840)\n        at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:800)\n        at org.apache.activemq.web.WebClient.getConsumer(WebClient.java:261)\n        at org.apache.activemq.web.WebClient.getConsumer(WebClient.java:255)\n        at org.apache.activemq.web.MessageListenerServlet.doPost(MessageListenerServlet.java:142)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:767)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:860)\n        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:423)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:966)\n        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:957)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:353)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:226)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:567)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:147)\n        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:126)\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:119)\n        at org.mortbay.jetty.Server.handle(Server.java:248)\n        at org.mortbay.jetty.HttpConnection.handlerRequest(HttpConnection.java:360)\n        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:628)\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:611)\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:197)\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:288)\n        at org.mortbay.jetty.nio.SelectChannelConnector$HttpChannelEndPoint.run(SelectChannelConnector.java:805)\n        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)",
        "Rollback redelivery causes inflight count to get out of sync A negative inflight count can result from rollback redelivery as each rollback decremented the inflight count\nWith a 0 maxRedeliveryAttempts policy, the poisonAck was incrementing inflight.\n\npoisinAck should manage the inflight as they are still present (inflight) in the consumer till they are acked via commit or a poisonAck.\n\nadding some asserts to the existing DeadLetterTest junit demonstrates the problem."
    ],
    [
        "AMQ-282",
        "AMQ-4606",
        "Durable Subscription recovery not working. Bug can be verified with the shipped examples.  To reproduce:\n\n1. Start broker\n2. ant -Dtopic=true -Ddurable=true consumer\n3. Restart broker\n4. ant -Dtopic=true -Ddurable=true producer\n5. ant -Dtopic=true -Ddurable=true consumer\n\nAt step 5 I would expect the produced messages to be received but are not.\n",
        "BrokerXmlConfigStartTest  fails on activemq-leveldb-replicating.xml This fails with the following:\r\n\r\njava.lang.IllegalStateException: BeanFactory not initialized or already closed - call 'refresh' before accessing beans via the ApplicationContext\r\n\tat org.springframework.context.support.AbstractRefreshableApplicationContext.getBeanFactory(AbstractRefreshableApplicationContext.java:172)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1078)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)\r\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\r\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:101)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:101)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:65)\r\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\r\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\r\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:85)\r\n\tat org.apache.activemq.config.BrokerXmlConfigStartTest.testStartBrokerUsingXmlConfig1(BrokerXmlConfigStartTest.java:84)\r\n\r\n"
    ],
    [
        "AMQ-488",
        "AMQ-4015",
        "Broker side message redelivery due to client death should be tracked so that the message can be sent to the DLQ. ",
        "Add uptime to broker mbean and when stopping broker to report its uptime We got some code for this at Apache Camel.\r\n\r\nIt would be nice to see the uptime in JMX and when the broker is shutdown in its logs."
    ],
    [
        "AMQ-790",
        "AMQ-5290",
        "support for non-XBean based XML configuration files does not seem to work It seems we don't currently support regular Spring XML configuration files when using the 'activemq' command. \n\nSteps to reproduce:\n\n[john@prokopiev jms]$ unzip incubator-activemq-4.0.1.zip\nArchive:  incubator-activemq-4.0.1.zip\n  creating: incubator-activemq-4.0.1/\n  creating: incubator-activemq-4.0.1/bin/\n  creating: incubator-activemq-4.0.1/conf/\n  creating: incubator-activemq-4.0.1/docs/\n  creating: incubator-activemq-4.0.1/example/\n  creating: incubator-activemq-4.0.1/example/activemq-web-console/\n...\n  inflating: incubator-activemq-4.0.1/userGuide.html\n  inflating: incubator-activemq-4.0.1/var/activemq.log\n[john@prokopiev jms]$ echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE beans PUBLIC \"-//SPRING//DTD BEAN//EN\"\n\"http://www.springframework.org/dtd/spring-beans.dtd\">\n<beans>\n<bean id=\"broker\" class=\"org.apache.activemq.broker.BrokerService\"\ninit-method=\"start\">\n<property name=\"transportConnectorURIs\">\n<list>\n<value>tcp://localhost:61234</value>\n</list>\n</property>\n</bean>\n</beans> ' > incubator-activemq-4.0.1/conf/activemq.xml\n[john@prokopiev jms]$ cd incubator-activemq-4.0.1/bin\n[john@prokopiev bin]$ sh activemq\nACTIVEMQ_HOME: /home/john/devel/java/jms/incubator-activemq-4.0.1\nLoading message broker from: xbean:activemq.xml\nINFO  BrokerService                  - ActiveMQ 4.0.1 JMS Message Broker\n(localhost) is starting\nINFO  BrokerService                  - For help or more information please\nsee: http://incubator.apache.org/activemq/\nINFO  JDBCPersistenceAdapter         - Database driver recognized:\n[apache_derby_embedded_jdbc_driver]\nINFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active\nJournal: using 2 x 20.0 Megs at:\n/home/john/devel/java/jms/incubator-activemq-4.0.1/bin/activemq-data/localhost/journal\nINFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in\ntransactions recovered.\nINFO  TransportServerThreadSupport   - Listening for connections at:\ntcp://prokopiev.stc.donpac.ru:61234\nINFO  TransportConnector             - Connector\ntcp://prokopiev.stc.donpac.ru:61234 Started\nINFO  BrokerService                  - ActiveMQ JMS Message Broker\n(localhost, ID:prokopiev.stc.donpac.ru-41458-1151926448246-1:0) started\nERROR: java.lang.RuntimeException: Failed to execute start task. Reason:\njava.lang.ClassCastException: org.apache.activemq.broker.BrokerService\nERROR: java.lang.Exception: java.lang.ClassCastException:\norg.apache.activemq.broker.BrokerService\nINFO  BrokerService                  - ActiveMQ Message Broker (localhost,\nID:prokopiev.stc.donpac.ru-41458-1151926448246-1:0) is shutting down\nINFO  TransportConnector             - Connector\ntcp://prokopiev.stc.donpac.ru:61234 Stopped\nINFO  VMTransportFactory             - Shutting down VM connectors for\nbroker: localhost\nINFO  BrokerService                  - ActiveMQ JMS Message Broker\n(localhost, ID:prokopiev.stc.donpac.ru-41458-1151926448246-1:0) stopped",
        "MQTT clients using durable subscriptions on networked brokers received duplicates MQTT clients that create durable subscriptions and that operate in a network of Brokers can receive duplicate messages when they start failing back and forth between brokers in the network.\r\n\r\nWe should investigate using Virtual Destinations under the covers instead of durable topics subscriptions as this is a known problem with the durable topic case.  With Virtual Destinations the client would be subscribed to a Queue that would receive all messages sent to the target Topic.  "
    ],
    [
        "AMQ-236",
        "AMQ-3915",
        "Non-Fatal ConcurrentModificationException in Broker 09:35:36 WARN  caught exception consuming packet: CONSUMER_INFO: id = 375 ConsumerInfo{ browser = false, destination = ActiveMQ.Advisory.TempDestinations.TemporaryQueue-{TD{ID:cyclops-4948-1113347143177-1284:0}TD}ID:cyclops-4948-1113347143177-1475:0, consumerIdentifier = 'ID:cyclops-4790-1113348862947-9:0.48.48' , clientId = 'ID:cyclops-4790-1113348862947-9:0' , sessionId = '48' , consumerName = '' , selector = '' , startTime = 1113348936040, started = true, consumerNo = 48, noLocal = false, prefetchNumber = 10, consumerKey = '[ID:cyclops-4790-1113348862947-9:0:]' }\n\njava.util.ConcurrentModificationException\n        at java.util.HashMap$HashIterator.nextEntry(Unknown Source)\n        at java.util.HashMap$KeyIterator.next(Unknown Source)\n        at org.activemq.broker.impl.AdvisorySupport.addAdvisory(AdvisorySupport.java:88)\n        at org.activemq.broker.impl.DefaultBroker.addMessageConsumer(DefaultBroker.java:251)\n        at org.activemq.broker.impl.BrokerContainerImpl.registerMessageConsumer(BrokerContainerImpl.java:355)\n        at org.activemq.broker.impl.BrokerConnectorImpl.registerMessageConsumer(BrokerConnectorImpl.java:170)\n        at org.activemq.broker.impl.BrokerClientImpl.consumeConsumerInfo(BrokerClientImpl.java:466)\n        at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:327)\n        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)\n        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)\n        at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:310)\n        at java.lang.Thread.run(Unknown Source)",
        "JMX connector does not bind to a specific host when a connectHost is specified on the managementContext Due to JDK bug (http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6425769), JMX connector will listen on all interfaces, instead of one defined by connectorHost property. There's a workaround for the problem that we can use."
    ],
    [
        "AMQ-4677",
        "AMQ-2083",
        "LevelDB can't move all message data logs that are no longer used Producers and consumers of a single thread to send and consume 50,000 messages, each message size is 600K, capacity of 28G or so;\r\n\r\nProblem: after the message is sent and consumption, there are 7G about the file is not clear.\r\n\r\nBy the way, kahaDB have an attribute \"cleanupInterval\", Why levelDB without this?",
        "java.io.OptionalDataException when getting a deeply nested HashMap from an ObjectMessage In rare occasions getting a HashMap from an ObjectMessage leads to the following error:\n\njavax.jms.JMSException: Failed to build body from bytes. Reason: java.io.OptionalDataException\n\tat org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)\nCaused by: java.io.OptionalDataException\n\tat java.io.ObjectInputStream.readObject0(Unknown Source)\n\tat java.io.ObjectInputStream.readObject(Unknown Source)\n\tat java.util.HashMap.readObject(Unknown Source)\n\tat sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat java.io.ObjectStreamClass.invokeReadObject(Unknown Source)\n\tat java.io.ObjectInputStream.readSerialData(Unknown Source)\n\tat java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)\n\tat java.io.ObjectInputStream.readObject0(Unknown Source)\n\tat java.io.ObjectInputStream.readObject(Unknown Source)\n\tat java.util.HashMap.readObject(Unknown Source)\n\tat sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat java.io.ObjectStreamClass.invokeReadObject(Unknown Source)\n\tat java.io.ObjectInputStream.readSerialData(Unknown Source)\n\tat java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)\n\tat java.io.ObjectInputStream.readObject0(Unknown Source)\n\tat java.io.ObjectInputStream.readObject(Unknown Source)\n\tat java.util.HashMap.readObject(Unknown Source)\n\tat sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Unknown Source)\n\tat java.io.ObjectStreamClass.invokeReadObject(Unknown Source)\n\tat java.io.ObjectInputStream.readSerialData(Unknown Source)\n\tat java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)\n\tat java.io.ObjectInputStream.readObject0(Unknown Source)\n\tat java.io.ObjectInputStream.readObject(Unknown Source)\n\tat org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:177)\n\t... 8 more\n\nThe only difference in the testing application to all other messages is that the object is a deeply nested map, it is: HashMap<String, HashMap<String, HashMap<String,String>>>\n\nAlltough the OptionalDataException indicates some primitive values being written somewhere, there are absolute no primitive values around there."
    ],
    [
        "AMQ-4232",
        "AMQ-1708",
        "Kahadb does not allow to obtain count of used/free bytes in the storage The full story is user forum under title:\r\nActivemq 5.4.2 hangs when the temp disk usage is used\r\n\r\nTempUsage.retrieveUsage() always returns the size of the allocated storage instead of the actual usage. I could not see what methods of kahadb returns the needed information, so I extended the kahadb interface.\r\n\r\nNote that this issue may cause other problems such as AMQ-4136.\r\n",
        "Memory Leak while sending Text/Stream Message of size 512 kb or more with MySql persistance steps to following to reproduce the problem::\n\n  1) ActiveMQ is running on Linux box . MySql is configured as persistance data base.\n\n  2) Write a simple producer and consumer program which produces/consumes from five different queue.\n\n  3) while producer and consumer running at the same time (send 1000000 messages in a for loop)\n       You can see its memory being eaten up in the Linux server.\n\n  4) after soem time consuming some 300 or so messages it will end up with an exception."
    ],
    [
        "AMQ-2305",
        "AMQ-5990",
        "TransportConnection Ignores isShutdownOnSlaveFailure In a pure Master/Slave configuration, when the slave fails the TransportConnection invokes the MasterBroker's stop() method without taking into consideration the shutdownOnSlaveFailure boolean, which by default is set to false.  So even if shutdownOnSlaveFailure  is set to false, all my plugin brokers' stop methods get invoked when the slave fails.  ",
        "PooledConnectionFactory does not allow disabling JMX on GenericKeyObjectPool initConnectionPool does not allow us to configure the GenericKeyObjectPool.\r\nSuggestion:\r\nPooledConnectionFactory\r\n{code}\r\nprivate GenericKeyedObjectPoolConfig config;\r\npublic void setBasePoolConfig(final GenericKeyedObjectPoolConfig config) {\r\n        this.config = config;\r\n}\r\n\r\npublic void initConnectionsPool() {\r\n     if (this.connectionsPool == null) {\r\n            this.connectionsPool = new GenericKeyedObjectPool<ConnectionKey, ConnectionPool>(blah, config==null?new GenericKeyedObjectPoolConfig():config);\r\n     }\r\n}\r\n\r\nprotected ConnectionPool createConnectionPool(Connection connection) {\r\n        return new ConnectionPool(connection, config);\r\n    }\r\n{code}\r\nConnectionPool\r\n{code}\r\npublic ConnectionPool(Connection connection) {\r\n      this(connection, new GenericKeyedObjectPoolConfig());\r\n}\r\n\r\npublic ConnectionPool(Connection connection, GenericKeyedObjectPoolConfig config) {\r\n      this.connection = wrap(connection);\r\n      this.sessionPool = new GenericKeyedObjectPool<SessionKey, SessionHolder>(blah, config==null?new GenericKeyedObjectPoolConfig():config);\r\n}\r\n{code}\r\n"
    ],
    [
        "AMQ-4523",
        "AMQ-2726",
        "The durable subscriber will lose some pending queue message  With camel route, forward messages from a topic to a queue.\r\nJust start a topic producer, such as:\r\n{code}\r\nant -Durl=tcp://ip:port  -Dtopic=true -Dsubject=test_topic -Ddurable=true -Dmax=10000 -DmessageSize=100 -DparallelThread=10 -Dverbose=false producer\r\n{code}\r\nAfter a while, in web console: /admin/subscribers.jsp ,can see \"Pending Queue Size\" not 0. \r\nThen stop the topic producer, will found that the \"Pending Queue Size\" still not 0!\r\nSome messages lost, pending in the durable subscriber.\r\nNo matter restart the activemq server, or consume all the messages from the queue, can not get \"The Pending Queue Messages'.\r\ncamel.xml:\r\n{code}\r\n<beans\r\n   xmlns=\"http://www.springframework.org/schema/beans\"  \r\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n   xsi:schemaLocation=\"\r\n     http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd\r\n     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\r\n  \r\n    <camelContext id=\"camel\" xmlns=\"http://camel.apache.org/schema/spring\">\r\n\r\n        <!-- You can use Spring XML syntax to define the routes here using the <route> element -->\r\n        <route id=\"testRoute\">\r\n            <description>test Route</description>\r\n            <from uri=\"jms1:topic:test_topic?clientId=1&amp;durableSubscriptionName=bar1\"/>\r\n            <to uri=\"jms1:queue:test_queue\"/>\r\n        </route>\r\n\r\n    </camelContext>\r\n\r\n\t<bean id=\"jms1\" class=\"org.apache.camel.component.jms.JmsComponent\">\r\n\t  <property name=\"configuration\" ref=\"jmsConfig1\" />\r\n\t</bean>\r\n\t\t      \r\n\t<bean id=\"jmsConfig1\" class=\"org.apache.camel.component.jms.JmsConfiguration\" >\r\n\t  <property name=\"connectionFactory\" ref=\"jmsPooledConnectionFactory1\" />\r\n\t  <property name=\"transacted\" value=\"true\" />\r\n\t  <property name=\"transactionManager\" ref=\"jmsTransactionManager1\" />\r\n\t  <property name=\"cacheLevelName\" value=\"CACHE_CONNECTION\" />\r\n\t  <property name=\"cacheLevel\" value=\"1\" />\r\n\t</bean>\r\n\t<bean id=\"jmsTransactionManager1\" class=\"org.springframework.jms.connection.JmsTransactionManager\">\r\n\t  <property name=\"connectionFactory\" ref=\"jmsPooledConnectionFactory1\" />\r\n\t </bean>        \r\n\t<bean id=\"jmsPooledConnectionFactory1\" class=\"org.apache.activemq.pool.PooledConnectionFactory\"\r\n\t      init-method=\"start\" destroy-method=\"stop\" >\r\n\t  <property name=\"maxConnections\" value=\"1\" />\r\n\t  <property name=\"connectionFactory\" ref=\"jmsConnectionFactory1\" />\r\n\t</bean>\r\n\t<bean id=\"jmsConnectionFactory1\" class=\"org.apache.activemq.ActiveMQConnectionFactory\">\r\n\t  <property name=\"brokerURL\" value=\"vm://localhost?create=false&amp;jms.prefetchPolicy.all=1\" />\r\n\t  <property name=\"watchTopicAdvisories\" value=\"false\" />\r\n\t</bean>\r\n\r\n</beans>\r\n{code}",
        "init.d script fails if RUN_AS_GROUP not defined due to typo In the supplied init.d scripts for linux there is a typo \n\n{{RUN_AS_GROUP=RUN_AS_USER}}\n\nwhich should be \n\n{{RUN_AS_GROUP=$RUN_AS_USER}}\n\nWe have this in our patches on our production server so we must have hit the problem at some point, but looking at the code it's not even clear the case that this code would be called (RUN_AS_USER set to a user which does not have a primary group) could ever happen on a well-configured mahcine:\n\n{code}\nRUN_AS_GROUP=`groups $RUN_AS_USER | awk '{print $3}' | tail -1`\nif [ \"X$RUN_AS_GROUP\" = \"X\" ]\nthen\n    RUN_AS_GROUP=RUN_AS_USER\nfi\n{code}\n\nPatch attached to do the change above, but perhaps the whole IF statement should be deleted."
    ],
    [
        "AMQ-2231",
        "AMQ-5874",
        "Adjust POM to remove \"platform dependent\" warning and missing inceptionYear  Attached is a patch that specifies the source encoding to remove a warning such as [1]. Also the inceptionYear is specified so the build does not complain about it.\n\n[1] \"Using platform encoding (MacRoman actually) to copy filtered resources, i.e. build is platform dependent!\"",
        "Remove redundant calls to persistence Actually ActiveMQ does make a lot of redundant calls to persistence at startup. If using JDBC as persistent backend this ends in expensive count(*) or distinct union calls sometimes doing full table access. Btw. maybe an index of container and xid on activemq_msgs should be concidered.\r\n\r\nExpensive statements are for example:\r\n- getDestinationMessageCountStatement\r\n- getFindAllDestinationsStatement() {\r\n"
    ],
    [
        "AMQ-3375",
        "AMQ-6091",
        "stomp consumer might not receive all msgs of a virtual topic queue with memory limits Have a testcase that connects a Java stomp consumer to a virtual destination queue and consumes a fixed amount of msgs.\r\nDuring the test I noticed that the consumer does not always receive the full amount of msgs.\r\nInstead the receive times out although JMX QueueSize property is greater than 0. However when trying to browse the queue using JMX, it returns null, despite the fact that not all msgs got dequeued yet (dispatch and dequeue counter < enqueue counter).\r\n\r\nSo far I reproduced this with a stomp producer/consumer only. The producer writes msgs to a virtual topic VirtualTopic.Foo and the consumer takes msgs off the Consumer.A.VirtualTopic.Foo queue. Using JMX I noticed all msgs got moved from the virtual topic to the queue (reflected by JMX enqueue counter) but not all msgs got consumed.\r\n\r\nSo it seems the broker lost some msgs on the way. ",
        "Java runtime policy update should support a list of properties to apply retrospectively Right now when the {{JavaRuntimeConfigurationBroker}} is used to update a Policy entry, every property of the Policy is re-applied to matching destinations after update.  It would also be nice if an optional list of properties could be provided during the update.  \r\n\r\nThe behavior of this option would be to still apply the entire Policy entry update (so all new destinations get the policy changes), but for existing destinations only properties that match what's in the property list would get applied.\r\n\r\nThe use case here would be wanting to apply only one or more properties that changed on a Policy to a destination, but not wanting to overwrite the other properties that might have been changed since creation of the destination.\r\n\r\nFor example, say through JMX someone updated the maxPageSize property on a specific Queue to something other than what is specified on the Policy.  After the fact, it might be desirable to update a different property on the policy that matches that Queue and have it be applied to the Queue.  Normally this policy update would overwrite all properties on the existing Queue, but in this case we would not want to overwrite the maxPageSize setting as it was changed after the fact.  So providing a list of properties to apply would prevent that setting from being changed."
    ],
    [
        "AMQ-3647",
        "AMQ-5912",
        "Upgrade xbean spring to 3.9 As xbean-spring 3.9 is released for a while, we should consider to upgrade it in ActiveMQ trunk.",
        "ActiveMQ Web Console war file exports org.apache.activemq activemq-web-console.war file has manifest which exports org.apache.activemq* packages. As a result, in Karaf a bundle which imports any of these packages may be hooked to web-console bundle instead of activemq-osgi. This leads to problems, like:\r\n{noformat}\r\n13:44:01,679 | ERROR | nsole user karaf | container.BlueprintContainerImpl  403 | 12 - org.apache.aries.blueprint.core - 1.4.3 | Unable to start blueprint container for bundle event-logging-collector-jms\r\norg.osgi.service.blueprint.container.ComponentDefinitionException: Error setting property: PropertyDescriptor <name: connectionFactory, getter: class org.apache.camel.component.jms.JmsConfiguration.getConnectionFactory(), setter: [class org.apache.camel.component.jms.JmsConfiguration.setConnectionFactory(interface javax.jms.ConnectionFactory)]\r\n\tat org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:941)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:907)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BeanRecipe.setProperties(BeanRecipe.java:888)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:820)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:787)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)[:1.7.0_80]\r\n\tat org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:245)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:682)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:377)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:269)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:294)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:263)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:253)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500)[21:org.apache.aries.util:1.1.0]\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433)[21:org.apache.aries.util:1.1.0]\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725)[21:org.apache.aries.util:1.1.0]\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463)[21:org.apache.aries.util:1.1.0]\r\n\tat org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422)[21:org.apache.aries.util:1.1.0]\r\n\tat org.eclipse.osgi.internal.framework.EquinoxEventPublisher$2.call(EquinoxEventPublisher.java:189)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.notifyHookPrivileged(ServiceRegistry.java:1280)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.internal.serviceregistry.ServiceRegistry.notifyHooksPrivileged(ServiceRegistry.java:1263)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.internal.framework.EquinoxEventPublisher.notifyEventHooksPrivileged(EquinoxEventPublisher.java:186)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEventPrivileged(EquinoxEventPublisher.java:146)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEvent(EquinoxEventPublisher.java:75)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.internal.framework.EquinoxEventPublisher.publishBundleEvent(EquinoxEventPublisher.java:67)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor.publishModuleEvent(EquinoxContainerAdaptor.java:102)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.container.Module.publishEvent(Module.java:466)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.container.Module.start(Module.java:457)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.eclipse.osgi.internal.framework.EquinoxBundle.start(EquinoxBundle.java:392)[org.eclipse.osgi-3.10.2.jar:]\r\n\tat org.apache.karaf.bundle.command.Start.executeOnBundle(Start.java:38)[23:org.apache.karaf.bundle.core:4.0.0]\r\n\tat org.apache.karaf.bundle.command.BundlesCommand.doExecute(BundlesCommand.java:64)[23:org.apache.karaf.bundle.core:4.0.0]\r\n\tat org.apache.karaf.bundle.command.BundlesCommand.execute(BundlesCommand.java:54)[23:org.apache.karaf.bundle.core:4.0.0]\r\n\tat org.apache.karaf.shell.impl.action.command.ActionCommand.execute(ActionCommand.java:83)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:67)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.karaf.shell.impl.console.osgi.secured.SecuredCommand.execute(SecuredCommand.java:87)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:480)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:406)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.felix.gogo.runtime.Closure.execute(Closure.java:182)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.felix.gogo.runtime.Closure.execute(Closure.java:119)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:94)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat org.apache.karaf.shell.impl.console.ConsoleSessionImpl.run(ConsoleSessionImpl.java:267)[43:org.apache.karaf.shell.core:4.0.0]\r\n\tat java.lang.Thread.run(Thread.java:745)[:1.7.0_80]\r\nCaused by: java.lang.Exception: Unable to convert value org.apache.activemq.pool.PooledConnectionFactory@6ab8e208 to type javax.jms.ConnectionFactory\r\n\tat org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:184)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BlueprintRepository.convert(BlueprintRepository.java:402)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.utils.ReflectionUtils$PropertyDescriptor.convert(ReflectionUtils.java:394)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.utils.ReflectionUtils$MethodPropertyDescriptor.internalSet(ReflectionUtils.java:628)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.utils.ReflectionUtils$PropertyDescriptor.set(ReflectionUtils.java:378)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\tat org.apache.aries.blueprint.container.BeanRecipe.setProperty(BeanRecipe.java:939)[12:org.apache.aries.blueprint.core:1.4.3]\r\n\t... 45 more\r\n{noformat}\r\n"
    ],
    [
        "AMQ-3900",
        "AMQ-2030",
        "Thread.sleep call in TopicProducerFlowControlTest sleeps too long on Ubuntu, causing test timeout The onMessage() method of this test calls Thread.sleep(1) on every call.  On Ubuntu 10.04 this actually sleeps for an average of 10 milliseconds, which causes the test to timeout.\r\n\r\nI've added a patch which has onMessage() sleep for 100 millisecond on every 100 iterations instead.",
        "Topics Delivering Duplicate Messages when have cyclic network of brokers w/multicast discovery In a cyclic network using m/cast discovery. Every broker knows about ever other broker.\nNetwork of 3, broker1, broker2, broker2 - consumer on broker2, producer on broker1\n\nproblem description:\nconsumer on broker 2 is propagated to broker1 and broker3. \nResulting bridged consumer on 1 is propagated to 2 and 3:\n - broker 2 ignores it because of the broker path match.\n - broker 3 bridges it and propagates the resulting consumer to 2 and 1. 2 again ignores as does 1 because of broker path info.. \n\nResulting bridged consumer on 3 is now a duplicate of the subscription propagated to 3 via broker 1. This cannot be suppressed using broker path because 3 only sees the brokerpath to broker1.\n\nWhat is needed is a history of the original consumerId in the bridged subscripton such that subsequent subscriptions can be seen as duplicates. ConsumerInfo needs to contain a list of networkConsumerIds.\n\nTo have this propagated needs a wireFormat version increment.\n\n\n \n"
    ],
    [
        "AMQ-1992",
        "AMQ-1678",
        "flow control doesn't work after first restart (if producer works in transacted mode with persistent messages) To reproduce BUG follow instructions:\n\n1. Unpack fresh AMQ (versions 5.1.0, 5.2.0, 5.3.0-SNAPSHOT)\n\n2. Edit $AMQ_HOME/examples/ProducerTool.java turn on transacted mode and persisting messages. \n(I have modified source code directly because I couldn't change this parameters through build.xml. Change is simple.)\nPatch:\n78,79d77\n<             transacted = true;\n< \n88,89d85\n<             persistent = true;\n< \n\n3. Start AMQ $AMQ_HOME/bin/activemq\n\n4. Start producer $AMQ_HOME/examples/ant producer -DmessageSize=200000\n\n5. Producer will block (on commit method) after approximately 27 messages (which is OK for selected message size and default max queues size 5Mb)\n\n6. Stop producer and AMQ in any order (CTRL-C in terminal)\n\n7. Start AMQ  $AMQ_HOME/bin/activemq\n\n8. Start producer $AMQ_HOME/examples/ant producer -DmessageSize=200000\nProducer will continue to queue messages infinitely.",
        "JMX methods exposed for a Queue dont work right I noticed that JMX methods exposed from AMQ5.0 are not working properly. some times able to move/copy messages and sometime don't. its really unreliable. QueueBrowser is not working properly either, it returns no messages when u browse the queue even if messages are there in the queue. "
    ],
    [
        "AMQ-940",
        "AMQ-2848",
        "JMSXUserId not set when using a JAAS login module The JMSXUserID field is not set when using a JAAS login module.\n\nA unit test that fails and a bugfix are attached.",
        "JmsBridgeConnectors need to be able to use the broker sslContext Currently if you specify a JmsBridgeConnection, with an outbound connection factory where the broker URL is using the SSL transport, the only way you can control its SSL connection details (keystore etc.) is via the VM level SSL_OPTS method. This is because the ActiveMQConnectionFactory is configured outside the broker and so does not use its SslContext which is broker specific. Fundamentally the SSL connection details are related to the connections, rather than the broker or the whole VM; so it would make sense to be able to configure each and every 'connection' in the broker with a potentially different SslContext. JMS bridge connections are highly likely to require SSL connections as they tend to connect distinct networks, client connections are also likely to use SSL and there is no easy way to configure those either.\nSo, the suggestion is that broker URL parameters be used to provide the details of the path to the keystore, truststore and their password. In this way the SslTransportFactory can decipher the required SslContext. If no connection specific parameters are used then the transport factory should fall back on the broker level SSL context, and if there was none defined then the VM level SSL context would be the default. Named SslContext objects might also be a solution."
    ],
    [
        "AMQ-2184",
        "AMQ-66",
        "Messages keep hanging in JDBCStore without delivery to client We currently suffer from hanging messages in the JDBC persistant storage in our production environment. \n\nOccasionally (once in a day or week) a few Messages (most time 1 or 2, sometimes more) seems to stuck in the DB Table activemq_msg without being delivered even once to a consumer. They are never deliverd to a consumer until the broker is rebooted. Strange enough new messages produced into the same queue with those stuck messages are delivered to the consumers as normal. It simply looks like the borker is blind about the stuck messages.\n\nOur system depends on processing every message, so missing even one of them is realy a big problem in production.\n\nEverything seems to be fine: No warnings, errors or even debug logging gives any hint about a problem. \nUnfortunately we can't debug the broker 'cuse it's our production environment. Our Testing envirenment is not capable to reproduce the problem (actually it's only one Machine with a Broker and a signle jaboss running a small number of producers/clients).\n\nOur messaging characteristics show  moderate producers and slow consumers. The count of simultanous messages is moderate (about 300-1000). Actually the producers have hot phases generating bulks of Messages followed by phases of long inactivity. The consumers are slow related to the producers but always keep within an hour or two. We do not experience any memory problems.\n\n\n\nBecause this bug may be related to https://issues.apache.org/activemq/browse/AMQ-1918, I had a look at the code around the StoreCursors and stumbled apon a strange code fragment called when removing entries.\n\nThe suspicous code is found in org.apache.activemq.broker.region.cursors.AbstractStoreCursor.remove() in 5.1.0, 5.2 .0 and 5.3.0:\n\n    public final synchronized void remove() {\n        size--;\n        if (size==0 && isStarted() && cacheEnabled) {\n            cacheEnabled=true;\n        }\n    }\n\nAs far as i can see, the if statement ist actually a NOP, 'cause it will not modify cacheEnabled in any case.\n\nMaybe this causes some strange effects when using the StoreCursor's derived from this class..\n\n\n\n",
        "Make a custom JNDI Context to allow destinations to be browsed We can make Destinations available for browsing by tools like Hermes using a simple JNDI Context"
    ],
    [
        "AMQ-4331",
        "AMQ-2733",
        "MessageSelectorTest fails because of dated config file The activemq.xml file used by this test contained:\r\n\r\n    <persistenceAdapter>\r\n      <kahaPersistenceAdapter directory=\"file:target/amq1095\"\r\n          maxDataFileLength=\"200000\"/>\r\n    </persistenceAdapter>\r\n\r\nwhich is no longer valid.  I fixed the test by changing it to \r\n\r\n    <persistenceAdapter>\r\n      <kahaDB directory=\"file:target/amq1095\"/>\r\n    </persistenceAdapter>",
        "Allow inacivity monitor to timeout slow consumers - disable keep alive option, useKeepAlive=false add option to disable keep alive in the inactivity monitor such that it can be used to abort a connection with no activity on it. For example, a slow consumer or simply an idle connection with no jms activity."
    ],
    [
        "AMQ-4929",
        "AMQ-5133",
        "remove old and unused org.apache.activemq.broker.BrokerService#setSupportFailOver there is a bunch of duplicate detection in transactionbroker that is disabled by default and not tested that duplicates work done elsewhere - store and producerAutit. It should be removed.",
        "Selector Worker thread consumes significant CPU when broker is idle The Selector Worker: 0 thread is consuming 25% of the host CPU even though there are no active producers or consumers and there are no messages in the message store.  I was able to identify the offending thread by first using {{ps -eLF}} to find the ActiveMQ thread with a relatively large and continually increasing amount of CPU time.  I then correlated the thread ID (LWP  column  in {{ps}} output) to the native thread ID provided by the 'nid' value in the thread dump.  At the time I ran {{ps}}, the Selector Worker thread had taken over 20 hours of CPU time while the next closest ActiveMQ thread had taken 3 minutes of CPU time.  The Selector Worker thread has nid=0x489 in the thread dump copied below.\r\n\r\nh4.  Steps To Reproduce\r\n\r\nUnfortunately, I don't have repeatable steps to reproduce.  I think the issue may have occurred while I was purging a queue that had four active consumers.  The queue had several thousand persistent 350KB messages.  The consumers were using selectors and all the messages on the queue matched the consumers' selectors.  The consumers were Apache.NMS clients.  I noticed the unexpected CPU usage after the purge completed, but I can't be sure it was triggered by the purge.  I'm running performance tests and part of my normal test initialization requires purging the queue.  As such, the purge is repeated many times a day and hasn't been an issue.  After I noticed the CPU usage increase, I shut down all producers and consumers but the CPU usage increase persisted.  I'm using JConsole to monitor the JVM and monitor/manage the broker.\r\n \r\nh4. Thread Dump\r\n\r\n{noformat}\r\n2014-04-03 10:23:18\r\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (14.3-b01 mixed mode):\r\n\r\n\"ActiveMQ NIO Worker 807\" daemon prio=10 tid=0x00007fc764031800 nid=0x34e7 waiting on condition [0x00007fc7b0786000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba8001c0> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\n        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\n        at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"ActiveMQ NIO Worker 806\" daemon prio=10 tid=0x00007fc764017000 nid=0x346c waiting on condition [0x00007fc7b09ad000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba8001c0> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\n        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\n        at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"ActiveMQ InactivityMonitor Worker\" daemon prio=10 tid=0x00007fc774003000 nid=0x2848 waiting on condition [0x00007fc7b0040000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba82b968> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\n        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\n        at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"Attach Listener\" daemon prio=10 tid=0x00007fc78c001000 nid=0x1788 waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"ActiveMQ BrokerService[ActiveMQ-HCE-Playpen-partition-3-ndmhce-amq402] Task-135\" daemon prio=10 tid=0x00007fc7700dd000 nid=0x10aa waiting on condition [0x00007fc7b059c000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba800290> (a java.util.concurrent.SynchronousQueue$TransferStack)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)\r\n        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)\r\n        at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"RMI Scheduler(0)\" daemon prio=10 tid=0x00007fc780003800 nid=0x495 waiting on condition [0x00007fc7b0b04000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba822528> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)\r\n        at java.util.concurrent.DelayQueue.take(DelayQueue.java:160)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:583)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:576)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"ActiveMQ BrokerService.worker.1\" daemon prio=10 tid=0x00007fc77000e000 nid=0x491 waiting on condition [0x00007fc7b094b000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba8f6638> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)\r\n        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:358)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"ActiveMQ InactivityMonitor WriteCheckTimer\" daemon prio=10 tid=0x00007fc77000a800 nid=0x48d in Object.wait() [0x00007fc7b0a0f000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.util.TimerThread.mainLoop(Timer.java:509)\r\n        - locked <0x00007fc7ba9c0960> (a java.util.TaskQueue)\r\n        at java.util.TimerThread.run(Timer.java:462)\r\n\r\n\"ActiveMQ InactivityMonitor ReadCheckTimer\" daemon prio=10 tid=0x00007fc770009000 nid=0x48c in Object.wait() [0x00007fc7b0a40000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.util.TimerThread.mainLoop(Timer.java:509)\r\n        - locked <0x00007fc7ba9c0a38> (a java.util.TaskQueue)\r\n        at java.util.TimerThread.run(Timer.java:462)\r\n\r\n\"Selector Worker: 0\" daemon prio=10 tid=0x00007fc76801a000 nid=0x489 runnable [0x00007fc7b0ad3000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at sun.nio.ch.EPollArrayWrapper.updateRegistrations(EPollArrayWrapper.java:230)\r\n        - locked <0x00007fc7bb1777f8> (a java.util.LinkedList)\r\n        at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:214)\r\n        at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65)\r\n        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)\r\n        - locked <0x00007fc7ba9c0b90> (a sun.nio.ch.Util$1)\r\n        - locked <0x00007fc7ba9c0ba8> (a java.util.Collections$UnmodifiableSet)\r\n        - locked <0x00007fc7ba9067d0> (a sun.nio.ch.EPollSelectorImpl)\r\n        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)\r\n        at org.apache.activemq.transport.nio.SelectorWorker.run(SelectorWorker.java:93)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"qtp1649900638-44\" prio=10 tid=0x00007fc75ca7a000 nid=0x481 waiting on condition [0x00007fc7b0b35000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba9c0ce0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"qtp1649900638-43\" prio=10 tid=0x00007fc75ca78000 nid=0x480 waiting on condition [0x00007fc7b0b66000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba9c0ce0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"qtp1649900638-42\" prio=10 tid=0x00007fc75ca76000 nid=0x47f waiting on condition [0x00007fc7b0b97000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba9c0ce0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"qtp1649900638-41\" prio=10 tid=0x00007fc75ca74800 nid=0x47e waiting on condition [0x00007fc7b0bc8000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba9c0ce0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"qtp1649900638-40\" prio=10 tid=0x00007fc75ca73000 nid=0x47d waiting on condition [0x00007fc7b0bf9000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba9c0ce0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"qtp1649900638-39\" prio=10 tid=0x00007fc75ca72000 nid=0x47c waiting on condition [0x00007fc7b0c2a000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba9c0ce0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:342)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.idleJobPoll(QueuedThreadPool.java:526)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.access$600(QueuedThreadPool.java:44)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"qtp1649900638-38 Acceptor0 SelectChannelConnector@0.0.0.0:8161\" prio=10 tid=0x00007fc75ca64800 nid=0x47b runnable [0x00007fc7b0c5b000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at sun.nio.ch.ServerSocketChannelImpl.accept0(Native Method)\r\n        at sun.nio.ch.ServerSocketChannelImpl.accept(ServerSocketChannelImpl.java:145)\r\n        - locked <0x00007fc7ba9c1510> (a java.lang.Object)\r\n        at org.eclipse.jetty.server.nio.SelectChannelConnector.accept(SelectChannelConnector.java:109)\r\n        at org.eclipse.jetty.server.AbstractConnector$Acceptor.run(AbstractConnector.java:938)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"qtp1649900638-37 Selector0\" prio=10 tid=0x00007fc75ca64000 nid=0x47a runnable [0x00007fc7b0c8c000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\r\n        at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:215)\r\n        at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65)\r\n        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)\r\n        - locked <0x00007fc7ba9c1e38> (a sun.nio.ch.Util$1)\r\n        - locked <0x00007fc7ba9c1e20> (a java.util.Collections$UnmodifiableSet)\r\n        - locked <0x00007fc7ba9c1a78> (a sun.nio.ch.EPollSelectorImpl)\r\n        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)\r\n        at org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:569)\r\n        at org.eclipse.jetty.io.nio.SelectorManager$1.run(SelectorManager.java:290)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"HashSessionScavenger-3\" daemon prio=10 tid=0x00007fc75ca4d000 nid=0x479 in Object.wait() [0x00007fc7b0cbd000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.util.TimerThread.mainLoop(Timer.java:509)\r\n        - locked <0x00007fc7baa22728> (a java.util.TaskQueue)\r\n        at java.util.TimerThread.run(Timer.java:462)\r\n\r\n\"HashSessionScavenger-2\" daemon prio=10 tid=0x00007fc75ca4c000 nid=0x478 in Object.wait() [0x00007fc7b0cee000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.util.TimerThread.mainLoop(Timer.java:509)\r\n        - locked <0x00007fc7baaafe38> (a java.util.TaskQueue)\r\n        at java.util.TimerThread.run(Timer.java:462)\r\n\r\n\"HashSessionScavenger-1\" daemon prio=10 tid=0x00007fc75c9b4800 nid=0x477 in Object.wait() [0x00007fc7b0d3d000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.util.TimerThread.mainLoop(Timer.java:509)\r\n        - locked <0x00007fc7bac11d38> (a java.util.TaskQueue)\r\n        at java.util.TimerThread.run(Timer.java:462)\r\n\r\n\"HashSessionScavenger-0\" daemon prio=10 tid=0x00007fc75c8e4000 nid=0x476 in Object.wait() [0x00007fc7b0d6e000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.util.TimerThread.mainLoop(Timer.java:509)\r\n        - locked <0x00007fc7baceab20> (a java.util.TaskQueue)\r\n        at java.util.TimerThread.run(Timer.java:462)\r\n\r\n\"ActiveMQ Transport Server: nio://0.0.0.0:61616?wireFormat.maxInactivityDuration=45000\" daemon prio=10 tid=0x00007fc75c80b000 nid=0x469 runnable [0x00007fc7b0dc0000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)\r\n        at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:215)\r\n        at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:65)\r\n        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)\r\n        - locked <0x00007fc7bad58570> (a sun.nio.ch.Util$1)\r\n        - locked <0x00007fc7bad58588> (a java.util.Collections$UnmodifiableSet)\r\n        - locked <0x00007fc7bad584f8> (a sun.nio.ch.EPollSelectorImpl)\r\n        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)\r\n        at sun.nio.ch.ServerSocketAdaptor.accept(ServerSocketAdaptor.java:105)\r\n        - locked <0x00007fc7bad585a0> (a java.lang.Object)\r\n        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:299)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"ActiveMQ Transport Server Thread Handler: nio://0.0.0.0:61616?wireFormat.maxInactivityDuration=45000\" daemon prio=10 tid=0x00007fc75c6c7800 nid=0x468 waiting on condition [0x00007fc7b0df1000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7bad59360> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:395)\r\n        at org.apache.activemq.transport.tcp.TcpTransportServer$1.run(TcpTransportServer.java:373)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"ActiveMQ JDBC PA Scheduled Task\" daemon prio=10 tid=0x00007fc75c801800 nid=0x467 waiting on condition [0x00007fc7b0f2a000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba8cd978> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at java.util.concurrent.DelayQueue.take(DelayQueue.java:164)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:583)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:576)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"ActiveMQ JDBC PA Scheduled Task\" daemon prio=10 tid=0x00007fc75c801000 nid=0x466 waiting on condition [0x00007fc7b14b6000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7ba8cd978> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1963)\r\n        at java.util.concurrent.DelayQueue.take(DelayQueue.java:164)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:583)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:576)\r\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"ActiveMQ Broker[ActiveMQ-HCE-Playpen-partition-3-ndmhce-amq402] Scheduler\" daemon prio=10 tid=0x00007fc75c7c9000 nid=0x465 in Object.wait() [0x00007fc7b1518000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.util.TimerThread.mainLoop(Timer.java:509)\r\n        - locked <0x00007fc7ba903448> (a java.util.TaskQueue)\r\n        at java.util.TimerThread.run(Timer.java:462)\r\n\r\n\"com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#5\" daemon prio=10 tid=0x00007fc75c7c5000 nid=0x464 in Object.wait() [0x00007fc7b0f65000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:534)\r\n        - locked <0x00007fc7ba870a98> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\n\r\n\"com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#4\" daemon prio=10 tid=0x00007fc75c705800 nid=0x463 in Object.wait() [0x00007fc7b0f96000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:534)\r\n        - locked <0x00007fc7ba870a98> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\n\r\n\"com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#3\" daemon prio=10 tid=0x00007fc75c71f800 nid=0x462 in Object.wait() [0x00007fc7b0fc7000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:534)\r\n        - locked <0x00007fc7ba870a98> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\n\r\n\"com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#2\" daemon prio=10 tid=0x00007fc75c702800 nid=0x461 in Object.wait() [0x00007fc7b0ff8000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:534)\r\n        - locked <0x00007fc7ba870a98> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\n\r\n\"com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#1\" daemon prio=10 tid=0x00007fc75c731000 nid=0x460 in Object.wait() [0x00007fc7b1029000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:534)\r\n        - locked <0x00007fc7ba870a98> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\n\r\n\"com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread-#0\" daemon prio=10 tid=0x00007fc75c704800 nid=0x45f in Object.wait() [0x00007fc7b105a000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:534)\r\n        - locked <0x00007fc7ba870a98> (a com.mchange.v2.async.ThreadPoolAsynchronousRunner)\r\n\r\n\"Timer-0\" daemon prio=10 tid=0x00007fc75c7bc000 nid=0x45e in Object.wait() [0x00007fc7b108b000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.util.TimerThread.mainLoop(Timer.java:509)\r\n        - locked <0x00007fc7ba885b40> (a java.util.TaskQueue)\r\n        at java.util.TimerThread.run(Timer.java:462)\r\n\r\n\"WrapperSimpleAppMain\" prio=10 tid=0x00007fc768001000 nid=0x45d waiting on condition [0x00007fc7b1484000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00007fc7bac8e818> (a java.util.concurrent.CountDownLatch$Sync)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:905)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1217)\r\n        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207)\r\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:118)\r\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)\r\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n        at java.lang.reflect.Method.invoke(Method.java:597)\r\n        at org.apache.activemq.console.Main.runTaskClass(Main.java:262)\r\n        at org.apache.activemq.console.Main.main(Main.java:115)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n        at java.lang.reflect.Method.invoke(Method.java:597)\r\n        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"DestroyJavaVM\" prio=10 tid=0x00007fc928009000 nid=0x449 waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"Wrapper-Connection\" daemon prio=10 tid=0x00007fc928159000 nid=0x45b runnable [0x00007fc7b14e7000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.net.SocketInputStream.socketRead0(Native Method)\r\n        at java.net.SocketInputStream.read(SocketInputStream.java:129)\r\n        at java.net.SocketInputStream.read(SocketInputStream.java:182)\r\n        at java.io.DataInputStream.readByte(DataInputStream.java:248)\r\n        at org.tanukisoftware.wrapper.WrapperManager.handleSocket(WrapperManager.java:3737)\r\n        at org.tanukisoftware.wrapper.WrapperManager.run(WrapperManager.java:4084)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"Wrapper-Control-Event-Monitor\" daemon prio=10 tid=0x00007fc9281b4000 nid=0x459 waiting on condition [0x00007fc7b1549000]\r\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\r\n        at java.lang.Thread.sleep(Native Method)\r\n        at org.tanukisoftware.wrapper.WrapperManager$3.run(WrapperManager.java:731)\r\n\r\n\"RMI TCP Accept-0\" daemon prio=10 tid=0x00007fc928145800 nid=0x457 runnable [0x00007fc7b177e000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\n        - locked <0x00007fc7bab32bc8> (a java.net.SocksSocketImpl)\r\n        at java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\n        at java.net.ServerSocket.accept(ServerSocket.java:421)\r\n        at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:34)\r\n        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\n        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"RMI TCP Accept-1099\" daemon prio=10 tid=0x00007fc928140000 nid=0x456 runnable [0x00007fc7b17af000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\n        - locked <0x00007fc7bab32f50> (a java.net.SocksSocketImpl)\r\n        at java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\n        at java.net.ServerSocket.accept(ServerSocket.java:421)\r\n        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\n        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"RMI TCP Accept-0\" daemon prio=10 tid=0x00007fc92812f000 nid=0x455 runnable [0x00007fc7b17e0000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.net.PlainSocketImpl.socketAccept(Native Method)\r\n        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:390)\r\n        - locked <0x00007fc7bad7df40> (a java.net.SocksSocketImpl)\r\n        at java.net.ServerSocket.implAccept(ServerSocket.java:453)\r\n        at java.net.ServerSocket.accept(ServerSocket.java:421)\r\n        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)\r\n        at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)\r\n        at java.lang.Thread.run(Thread.java:619)\r\n\r\n\"Low Memory Detector\" daemon prio=10 tid=0x00007fc928091000 nid=0x454 runnable [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"CompilerThread1\" daemon prio=10 tid=0x00007fc92808e000 nid=0x453 waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"CompilerThread0\" daemon prio=10 tid=0x00007fc92808b800 nid=0x452 waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"Signal Dispatcher\" daemon prio=10 tid=0x00007fc928089800 nid=0x451 runnable [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n\"Finalizer\" daemon prio=10 tid=0x00007fc92806d000 nid=0x450 in Object.wait() [0x00007fc7b1cd0000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)\r\n        - locked <0x00007fc7bad7e630> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)\r\n        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)\r\n\r\n\"Reference Handler\" daemon prio=10 tid=0x00007fc92806b800 nid=0x44f in Object.wait() [0x00007fc7b1d01000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        at java.lang.Object.wait(Object.java:485)\r\n        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)\r\n        - locked <0x00007fc7ba821d08> (a java.lang.ref.Reference$Lock)\r\n\r\n\"VM Thread\" prio=10 tid=0x00007fc928064800 nid=0x44e runnable\r\n\r\n\"GC task thread#0 (ParallelGC)\" prio=10 tid=0x00007fc928013000 nid=0x44a runnable\r\n\r\n\"GC task thread#1 (ParallelGC)\" prio=10 tid=0x00007fc928014800 nid=0x44b runnable\r\n\r\n\"GC task thread#2 (ParallelGC)\" prio=10 tid=0x00007fc928016800 nid=0x44c runnable\r\n\r\n\"GC task thread#3 (ParallelGC)\" prio=10 tid=0x00007fc928018800 nid=0x44d runnable\r\n\r\n\"VM Periodic Task Thread\" prio=10 tid=0x00007fc928148000 nid=0x458 waiting on condition\r\n\r\nJNI global references: 703\r\n{noformat}\r\n\r\nh4. activemq.xml\r\n{noformat}\r\n<beans\r\n  xmlns=\"http://www.springframework.org/schema/beans\"\r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\r\n  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd\">\r\n\r\n        <!-- Allows us to use system properties as variables in this configuration file -->\r\n        <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\r\n                <property name=\"locations\">\r\n                        <value>file:${activemq.conf}/credentials.properties</value>\r\n                </property>\r\n        </bean>\r\n\r\n        <broker useJmx=\"true\" brokerName=\"ActiveMQ-HCE-Playpen-partition-3-ndmhce-amq402\" xmlns=\"http://activemq.apache.org/schema/core\" schedulerSupport=\"false\" advisorySupport=\"false\">\r\n                <plugins>\r\n                        <!-- enable logging of connection, session, and dispatch events -->\r\n                        <loggingBrokerPlugin logConsumerEvents=\"true\" logProducerEvents=\"true\"/>\r\n                </plugins>\r\n\r\n                <managementContext>\r\n                        <managementContext createConnector=\"false\"/>\r\n                </managementContext>\r\n\r\n                <destinationPolicy>\r\n                        <policyMap>\r\n                                <policyEntries>\r\n                                        <policyEntry topic=\">\" producerFlowControl=\"false\" memoryLimit=\"100kb\">\r\n                                                <pendingSubscriberPolicy>\r\n                                                        <vmCursor />\r\n                                                </pendingSubscriberPolicy>\r\n                                        </policyEntry>\r\n                                        <policyEntry queue=\">\" optimizedDispatch=\"true\" producerFlowControl=\"false\" enableAudit=\"true\" memoryLimit=\"64mb\" maxPageSize=\"1000\"  expireMessagesPeriod=\"7200000\" cursorMemoryHighWaterMark=\"100\" prioritizedMessages=\"true\" />\r\n                                        <policyEntry queue=\"documentConversionService\" optimizedDispatch=\"true\" producerFlowControl=\"false\" enableAudit=\"true\" memoryLimit=\"1665mb\" maxPageSize=\"1000\" expireMessagesPeriod=\"7200000\" cursorMemoryHighWaterMark=\"100\" prioritizedMessages=\"true\" />\r\n                                        <policyEntry queue=\"ActiveMQ.DLQ\" optimizedDispatch=\"true\" producerFlowControl=\"false\" enableAudit=\"true\" memoryLimit=\"200mb\" maxPageSize=\"1000\"  cursorMemoryHighWaterMark=\"100\"/>\r\n                                </policyEntries>\r\n                        </policyMap>\r\n                </destinationPolicy>\r\n                <!--\r\n        See more database locker options at http://activemq.apache.org/pluggable-storage-lockers.html\r\n    -->\r\n                <persistenceAdapter>\r\n                        <jdbcPersistenceAdapter createTablesOnStartup=\"false\" useDatabaseLock=\"true\" dataSource=\"#mssql-ds\" lockAcquireSleepInterval=\"10000\" lockKeepAlivePeriod=\"5000\" maxRows=\"10\">\r\n                                <databaseLocker>\r\n                                        <lease-database-locker/>\r\n                                </databaseLocker>\r\n                        </jdbcPersistenceAdapter>\r\n                </persistenceAdapter>\r\n\r\n                <systemUsage>\r\n                        <systemUsage sendFailIfNoSpaceAfterTimeout=\"5000\">\r\n                                <memoryUsage>\r\n                                        <memoryUsage limit=\"3700mb\"/>\r\n                                </memoryUsage>\r\n                                <tempUsage>\r\n                                        <tempUsage limit=\"2700mb\"/>\r\n                                </tempUsage>\r\n                        </systemUsage>\r\n                </systemUsage>\r\n\r\n                <transportConnectors>\r\n                        <transportConnector name=\"nio\" uri=\"nio://0.0.0.0:61616?wireFormat.maxInactivityDuration=45000\"/>\r\n                </transportConnectors>\r\n        </broker>\r\n\r\n        <bean id=\"mssql-ds\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\" destroy-method=\"close\">\r\n                <property name=\"driverClass\" value=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\"/>\r\n                <property name=\"jdbcUrl\" value=\"jdbc:sqlserver://10.56.27.166:1433;databaseName=amq_test_performance1;sendStringParametersAsUnicode=false\"/>\r\n                <property name=\"user\" value=\"********\"/>\r\n                <property name=\"password\" value=\"*********\"/>\r\n                <property name=\"minPoolSize\" value=\"5\" />\r\n                <property name=\"maxPoolSize\" value=\"-1\" />\r\n                <property name=\"acquireIncrement\" value=\"20\" />\r\n                <property name=\"acquireRetryAttempts\" value=\"100\"/>\r\n                <property name=\"acquireRetryDelay\" value=\"5000\"/>\r\n                <property name=\"maxIdleTime\" value=\"3600\" />\r\n                <property name=\"numHelperThreads\" value=\"6\" />\r\n        </bean>\r\n\r\n        <import resource=\"jetty.xml\"/>\r\n</beans>\r\n{noformat}\r\n\r\nh4. wrapper.conf\r\n\r\n{noformat}\r\n#********************************************************************\r\n# Wrapper Properties\r\n#********************************************************************\r\n\r\n#wrapper.debug=TRUE\r\nset.default.ACTIVEMQ_HOME=../..\r\nset.default.ACTIVEMQ_BASE=../..\r\nset.default.ACTIVEMQ_CONF=%ACTIVEMQ_BASE%/conf\r\nset.default.ACTIVEMQ_DATA=%ACTIVEMQ_BASE%/data\r\nwrapper.working.dir=.\r\n\r\n# Java Application\r\nwrapper.java.command=java\r\n\r\n# Java Main class.  This class must implement the WrapperListener interface\r\n#  or guarantee that the WrapperManager class is initialized.  Helper\r\n#  classes are provided to do this for you.  See the Integration section\r\n#  of the documentation for details.\r\nwrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp\r\n\r\n# Java Classpath (include wrapper.jar)  Add class path elements as\r\n#  needed starting from 1\r\nwrapper.java.classpath.1=%ACTIVEMQ_HOME%/bin/wrapper.jar\r\nwrapper.java.classpath.2=%ACTIVEMQ_HOME%/bin/activemq.jar\r\n\r\n# Java Library Path (location of Wrapper.DLL or libwrapper.so)\r\nwrapper.java.library.path.1=%ACTIVEMQ_HOME%/bin/linux-x86-64/\r\n\r\n# Java Additional Parameters\r\n# note that n is the parameter number starting from 1.\r\nwrapper.java.additional.1=-Dactivemq.home=%ACTIVEMQ_HOME%\r\nwrapper.java.additional.2=-Dactivemq.base=%ACTIVEMQ_BASE%\r\nwrapper.java.additional.3=-Djavax.net.ssl.keyStorePassword=password\r\nwrapper.java.additional.4=-Djavax.net.ssl.trustStorePassword=password\r\nwrapper.java.additional.5=-Djavax.net.ssl.keyStore=%ACTIVEMQ_CONF%/broker.ks\r\nwrapper.java.additional.6=-Djavax.net.ssl.trustStore=%ACTIVEMQ_CONF%/broker.ts\r\nwrapper.java.additional.7=-Dcom.sun.management.jmxremote\r\nwrapper.java.additional.8=-Dorg.apache.activemq.UseDedicatedTaskRunner=false\r\nwrapper.java.additional.9=-Djava.util.logging.config.file=logging.properties\r\nwrapper.java.additional.10=-Dactivemq.conf=%ACTIVEMQ_CONF%\r\nwrapper.java.additional.11=-Dactivemq.data=%ACTIVEMQ_DATA%\r\n\r\n\r\n\r\n# Uncomment to enable jmx\r\nwrapper.java.additional.12=-Dcom.sun.management.jmxremote.port=1099\r\nwrapper.java.additional.13=-Dcom.sun.management.jmxremote.authenticate=false\r\nwrapper.java.additional.14=-Dcom.sun.management.jmxremote.ssl=false\r\nwrapper.java.additional.15=-Xms1024m\r\nwrapper.java.additional.16=-Xmx5800m\r\nwrapper.java.additional.17=-Xss192k\r\nwrapper.java.additional.18=-XX:MaxPermSize=128m\r\nwrapper.java.additional.19=-XX:MaxGCPauseMillis=2000\r\nwrapper.java.additional.20=-XX:GCTimeRatio=19\r\nwrapper.java.additional.21=-XX:+HeapDumpOnOutOfMemoryError\r\n\r\n# hawtio configuration\r\nwrapper.java.additional.22=-Dhawtio.realm=activemq\r\nwrapper.java.additional.23=-Dhawtio.role=admins\r\nwrapper.java.additional.24=-Dhawtio.rolePrincipalClasses=org.apache.activemq.jaas.GroupPrincipal\r\nwrapper.java.additional.25=-Djava.security.auth.login.config=%ACTIVEMQ_CONF%/login.config\r\n\r\n\r\n#wrapper.java.additional.22=-Xrunyjpagent=\r\n#wrapper.java.additional.23=-agentpath:/export/data/centos-activemq-distribution/yourkit/yjp-11.0.10/bin/linux-x86-64/libyjpagent.so\r\n\r\n# Uncomment to enable remote debugging\r\n#wrapper.java.additional.24=-Xdebug -Xnoagent -Djava.compiler=NONE\r\n\r\n#wrapper.java.additional.25=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005\r\n\r\n# Initial Java Heap Size (in MB)\r\n#wrapper.java.initmemory=2048\r\n\r\n# Maximum Java Heap Size (in MB)\r\n#wrapper.java.maxmemory=4600\r\n\r\n# Application parameters.  Add parameters as needed starting from 1\r\nwrapper.app.parameter.1=org.apache.activemq.console.Main\r\nwrapper.app.parameter.2=start\r\n\r\n#********************************************************************\r\n# Wrapper Logging Properties\r\n#********************************************************************\r\n# Format of output for the console.  (See docs for formats)\r\nwrapper.console.format=PM\r\n\r\n# Log Level for console output.  (See docs for log levels)\r\nwrapper.console.loglevel=INFO\r\n\r\n# Log file to use for wrapper output logging.\r\nwrapper.logfile=%ACTIVEMQ_DATA%/wrapper.log\r\n\r\n# Format of output for the log file.  (See docs for formats)\r\nwrapper.logfile.format=LPTM\r\n\r\n# Log Level for log file output.  (See docs for log levels)\r\nwrapper.logfile.loglevel=INFO\r\n\r\n# Maximum size that the log file will be allowed to grow to before\r\n#  the log is rolled. Size is specified in bytes.  The default value\r\n#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or\r\n#  'm' (mb) suffix.  For example: 10m = 10 megabytes.\r\nwrapper.logfile.maxsize=100m\r\n\r\n# Maximum number of rolled log files which will be allowed before old\r\n#  files are deleted.  The default value of 0 implies no limit.\r\nwrapper.logfile.maxfiles=5\r\n\r\n# Log Level for sys/event log output.  (See docs for log levels)\r\nwrapper.syslog.loglevel=INFO\r\n\r\n#********************************************************************\r\n# Wrapper Windows Properties\r\n#********************************************************************\r\n# Title to use when running as a console\r\nwrapper.console.title=ActiveMQ\r\n\r\n#********************************************************************\r\n# Wrapper Windows NT/2000/XP Service Properties\r\n#********************************************************************\r\n# WARNING - Do not modify any of these properties when an application\r\n#  using this configuration file has been installed as a service.\r\n#  Please uninstall the service before modifying this section.  The\r\n#  service can then be reinstalled.\r\n\r\n# Name of the service\r\nwrapper.ntservice.name=ActiveMQ\r\n\r\n# Display name of the service\r\nwrapper.ntservice.displayname=ActiveMQ\r\n\r\n# Description of the service\r\nwrapper.ntservice.description=ActiveMQ Broker\r\n\r\n# Service dependencies.  Add dependencies as needed starting from 1\r\nwrapper.ntservice.dependency.1=\r\n\r\n# Mode in which the service is installed.  AUTO_START or DEMAND_START\r\nwrapper.ntservice.starttype=AUTO_START\r\n\r\n# Allow the service to interact with the desktop.\r\nwrapper.ntservice.interactive=false\r\n{noformat}"
    ],
    [
        "AMQ-2038",
        "AMQ-53",
        "Broker parameter systemExitOnShutdown=\"true\" not being honored when persistence adapter file system is unavailable The broker parameter systemExitOnShutdown=\"true\" is not being honored when persistence adapter file system is unavailable. \n\nTo reproduce the problem:\n\n - Use journaling persistence pointing to an USB drive diretory. \n\n - Make sure the broker is configured with systemExitOnShutdown=\"true\":\n  <amq:broker id=\"broker\" depends-on=\"jmxServer\" useShutdownHook=\"false\" systemExitOnShutdown=\"true\"> ...\n\n - After the broker is running send some messages to a queue.\n\n - Unplug the USB drive.\n\n - Try to send more messages. The broker will reject the messages and report the following exception:\n\njavax.jms.JMSException: The volume for a file has been externally altered so that the opened file is no longer valid\n        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)\n        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1203)\n        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1648)\n        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:227)\n        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)\n        at org.apache.servicemix.jms.multiplexing.MultiplexingProviderProcessor.process(MultiplexingProviderProcessor.java:114)\n        at org.apache.servicemix.common.AsyncBaseLifeCycle.doProcess(AsyncBaseLifeCycle.java:540)\n        at org.apache.servicemix.common.AsyncBaseLifeCycle.processExchange(AsyncBaseLifeCycle.java:492)\n        at org.apache.servicemix.common.BaseLifeCycle.onMessageExchange(BaseLifeCycle.java:46)\n        at org.apache.servicemix.jbi.messaging.DeliveryChannelImpl.processInBound(DeliveryChannelImpl.java:621)\n        at org.apache.servicemix.jbi.nmr.flow.AbstractFlow.doRouting(AbstractFlow.java:172)\n        at org.apache.servicemix.jbi.nmr.flow.seda.SedaFlow.doRouting(SedaFlow.java:167)\n        at org.apache.servicemix.jbi.nmr.flow.seda.SedaQueue$1.run(SedaQueue.java:134)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)\n        at java.lang.Thread.run(Thread.java:595)\nCaused by: java.io.IOException: The volume for a file has been externally altered so that the opened file is no longer valid\n        at sun.nio.ch.FileChannelImpl.force0(Native Method)\n        at sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:359)\n        at org.apache.activeio.journal.active.LogFile.force(LogFile.java:102)\n        at org.apache.activeio.journal.active.LogFileManager.append(LogFileManager.java:308)\n        at org.apache.activeio.journal.active.JournalImpl.queuedWrite(JournalImpl.java:256)\n        at org.apache.activeio.journal.active.JournalImpl.access$000(JournalImpl.java:62)\n        at org.apache.activeio.journal.active.JournalImpl$2.run(JournalImpl.java:229)\n        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:665)\n        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:690)\n        ... 1 more\n\nThis error is not being detected by the broker as a fatal error and the broker is not going down automatically. The issue was reported by a Servicemix user and it is expected that after the AMQ broker goes down SMX must goes down too.\n",
        "Receiving multiple versions of messages when using multicast & jgroups transports "
    ],
    [
        "AMQ-723",
        "AMQ-1685",
        "Generate Advisory Messages to setup tear down producer based on consumer activity Use Case is a custom producer is setup for each topic and should be shut down when there are no subscribers left.\n\nWith the getConsumerAdvisoryTopic I can receive messages when a specific subscriber joins or leaves.  So I can figure out if a consumer is the first, but it would be nice to receive a separate message here.\n\nCurrently there is nothing that generates advisory messages when there are no subscribers left.  The getNoTopicConsumersAdvisoryTopic() only fires when a message is sent to a topic with no consumers, like dead letter queue.  A separate advisory message should be fired when the last subscriber leaves.  Ideally we could set a delay for this advisory message, so it could fire if the ConsumerCount remained at 0 for x msec/min.  This would prevent unnecessary tear down/setup of the producer.",
        "activemq-admin start does not work on windows. "
    ],
    [
        "AMQ-1301",
        "AMQ-317",
        "Problems with reconnecting broker to network of brokers after broker shutdown When using a network of brokers, I get problems in the following scenario. Consider two brokers, broker1 and broker2, connected to eachother (see config below). Everything works ok: durable consumers on topics get messages sent to either server. The messages are all persistent.\n\nThe problems occur in this scenario:\n\n1. Bring down one of the brokers, let's say broker2 (all consumers and producers connect to the other server, without any problems)\n2. Start the killed broker2 again\n3. The broker2 reconnects to the network as expected\n4. However, messages don't get propagated correctly on the network anymore. Consumers on broker1 don't get messages sent to broker2 anymore, and messages from broker2 get sent to broker1 over and over again. This can also be seen in the webconsole for example, where the number of messages in the queue grows rapidly.\n\nThe only way to fix this is to kill all brokers, and remove the persistent message stores. THis is unacceptable, since this loses messages.\n\nConfig is below:\n\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:util=\"http://www.springframework.org/schema/util\">\n \n <broker brokerName=\"broker1\" useJmx=\"true\" persistent=\"true\" xmlns=\"http://activemq.org/config/1.0\">\n  \n    <persistenceAdapter>\n        <journaledJDBC journalLogFiles=\"5\" dataDirectory=\"${activemq.base}/activemq-data\"/>\n    </persistenceAdapter>\n  \n    <transportConnectors>\n       <transportConnector name=\"openwire\" uri=\"tcp://localhost:61616\"/>\n       <transportConnector name=\"stomp\"   uri=\"stomp://localhost:61627\"/>\n    </transportConnectors>\n  \n<networkConnectors>\n\t\t<networkConnector name=\"ha-network\" uri=\"static://(tcp://localhost:61618)\" networkTTL=\"5\"/>\n</networkConnectors>\n</broker>\n\n\n\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:util=\"http://www.springframework.org/schema/util\">\n \n <broker brokerName=\"broker2\" useJmx=\"true\" persistent=\"true\" xmlns=\"http://activemq.org/config/1.0\">\n  \n    <persistenceAdapter>\n        <journaledJDBC journalLogFiles=\"5\" dataDirectory=\"${activemq.base}/activemq-data\"/>\n    </persistenceAdapter>\n  \n    <transportConnectors>\n       <transportConnector name=\"openwire\" uri=\"tcp://localhost:61618\"/>\n       <transportConnector name=\"stomp\"   uri=\"stomp://localhost:61628\"/>\n    </transportConnectors>\n  \n<networkConnectors>\n\t\t<networkConnector name=\"ha-network\" uri=\"static://(tcp://localhost:61616)\" networkTTL=\"5\"/>\n</networkConnectors>\n</broker>",
        "deadlock in DurableQueue add/remove messageConsumer w/ tcp transport I've been writing some quick test benchmarks and ran across a race condition that causes the DurableQueueBoundedMessageManager.add/removeMessageConsumer to deadlock.  relavent parts of the stack trace:\n\n\n\"Thread-15\" daemon prio=5 tid=0x0053ff80 nid=0x19dfc00 waiting for monitor entry [f1010000..f1010ac0]\n        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.removeConsumer(DurableQueueBoundedMessageContainer.java:152)\n        - waiting to lock <0x4c9a7048> (a java.lang.Object)\n        at org.activemq.service.boundedvm.DurableQueueBoundedMessageManager.removeMessageConsumer(DurableQueueBoundedMessageManager.java:265)\n        - locked <0x4c999048> (a org.activemq.service.boundedvm.DurableQueueBoundedMessageManager)\n        at org.activemq.broker.impl.DefaultBroker.removeMessageConsumer(DefaultBroker.java:265)\n        at org.activemq.broker.impl.BrokerContainerImpl.deregisterMessageConsumer(BrokerContainerImpl.java:367)\n        at org.activemq.broker.impl.BrokerConnectorImpl.deregisterMessageConsumer(BrokerConnectorImpl.java:182)\n        at org.activemq.broker.impl.BrokerClientImpl.cleanUp(BrokerClientImpl.java:619)\n        - locked <0x4caa47a8> (a org.activemq.broker.impl.BrokerClientImpl)\n        at org.activemq.broker.impl.BrokerConnectorImpl.removeClient(BrokerConnectorImpl.java:327)\n        at org.activemq.transport.TransportChannelSupport.stop(TransportChannelSupport.java:119)\n        at org.activemq.transport.tcp.TcpTransportChannel.stop(TcpTransportChannel.java:215)\n        at org.activemq.broker.impl.BrokerClientImpl.close(BrokerClientImpl.java:710)\n        at org.activemq.broker.impl.BrokerClientImpl.onException(BrokerClientImpl.java:146)\n        at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)\n        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:480)\n        at org.activemq.transport.tcp.TcpTransportChannel$1.run(TcpTransportChannel.java:258)\n        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:552)\n\n\"Durable Queue Worker\" daemon prio=6 tid=0x00526320 nid=0x19c8a00 in Object.wait() [f0f0e000..f0f0eac0]\n        at java.lang.Object.wait(Native Method)\n        at java.lang.Object.wait(Object.java:429)\n        at EDU.oswego.cs.dl.util.concurrent.BoundedBuffer.put(Unknown Source)\n        - locked <0x4caa46f8> (a java.lang.Object)\n        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$WaitWhenBlocked.blockedAction(Unknown Source)\n        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor.execute(Unknown Source)\n        at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransportChannel.java:254)\n        at org.activemq.broker.impl.BrokerClientImpl.send(BrokerClientImpl.java:676)\n        at org.activemq.broker.impl.BrokerClientImpl.dispatchToClient(BrokerClientImpl.java:221)\n        at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:166)\n        at org.activemq.service.boundedvm.DurableQueueSubscription.doDispatch(DurableQueueSubscription.java:93)\n        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.run(DurableQueueBoundedMessageContainer.java:326)\n        - locked <0x4c9a7048> (a java.lang.Object)\n        - locked <0x4c9a7050> (a java.lang.Object)\n        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:552)\n\n\nsubsequent attempts to addConsumers will also hang until the server broker is killed and restarted\n\nthe code that causes this to happen is as follows:\n\n          final long[] received = new long[1];\n\n        Connection connection = connectionFactory.createConnection();\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n        Destination destination = new ActiveMQQueue(\"testQueue\");\n        MessageConsumer consumer = session.createConsumer(destination);\n        consumer.setMessageListener(new MessageListener() {\n            public void onMessage(Message message) {\n                synchronized(received) {\n                    received[0]++;\n                }\n            }\n        });\n        connection.start();\n\n        final int total = 1000000;\n\n\n        new Thread(new Runnable() {\n            public void run() {\n                for(int i=0;i<total;i++) {\n                    template.convertAndSend(\"testQueue\", \"test message\");\n                }\n            }\n        }).start();\n\n        long last = 0;\n        long cur = 0;\n\n        do {\n            synchronized(received) {\n                cur = received[0];\n            }\n            System.out.println(\"received = \" + cur + \" diff = \" + (cur - last));\n            last = cur;\n            Thread.sleep(1000);\n        } while(cur < total);\n\n\n(the template object is just a normal spring JmsTemplate configured in the app context in the test client)\n\nIf I run the above code and stop/kill/interupt the process while its still sending messages the server broker will go into this deadlock about 1 out of every 3 tries in my test setup, otherwise it just spits out an IOException and removes the messageConsumer just fine\n\n"
    ],
    [
        "AMQ-306",
        "AMQ-6077",
        "allow dynamic creation of queues and topics via JNDI To make it even simpler to lookup queues and topics in JNDI it'd be nice to have a way to dynamically lookup queues and topics in JNDI and for them to be automatically created for you.\n\ne.g. \n\nlookup the name \"dynamicQueues/FOO.BAR\" would create a new Queue dynamically.\n\nSo dynamicQueues/* and dynamicTopics/* should create new dynamic destinations using the remainer of the name",
        "Better configuration of restricted classes for clients [AMQ-6013] introduces the checks on the classes that are allowed to be serialized through ObjectMessages. The original implementation was designed to protect the broker, so system property configuration was the easiest solution.\r\n\r\nThis change affect the clients that uses ObjectMessages.getObject() method. We need to provide a better way of configuring this for clients. My initial idea is that we should provide a configuration on ActiveMQConnectionFactory and ActiveMQComponent classes."
    ],
    [
        "AMQ-2624",
        "AMQ-3179",
        "JMS Bridges starting successful without a connection and never connect then When the JMS Bridges get a start() command and the foreign endpoint is down, the bridge prints a stacktrace and goes on. The bridge never connects.\n\n2010-02-23 18:17:27,437 ERROR JmsQueueConnector    init              - Failed to initialize the JMSConnector\noracle.jms.AQjmsException: I/O Exception: The Network Adapter could not establish the connection\n\tat oracle.jms.AQjmsDBConnMgr.checkForSecurityException(AQjmsDBConnMgr.java:934)\n\tat oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:609)\n\tat oracle.jms.AQjmsDBConnMgr.<init>(AQjmsDBConnMgr.java:243)\n\tat oracle.jms.AQjmsConnection.<init>(AQjmsConnection.java:185)\n\tat oracle.jms.AQjmsQueueConnectionFactory.createQueueConnection(AQjmsQueueConnectionFactory.java:224)\n\tat org.apache.activemq.network.jms.JmsQueueConnector.initializeForeignQueueConnection(JmsQueueConnector.java:225)\n\tat org.apache.activemq.network.jms.JmsQueueConnector.init(JmsQueueConnector.java:55)\n\tat org.apache.activemq.network.jms.JmsConnector.start(JmsConnector.java:117)\n\tat org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1941)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:471)\n\tat org.test.EmbeddedBroker.main(EmbeddedBroker.java:48)\nCaused by: java.sql.SQLRecoverableException: I/O Exception: The Network Adapter could not establish the connection\n\tat oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:101)\n\tat oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:112)\n\tat oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:173)\n\tat oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:229)\n\tat oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:458)\n\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:411)\n\tat oracle.jdbc.driver.PhysicalConnection.<init>(PhysicalConnection.java:490)\n\tat oracle.jdbc.driver.T4CConnection.<init>(T4CConnection.java:202)\n\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:33)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:465)\n\tat java.sql.DriverManager.getConnection(DriverManager.java:582)\n\tat java.sql.DriverManager.getConnection(DriverManager.java:207)\n\tat oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:575)\n\t... 9 more\n2010-02-23 18:17:27,453 INFO  JmsConnector         start             - JMS Connector Connector:0 Started\n\nin JMSQueueConnector.java:\n\n   @Override\n\tpublic boolean init() {\n        boolean result = super.init();\n        if (result) {\n            try {\n                initializeForeignQueueConnection();\n                initializeLocalQueueConnection();\n                initializeInboundJmsMessageConvertor();\n                initializeOutboundJmsMessageConvertor();\n                initializeInboundQueueBridges();\n                initializeOutboundQueueBridges();\n            } catch (Exception e) {\n                LOG.error(\"Failed to initialize the JMSConnector\", e);\n            }\n        }\n        return result;\n    }\n\nI need a solution for this and I would not mind to do some work on it.\n\nShould the DestinationBridge get a maintainance thread to keep care of reconnecting later? Should we have a callback to inform the client about a failing bridge (case of embedded broker)?\n\nPlease give me some suggestions how a fix could look like and I fix it.\n\nThanks \n\njuergen\n\n",
        "Features.xml for Karaf should not contain reference to Karaf features.xml for a specific Karaf version The current features.xml contains a link to the Karaf 2.1.0 features repo. When installed to Karaf 2.1.3 this adds the Karaf 2.1.0 repo url to Karaf.\r\nSo two Karaf feature sets are present. This is not good.\r\n\r\nI propose to remove the repository link as the Karaf features are present in Karaf anyway."
    ],
    [
        "AMQ-2563",
        "AMQ-4254",
        "Memory Leak in DefaultJDBCAdapter I was performing an endurance test on ActiveMQ 5.3.0.  My test consisted of a single queue with a number of producers and consumers.  The producers send very simple text messages and the consumers simply receive the message and do no other processing.  Using the OOTB configuration (which uses -Xmx512m) with JDBC persistence to an Oracle database, I found the system came to a halt at around 10.3 million messages.  Looking at the VM revealed a very full heap and tiny gains from garbage collection.  Restarting the broker allows the system to run again.\n\nTo determine the cause of the exhausted heap, I took a series of heap dumps over time.  My examination of the heaps showed that the number of live instances of TreeMap$Entry and Long were increasing linearly with the number of messages.  The Longs were owned by the TreeMap$Entry objects.  The TreeMap$Entry objects could be tracked back to the TreeSet<Long> instance from the lastRecoveredMessageIds field in DefaultJDBCAdapter.\n\nThe only method that uses lastRecoveredMessageIds is:\npublic void doRecoverNextMessages(TransactionContext c, ActiveMQDestination destination, long nextSeq,\n            int maxReturned, JDBCMessageRecoveryListener listener) throws Exception\n\nAs the listener is called to recover a message, the id is added to this set.  The id is only removed from this set if it is encountered on future run of doRecoverNextMessages when it is added to the cleanupIds list.  The SQL that is executed at the beginning of the method filters messages based on having an id greater than nextSeq.  If nextSeq is always large enough, an id is never added to cleanupIds and consequently never removed from lastRecoveredMessageIds.\n\nI saw that the use of lastRecoveredMessageIds was introduced with AMQ-1918.  Also, AMQ-2436 synchronizes the TreeSet, but that should have no effect on this issue.\n\nDejan mentioned some work done on JDBC persistence and a memory leak fix in association with AMQ-2519.  I have performed the same test on the latest snapshots of 5.3.1 and 5.4.  The same results were observed on those as well.  Also, work done for AMQ-2519 modified JDBCMessageStore, JDBCTopicMessageStore, and JDBCPersistenceAdapter.  I believe the issue is in DefaultJDBCAdapter.\n\nTo reproduce:\n- Start a broker using JDBC persistence (sample configuration file will be attached)\n- Start a number of producers and consumers using the same queue on that broker (sample WAR file will be attached.  Modify WEB-INF/applicationContext.xml to set the queue name and broker URL.  The war file currently uses TestQueue and tcp://localhost:61616, respectively.)\n- Wait for about 20,000 messages to be processed (you can use less; it just gets easier in the heap dumps to see after about 20,000 messages.  29 bytes are retained per message that is processed)\n- Look at the old generation size after a full garbage collection over time.  It grows slowly.\n- Obtain a heap dump.  The heap dump will show a number of retained instances of TreeMap$Entry and Long.  (sample heap dump will be attached)",
        "BrokerXmlConfigStartTest fails intermittently BrokerXmlConfigStartTest.testStartBrokerUsingSampleConfig fails intermittently on Hudson/Jenkins with the error \r\n\r\n\"Error creating bean with name 'Server' defined in file [/home/hudson/hudson-slave/workspace/ActiveMQ-Java7/assembly/target/conf/jetty-demo.xml]: Invocation of init method failed; nested exception is java.net.BindException: Address already in use\"\r\n\r\nI will attach a patch with this test rewritten as a JUnit4 Parameterized test. This creates runs each config as a separate test case and seems to resolve the broker start/stop issue."
    ],
    [
        "AMQ-355",
        "AMQ-3652",
        "upgrade Ajax support to use OpenRico We should migrate from our own Ajax libraries to a more standard library which is heavily used like OpenRico (http://openrico.org)",
        "Typo in BrokerViewMBean javadoc There is a trivial typo in javadoc for BrokerViewMBean.gc method."
    ],
    [
        "AMQ-4397",
        "AMQ-5816",
        "XSS vulnerability in scheduled.jsp If string like {{* * * * *<script>alert(1)</script>}} is entered into cron of a message, JS code will be executed on the scheduled.jsp page.",
        "NPE during sending a message when using http transport and leveldb store It is impossible to use combination of HTTP transport with LevelDB as persistent store: when trying to send a persistent message the broker throws a NullPointerException (see attachment Exception).\r\n\r\nThis happens because HTTP transport uses XStream library for deserealization, which follows Java Serialization rules. As a result, transient field [dataLocator|https://github.com/apache/activemq/blob/activemq-5.11.1/activemq-client/src/main/java/org/apache/activemq/command/MessageId.java#L37] is null after deserialization. Later, LevelDB invokes getDataLocator, and that's when NPE is thrown.\r\n\r\nProposed patch adds private method readResolve, which is invoked after deserialization, and which initializes dataLocator field."
    ],
    [
        "AMQ-5280",
        "AMQ-697",
        "Incorrect handling of unknown values in selectors Due to JmsMessage specification :\r\nhttp://docs.oracle.com/javaee/1.4/api/javax/jms/Message.html\r\nThere are rules how unknown Values evaluates. \r\nThere how AND operator should handle unknown:\r\n    UNKNOWN AND FALSE => FALSE \r\n    FALSE AND UNKNOWN => FALSE \r\nAnd that's how it is handled in ActiveMQ:\r\n    UNKNOWN AND FALSE => UNKNOWN (!!!)\r\n    FALSE AND UNKNOWN => FALSE \r\n\r\nI've wrote test to reproduce this:\r\n{code}\r\npackage org.activemq.test;\r\n\r\nimport org.apache.activemq.command.ActiveMQMessage;\r\nimport org.apache.activemq.command.ActiveMQTopic;\r\nimport org.apache.activemq.filter.BooleanExpression;\r\nimport org.apache.activemq.filter.MessageEvaluationContext;\r\nimport org.apache.activemq.selector.SelectorParser;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\n\r\nimport javax.jms.JMSException;\r\nimport javax.jms.Message;\r\n\r\nimport static org.junit.Assert.assertEquals;\r\nimport static org.junit.Assert.assertTrue;\r\n\r\npublic class SelectorUnknownHandlingTest {\r\n\r\n    private Message message;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        message = createMessage();\r\n    }\r\n\r\n    @Test\r\n    public void testUnknown() throws Exception {\r\n        // Some unset property with gt operator => unknown\r\n        assertSelectorEvaluatesToUnknown(message, \"(unknownProp > 0)\");\r\n\r\n    }\r\n\r\n    @Test\r\n    public void testUnknownAndFalse() throws Exception {\r\n        // false and unknown => false\r\n        assertSelectorEvaluatesToFalse(message, \"(falseProp AND unknownProp > 0)\");\r\n\r\n        // THIS ASSERTION FAILS !! IT EVALUATES TO UNKNOWN INSTEAD\r\n        // unknown and false => false\r\n        assertSelectorEvaluatesToFalse(message, \"(unknownProp > 0 AND falseProp)\");\r\n\r\n    }\r\n\r\n    @Test\r\n    public void testUnknownOrTrue() throws Exception {\r\n\r\n        // unknown or true => true\r\n        assertSelectorEvaluatesToTrue(message, \"(unknownProp > 0 OR trueProp)\");\r\n\r\n        // true or unknown => true\r\n        assertSelectorEvaluatesToTrue(message, \"(trueProp OR unknownProp > 0)\");\r\n\r\n    }\r\n\r\n    private void assertSelectorEvaluatesToUnknown(Message message, String selector) throws JMSException {\r\n        assertSelector(message, selector, false);\r\n        assertSelector(message, \"not(\" + selector + \")\", false);\r\n    }\r\n\r\n    private void assertSelectorEvaluatesToFalse(Message message, String selector) throws JMSException {\r\n        assertSelector(message, selector, false);\r\n        assertSelector(message, \"not(\" + selector + \")\", true);\r\n    }\r\n\r\n    private void assertSelectorEvaluatesToTrue(Message message, String selector) throws JMSException {\r\n        assertSelector(message, selector, true);\r\n        assertSelector(message, \"not(\" + selector + \")\", false);\r\n    }\r\n\r\n\r\n    protected Message createMessage() throws JMSException {\r\n        Message message = createMessage(\"FOO.BAR\");\r\n        message.setJMSType(\"selector-test\");\r\n        message.setJMSMessageID(\"connection:1:1:1:1\");\r\n        message.setBooleanProperty(\"trueProp\", true);\r\n        message.setBooleanProperty(\"falseProp\", false);\r\n        return message;\r\n    }\r\n\r\n    protected void assertSelector(Message message, String text, boolean expected) throws JMSException {\r\n        BooleanExpression selector = SelectorParser.parse(text);\r\n        assertTrue(\"Created a valid selector\", selector != null);\r\n        MessageEvaluationContext context = new MessageEvaluationContext();\r\n        context.setMessageReference((org.apache.activemq.command.Message)message);\r\n        boolean value = selector.matches(context);\r\n        assertEquals(\"Selector for: \" + text, expected, value);\r\n    }\r\n\r\n    protected Message createMessage(String subject) throws JMSException {\r\n        ActiveMQMessage message = new ActiveMQMessage();\r\n        message.setJMSDestination(new ActiveMQTopic(subject));\r\n        return message;\r\n    }\r\n}\r\n{code}\r\n",
        "Jmeter build is broken Hi Jonas,   \n\nI tried doing a windows build of the jmeter tests in the amq 4.x branch (My maven repo has been deleted) and I got the following:\n\nC:\\sandbox\\activemq-4-branch\\activemq-jmeter>maven clean default\n __  __\n|  \\/  |__ _Apache__ ___\n| |\\/| / _` \\ V / -_) ' \\  ~ intelligent projects ~\n|_|  |_\\__,_|\\_/\\___|_||_|  v. 1.0.2\n\nAttempting to download activemq-core-4.0-SNAPSHOT.jar.\nAttempting to download batik-awt-util-1.0.jar.\nWARNING: Failed to download batik-awt-util-1.0.jar.\nAttempting to download xalan-1.0.jar.\nWARNING: Failed to download xalan-1.0.jar.\nAttempting to download xml-apis-1.0.jar.\nWARNING: Failed to download xml-apis-1.0.jar.\nAttempting to download manta-1.0.jar.\nWARNING: Failed to download manta-1.0.jar.\nThe build cannot continue because of the following unsatisfied dependencies:\n\nbatik-awt-util-1.0.jar\nxalan-1.0.jar\nxml-apis-1.0.jar\nmanta-1.0.jar\n\nTotal time: 13 seconds\nFinished at: Fri Apr 28 18:16:40 EDT 2006\n"
    ],
    [
        "AMQ-1230",
        "AMQ-5352",
        "Problem with prefetchExtension in org/apache/activemq/broker/region/TopicSubscription.java The prefetchExtension variable in TopicSubscription.java is ever-increasing.  This causes a problem wherein the Broker may not kick in the PendingMessageLimit strategies.",
        "AMQP messages published transactionally should be accepted using a TransactionalState Currently, when an incoming AMQP message is part of a transaction, it is accepted using the regular Accepted terminal state on the disposition reply. According to the spec [1] the disposition should actually use a TransactionalState with Accepted outcome.\r\n\r\n[1] http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transactions-v1.0-os.html#doc-idp111808"
    ],
    [
        "AMQ-4288",
        "AMQ-6018",
        "OptimizedAckTest fails intermittently Both the testVerySlowReceivedMessageStillInflight and testReceivedMessageNotInFlightAfterScheduledAckFires tests fail.",
        "Web console should not export any OSGi packages The ActiveMQ web console exports all packages it embeds.\r\nThis has the effect that e.g. ActiveMQConnectionFactory is exported in the same version by multiple bundles (activemq and activemq web console) which can lead to class cast exceptions.\r\n\r\nI suggest to remove the exports from the activemq web console war.\r\n"
    ],
    [
        "AMQ-3165",
        "AMQ-2546",
        "ActiveMQ 5.4.2 Admin - Accessing Scheduled.jsp giving an Exception in log file Whenever I access Scheduled.jsp through Admin Console.....in ActiveMQ.log... \r\n\r\nWARN | /admin/scheduled.jsp \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | javax.el.ELException: java.lang.IllegalArgumentException: Null object name \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at javax.el.BeanELResolver.getValue(BeanELResolver.java:298) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at com.sun.el.parser.AstValue.getValue(AstValue.java:138) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.jsp.scheduled_jsp._jspx_meth_c_forEach_0(org.apache.jsp.scheduled_jsp:118) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.jsp.scheduled_jsp._jspService(org.apache.jsp.scheduled_jsp:90) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at javax.servlet.http.HttpServlet.service(HttpServlet.java:806) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at javax.servlet.http.HttpServlet.service(HttpServlet.java:806) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1216) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:493) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:456) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.Server.handle(Server.java:351) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at java.lang.Thread.run(Unknown Source) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | Caused by: java.lang.IllegalArgumentException: Null object name \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at javax.management.MBeanServerInvocationHandler.<init>(Unknown Source) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at javax.management.MBeanServerInvocationHandler.<init>(Unknown Source) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at javax.management.MBeanServerInvocationHandler.newProxyInstance(Unknown Source) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.activemq.broker.jmx.ManagementContext.newProxyInstance(ManagementContext.java:290) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.activemq.web.LocalBrokerFacade.newProxyInstance(LocalBrokerFacade.java:88) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.activemq.web.BrokerFacadeSupport.getJobScheduler(BrokerFacadeSupport.java:206) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at org.apache.activemq.web.BrokerFacadeSupport.getScheduledJobs(BrokerFacadeSupport.java:210) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at java.lang.reflect.Method.invoke(Unknown Source) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | at javax.el.BeanELResolver.getValue(BeanELResolver.java:293) \r\nINFO   | jvm 1    | 2011/01/27 18:46:20 | ... 46 more ",
        "PubSubNoLocal not working correctly at network of brokers and durable topics We have a store and forward network of brokers like this C1-B1------B2-C2. We don't want to receive our own messages from topic, and have set the pubSubNoLocal feature to true. When we first start the system, the feature is working correctly, and we are not receiving our own messages. But when shutdown the other broker and client, and restart them, the restarted client starts to receive it's own messages."
    ],
    [
        "AMQ-4054",
        "AMQ-4371",
        "@deprecate axis support and remove it in AMQ 5.8 After the AMQ 5.7 release, we should remove support for the old Axis 1.x we have in activemq-optional.\r\n\r\nIts not used, nor maintained, or tested etc. And Axis 1.x has been EOL for a long time.",
        "RSS and ATOM feeds doesn't work in web-console I have a standalone activemq installation.\r\nIn the web admin console, when i want to access to RSS or ATOM Feeds, I have an error page.\r\n\r\nThe page with RSS and ATOM : http://localhost:8161/admin/queues.jsp\r\n\r\nThe RSS Page who failed with this error ( \"Page Not Found!\" ).\r\nhttp://localhost:8161/admin/queueBrowse/TestQueueOne?view=rss&feedType=rss_2.0\r\n\r\nThe RSS Page who failed with this error ( \"Page Not Found!\" ).\r\nhttp://localhost:8161/admin/queueBrowse/TestQueueOne?view=rss&feedType=atom_1.0\r\n\r\n"
    ],
    [
        "AMQ-4897",
        "AMQ-2625",
        "Race condition in failover transport There's a small chance of the race condition when using priority backup with extremely small reconnect delay (0). In that case, the failover transport will get into inconsistent state. The client will stay connected to the \"non-priority\" broker, but the priority backup will not be created due to this inconsistency.\r\n\r\nThe solution is to synchronise handling of connection failure with the reconnect mutex.",
        "Persistent Cross-site Scripting in /createDesitnation.action [JMSDestination parameter] GET /createDestination.action?JMSDestinationType=queue&JMSDestination=%22%3E%3Cscript%3Ealert%28%22persistent%20XSS%22%29%3C%2fscript%3E\nThis GET request creates a queue name that has malformed queue name due to lack of input validation.  After sending this request a sample of the effect can be seen by browsing to /queues.jsp and clicking on the \"Home\" link.  \nI do not know the affected version information yet.  Is there some way I can find it?    \nAdditionally, this is vulnerable to cross-site request forgery as well but XSS is a more critical bug than XSRF (at least at this point for me I guess).\n\n----\nCVE Identifier issued for this:\nCVE-2010-0684"
    ],
    [
        "AMQ-507",
        "AMQ-4043",
        " java.sql.SQLException: Failed to remove a message during load testing please refer to  http://forums.activemq.org/posts/list/111.page",
        "Web demo - Receive a message page renders an error page See screenshot.\r\n\r\nThis fails on AMQ 5.6.0 also.\r\n\r\nWhen you click that link you get this error. Also if you send a message beforehand."
    ],
    [
        "AMQ-1310",
        "AMQ-2551",
        "[JDBCPersistenceAdapter] lockKeepAlivePeriod cannot be modified The lockKeepAlivePeriod property in JDBCPersistenceAdapter is initialised to zero, and cannot be modified, so lock keep-alives can never be performed.\n\nIt needs a setter method to configure this property via the spring file.",
        "Locking issue with MySQL InnoDB Using jdbc with Mysql InnoDB, can lead to following errors\n\n{code}Deadlock found when trying to get lock;try restarting transaction{code}\n\nand messages stuck in database.\n\nThe problem is described here http://dev.mysql.com/doc/refman/5.0/en/innodb-lock-modes.html and is caused by unsynced cleanup task. \n\nCurrent workaround is to turn off cleanup task like this\n\n{code}<jdbcPersistenceAdapter dataSource=\"#mysql-ds\"  ... cleanupPeriod=\"0\"/>{code}"
    ],
    [
        "AMQ-4345",
        "AMQ-3395",
        "NIOSSLConcurrencyTest.testLoad fails on slow boxes I'll attach a patch which bumps up the timeout.\r\n",
        "simpleAuthenticationPlugin throws WARN user name invalid messages when nothing is actually trying to connect Taking a default ActiveMQ 5.5.0 installation and configuring the broker with the simpleAuthenticationPlugin causes it to issue the following messages, even though nothing is trying to connect to it\r\n\r\n2011-07-05 11:18:10,346 | WARN  | Failed to add Connection ID:JOHN-PC-49383-13023852174556-0:825, reason: java.lang.SecurityException: User name or password is invalid. | org.apache.activemq.broker.TransportConnection | ActiveMQ Transport: tcp:///127.0.0.1:51042\r\n2011-07-05 11:18:15,348 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///127.0.0.1:51042\r\n\r\nEven reducing the ActiveMQ config to the following does not solve the problem:\r\n\r\n<beans\r\n  xmlns=\"http://www.springframework.org/schema/beans\"\r\n  xmlns:amq=\"http://activemq.apache.org/schema/core\"\r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\r\n  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd\">\r\n\r\n    <broker xmlns=\"http://activemq.apache.org/schema/core\" brokerName=\"localhost\" dataDirectory=\"${activemq.base}/data\" destroyApplicationContextOnStop=\"true\">\r\n        <plugins>          \r\n          <simpleAuthenticationPlugin>\r\n            <users>\r\n              <authenticationUser username=\"system\" password=\"manager\"\r\n                  groups=\"users,admins\"/>\r\n            </users>\r\n          </simpleAuthenticationPlugin>     \r\n        </plugins>\r\n        \r\n        <transportConnectors>\r\n            <transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:61616\"/>\r\n        </transportConnectors>      \r\n    </broker>\r\n</beans>"
    ],
    [
        "AMQ-3175",
        "AMQ-2922",
        "Allow setting soTimeout for Http/Https transports Currently the value is hardcoded to 30 secs",
        "Add ability for KahaDB log files to be created on a per-destination basis. KahaDB persistence uses rolling log files to store unconsumed messages. These are named db-1.log, db-2.log ... db3.log. At present these files contain messages for all destinations managed by the broker.\n\nA configurable option could be added that would allow these files to be created on a per-destination basis. For example, if the broker contained two queue destinations, queue_1 and queue_2, the log files would become:\n\nqueue_1-1.log, queue_1-2.log....etc\nqueue_2-1.log, queue_2-2.log....etc\n\nEach set of log files would only contain messages for the relevant destination. \n\nThis would help in the following situation:\n\nqueue_1: receives one message every 15 seconds or so. These messages remain unconsumed for several hours.\nqueue_2: receives thousands of messages per second. These messages are consumed as they arrive.\n\nAt present, the scenario above leads to each log files containing a few messages that have yet to be consumed and thousands of messages that have been consumed, but the log file cannot be deleted until all messages logged in it have been consumed (which may be hours later).\n\nLogging on a per-destination basis would allow the log files for queue_2 in the above example to be deleted, meaning the unconsumed messages on queue_1 take up far less disk space. This would also reduce the number of file handles required."
    ],
    [
        "AMQ-242",
        "AMQ-3064",
        "Support MySQL as a Message Store. 10:30:47 WARN  Database driver NOT recognized: [mysql-ab_jdbc_driver].  Will use default JDBC implementation.\n\nMessages seem to get persisted ok but recovery does not seem to work right.",
        "Security: LDAPLoginModule: Specifying userRoleName as 'memberOf' fetches the full DN of the group, and initializes a GroupPrincipal with full DN In the sample below, when I specify the userRoleName as 'memberOf', it initializes a GroupPrincipal with the name as full DN. e.g. 'CN=somegroupIAMMemberOf,OU=Groups,O=domain'...\r\nThis may not work if the expected role is 'somegroupIAMMemberOf'.\r\n\r\n\r\nTestLogin {\r\n    org.apache.activemq.jaas.LDAPLoginModule required\r\n        debug=false\r\n        initialContextFactory=com.sun.jndi.ldap.LdapCtxFactory\r\n        connectionURL=\"ldap://something:389\"\r\n        connectionUsername=\"uid=generic.gen,OU=Generics,O=something\"\r\n        connectionPassword=\"generic123\"\r\n        connectionProtocol=\"\"\r\n        authentication=simple\r\n        userBase=\"OU=Users,O=something\"\r\n        userSearchMatching=\"(uid={0})\"\r\n        userSearchSubtree=true\r\n        userRoleName=\"memberOf\"\r\n        roleName=\"CN\"\r\n        roleBase=\"OU=Groups,O=something\"\r\n        roleSearchMatching=\"member={0}\"\r\n        roleSearchSubtree=true\r\n        ;\r\n};"
    ],
    [
        "AMQ-2144",
        "AMQ-1892",
        "Can't unsubscribe a durable subscription when there's a virtual topic present on the broker The scenario is:\n\nThere's a virtual topic being used. (i.e. topic VirtualTopic.Orders).\n\nA consumer subscribes to any topic present on the broker and after some time it tries to unsubscribe the durable subscription.\n\nWhen it calls session.unsubscribe(consumerName) to unsubscribe a durable subscription, it receives the following exception:\n\nCaught: javax.jms.JMSException: org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor cannot be cast to org.apache.activemq.broker.region.Topic\njavax.jms.JMSException: org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor cannot be cast to org.apache.activemq.broker.region.Topic\n\tat org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)\n\tat org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1244)\n\tat org.apache.activemq.ActiveMQConnection.unsubscribe(ActiveMQConnection.java:2052)\n\tat org.apache.activemq.ActiveMQSession.unsubscribe(ActiveMQSession.java:1431)\n\tat DurableSubscriber.consumeMessagesAndClose(DurableSubscriber.java:206)\n\tat DurableSubscriber.run(DurableSubscriber.java:112)\n\tat DurableSubscriber.main(DurableSubscriber.java:70)\nCaused by: java.lang.ClassCastException: org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor cannot be cast to org.apache.activemq.broker.region.Topic\n\tat org.apache.activemq.broker.region.TopicRegion.removeSubscription(TopicRegion.java:139)\n\tat org.apache.activemq.broker.region.RegionBroker.removeSubscription(RegionBroker.java:409)\n\tat org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)\n\tat org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)\n\tat org.apache.activemq.broker.BrokerFilter.removeSubscription(BrokerFilter.java:98)\n\tat org.apache.activemq.broker.MutableBrokerFilter.removeSubscription(MutableBrokerFilter.java:105)\n\tat org.apache.activemq.broker.TransportConnection.processRemoveSubscription(TransportConnection.java:339)\n\tat org.apache.activemq.command.RemoveSubscriptionInfo.visit(RemoveSubscriptionInfo.java:83)\n\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)\n\tat org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)\n\tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)\n\tat org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)\n\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)\n\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)\n\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)\n\tat java.lang.Thread.run(Thread.java:619)\n\n\nThe error happens on the following method of org.apache.activemq.broker.region.TopicRegion class:\n\n    public void removeSubscription(ConnectionContext context, RemoveSubscriptionInfo info) throws Exception {\n        SubscriptionKey key = new SubscriptionKey(info.getClientId(), info.getSubscriptionName());\n        DurableTopicSubscription sub = durableSubscriptions.get(key);\n        if (sub == null) {\n            throw new InvalidDestinationException(\"No durable subscription exists for: \" + info.getSubscriptionName());\n        }\n        if (sub.isActive()) {\n            throw new JMSException(\"Durable consumer is in use\");\n        }\n\n        durableSubscriptions.remove(key);\n        synchronized (destinationsMutex) {\n            for (Iterator<Destination> iter = destinations.values().iterator(); iter.hasNext();) {\n                Topic topic = (Topic)iter.next();\n                topic.deleteSubscription(context, key);\n            }\n        }\n        super.removeConsumer(context, sub.getConsumerInfo());\n    }\n\nThe virtual topic is present on the destinations collection being iterated but its type is not Topic and that is what causes the error.\n\nIf there is no virtual topics present on the broker, unsubscriptions work well.\n\n\n",
        "Broker plugin to allow automatic discarding of the items being sent to the dead letter queue A very simple, yet very useful plugin to the broker. This allows one to configure queues and topics, all or matched based on regular expressions, to drop messages being sent to the DLQ\n\nextremely useful when one uses constant pending message limit strategy or the other eviction rules, but don't want to incur the overhead of yet another consumer to clear the DLQ\n\nConfiguration looks like\n\n     <plugins>\n       <bean\n         xmlns=\"http://www.springframework.org/schema/beans\"\n         id=\"discardingDlqBroker\"\n         class=\"org.apache.activemq.plugin.DiscardingDLQBroker\">\n \n         <property name=\"dropAll\" value=\"true\"/>\n         <property name=\"dropTemporaryTopics\" value=\"true\"/>\n         <property name=\"dropTemporaryQueues\" value=\"true\"/>\n \n         <!--drops by destination name, using java regular expressions\n             http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html\n             delimited by spaces, so destination names cannot contain spaces\n         <property name=\"dropOnly\" value=\"topic_1 queue_1\"/>\n         -->\n \n         <!--how frequently do we output how many messages we have dropped - use 0 for disable-->\n         <property name=\"reportInterval\" value=\"1000\"/>\n       </bean>\n     </plugins>\n"
    ],
    [
        "AMQ-379",
        "AMQ-4067",
        "Duplicate message received I found if the Recevier and Sender start almost the same time.  The Receiver will receiver the same message twise.  I have included my Testing program run by \njava -classpath .;..\\activemq-3.1.jar;..\\lib\\geronimo-spec-jms-1.1-rc4.jar;..\\lib\\geronimo-spec-j2ee-management-1.0-rc4.jar;..\\lib\\commons-logging-1.0.3.jar;..\\lib\\log4j-1.2.8.jar;..\\lib\\concurrent-1.3.4.jar;..\\conf;..\\lib\\spring-1.2.2.jar TestJmsSender\n\nI have test by restarted the program ~10 times and around 40% chance of have the error of receiver rec same message twise\n\n",
        "Prefix Thread names with ActiveMQ We should prefix the thread names with ActiveMQ where we can, so people can see its from ActiveMQ. Currently we have that in many of the threads. But some are still not like inactive monitor, broker service etc."
    ],
    [
        "AMQ-4127",
        "AMQ-5850",
        "Disconnection problem we are using activemq version apache-activemq-5.5.1 and some time we have these diconnection problem :\r\nINFO | Started SelectChannelConnector@0.0.0.0:8161\r\nINFO | Connector vm://localhost Started\r\nWARN | Transport Connection to: tcp://127.0.0.1:4153 failed: java.io.EOFExcepti\r\non\r\nWARN | Transport Connection to: tcp://127.0.0.1:4159 failed: java.io.EOFExcepti\r\non\r\nWARN | Transport Connection to: tcp://127.0.0.1:4159 failed: org.apache.activem\r\nq.transport.InactivityIOException: Cannot send, channel has already failed: tcp:\r\n//127.0.0.1:4159\r\n\r\n and other time we have these kind of exception :\r\n\r\nTransport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///127.0.0.1:1651\r\n\r\nPlease advise",
        "AMQP: Broker should use 'JMS' transformer by default Currently the AMQP transportConnector uses the \"NATIVE\" transformer by default which limits the interoperability of AMQP client's and client's using other protocols as the messages they'd receive sent from any AMQP connection would be a BytesMessage with the unconverted AMQP message as the payload.\r\n\r\nBy using the JMS transformer as the default we allow AMQP to interoperate just like all the other client connectors attempt to do.  Issues that existed previously with the JMS transformer have been pretty well ironed out now and most all AMQP features work even when using this transformer. \r\n\r\nThose wishing to gain the small bit of performance that using native transformation would give and who don't require the interop between protocols can configure their transportConnector to use the NATIVE transformer via \"transport.transformer=NATIVE\""
    ],
    [
        "AMQ-4115",
        "AMQ-3903",
        "Make sure there's no XSS in web demos We need to ensure that everything is properly escaped when displayed in the browser",
        "Failed to fire fast producer advisory, reason: java.lang.NullPointerException When sending a lot of Messages to Queue via Webconsole and advisdoryForFastProducers=\"true\" (so the advisory triggers)\r\na exception occurs:\r\n\r\njvm 1    |  WARN | Failed to fire fast producer advisory, reason: java.lang.NullPointerException\r\n\r\n2012-07-12 11:40:48,623 | DEBUG | fast producer detail | org.apache.activemq.advisory.AdvisoryBroker | VMTransport: vm://localhost#1\r\njava.lang.NullPointerException\r\n\tat org.apache.activemq.advisory.AdvisorySupport.getFastProducerAdvisoryTopic(AdvisorySupport.java:195)\r\n\tat org.apache.activemq.advisory.AdvisoryBroker.fastProducer(AdvisoryBroker.java:352)\r\n\tat org.apache.activemq.broker.BrokerFilter.fastProducer(BrokerFilter.java:275)\r\n\tat org.apache.activemq.broker.BrokerFilter.fastProducer(BrokerFilter.java:275)\r\n\tat org.apache.activemq.broker.MutableBrokerFilter.fastProducer(MutableBrokerFilter.java:286)\r\n\tat org.apache.activemq.broker.region.BaseDestination.fastProducer(BaseDestination.java:512)\r\n\tat org.apache.activemq.broker.region.Queue.send(Queue.java:605)\r\n\tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:407)\r\n\tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:503)\r\n\tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:305)\r\n\tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\n\tat org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:189)\r\n\tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)\r\n\tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)\r\n\tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)\r\n\tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)\r\n\tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)\r\n\tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)\r\n\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)\r\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)\r\n\tat org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)\r\n\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\n\tat org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:231)\r\n\tat org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)\r\n\tat org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)"
    ],
    [
        "AMQ-4005",
        "AMQ-402",
        "Implement pluggable broker lockers Currently shared storage master/slave locking is a job of a persistence adapter.\r\n\r\nIt's hardcoded in KahaDB to use shared file locking, while JDBC allows at least some customization.\r\n\r\nThe idea is to create general locker interface and share it across available persistence adapters. So that for example, JDBC can use shared file lock or KahaDB use ZooKeeper lock when it's available.\r\n\r\nWe can also consider moving locking out of persistence layer and making it a job for a broker.",
        "Can't connect ActiveMQ and recive message when report: queue is full,waiting for it to be dequeued. I am waiting for one hour to recive message,but can't recive message.\n\nHow to set journal size in conf file?"
    ],
    [
        "AMQ-3183",
        "AMQ-4124",
        "Set JMSXUserID value based on authenticated principal When using the JaasDualAuthenticationPlugin, a user with id 'system' can gain the guest credentials but still remain with the 'system' username which gets into a produced message via the JMSXUserID property.\r\nIt would be nice if the userName reflected the first authenticated UserPrincipal, such that a user 'system' authenticated to default role 'guest' after a failed login, proceeds to use the 'guest' userName. ",
        "Disable sample web application from out of the box broker The out of the box broker you can start with bin/activemq includes a sample web application. We should disable this web app as people dont want to run this in the production broker. Instead we should have instructions to startup the broker with a activemq-demo.xml file that has the sample instead.\r\n\r\nSee nabble\r\nhttp://activemq.2283324.n4.nabble.com/DISCUSS-ActiveMQ-out-of-the-box-Should-not-include-the-demos-tp4658044.html"
    ],
    [
        "AMQ-4107",
        "AMQ-3487",
        "Message order can be broken for Topic under a high load when topicPrefetch=1 and comsumer is slow For <amq:policyEntry topic=\">\" producerFlowControl=\"true\" memoryLimit=\"30mb\" {color:red}topicPrefetch=\"1\"{color} blockedProducerWarningInterval=\"30\">\r\n\r\nShort excerpt from TopicSubscription class:\r\npublic void add(MessageReference node) throws Exception {\r\n\r\n\u2026..\r\n              if ({color:red}!isFull(){color} && matched.isEmpty()  && !isSlave()) {\r\n            // if maximumPendingMessages is set we will only discard messages which\r\n            // have not been dispatched (i.e. we allow the prefetch buffer to be filled)\r\n       {color:red}dispatch(node);{color}                   <- Second message will go this way and might be dispatched sooner than first one.\r\n            setSlowConsumer(false);\r\n        } else {\r\n\u2026\u2026.\r\nif ({color:red}matched.tryAddMessageLast(node, 10)){color} {    <- first message will be put in the VMCursor queue and might be dispatched later \r\n        \r\nbreak;\r\n                        }\r\n.....\r\n {color:red}dispatchMatched();{color}   <- First message won't be dispatched immediately because !isFull() is still false\r\n}\r\nPossible scenario as I can see it from logs:\r\n1. First message has arrived and !isFull() is false because consumer didn't take some previous message yet.\r\n2. First message will be processed by tryAddMessageLast in VMPendingMessageCursor class and will be dispatched very lately because !isFull() is still false.\r\n3. Meanwhile consumer reads some previous message and !isFull() will return true.    \r\n4. Second message will be dispatched immediately and might be first to be delivered. \r\n5. Then first message is dispatched.\r\n6. Message order is broken.\r\n",
        "Topic message rollback memory leak (XA transaction) We have Glassfish sending messages to an activeMQ topic using an XA Transaction. This seems to work correctly when transactions are committing.\r\nHowever, *every* time we have a transaction rollback we have a slight memory leak from activeMQ. After 1000 rollbacks our 1mb queue memory is full.\r\nThe logs show:\r\n2011-06-06 11:50:06,842 | DEBUG | Setting up new connection id: ID:HOTCPC8567-53061-1307352319478-0:338, address: /127.0.0.1:56674 | org.apache.activemq.broker.TransportConnection | ActiveMQ Transport: tcp:///127.0.0.1:56674\r\n2011-06-06 11:50:06,843 | DEBUG | localhost adding consumer: ID:HOTCPC8567-53061-1307352319478-0:338:-1:102 for destination: topic://ActiveMQ.Advisory.TempQueue,topic://ActiveMQ.Advisory.TempTopic | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///127.0.0.1:56674\r\n2011-06-06 11:50:06,846 | DEBUG | XA Transaction new/begin : XID:4871251:c51600003f724564484f54435043383536372c7365727665722c5033373030:484f54435043383536372c7365727665722c50333730302c00 | org.apache.activemq.transaction.XATransaction | ActiveMQ Transport: tcp:///127.0.0.1:56674\r\n2011-06-06 11:50:06,849 | DEBUG | Main:memory:topic://createBookingTopic:memory: usage change from: 9% of available memory, to: 10% of available memory | org.apache.activemq.usage.Usage | ActiveMQ Transport: tcp:///127.0.0.1:56674\r\n2011-06-06 11:50:06,852 | DEBUG | XA Transaction rollback: XID:4871251:c51600003f724564484f54435043383536372c7365727665722c5033373030:484f54435043383536372c7365727665722c50333730302c00 | org.apache.activemq.transaction.XATransaction | ActiveMQ Transport: tcp:///127.0.0.1:56674\r\n2011-06-06 11:50:06,884 | DEBUG | localhost removing consumer: ID:HOTCPC8567-53061-1307352319478-0:338:-1:102 for destination: topic://ActiveMQ.Advisory.TempQueue,topic://ActiveMQ.Advisory.TempTopic | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///127.0.0.1:56674\r\n2011-06-06 11:50:06,885 | DEBUG | remove connection id: ID:HOTCPC8567-53061-1307352319478-0:338 | org.apache.activemq.broker.TransportConnection | ActiveMQ Transport: tcp:///127.0.0.1:56674\r\n\r\nSo no obvious issue in ActiveMQ. Also, this does not happen when we use a queue and the transaction is rolled back.\r\n\r\nThis is a serious problem for us as we are needing to restart activeMQ on a daily basis to keep the production servers running."
    ],
    [
        "AMQ-841",
        "AMQ-45",
        "NullPointerException when using MasterConnector and specifying the broker name with space in it. I've got a hard time trying to figure out why I got a null pointer trying to use the Master/slave configuration for ActiveMQ. \n\nFinnally by looking at the code I've saw the following:\nIn BrokerService.java \npublic void initializeMasterConnector(URI remoteURI) throws Exception { \n...\nURI localURI = getVmConnectorURI();\n...\n}\n\npublic URI getVmConnectorURI() {\n        if (vmConnectorURI == null) {\n            try {\n                vmConnectorURI = new URI(\"vm://\" + getBrokerName());\n            }\n            catch (URISyntaxException e) {\n            }\n        }\n        return vmConnectorURI;\n}\n\nMy problem is that I've specified a broker name with space in it  \"Slave Broker\". So I the new URI() here throw a URISyntaxException that was badly absorb. And this leads to a null pointer at line:159 of TransportFactory.java.\n   String scheme = location.getScheme(); when location is null du to the previous exception.\n\nThe link between the error and the cause was not clear at the first sigth. \n\nA precondition on the setBrokerName could do the job.",
        "JCA 1.0 outbound support for publishing to JMS on legacy app servers It'd be handy for folks stil stuck on containers like WL7 to provide a JCA 1.0 outbound implementation which publishes on ActiveMQ with XA support & connection pooling etc"
    ],
    [
        "AMQ-3005",
        "AMQ-3818",
        "The spring.schemas file contains an invalid mapping  The spring.schemas file, in META-INF, contains the following mappings:\n\nhttp\\://activemq.org/config/1.0=activemq.xsd\nhttp\\://activemq.org/config/1.0/1.0.xsd=activemq.xsd\nhttp\\://activemq.apache.org/schema/core=activemq.xsd\nhttp\\://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd\nhttp\\://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd\nhttp\\://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd\nhttp\\://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd\nhttp\\://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd\nhttp\\://activemq.apache.org/schema/core/activemq-core-${pom.version}.xsd=activemq.xsd\n\nThe final mapping contains an unresolved placeholder, ${pom.version}.  XML files which use, for example http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd as a schemaLocation reference will fail to be mapped correctly with the spring.schemas mechanism.  This failure is silent on an internet-connected machine which is allowed to resolve the schemaLocation through the http:// url.  When the machine is not internet-connected, though, the failure rears its ugly head and smacks down hard on my webapp's startup with a SAXParseException.",
        "Delayed persistent messages are lost if the broker is hard killed during the delay. Persistent messages that are sent with a delay are lost by the ActiveMQ 5.5.1 broker if the broker is hard killed before the scheduler finishes its work at the end of the delay.  This isn't a problem if the broker is gracefully shutdown or if the broker continues to run beyond the delay, even if a consumer isn't waiting to immediately consume the message.  If the broker goes down hard during the delay, even if the broker isn't busy, then it will lose 100% of the persistent messages that are waiting for their delay to come to an end.\r\n\r\nA simple test case that reproduces this issue can be made by having a producer send one thousand messages that each have a one minute delay.  As soon as the last message has been sent by the producer wait an addtional second or two and then hard kill the broker.  The hard kill should happen before the one minute delay has passed for the first message.  Immediately restart the broker and then start a consumer that is looking for those one thousand messages.  Even after a couple of minutes, the messages will not have made it to the consumer."
    ],
    [
        "AMQ-4985",
        "AMQ-3712",
        "java.util.ConcurrentModificationException while sending message Caused by: java.util.ConcurrentModificationException: null\r\n\tat java.util.ArrayList.writeObject(Unknown Source) ~[na:1.7.0_11]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_11]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.7.0_11]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectStreamClass.invokeWriteObject(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeSerialData(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeObject0(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.defaultWriteFields(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeSerialData(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeObject0(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.defaultWriteFields(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeSerialData(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeObject0(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.defaultWriteFields(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeSerialData(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeObject0(Unknown Source) ~[na:1.7.0_11]\r\n\tat java.io.ObjectOutputStream.writeObject(Unknown Source) ~[na:1.7.0_11]\r\n\tat org.apache.activemq.command.ActiveMQObjectMessage.storeContent(ActiveMQObjectMessage.java:106) ~[na:na]\r\n\tat org.apache.activemq.command.ActiveMQObjectMessage.setObject(ActiveMQObjectMessage.java:163) ~[na:na]\r\n\tat org.apache.activemq.ActiveMQSession.createObjectMessage(ActiveMQSession.java:381) ~[bundlefile:5.8.0]\r\n\tat org.apache.activemq.ra.ManagedSessionProxy.createObjectMessage(ManagedSessionProxy.java:220) ~[na:na]\r\n\tat org.springframework.jms.support.converter.SimpleMessageConverter.createMessageForSerializable(SimpleMessageConverter.java:166) ~[na:na]\r\n\tat org.springframework.jms.support.converter.SimpleMessageConverter.toMessage(SimpleMessageConverter.java:73) ~[na:na]\r\n\tat org.springframework.jms.core.JmsTemplate$6.createMessage(JmsTemplate.java:622) ~[bundlefile:3.0.6.RELEASE]\r\n\tat org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:565) ~[bundlefile:3.0.6.RELEASE]\r\n\tat org.springframework.jms.core.JmsTemplate$4.doInJms(JmsTemplate.java:546) ~[bundlefile:3.0.6.RELEASE]\r\n\tat org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466) ~[bundlefile:3.0.6.RELEASE]\r\n\tat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:543) ~[bundlefile:3.0.6.RELEASE]\r\n\tat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:620) ~[bundlefile:3.0.6.RELEASE]\r\n\tat org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:607) ~[bundlefile:3.0.6.RELEASE]",
        "ActiveMQ browser shows negative message count with messages dequeued count greater than messages enqueued It happened in regular activemq environment.\r\nIt seems messages are rightly consumed but messages dequeued count is greater than messages enqueued."
    ],
    [
        "AMQ-869",
        "AMQ-4116",
        "provide a broker-to-broker synchronization protocol so that an old master can be brought back online and synchronize up with a slave (which is running as a master) or to bring an old slave back online We basically need 2 brokers to compare their current state and ensure they are both in exactly the same state.\n\ne.g.\n\n* both brokers checkpoint\n* they perform a database merge\n* they can now continue being a master-slave pair\n\nMaybe the easiest implementation is to find the list of all unique message producers then perform a 'sequence-range' comparison.\n\ne.g.\n\nbroker1:\nproducer1: 1-100, 102-142, 145\n...\n\nbroker2:\nproducer1: 1-12\n\nthen we send from broker1 to broker2 producer1: 13-100, 102-142, 145\n",
        "Memory usage is not cleared from the source queue when a message is moved to another queue over the VMTransport Reproduction\r\n============\r\nUsing VMTransport:\r\n\r\n1. Produce a message on queue A and verify that queue A's memory usage increases\r\n2. Consume the message from queue A and verify that queue A's memory usage decreases.\r\n3. Resend the message to queue B.\r\n\r\nExpected: Queue A's memory usage is not increased by the enqueue to queue B.\r\nActual: Queue A's memory usage increases and no memory usage increase occurs on queue B.\r\n\r\nSymptom\r\n=======\r\nWhen messages are moved between queues using the VMTransport, they continue to contribute to the memory usage of the source queue rather than the destination queue.\r\n\r\nThe correct behaviour (memory usage decreases from queue A and increases in queue B) is exhibited by non-VMTransport (e.g., TCP).\r\n\r\nCause\r\n=====\r\nWhen the message is first sent to queue A, it's memoryUsage field is set to match queue A's:\r\n\r\n{code:title=org.apache.activemq.broker.region.Queue}\r\npublic void send(final ProducerBrokerExchange producerExchange, final Message message) throws Exception {\r\n    final ConnectionContext context = producerExchange.getConnectionContext();\r\n    // There is delay between the client sending it and it arriving at the\r\n    // destination.. it may have expired.\r\n    message.setRegionDestination(this);\r\n...\r\n{code}\r\n\r\n{code:title=org.apache.activemq.command.Message}\r\npublic void setRegionDestination(org.apache.activemq.broker.region.Destination destination) {\r\n    this.regionDestination = destination;\r\n    if(this.memoryUsage==null) {\r\n        this.memoryUsage=regionDestination.getMemoryUsage();\r\n    }\r\n}\r\n{code}\r\n\r\nAs the message moves across the transport, it is copied along with the memoryUsage field:\r\n\r\n{code:title=org.apache.activemq.command.Message}\r\nprotected void copy(Message copy) {\r\n    super.copy(copy);\r\n...\r\n    copy.memoryUsage=this.memoryUsage;\r\n...\r\n{code}\r\n\r\nWhen the message is sent to the second queue, memoryUsage is non-null, so setRegionDestination(...) does not update memoryUsage to reflect the new destination queue.\r\n\r\nWhen the destination queue accepts the message, the memoryUsage of the source queue is (incorrectly) increased:\r\n\r\n{code:title=org.apache.activemq.command.Message}\r\npublic int incrementReferenceCount() {\r\n    int rc;\r\n    int size;\r\n    synchronized (this) {\r\n        rc = ++referenceCount;\r\n        size = getSize();\r\n    }\r\n\r\n    if (rc == 1 && getMemoryUsage() != null) {\r\n        getMemoryUsage().increaseUsage(size);\r\n{code}\r\n\r\nThis mal-behaviour is not exhibited by other transports since they serialize Message and memoryUsage is transient.  As a result, the call to setRegionDestination(...) will properly update memoryUsage when the message arrives at the destination queue.\r\n\r\nSolution\r\n========\r\nThere are a number of possible solutions, any of which would correct the behaviour (although I am unsure what side-effects they may have on other behaviour):\r\n\r\n1. It seems odd that memoryUsage is copied when Message is copied.  If Message.copy(...) is used as a shortcut to avoid serialization/deserialization on VMTransport, then it should have the same semantics and avoid copying transient fields.\r\n\r\n2. It seems odd that setRegionDestination(...) would not always set the memoryUsage to match the destination's memoryUsage.\r\n\r\n3. ActiveMQConnection has a comment regarding concessions made for messages transmitted by the VM transport:\r\n\r\n{code:title=org.apache.activemq.ActiveMQConnection}\r\npublic void onCommand(final Object o) {\r\n    final Command command = (Command)o;\r\n    if (!closed.get() && command != null) {\r\n        try {\r\n            command.visit(new CommandVisitorAdapter() {\r\n                @Override\r\n                public Response processMessageDispatch(MessageDispatch md) throws Exception {\r\n                    waitForTransportInterruptionProcessingToComplete();\r\n                    ActiveMQDispatcher dispatcher = dispatchers.get(md.getConsumerId());\r\n                    if (dispatcher != null) {\r\n                        // Copy in case a embedded broker is dispatching via\r\n                        // vm://\r\n                        // md.getMessage() == null to signal end of queue\r\n                        // browse.\r\n                        Message msg = md.getMessage();\r\n                        if (msg != null) {\r\n                            msg = msg.copy();\r\n                            msg.setReadOnlyBody(true);\r\n                            msg.setReadOnlyProperties(true);\r\n                            msg.setRedeliveryCounter(md.getRedeliveryCounter());\r\n                            msg.setConnection(ActiveMQConnection.this);\r\n                            md.setMessage(msg);\r\n                        }\r\n                        dispatcher.dispatch(md);\r\n                    }\r\n                    return null;\r\n                }\r\n{code}\r\n\r\nAdding a call to msg.setMemoryUsage(null) would address this bug.\r\n\r\nThe latter appears to be the least intrusive, although it will only address the case of VMTransport messages moving between producers/consumers. Queue contains shortcut methods for moving messages between queues (e.g., copyMessageTo).  I have not verified if these methods exhibit the same behaviour re: memory usage, but if so, they would not be addressed by patching ActiveMQConnection.\r\n\r\nOur main concern is with the reported use case, so I've attached a patch for ActiveMQConnection and unit test to demonstrate the behaviour."
    ],
    [
        "AMQ-3538",
        "AMQ-2843",
        "request-response performance is poor when the client and broker lie in different machine for example:\t\t\r\nMessage msg = session.createTextMessage(\"gogogo\");\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tlong s = System.currentTimeMillis();\r\n\t\t\tfor (int i = 0; i < 100; i++)\r\n\t\t\t{\r\n\t\t\t\tMessage resp = request.request(msg);\r\n\t\t\t}\r\n\t\t\tlong e = System.currentTimeMillis();\r\n\t\t\tSystem.out.println( e - s);\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tsession.close();\r\n\t\t}\r\nexecute the above codes, the performance is very poor, can only handle 2-3messages/sec.\r\nbut if i increase the message size to about 20k, then the performance increase incredibly, can handle 50 messages/sec!\r\nmaybe the broker use some strategy to block the outgoing message,if that is true, any configuration to change that strategy?\r\nThanks.\r\n",
        "Add Message Priority support into JDBC store "
    ],
    [
        "AMQ-5617",
        "AMQ-741",
        "AMQP: Remove direct usage of types from the legacy QPid JMS 1.0 client from the tests The current AMQP tests use the QPid 1.0 JMS client and reference types from that library directly instead of using the JMS equivalents.  I light of the upcoming JMS 1.0 client that implements the JMS Mapping for AMQP we should remove these and make it easier to swap in the newer client once it is released, or test both using the same tests.  ",
        "Remove the onSendPrepareMessageBody property on the ActiveMQ Connection and ConnectionFactory They are not used for anyting.  Could confuse users to see that that property is available."
    ],
    [
        "AMQ-895",
        "AMQ-5412",
        "JMS to JMS Bridge never reconnects under remote broker restarts. I'm using ActiveMQ (4.0.1) JMS to JMS Bridge functionality to connect to a  SunMQ JMS Broker (3.6 SP3  (Build 02-A)). I'm using two queues, an input and an output one, with the following configuration:\n\n\n    <jmsBridgeConnectors>\n      <jmsQueueConnector outboundQueueConnectionFactory=\"#REMOTE\">\n      <outboundQueueBridges>\n        <outboundQueueBridge outboundQueueName=\"SUNRECV\"/>\n      </outboundQueueBridges>\n      <inboundQueueBridges>\n        <inboundQueueBridge inboundQueueName=\"SUNSEND\"/>\n      </inboundQueueBridges>\n      </jmsQueueConnector>\n    </jmsBridgeConnectors>\n\n\nThe system works really well until the SunMQ broker needed to be restarted. This is what I found:\n1.-ActiveMQ is not aware of the remote broker shutdown. I waited for a while, but no log on ActiveMQ indicates knowledge about the new situation.\n2.-When I send a message to the output queue SUNRECV, ActiveMQ complains that the producer is closed:\n\n[ERROR][2006/08/25.09:47:12.039][ActiveMQ Session Task]failed to forward message: ActiveMQTextMessage {commandId = 5, responseRequired = false, messageId = ID:trabucco-43457-1156491843149-3:4:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:trabucco-43457-1156491843149-3:4:1:1, destination = queue://SUNRECV, transactionId = null, expiration = 0, timestamp = 1156492032027, arrival = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 2, properties = null, readOnlyProperties = true, readOnlyBody = true, text = 1}([C4064]: Cannot perform operation, producer is closed.)\n\n After this, it is automatically queueing messages without sending them, showing the log:\n\n[DEBUG][2006/08/25.09:47:42.721][RMI TCP Connection(4)-10.95.89.20]No subscriptions registered, will not dispatch message at this time.\n\n Even if SunMQ is started again, ActiveMQ is not detecting the new situation, and continues queueing messages sent to SUNRECV.\n\nPlease, make me know if more information is needed to understand the situation.\n",
        "Failover transport: disconnect existing connection when priorityBackup=true and priority broker becomes available, if maxReconnectAttempts=0 NOTE: This enhancement request is purely a workaround because AMQ-5411 isn't implemented yet.  If that issue was going to be fixed in the near term, it's probably not worth implementing this (though maybe it would still be valuable in limited situations).\r\n\r\n\r\nThe static transport does not support reconnections by its underlying transports such as failover; rather, it requires that those underlying transports allow their transports to fail and bubble up to the static transport, so that the static transport can reconnect and also recreate the network bridges.\r\n\r\nThis limitation means that the failover transport can't use the priorityBackup feature to fail back to the primary broker when it's available.  This means that when all of the clients are back on the primary (because they can use priorityBackup happily), the broker-to-broker connections are still pointing to the backup, requiring an extra network hop (which might go over low-performance backup-only network links, depending on the network configuration) for messages to get to consumers.  And there is currently no workaround to make this feature work even if it requires unintuitive configuration options.\r\n\r\nAs a short-term workaround, when maxReconnectAttempts=0 and we detect that the priority broker is back up we should abort both the new connection and the old one.  This will cause us to bubble up the failure to the static transport, which will reconnect the network bridges and allow us to resume operations.\r\n\r\nMaybe we should do this for values of maxReconnectAttempts other than 0, but I don't know those use cases well enough to say for sure."
    ],
    [
        "AMQ-521",
        "AMQ-3031",
        "Enable dumping of config/property at runtime for debugging purposes Enable dumping of config/property at runtime for debugging purposes",
        "Time Synchronization Solution We had a Problem if we synchronize the time of 1.1.2000 to the actual date. The cpu load increase to 170% over a long time period. We analyse the problem and find out that is a java timer problem. We pass the classes Scheduler.java in following packages:\r\n\r\n1. \\kahadb\\src\\main\\java\\org\\apache\\kahadb\\util\r\n2. activemq-core\\src\\main\\java\\org\\apache\\activemq\\thread\r\n\r\nWe change the TimerTask by ScheduledThreadPoolExecutor. That was the solution. I want to discuss if that is the right solution or not. Can you analyze the classes and say if that is the right way or not? If not can you propose a solution. If yes can you release that with the next version.\r\n\r\n\r\n\r\n\r\n\r\n"
    ],
    [
        "AMQ-4539",
        "AMQ-2531",
        "make the networkTTL or brokerPath visible via jmx and via a message property when brokers are networked and messages cannot propagate due to reaching their configured number of hops (network connector networkTTL) it would help to be able to visualise the brokerPath, the size if which constitutes the networkTTL",
        "ActiveMQ and/or embedded Jetty get stuck after \"starting JettyFactoryBean\" A fresh copy of ActiveMQ does not start up properly on my pc (Phenom II X2 550, WinXP Prof SP3). But it does on my notebook (IBM ThinkPad T61, Centrino Duo, WinXP Prof SP3).\n\nComparing the logs of both installations it seems to happen near or after 'DEBUG | starting JettyFactoryBean@183e7de | org.mortbay.log | main'.  While the notebooks proceeds with 'DEBUG | started\norg.mortbay.jetty.nio.SelectChannelConnector$1@197871d | org.mortbay.log | main' the computer directly starts with 'DEBUG | Checkpoint started.' and 'DEBUG | Checkpoint done.' cycle. The admin web gui is not available.\n\nOutput of cmd shell of my pc:\n{quote}\nJava Runtime: Sun Microsystems Inc. 1.6.0_14 D:\\Runtimes\\Java\\jdk1.6.0_14\\jre\n  Heap sizes: current=5056k  free=4402k  max=520256k\n    JVM args: -Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logg\ning.config.file=logging.properties -DDEBUG -Dactivemq.classpath=D:\\Entwicklung\\apache-activemq-5.3.0\\bin\\../conf; -Dacti\nvemq.home=D:\\Entwicklung\\apache-activemq-5.3.0\\bin\\.. -Dactivemq.base=D:\\Entwicklung\\apache-activemq-5.3.0\\bin\\..\nACTIVEMQ_HOME: D:\\Entwicklung\\apache-activemq-5.3.0\\bin\\..\nACTIVEMQ_BASE: D:\\Entwicklung\\apache-activemq-5.3.0\\bin\\..\nLoading message broker from: xbean:activemq.xml\n INFO | Refreshing org.apache.xbean.spring.context.ResourceXmlApplicationContext@19209ea: display name [org.apache.xbean\n.spring.context.ResourceXmlApplicationContext@19209ea]; startup date [Sun Dec 13 13:33:15 CET 2009]; root of context hie\nrarchy\n INFO | Loading XML bean definitions from class path resource [activemq.xml]\n INFO | Loading XML bean definitions from class path resource [jetty.xml]\n INFO | Bean factory for application context [org.apache.xbean.spring.context.ResourceXmlApplicationContext@19209ea]: or\ng.springframework.beans.factory.support.DefaultListableBeanFactory@125fefa\n INFO | Loading properties file from URL [file:D:/Entwicklung/apache-activemq-5.3.0/bin/../conf/credentials.properties]\n INFO | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@125fefa: de\nfining beans [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.apache.activemq.xbean.XBeanBr\nokerService#0,org.mortbay.jetty.xbean.JettyFactoryBean#0]; root of factory hierarchy\n INFO | Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter@5b8827\n INFO | Replayed 1 operations from the journal in 0.0 seconds.\n INFO | ActiveMQ 5.3.0 JMS Message Broker (localhost) is starting\n INFO | For help or more information please see: http://activemq.apache.org/\n INFO | Listening for connections at: tcp://echo-1:61616\n INFO | Connector openwire Started\n INFO | ActiveMQ JMS Message Broker (localhost, ID:echo-1-1517-1260707596343-0:0) started\n INFO | Logging to org.slf4j.impl.JCLLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog\n INFO | jetty-6.1.9\n INFO | Refreshing org.springframework.web.context.support.XmlWebApplicationContext@130633a: display name [Root WebAppli\ncationContext]; startup date [Sun Dec 13 13:33:16 CET 2009]; root of context hierarchy\n INFO | Loading XML bean definitions from ServletContext resource [/WEB-INF/webconsole-embedded.xml]\n INFO | Loading XML bean definitions from ServletContext resource [/WEB-INF/webconsole-query.xml]\n INFO | Bean factory for application context [org.springframework.web.context.support.XmlWebApplicationContext@130633a]:\n org.springframework.beans.factory.support.DefaultListableBeanFactory@12fb0af\n INFO | Loading properties file from URL [file:D:/Entwicklung/apache-activemq-5.3.0/bin/../conf/credentials.properties]\n INFO | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@12fb0af: de\nfining beans [queueBrowser,messageQuery,queueConsumerQuery,connectionQuery,placeholderConfig,brokerQuery,sessionPool,con\nnectionFactory]; root of factory hierarchy\n INFO | ActiveMQ WebConsole initialized.\n INFO | Initializing Spring FrameworkServlet 'dispatcher'\n INFO | FrameworkServlet 'dispatcher': initialization started\n INFO | Refreshing org.springframework.web.context.support.XmlWebApplicationContext@d480ea: display name [WebApplication\nContext for namespace 'dispatcher-servlet']; startup date [Sun Dec 13 13:33:16 CET 2009]; parent: org.springframework.we\nb.context.support.XmlWebApplicationContext@130633a\n INFO | Loading XML bean definitions from ServletContext resource [/WEB-INF/dispatcher-servlet.xml]\n INFO | Bean factory for application context [org.springframework.web.context.support.XmlWebApplicationContext@d480ea]:\norg.springframework.beans.factory.support.DefaultListableBeanFactory@adae91\n INFO | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@adae91: def\nining beans [handlerMapping,/createDestination.action,/deleteDestination.action,/createSubscriber.action,/deleteSubscrib\ner.action,/sendMessage.action,/purgeDestination.action,/deleteMessage.action,/copyMessage.action,/moveMessage.action,exc\neptionResolver]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@12fb0af\n INFO | FrameworkServlet 'dispatcher': initialization completed in 63 ms\n INFO | ActiveMQ Console at http://0.0.0.0:8161/admin\n INFO | Initializing Spring root WebApplicationContext\n INFO | Root WebApplicationContext: initialization started\n INFO | Refreshing org.springframework.web.context.support.XmlWebApplicationContext@5bf624: display name [Root WebApplic\nationContext]; startup date [Sun Dec 13 13:33:17 CET 2009]; root of context hierarchy\n INFO | Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]\n INFO | camel-osgi.jar not detected in classpath\n INFO | Bean factory for application context [org.springframework.web.context.support.XmlWebApplicationContext@5bf624]:\norg.springframework.beans.factory.support.DefaultListableBeanFactory@fe2558\n INFO | Loading properties file from URL [file:D:/Entwicklung/apache-activemq-5.3.0/bin/../conf/credentials.properties]\n INFO | JMX enabled. Using InstrumentationLifecycleStrategy.\n WARN | Using a packages element to specify packages to search has been deprecated. Please use a packageScan element ins\ntead.\n INFO | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@fe2558: def\nining beans [placeholderConfig,template,consumerTemplate,camel:beanPostProcessor,camel,activemq]; root of factory hierar\nchy\n INFO | Starting Apache Camel as property ShouldStartContext is true\n INFO | Apache Camel 2.0.0 (CamelContext:camel) is starting\n INFO | Connector vm://localhost Started\n INFO | Apache Camel 2.0.0 (CamelContext:camel) started\n INFO | Root WebApplicationContext: initialization completed in 750 ms\n INFO | Camel Console at http://0.0.0.0:8161/camel\n INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo\n INFO | RESTful file access application at http://0.0.0.0:8161/fileserver\n{quote}"
    ],
    [
        "AMQ-1272",
        "AMQ-4845",
        "Stomp protocol does not correctly check authentication (security hole) ActiveMQ does not correctly validate the username and password of Stomp clients.  A security exception is generated, but ignored, leaving the client connected, and with full and unrestricted access to ActiveMQ.\n\nFurther description, and a partial patch:\n\nhttp://www.nabble.com/Getting-Stomp-support-to-a-usable-state...-tf3858629s2354.html#a11060452 \n\n\nBTW, while the patch in the above post, is crude, however, leaving unauthenticated users connected with full-access makes ActiveMQ and Stomp pretty unusable.  So please apply the path, rather than do nothing.",
        "ActiveMQQueueReceiver.receive(1L) method not returning messages with timeout value of 1L Calling the method ActiveMQQueueReceiver.receive with param timeout=1L doesn\u00b4t allways return pending messages. Debugging works, it seems to be a latency or timing issue that doesn't affect debugging as debugging is slower than running the code without debugger.\r\n\r\nI attach Spring Template based test case but the issue occurs also with direct api call. Changing the timeout param to 100L works perfectly."
    ],
    [
        "AMQ-1547",
        "AMQ-5735",
        "JMS Selectors can be created for Ajax/REST Servlet clients. MessageListenerServlet and MessageServlet will look for a request header or a session attribute which will contan the SQL92Selector. The name of the header/attribute is confihured on the web.xml as a context parameter.",
        "increment redeliverCounter in the absence of client supplied information A consumer remove info contains the lastDeliveredSequenceId the consumer has delivered. In the absence of this information, for example when the consumer does a system exit or the connection drops - this information will be lost. The broker should increment redelivery to reflect the delivery attempt.\r\nCurrently lastDeliveredSequenceId==0 indicates missing information but that ignores the fact that the messageid broker sequence could be 0. A value of -1 should indicate nothing was delivered, > -1 the last sequence and from the broker side, -2 indicating that the broker provided the information and redelivery should be incremented. ie; -2 covers the client abort case."
    ],
    [
        "AMQ-5317",
        "AMQ-4158",
        "NPE on brokerView addConnector Doing a quick sanity of transport connector stop/start via remove/add found:\r\n{code}java.lang.NullPointerException\r\n\tat org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:202)\r\n\tat org.apache.activemq.broker.jmx.BrokerView.addConnector(BrokerView.java:358)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat sun.reflect.misc.Trampoline.invoke(MethodUtil.java:75)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:279)\r\n\tat com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:112)\r\n\tat com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:46)\r\n\tat com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)\r\n\tat com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)\r\n\tat com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)\r\n\tat javax.management.StandardMBean.invoke(StandardMBean.java:405)\r\n\tat org.apache.activemq.broker.jmx.AnnotatedMBean.invoke(AnnotatedMBean.java:198)\r\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)\r\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)\r\n\tat javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:292)\r\n\tat com.sun.proxy.$Proxy5.addConnector(Unknown Source)\r\n\tat org.apache.activemq.broker.jmx.MBeanTest.testAddRemoveConnectorBrokerView(MBeanTest.java:1384)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)\r\n\tat org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:113)\r\n\tat org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:202)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:65)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:120){code}",
        "BTreeIndexTest hangs when run on Windows BTreeIndexTest hangs when run on windows because it repeatedly tries to create/delete the same directory, which is problematic on windows.  I've attached a patch which just adds a timestamp to the directory name.\r\n"
    ],
    [
        "AMQ-5183",
        "AMQ-5293",
        "Switch to using Proton's Event logic for detecting AMQP state changes We currently use a polling model to detect state changes in the proton engine when new data arrives.  The recent update to Proton v0.7.0 allows us to switch to the new Event Collector model and remove the polling code.  This change results in lower overhead when processing incoming AMQP frames and increases performance of the AMQP transport layer.  ",
        "Backport AMQ-4829 to 5.9.x Could you please backport the fix for AMQ-4829 in {{5.9.x}}? If someone plans to release {{5.9.2}} the fix should be included there"
    ],
    [
        "AMQ-2915",
        "AMQ-4903",
        "Associated advisory topics aren't cleaned up when a topic/queue is deleted via AdminView Basically when you create a queue/topic and connect either a producer or consumer to that queue/topic advisory topics are created; if you later delete the queue/topic the advisory topics aren't cleaned up.  This could become a problem for folks that tend to create and destroy queues/topics often for whatever reason.  Patch fixes this and adds a test for topics and queues.",
        "ActiveMQ should depend to http feature instead of jetty Karaf 3.x won't provide directly the jetty feature anymore (it now leverages the pax-web features directly, so jetty feature will actually be pax-jetty).\r\n\r\nIn order to support Karaf 3, ActiveMQ should use the http feature instead of jetty feature."
    ],
    [
        "AMQ-3732",
        "AMQ-3410",
        "Different methods synchronizing on different mutexes when changing the same field org.apache.activemq.broker.region.PrefetchSubscription.prefetchExtension is changed while guarded by a mutex on this (PrefetchSubscription) in PrefetchSubscription.pullMessage(...) and PrefetchSubscription.dispatchLock in PrefetchSubscription.acknowledge(...). \r\n\r\nThis can lead to the corruption of the prefetchExtension variable (eg, prefetchExtension++ in pullMessage() is not an atomic operation so prefetchExtension may change in acknowledge() mid-way through this operation).",
        "AbstractAmqCommand should allow the connection factory to be changed. AbstractAmqCommand only allows an ActiveMQConnectionFactory to be used.  I've got a custom factory that I would like to be able to use from the command line interface.\r\n\r\nI'd like to see:\r\nget/setFactory implemented on AbstractAmqCommand, as well as some sort of method to override the connection factory being used.  I'm thinking along the lines of:\r\n\r\n--factory com.yahoo.activemq.YahooActiveMQConnectionFactory\r\n\r\nThen if the --factory option is set, then this class will be implemented and used, otherwise ActiveMQConnectionFactory.\r\n\r\nI'll attach a patch shortly for this."
    ],
    [
        "AMQ-3725",
        "AMQ-4001",
        "Kahadb error during SAN failover delayed write - Allow kahaDB to recover in a similar manner as the JDBC store using the IOExceptionHandler An issue can arise that causes the broker to terminate when using kahaDB with a SAN, when the SAN fails over.  In this case the failover process is seamless however, on fail back there is a 2-3 sec delay where writes are blocked and the broker terminates.  With the JDBC datastore a similar situation can be handled by using the IOExceptionHandler.  However with kahaDB, when this same IOExceptionHandler is added it prevents the broker from terminating but kahaDB retains an invalid index.\r\n\r\n{code}\r\n INFO | ActiveMQ JMS Message Broker (Broker1, ID:macbookpro-251a.home-56915-1328715089252-0:1) started\r\n INFO | jetty-7.1.6.v20100715\r\n INFO | ActiveMQ WebConsole initialized.\r\n INFO | Initializing Spring FrameworkServlet 'dispatcher'\r\n INFO | ActiveMQ Console at http://0.0.0.0:8161/admin\r\n INFO | ActiveMQ Web Demos at http://0.0.0.0:8161/demo\r\n INFO | RESTful file access application at http://0.0.0.0:8161/fileserver\r\n INFO | FUSE Web Console at http://0.0.0.0:8161/console\r\n INFO | Started SelectChannelConnector@0.0.0.0:8161\r\nERROR | KahaDB failed to store to Journal\r\njava.io.SyncFailedException: sync failed\r\n\tat java.io.FileDescriptor.sync(Native Method)\r\n\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)\r\n\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)\r\n INFO | Ignoring IO exception, java.io.SyncFailedException: sync failed\r\njava.io.SyncFailedException: sync failed\r\n\tat java.io.FileDescriptor.sync(Native Method)\r\n\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)\r\n\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)\r\nERROR | Checkpoint failed\r\njava.io.SyncFailedException: sync failed\r\n\tat java.io.FileDescriptor.sync(Native Method)\r\n\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)\r\n\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)\r\n INFO | Ignoring IO exception, java.io.SyncFailedException: sync failed\r\njava.io.SyncFailedException: sync failed\r\n\tat java.io.FileDescriptor.sync(Native Method)\r\n\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)\r\n\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)\r\nERROR | KahaDB failed to store to Journal\r\njava.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)\r\n\tat java.io.RandomAccessFile.open(Native Method)\r\n\tat java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)\r\n\tat org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)\r\n\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)\r\n\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)\r\n INFO | Ignoring IO exception, java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)\r\njava.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)\r\n\tat java.io.RandomAccessFile.open(Native Method)\r\n\tat java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)\r\n\tat org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)\r\n\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)\r\n\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)\r\nERROR | KahaDB failed to store to Journal\r\njava.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)\r\n\tat java.io.RandomAccessFile.open(Native Method)\r\n\tat java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)\r\n\tat org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)\r\n\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)\r\n\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)\r\n INFO | Ignoring IO exception, java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)\r\njava.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)\r\n\tat java.io.RandomAccessFile.open(Native Method)\r\n\tat java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)\r\n\tat org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)\r\n\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)\r\n\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)\r\n WARN | Transport failed: java.io.EOFException\r\n WARN | Transport failed: java.io.EOFException\r\n INFO | KahaDB: Recovering checkpoint thread after death\r\nERROR | Checkpoint failed\r\njava.io.IOException: Input/output error\r\n\tat java.io.RandomAccessFile.write(Native Method)\r\n\tat java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)\r\n\tat org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)\r\n\tat org.apache.kahadb.page.PageFile.flush(PageFile.java:484)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)\r\n\tat org.apache.kahadb.page.Transaction.execute(Transaction.java:760)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)\r\n INFO | Ignoring IO exception, java.io.IOException: Input/output error\r\njava.io.IOException: Input/output error\r\n\tat java.io.RandomAccessFile.write(Native Method)\r\n\tat java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)\r\n\tat org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)\r\n\tat org.apache.kahadb.page.PageFile.flush(PageFile.java:484)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)\r\n\tat org.apache.kahadb.page.Transaction.execute(Transaction.java:760)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)\r\n INFO | KahaDB: Recovering checkpoint thread after death\r\nERROR | Checkpoint failed\r\njava.io.IOException: Input/output error\r\n\tat java.io.RandomAccessFile.write(Native Method)\r\n\tat java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)\r\n\tat org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)\r\n\tat org.apache.kahadb.page.PageFile.flush(PageFile.java:484)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)\r\n\tat org.apache.kahadb.page.Transaction.execute(Transaction.java:760)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)\r\n INFO | Ignoring IO exception, java.io.IOException: Input/output error\r\njava.io.IOException: Input/output error\r\n\tat java.io.RandomAccessFile.write(Native Method)\r\n\tat java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)\r\n\tat org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)\r\n\tat org.apache.kahadb.page.PageFile.flush(PageFile.java:484)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)\r\n\tat org.apache.kahadb.page.Transaction.execute(Transaction.java:760)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)\r\n WARN | Transport failed: java.io.EOFException\r\n{code}",
        "activemq karaf feature uses different commons-lang than pom activemq-karaf/src/main/resources/features.xml uses org.apache.servicemix.bundles.commons-lang 2.4_4 whereas the root pom uses commons-lang 2.6. These should be aligned."
    ],
    [
        "AMQ-1143",
        "AMQ-2406",
        "Need a way to set tcpNoDelay on peer transport TCP network connections I really like the peer transport in ActiveMQ.  It seems to be just the kind of setup we need.  However, we do have low round-trip latency requirements in some applications.  I was seeing unacceptably bad latencies (~200ms) for synchronous round trips.  I installed Wireshark and performed network analysis to see what was going on.  It appeared to be a Nagle algorithm / TCP ACK delay issue.  Essentially, after the first message request and reply, the next request message may be delayed while waiting for a delayed ACK from the other broker.  This should be resolvable by enabling tcpNoDelay.  However, the peer transport URI provides no mechanism to enable tcpNoDelay.  In fact, I went into the source code and found that the TCP network connecter specified in the PeerTransportFactory is hard coded to tcp://localhost:0.  Basically, I need a way to turn on tcpNoDelay in peer transport.",
        "activemq-xmpp contains some System.out.println statements Noticed while trying to automate the camel-xmpp tests using an embedded broker that there's some System.out.println statements in ProtocolConverter.java.  Another issue I came across is that smackx is only used for the unit test but isn't limited to the test scope and is using an old version of the smack API.  This patch changes the System.out.println statements to log statements, adds <scope>test</scope> to the pom.xml for smackx and updates the unit test to use smack/smackx 3.0.4 since that's what Camel uses."
    ],
    [
        "AMQ-3748",
        "AMQ-634",
        "ActiveMQEndpointWorker$1: Run method is synchronized As posted in this mail [0] by Ed Keen there is a issue in the ActiveMQEndpointWorker.\r\n\r\nI checked the spec the JBoss guys mentioned and in section 10.3.2 it is clearly stated:\r\n\"Both the run and release methods in the Work implementation may contain\r\nsynchronization blocks but they must not be declared as synchronized methods.\"\r\n\r\nRemoving the \"synchronized\" worked for some people trying this. But I think it was added intentionally, so somebody should check an appropriate alternative.\r\n\r\nThis bug prevents ActiveMQ from being deployed on JBoss AS 7.1\r\n\r\n\r\n[0]: http://mail-archives.apache.org/mod_mbox/activemq-users/201202.mbox/%3CCAC=rkz2XZmJo3D03kHG6nfz0c800-Mh=9JH6qb=zeGQyU=MNXQ@mail.gmail.com%3E\r\n[1]: http://download.oracle.com/otn-pub/jcp/connector_architecture-1.6-fr-oth-JSpec/connector-1_6-final-spec.pdf",
        "switch the default stomp client port back to 61613 to match that of 3.x of ActiveMQ and to avoid breaking the Ruby Stomp client "
    ],
    [
        "AMQ-5518",
        "AMQ-3716",
        "Producer hangs on socketWrite0 on Solaris When multiple producers are writing in request-response model (using topics), application hang (deadlock) is visible on Solaris platform (see Environment for details). Tests on Linux (Ubuntu) show no issues.\r\n\r\nAdding soWriteTimeout in broker settings can be used as workaround, because the whole connection is broken when timeout exceeds.",
        "NetworkBridge with conduitSubscriptions=true will leak consumer info in org.apache.activemq.network.DemandForwardingBridgeSupport#subscriptionMapByRemoteId map  There is a leak in the tracking of consumer info commands in the conduit network bridge. Entries are not removed on a remove advisory."
    ],
    [
        "AMQ-2470",
        "AMQ-4268",
        "JMS clients stalled in case of many messages on a different queue - JDBC persistence With a large amount of messages in a Queue > 2M, the cleanup task takes a long time, maybe 20 minutes. Then it starts again immediately, which continually hogs the database as it locks out other users or other destinations.",
        "DurableSubscriptionOfflineTest has several failures testRedeliveryFlag fails intermittently, and testOfflineSubscriptionWithSelectorAfterRestart fails regularly\r\ntestNoDuplicateOnConcurrentSendTranCommitAndActivate and testCleanupDeletedSubAfterRestart fail, but very rarely"
    ],
    [
        "AMQ-5876",
        "AMQ-4418",
        "improve performance of TextFileCertificateLoginModule when many entries are in the \"textfiledn.user \" file With a large number of entries ( 200,000 ) in the \"org.apache.activemq.jaas.textfiledn.user\" file the performance seemed to degrade. \r\n\r\nTo demonstrate the performance difference;\r\n{code}\r\n\r\n1) for 100 entries and calling initialize,login(),commit 10 times - Time taken is 73 miliseconds\r\n\r\n2) for 200,000 entries and calling initialize,login(),commit 10 times - Time taken is  5020 miliseconds\r\n\r\n{code}\r\n\r\nSuggested improvements:\r\n- avoid loading the  org.apache.activemq.jaas.textfiledn.user file each time - in PropertiesLoginModule.java, the file is only read when it changes, using the file modification time.\r\n\r\n- avoid iterating through the Properties object, using a Map instead to retrieve the userName\r\n",
        "Make web apps (demos, rest api, etc) running in Karaf Currently they only behave well embedded in the distro"
    ],
    [
        "AMQ-4173",
        "AMQ-4049",
        "CSRF protection not working properly We recently upgraded from AMQ 5.3.0 to AMQ 5.7.0. In the web console of AMQ 5.3.0, if we wanted to delete a set of messages from a queue, we did that by holding ctrl and then pressing the delete url, to avoid being redirected to the overview, thus minimizing the number of clicks to delete multiple messages. In 5.7.0, this was not possible, due to the added CSRF protection.\r\n\r\nI was given the task of trying to enable us to easily delete multiple messages from the AMQ we console. I actually managed to do this, but I fear that was more on the account of luck than skill, since I really can't see why it works. After consulting with a colleague, we couldn't reach any other conclusion than that this is a bug in AMQ.\r\n\r\nSo, here is what I did (changes in browser.jsp): \r\n\r\nOne of my first thoughts was to use Javascript to enforce a reload of the overview page between each click on delete, in order to regenerate the secret key. Also, to avoid the redirecting, I wanted to open the URL in a new window/tab. So here is what I did:\r\n\r\nThe url to the delete button:\r\n{noformat}\r\n    <a href=\"#\" onclick=\"openInNewWindow('deleteMessage.action?JMSDestination=<c:out value=\"${requestContext.queueBrowser.JMSDestination}\"/>&messageId=${row.JMSMessageID}&secret=<c:out value='${sessionScope[\"secret\"]}'/>')\">Delete</a>\r\n{noformat}\r\nSo, basically changed the link to call a javascript function with the URL as a parameter, instead of opening the URL. The Javascript function looked like this:\r\n{noformat}\r\nfunction openInNewWindow(url) {\r\n\tvar newWindow= window.open(url);\r\n        newWindow.close();\r\n\r\n        window.location.reload();\r\n}\r\n{noformat}\r\n\r\nThis did not work, not even for the first request, which had a fresh secret key. I had already tried with just the first line (without closing the window, and without the window.location.reload() part), and this made it work for the first request, but then not for any other.\r\n\r\nSo, then, I tried this:\r\n{noformat}\r\nfunction openInNewWindow(url) {\r\n\tvar newWindow= window.open(url);\r\n        newWindow.close();\r\n}\r\n{noformat}\r\n\r\nI was quite suprised to see that this actually worked. I could click delete on multiple messages without reloading, and it actually deleted the messages, no stack traces in activemq.log. Which is really strange, because the URLs sent to the javascript function contain the same secret key for multiple messages, which should make it fail due the \"Possible CSRF attack\".\r\n\r\nNext, I tried this:\r\n{noformat}\r\nfunction openInNewWindow(url) {\r\n\tvar newWindow= window.open(url);\r\n        setTimeout(function() {\r\n            newWindow.close();\r\n        }, 1000);\r\n}\r\n{noformat}\r\n\r\nNow, it stopped working. The first one worked, but the following showed an error page (for the 1 second), and produced a stacktrace in activemq.log. \r\n\r\nI really don't understand all the details of why this works as it does, but it seems that it is possible to circumvent the CSRF protection by closing the browser window immediately after the request has been posted.\r\n",
        "Polish the AMQ start|stop logging The start and stop logging should be polished, to ensure we log starting .. started. shutting down .. shutdown."
    ],
    [
        "AMQ-3868",
        "AMQ-2488",
        "ActiveMQ 5.6 - RAR deployment is not working on JBoss6 Upgrading rar deployment on jboss 6 from 5.5 to 5.6 produce multiple errors due to new introduced dependencies. Major problems are on guava libraries and jaxson.\r\nRAR file provided with release is producing the following errors, blocking the AS startup (see attachments).",
        "Unable to access Serializable class when receiving ObjectMessage in OSGi environment I have configured applications to use Log4J's JMSAppender in order to log messages on a queue as follows;\n\n{noformat}\nlog4j.appender.jms=org.apache.log4j.net.JMSAppender\nlog4j.appender.jms.InitialContextFactoryName=org.apache.activemq.jndi.ActiveMQInitialContextFactory\nlog4j.appender.jms.ProviderURL=tcp://localhost:61616\nlog4j.appender.jms.TopicBindingName=logTopic\nlog4j.appender.jms.TopicConnectionFactoryBindingName=ConnectionFactory\n{noformat}\n\nEach application logging statement adds a new message to topic://logTopic on the broker.  I have a bundle deployed that attempts to route the messages from this topic with camel;\n\n{code}\nfrom(\"activemq:topic:logTopic\")\n  .convertBodyTo(String.class)\n  .to(\"log:foo?level=DEBUG&showProperties=true&showHeaders=true\");\n{code}\n\nWhen using servicemix 4 (Fuse 4.1.0.4), a stack trace is seen with the following message (enhanced using felix.log.level=4);\n\n\n{noformat}Caused by: java.lang.ClassNotFoundException: *** Class 'org.apache.log4j.spi.LoggingEvent' \nwas not found because bundle 56 does not import 'org.apache.log4j.spi' even though bundle 84 \ndoes export it. To resolve this issue, add an import for 'org.apache.log4j.spi' to bundle 56. ***\n{noformat}\n\nBundles as follows;\n\n{noformat}smx@root:/> osgi/list|grep 56\n[  56] [Active     ] [       ] [   60] activemq-core (5.3.0.fuse)\n\nsmx@root:/> osgi/list|grep 84\n[  84] [Active     ] [       ] [    8] OPS4J Pax Logging - API (1.3.0)\n{noformat}\n"
    ],
    [
        "AMQ-3528",
        "AMQ-3785",
        "Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.ArrayIndexOutOfBoundsException I connect the oracle db for store and manage message. It work fine for month. But it throws an exception recently, and many different machine which broker installed on throw the exception at the same time. \r\nThis can be fixed by unzip the install file and deploy again.\r\nThis is the exception trace:\r\n\r\n2011-09-29 09:50:20,866 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.ArrayIndexOutOfBoundsException | org.apache.activemq.broker.BrokerService | main\r\njava.lang.ArrayIndexOutOfBoundsException\r\n\tat java.lang.System.arraycopy(Native Method)\r\n\tat org.apache.kahadb.page.Transaction$2.read(Transaction.java:494)\r\n\tat java.io.DataInputStream.readFully(DataInputStream.java:178)\r\n\tat java.io.DataInputStream.readFully(DataInputStream.java:152)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$HashSetStringMarshaller.readPayload(MessageDatabase.java:2352)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$HashSetStringMarshaller.readPayload(MessageDatabase.java:2335)\r\n\tat org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:201)\r\n\tat org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:147)\r\n\tat org.apache.kahadb.page.Transaction.load(Transaction.java:406)\r\n\tat org.apache.kahadb.page.Transaction.load(Transaction.java:361)\r\n\tat org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)\r\n\tat org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:103)\r\n\tat org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:121)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore$3.execute(KahaDBStore.java:736)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore$3.execute(KahaDBStore.java:726)\r\n\tat org.apache.kahadb.page.Transaction.execute(Transaction.java:751)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.getMessageCount(KahaDBStore.java:725)\r\n\tat org.apache.activemq.store.ProxyTopicMessageStore.getMessageCount(ProxyTopicMessageStore.java:116)\r\n\tat org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:97)\r\n\tat org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:146)\r\n\tat org.apache.activemq.broker.region.TopicRegion.addSubscriptionsForDestination(TopicRegion.java:197)\r\n\tat org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:132)\r\n\tat org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:301)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)\r\n\tat org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:157)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)\r\n\tat org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)\r\n\tat org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:95)\r\n\tat org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:199)\r\n\tat org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:106)\r\n\tat org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)\r\n\tat org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)\r\n\tat org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:109)\r\n\tat org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1781)\r\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:489)\r\n\tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\r\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\r\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:117)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)\r\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\r\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\r\n\tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\r\n\tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\r\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\n\tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)\r\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\n\tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\r\n\tat java.lang.reflect.Method.invoke(Method.java:597)\r\n\tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\r\n\tat org.apache.activemq.console.Main.main(Main.java:107)\r\n2011-09-29 09:50:20,991 | INFO  | ActiveMQ Message Broker (localhost, null) is shutting down | org.apache.activemq.broker.BrokerService | main\r\n2011-09-29 09:50:20,991 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | main\r\n2011-09-29 09:50:21,007 | INFO  | PListStore:D:\\hsp\\apache-activemq-5.4.2\\bin\\..\\data\\localhost\\tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | main",
        "ActiveMQSslConnectionFactory does not detect ssl request in failover URIs when creating transports The createTransport method in ActiveMQSslConnectionFactory delegates to the super class if the URI scheme \r\nis not ssl. Failover URIs have 'failover' as the URI scheme and so always delegate to the superclass. This causes\r\nssl connections that need key or trust stores manipulated by code to hang or fail  as the credentials are not available. \r\n\r\nCode from  SVN trunk for ActiveMQSslConnectionFactory shows why\r\n\r\n protected Transport createTransport() throws JMSException {\r\n        // If the given URI is non-ssl, let superclass handle it.\r\n        if (!brokerURL.getScheme().equals(\"ssl\")) {\r\n            return super.createTransport();\r\n        }\r\n// !! jackf comment Code below never reached for failover URIs like failover:ssl:... or failover:(tcp:..., ssl...)\r\n// because the URI Scheme is failover, not ssl.\r\n// Therefore connections that need a keyManager or trustManager fail\r\n\r\n        try {\r\n            if (keyManager == null || trustManager == null) {\r\n                trustManager = createTrustManager();\r\n                keyManager = createKeyManager();\r\n                // secureRandom can be left as null\r\n            }\r\n            SslTransportFactory sslFactory = new SslTransportFactory();\r\n            SslContext ctx = new SslContext(keyManager, trustManager, secureRandom);\r\n            SslContext.setCurrentSslContext(ctx);\r\n            return sslFactory.doConnect(brokerURL);\r\n        } catch (Exception e) {\r\n            throw JMSExceptionSupport.create(\"Could not create Transport. Reason: \" + e, e);\r\n        }\r\n    }\r\n \r\n(Vague) Solution: 1) need better pattern match than URI scheme to detect requests for ssl connections. 2) A failover URI is  essentially a list of URIs so multiple ssl transport requests may be in the failover list. A first start is to require that the same key and trust stores are used for all failover connections but you may want to consider allowing customized stores for each of the ssl connections."
    ],
    [
        "AMQ-5662",
        "AMQ-4696",
        "Improve web console retry to support all DLQ names In web console, there is a \"retry\" link on a message when the name of browsed queue starts with DLQ. or DLT. The retry action in the console moves the letter to a queue named the same as the dead letter queue but without DLQ. or DLT.\r\n\r\nActiveMQ, however, allows to use any name on a DLQ by using dead letter strategies. A shared strategy is the default, and the original destination is encoded in each message. The current implementation in web console cannot handle the default DLQ strategy in ActiveMQ, which has one single DLQ named ActiveMQ.DLQ.\r\n\r\nThe suggested fix is to not rely on \"move\" to do a retry, but to use the built in retry mechanism instead. The second part of the fix is to only show the retry link when dealing with a real DLQ. A boolean is available through JMX.",
        "Durable Subscriptions are not created properly when using AMQP I can add a more detail description if needed but for now to reproduce this you'll need to comment out testUnsubscribe in the JoramJmsTest TopicSessionTest, build a snapshot, uncomment TopicSessionTest in JoramJmsTest and run that.  The testDurableSubscriber will fail.\r\n\r\nI have a patch for this, I can post it now or after the patch for AMQ-4596 is posted"
    ],
    [
        "AMQ-4337",
        "AMQ-2583",
        "Messages with AMQ_SCHEDULED_DELAY do not respect transactions Currently delayed messages are delivered even if the session it was sent in is rolled back. According to http://activemq.2283324.n4.nabble.com/AMQ-SCHEDULED-DELAY-and-transactional-boundaries-td4658339.html this is because the message can be delivered far in the future and the transaction would take to long.\r\n\r\nI don't agree with that argument. The transaction can be short living. It is only the enqueuing of the delayed message in the broker that has to be part of the transaction. The delivery to the consumer is not part of the transaction anymore.\r\n\r\ne.g. consider the scenario in the following preudo code:\r\n\r\n    while (application_runs)\r\n    try{\r\n        msg = session.Receive();\r\n        session.SendDelayed(anotherMessage);\r\n        if (random(5) != 0) throw exception;\r\n        session.Commit();\r\n    } catch { session.Rollback; }\r\n\r\nCurrently a delayed message is sent for each retry. So we will get a lot more messages in the future as we would expect. When delayed messages would respect transactions just the successful ones would be enqueued. The other ones are rolledback with the transaction.",
        "Implement stomp+nio+ssl transport "
    ],
    [
        "AMQ-5595",
        "AMQ-5530",
        "Cleanup tests in activemq-jms-pool to fix some failures seen in Jenkins There have been a couple random failures from activemq-jms-pool tests due to not being able to bind to a JMX port.  None of these tests need to create an MBean server so we can disable that for all tests.  Also the tests don't have timeouts on all of them so we should add that as well. \r\n\r\n1. Update all tests to JUnit 4 style tests with timeouts\r\n2. Disable embedded broker features not needed should speed things up.",
        "Change default mqtt subscription prefetch Currently we use a prefetch of 1 by default for mqtt subscriptions. This doesn't make much sense in real-life scenarios. We should use default values of non-durable and durable topics depending on the qos requested by the subscriber."
    ],
    [
        "AMQ-5596",
        "AMQ-2217",
        "Remove the deprecated JMS streams code The JMS Streams code has been deprecated now for over a year since AMQ-4839.  We should now be able to remove this code for the 5.12 release.  ",
        "Message delivery to selector based consumers pauses if selector leaves messages on the queue. I have written a test case which will demonstrate the difference between the following two scenarios:\n\n1. Producer sending dissimilar JMSType messages to a queue, with a client consuming all messages (no selector).\n2. Producer sending dissimilar JMSType messages to a queue, with a client consuming every other message (using selector).\n\nWith a large enough size of test messages (for my environment about 5k), scenario 2 will fail with delivery to the consumer halted, while scenario 1 will not.\n\nTest Output:\n\nwaiting for consumer to pause ... consumer: 0, producer: 0\nwaiting for consumer to pause ... consumer: 200, producer: 5000\nwaiting for consumer to pause ... consumer: 200, producer: 5000\nwaiting for consumer to pause ... consumer: 200, producer: 5000\nwaiting for consumer to pause ... consumer: 200, producer: 5000\nwaiting for consumer to pause ... consumer: 200, producer: 5000"
    ],
    [
        "AMQ-3509",
        "AMQ-867",
        "Add the user name in the \"User name or password is invalid\" error line When a transport connector cannot connect due invalid username, then we see a WARN log in the log file\r\n{code}\r\nWARN  Transport                      - Transport failed: java.io.IOException: User name or password is invalid.\r\n{code}\r\n\r\nIt would be good if the username could be logged as well. People who maintain the AMQ brokers may have trouble figuring out what username was used and be able to track down the problem. Such as if the password is expired, if the username is actually okay etc.\r\n\r\nSo I propose to include the username in the log line.",
        "JMX Management Console Not Working As Documented Starting in 4.0.1 and continuing in a snapshot 4.0.2 release, the ActiveMQ JMX management console is not working as advertised.  In version 4.0, I would see the following message logged to the console when starting activemq:\n\nINFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi\n\nIn Version 4.0.1 and higher, I no longer see this message.\n\nWhen trying to connect to the broker using the jconsole program, in versions 4.0.1 and higher, the following command does not work (get \"Connection failed\" message).\n\njconsole service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi\n\nHowever, in 4.0, it does work.\n\nWith 4.0.1 and higher, I am able to execute jconsole with no arguments and pick the activemq jvm from the dialog that pops up and access the managment mbeans just fine.\n\nA symptom of this problem in 4.0.1 and higher is that none of the command line tools in the bin directory work.  Here is sample output:\n\ndoug@nuk:~/tools/activemq/incubator-activemq-4.0.2/bin$ ./shutdown\nACTIVEMQ_HOME: /home/doug/tools/activemq/incubator-activemq-4.0.2\nERROR: java.lang.RuntimeException: Failed to execute stop task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connection refused to host: localhost; nested exception is:\n        java.net.ConnectException: Connection refused]\nERROR: java.lang.Exception: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connection refused to host: localhost; nested exception is:\n        java.net.ConnectException: Connection refused]\n\nWith 4.0, all command line tools work as expected.\n\nNot sure what is going on here, but something changed in versions 4.0.1 and above.\n\nOne last note: in 4.0.1 and higher, I uncommented the managementContext tag in the activemq.xml file, but that had no effect.  The problem remained as described here.\n\n\n\n"
    ],
    [
        "AMQ-2502",
        "AMQ-2739",
        "activemq-camel is missing an optional Import-Package for org.apache.activemq.pool If pooling is used, org.apache.activemq.pool.PooledConnectionFactory is instantiated using reflection. BND does not detect this, so compliant OSGI containers will throw a class not found exception. To fix, the following line should be added to the <activemq.osgi.import.pkg /> section of the pom:\r\n\r\norg.apache.activemq.pool;resolution:=optional,",
        "Contradictory documentation on default dispatchAsync value The page http://activemq.apache.org/consumer-dispatch-async.html states:\n\n\"The default setting is dispatchAsync=true\"\n\nHowever, the page http://activemq.apache.org/destination-options.html shows:\n\nconsumer.dispatchAsync\t false (Default Value)\n\nWhich is the actual default setting?"
    ],
    [
        "AMQ-4367",
        "AMQ-4999",
        "ActiveMQXAConnectionFactory does not respect redelivery policy A redelivery policy set on an ActiveMQXAConnectionFactory is not respected. A test that in ActiveMQXAConnectionFactoryTest is added in the attached .patch-file.",
        "Disable jar indexing ActiveMQ's pom.xml uses maven-jar-plugin with <index>true</index>, which creates META-INF/INDEX.LIST file in the JAR files. This is useless when done only for a single jar file and might in some cases even be harmful.\r\n\r\nI propose to disable the generation INDEX.LIST files.\r\n\r\nFor a full discussion of the drawbacks, see the corresponding bug track at Tomcat's Bugzilla: https://issues.apache.org/bugzilla/show_bug.cgi?id=49236"
    ],
    [
        "AMQ-2800",
        "AMQ-1489",
        "JDBCMessageStore message audit suppresses composite destination and DLQ messages as duplicates With the audit enabled, messages send to composite destinations are suppressed as duplicates so the will not survive a restart. In addition, persistent DLQ messages are suppressed (depending on the audit depth).\nDisabling the audit on the persistence adapter works around this issue. It is ok to disable the audit. The audit is needed to close a small window where duplicate message sends can occur with the non transactional use of the failover: transport. It can happen if a send is in progress when a failover reconnection occurs back o the same broker (as if there was a temp network partition) and the send reply is not received. A non transactional client will resend the message which needs to be suppressed by the audit. Disabling the audit leaves the possibility of having a duplicate message in the database that will not be dispatched.",
        "discoveryUri in transportConnector and uri in networkConnector partially ignored if multicast This bug relates to the MulticastDiscoveryAgent and was discovered when \n\n1. the discoveryUri of a transportConnector is a multicast-uri such as\n\n{code:xml}\n<transportConnector uri=\"...\" discoveryUri=\"multicast://239.3.7.0:37000\" />\n{code}\n\nor\n\n2. the uri of a networkConnector is a multicast-uri such as\n\n{code:xml}\n<networkConnector name=\"...\" uri=\"multicast://239.3.7.0:37000\">\n{code}\n\nIn these cases, the uri is partially ignored by the MulticastDiscoveryAgent: the host-name of the uri (239.3.7.0) is extracted and used as the group name by the MulticastDiscoveryAgent. But the actual multicast group IP is always 239.255.2.3 and the multicast port is always 6155, regardless of what the actual uri is in the configuration.\n\nThe reason for this is that MulticastDiscoveryAgentFactory creates a new MulticastDiscoveryAgent and sets the group based on the uri's host, but fails to set the discoveryURI itself. MulticastDiscoveryAgentFactory should be corrected to do this:\n\n{code:java}\nMulticastDiscoveryAgent rc = new MulticastDiscoveryAgent();\nrc.setDiscoveryURI(uri); // missing\nrc.setGroup(uri.getHost());\n{code}\n\nWithout the above setting of the discoveryURI the MulticastDiscoveryAgent always uses the DEFAULT_DISCOVERY_URI_STRING which is \"multicast://239.255.2.3:6155\", explaining the erroneous behaviour described above.\n\n  kind regards,\n  gerald\n\nhttp://www.gerald-loeffler.net\n"
    ],
    [
        "AMQ-586",
        "AMQ-3827",
        "TwoBrokerTopicSendReceiveTest fails on some platform On our CI test grids it works on iago, aladdin and spinach but fails on  Jafar (Windows 2003, Jdk 1.5)\n\nTried running it on a Windows XP  box using Jdk 1.5 and it works.  ",
        "The SslContext definition is not used by the https transport protocol. The current https transport protocol does not allow the ability to use the SslContext instance to setup the secure communication for the broker.  The current implementation requires that you define the standard security properties."
    ],
    [
        "AMQ-4499",
        "AMQ-1506",
        "Enhance the web console 1. https://issues.apache.org/jira/browse/AMQ-4393\r\nAMQ-4393 fix one error about the objectname of MBean, there are some other objectnames of MBean are not correct.\r\n\r\n2. I found that the web console do not show the info of producers, I do not know why, so I try to enhance the web console.\r\n   \r\n3. I try to enable control the connector in the web console.\r\n   Considering such  scene: there are tow ports in a broker: inputPort and outputPort.\r\n   When I want to upgrade the activemq totally, I can jsut stop the inputPort ,and wait for the queue/topic to be consumered through the outputPort.\r\n   Then, stop the activemq, rm all old activemq files(include data files). Finally, deploy the new activemq, a \"clear\" upgrade finish.\r\n",
        "System.out in source code: org.apache.activemq.ra.ServerSessionPoolImpl Line 192 of org/apache/activemq/ra/ServerSessionPoolImpl.java prints to System.out:   System.out.println(\"ACtive Sessions = \" + activeSessions.size());\n\nPerhaps this should be removed or changed to a log call."
    ],
    [
        "AMQ-1243",
        "AMQ-1383",
        "Multiple WebClient instances Just learning about ActiveMQ and noticed, like many before I imagine, that the chat demo doesn't let you use it in different tabs/windows of a browser at once. Well, it runs, but you share the consumers in the WebClient stored in the HttpSession.\n\nSo, why not have multiple WebClients in the Session, one for each 'rendering' of the window, meaning for each instance of amq(.js)?\n\nSo you need a UID in HttpSession for each amq instance.\n\nYou also need to set the amq._pollDelay to something sensible, as polling is done by GET and connections to the server are throttled by the browser.\n\nHopefully the attached patch will seem resonable.\n\nChanges in _amq.js are set to test the new functionality;\nminimal changes to MessageListenerServlet;\nfew changes to WebClient;\nadded WebClientDirector to direct getting of correct WebClient instance and creating new ones.",
        "org.apache.activemq.transport.InactivityMonitor$1 cannot be cast to edu.emory.mathcs.backport.java.util.concurrent.Delayed Came back  into office this morning and spotted this, can't tell if my application continued as usual as i have only very little activity in the application. \n\n\nException in thread \"ActiveMQ Transport: tcp://XXX/YYY:61616\" java.lang.ClassCastException: org.apache.activemq.transport.InactivityMonitor$1 cannot be cast to edu.emory.mathcs.backport.java.util.concurrent.Delayed\n      at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo(ScheduledThreadPoolExecutor.java:189)\n      at edu.emory.mathcs.backport.java.util.PriorityQueue.remove(PriorityQueue.java:507)\n      at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.remove(DelayQueue.java:379)\n      at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.remove(ScheduledThreadPoolExecutor.java:707)\n      at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.remove(ThreadPoolExecutor.java:1582)\n      at org.apache.activemq.thread.Scheduler.cancel(Scheduler.java:55)\n      at org.apache.activemq.transport.InactivityMonitor.stopMonitorThreads(InactivityMonitor.java:176)\n      at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)\n      at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:97)\n      at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:150)\n      at java.lang.Thread.run(Unknown Source)\n"
    ],
    [
        "AMQ-4256",
        "AMQ-6105",
        "Upgrade to OSGi 4.3.0 We should upgrade osgi from 4.2 to 4.3. ",
        "Remove deprecated methods from JMX tree Remove the deprecated methods from the JMX tree\r\n\r\n{code}\r\nJobSchedulerViewMBean#removeJobAtScheduledTime\r\n{code}\r\nMarked as deprecated in 2014 first appeared as deprecated in 5.11.0\r\n\r\n{code}\r\nSubscriptionViewMBean#getSubcriptionId\r\nSubscriptionViewMBean#getSubcriptionName\r\n{code}\r\nMarked as deprecated in 2013 first appeared as deprecated in 5.10.0\r\n"
    ],
    [
        "AMQ-4438",
        "AMQ-262",
        "Add uptime to bstat output bstat command would benefit from displaying the new uptime attribute.\r\n",
        "RequestReply across networked brokers broken (again) I have been testing version 266 and found that request/reply test is not working at a 100% level across networked brokers.  At first I thought that the race condition that had been a prior release had be revived. This was where replier would try to use the temp destination before the bridge was established.  Before that was fixed I could just insert a delay after creating the temp destination and its use to get around the problem.  Now it seems that work-around does not work either.  The first attempt to send a message to the temp destination will fail.\n\nI have found that repeated attempts will succeed.  It seems that the first failed attempt is trigger a completion of the temp definition setup?  Anyway if after the first request fails to receive the reply, another request is made, the replying process has no problem sending the second reply.\n\nCould this be another problem introduced as a result of the AdvisorySupport changes? "
    ],
    [
        "AMQ-4100",
        "AMQ-855",
        "WebSocket connections not cleaned When there's transport timeout or broker is shut, the MBean is not properly cleaned.",
        "Add support for prefetchSize = 0 This feature would enable to support following test case:\n\n2 servers are processing 3 submitted jobs with following processing times 10 min, 1 min, 1 min. This sequence should finish in 10 minutes as one service will pick up the 10 minutes job, meanwhile the other one should manage the two 1 minute jobs. Since I cannot set prefetchSize=0, one of the 1 minute jobs is sitting in prefetch buffer and the jobs are processed in 11 minutes instead of 10.\n\nThis is simplification of the real scenario where I have about 30 consumers submitting jobs to 20 consumers through AMQ 4.0.1. I have following problems:\n\n\u0095 Messages are sitting in prefetch buffer are not available to processors, which results in a lot of idle time.\n\u0095 Order of processing is random. For some reason Job # 20 is processed after Job # 1500. Since senders are synchronously blocked this can result in time-outs.\n\u0095 Some requests are real-time, i.e. there is a user waiting, so the system cannot wait, so AMQ-850 does not fix this issue.\n"
    ],
    [
        "AMQ-2247",
        "AMQ-1040",
        "JMSPriority header value is not propagated I'm trying to use selectors to simulate priority in queues.  I found that if I use Message.setJMSPriority() with a different number from the default, that number gets ignored and the default value of 4 is put in the message.  Looking at messages in the broker admin web app, the priority is set to 4.\n\nIf I instead use MessageProducer.setPriority() to set this, I can successfully change the priority in the header.\n\n",
        "Full src-jar distributed with binary For absolutely all developers (extrapolating from one person, myself), a src-jar that comes with the \"bin\" distribution makes the world a better place to live.\n\nWith a src jar, you only add the full jar, \"attach\" the src-jar, and you're _rellay_ good to go both developing but not least stack-tracing and debugging. The src-jar should include sources for most of the stuff that actually reside in the full jar, if not all.\n\nEclipse: if you include the \"full jar\", it's slightly problematic to include a whole bunch of dirs from the src-distro. You'll end up having to include all those lib jars, and on each of them put the corresponding src dir.\n\nThe whole thing won't bloat the distro very much - but will relieve very many developers from having to download the extra distro, and from the annoyance of not being able to just configure one simple jar with src-attachment."
    ],
    [
        "AMQ-5895",
        "AMQ-5521",
        "FilteredDestinations do not work when loaded by runtimeConfigurationPlugin When adding a FilteredDestination to VirtualDestinations in activemq.xml, the runtimeConfigurationPlugin will not update the configuration correct for the filteredDestination. The log does not give any errors until we send a message towards the CompositeTopic/Queue that contains the FilteredDestination, then the message is not forwarded and the following error is written in the log:\r\n{code}java.lang.IllegalArgumentException: Unknown mapped destination type java.lang.Object@7a141450\r\n        at org.apache.activemq.broker.region.virtual.CompositeDestination.getMappedDestinations(CompositeDestination.java:124)[activemq-broker-5.11.1.jar:5.11.1] {code}\r\n\r\nIt works if we restart activeMQ, because then the configuration is not loaded by the runtimeConfigurationPlugin, however we really want to avoid that.\r\n\r\nSolution: It seems that the translation from JAXB objects to ActiveMQ objects is not translating DtoFilteredDestination to FilteredDestinations in org.apache.activemq.plugin.JAXBUtils.\r\n\r\nWhen I added the following code to the method \"inferTargetObject\", then the problem was solved:\r\n{code}\r\n        } else if (DtoFilteredDestination.class.isAssignableFrom(elementContent.getClass())) {\r\n            return new FilteredDestination();\r\n{code}\r\n\r\nWhy this matters: In my organisation we really like to use ActiveMQ VirtualDestinations with FilteredDestinations, because it is a much more minimalistic than having to make many simple subscriptions in Camel and it has many benefits compared to durable subscribers. However, we do not wish to restart ActiveMQ every time we modify the VirtualDestinations, hence we need to be able to updated the VirtualDestinations using runtimeConfigurationPlugin and this does not work right now due to this bug.\r\n\r\nI have added some files to this issue: a patch file, a full stacktrace and some steps to reproduce the problem.\r\n\r\nPerhaps I can also commit the bug fix myself if that can speed up the process.",
        "Average message size attribute on destination mbean should not have decimals Under AMQ-4831, we introduced rounding on the AverageMessageSize attribute of BrokerViewMBean, but the same change wasn't applied to the same attribute on DestinationViewMBean so the two are inconsistent.  If the change was worth making, it should be made both places.\r\n\r\n"
    ],
    [
        "AMQ-4803",
        "AMQ-747",
        "Examples - Update instructions due recent moving of files to new directory ./activemq-demo.xml:    To run ActiveMQ with this configuration add xbean:conf/activemq-demo.xml to your command\r\n./activemq-demo.xml:    e.g. $ bin/activemq console xbean:conf/activemq-demo.xml\r\n./activemq-dynamic-network-broker1.xml:    $ bin/activemq console xbean:conf/activemq-dynamic-network-broker1.xml\r\n./activemq-dynamic-network-broker1.xml:    $ bin/activemq console xbean:conf/activemq-dynamic-network-broker2.xml\r\n./activemq-dynamic-network-broker2.xml:    $ bin/activemq console xbean:conf/activemq-dynamic-network-broker1.xml\r\n./activemq-dynamic-network-broker2.xml:    $ bin/activemq console xbean:conf/activemq-dynamic-network-broker2.xml\r\n./activemq-jdbc-performance.xml:    To run ActiveMQ with this configuration add xbean:conf/activemq-jdbc.xml to your command\r\n./activemq-jdbc-performance.xml:    e.g. $ bin/activemq console xbean:conf/activemq-jdbc.xml\r\n./activemq-jdbc.xml:    To run ActiveMQ with this configuration add xbean:conf/activemq-jdbc.xml to your command\r\n./activemq-jdbc.xml:    e.g. $ bin/activemq console xbean:conf/activemq-jdbc.xml\r\n./activemq-scalability.xml:    To run ActiveMQ with this configuration add xbean:conf/activemq-scalability.xml to your command\r\n./activemq-scalability.xml:    e.g. $ bin/activemq console xbean:conf/activemq-scalability.xml\r\n./activemq-security.xml:    To run ActiveMQ with this configuration add xbean:conf/activemq-security.xml to your command\r\n./activemq-security.xml:    e.g. $ bin/activemq console xbean:conf/activemq-security.xml\r\n./activemq-static-network-broker1.xml:    $ bin/activemq console xbean:conf/activemq-static-network-broker1.xml\r\n./activemq-static-network-broker1.xml:    $ bin/activemq console xbean:conf/activemq-static-network-broker2.xml\r\n./activemq-static-network-broker2.xml:    $ bin/activemq console xbean:conf/activemq-static-network-broker1.xml\r\n./activemq-static-network-broker2.xml:    $ bin/activemq console xbean:conf/activemq-static-network-broker2.xml\r\n./activemq-stomp.xml:    To run ActiveMQ with this configuration add xbean:conf/activemq-stomp.xml to your command\r\n./activemq-stomp.xml:    e.g. $ bin/activemq console xbean:conf/activemq-stomp.xml\r\n./activemq-throughput.xml:    To run ActiveMQ with this configuration add xbean:conf/activemq-throughput.xml to your command\r\n./activemq-throughput.xml:    e.g. $ bin/activemq console xbean:conf/activemq-throughput.xml",
        "Redelivery backoff should add random delay for collision avoidance If a rollback on two messages happens between three transactional deliveries, and the two messages are redelivered with the same redelivery backoff settings, there is a likelihood that both messages will cause another rollback to happen.  If maximumRedeliveries is set too low, or there are a maximumRedeliveries + 1 messages coming in simultaneously, messages may never get delivered.  Can we get another option for the clients that adds a random backoff delay adjustment in addition to the constant backoff delay factor?  This would end up working like most other collision avoidance algorithms."
    ],
    [
        "AMQ-4614",
        "AMQ-3730",
        "Number Of Pending Messages is shown as -1 Followed the steps given in  http://docs.wso2.org/wiki/display/ESB460/Store+and+Forward+Using+JMS+Message+Stores\r\n\r\nNumber Of Pending Messages is shown as -1",
        "create a configuration option for enabling encryption of kahadb persistence store I have sensitive data (credit cards numbers, etc) that should not be persisted in clear text for PCI compliance.  It would be great if there was a configuration option that allowed the whole kahadb persistence store to be encrypted."
    ],
    [
        "AMQ-2385",
        "AMQ-5884",
        "Failover transport - add new option for maximum attempts for startup only See AMQ-2114 for background.\n\nAnd from this discussion\nhttp://www.mail-archive.com/dev@activemq.apache.org/msg09960.html\n\nI do believe it would be great if there was 2 options to set the maxReconnectAttempts option\n- maxReconnectAttempts = the existing we have now for reconnecting when consumer has been started\n- startupMaxReconnectAttempts = a new option when starting consumer to avoid it potentially blocking for a very long time in case of connection not possible\n\nFor example when end users use Camel or other other frameworks with AMQ where it acts as a client to consume from a AMQ queue it will hang/block on startup if the connection cannot be established. So we end up in a catch-22 situation.\n\nWe want to just try a X number of times and then go on so the rest can start up properly. And the the AMQ consumer should remedy the issue itself over time by automatic under the covers try to reconnect (based on the maxReconnectAttempts) option.\n\nAnd you could also support (if not already) setting the values to -1 to indicate forever. Then you can configure these options explict to highlight this fact, for example\n\n{code}\nstartupMaxReconnectAttempts=5&maxReconnectAttempts=-1\n{code}\n\nSee also details here\nhttp://fusesource.com/forums/thread.jspa?messageID=4347&#4347",
        "AMQ accepts MQTT UNSUBSCRIBE with zero length topic filter MQTT spec says:\r\nMQTT-4.7.3-1]\r\nAll Topic Names and Topic Filters MUST be at least one character long."
    ],
    [
        "AMQ-786",
        "AMQ-3997",
        "Eliminated an unneed Thread.currentThread().interrupt() in ResponseCorrelator.java ",
        "Memory leak in activemq-pool The org.apache.activemq.pool.PooledConnectionFactory from activemq-pool has a severe memory leak when using it for sending a lot of messages. Over time this causes memory to be eaten up.\r\n\r\nI have tracked it down to the following tickets:\r\n- AMQ-3680, which keeps adding event listeners, despite previously added\r\n- AMQ-2643, code which keep track of loaned sessions, causing JVM to create too many ConcurrentLinkedQueue$Node instances\r\n\r\nThere may be others. But with resolutions to those I can get the pool to not eat memory, and keep memory consumption low."
    ],
    [
        "AMQ-4611",
        "AMQ-5885",
        "Network Failure Issue in Embedded Broker using setStaticBridge=true Hi,\r\n\r\nI have an embedded broker connecting to my remote server broker using network connector and setStaticBridge=true and static list of destinations. When producer produces the message connecting to my local embedded broker, it successfully forwards to remote broker and stick it to pending messages. Issue comes during network failure when embedded broker is unable to communicate to remote broker and producer keep on producing messages. Producer messages will be stored in KahaDB as a part of persistence setting. When network comes up, I am not able to see old messages produced by producer in the pending message of the remote broker and it doesn't forward any new messages produced by the producer to remote broker thereafter. Only temporary solution is to restart embedded broker. Please help in this urgent issue. My code are as below -\r\n\r\n1. Embedded Broker\r\n\r\n    public final class EmbeddedBroker {\r\n    public static Destination destination;\r\n    public static String subject = \"TOOL.DEFAULT\";\r\n    public static boolean topic;\r\n    public static boolean transacted;\r\n\r\n    private EmbeddedBroker() {\r\n    }\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        BrokerService broker = new BrokerService();\r\n        broker.setUseJmx(true);\r\n        broker.setBrokerName(\"storeforward\");\r\n        broker.addConnector(\"tcp://localhost:61616\");\r\n        broker.setPersistent(true);\r\n        NetworkConnector connector1 = broker.addNetworkConnector(\"static:failover:\"+\"tcp://172.16.102.153:61616\");\r\n        connector1.setDuplex(true);\r\n        connector1.setStaticBridge(true);\r\n\r\n        ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(null, null, \"failover:tcp://172.16.102.153:61616\");\r\n        Connection connection = connectionFactory.createConnection();\r\n        System.out.println(\"test\");\r\n        connection.start();\r\n        Session session = connection.createSession(transacted, Session.AUTO_ACKNOWLEDGE);\r\n        if (topic) {\r\n            destination = session.createTopic(subject);\r\n        } else {\r\n            destination = session.createQueue(subject);\r\n        }\r\n        \r\n        List lst = new ArrayList();\r\n        lst.add(destination);\r\n        connector1.setBridgeTempDestinations(true);\r\n        connector1.setAdvisoryForFailedForward(true);\r\n        connector1.setStaticallyIncludedDestinations(lst);\r\n        \r\n        broker.start();\r\n\r\n        // now lets wait forever to avoid the JVM terminating immediately\r\n        Object lock = new Object();\r\n        synchronized (lock) {\r\n            lock.wait();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n2. Producer\r\n\r\npublic class ProducerTool extends Thread {\r\n\r\n    private Destination destination;\r\n    private int messageCount = 10;\r\n    private long sleepTime;\r\n    private boolean verbose = true;\r\n    private int messageSize = 255;\r\n    private static int parallelThreads = 1;\r\n    private long timeToLive;\r\n/*    private String user = ActiveMQConnection.DEFAULT_USER;\r\n    private String password = ActiveMQConnection.DEFAULT_PASSWORD;\r\n*/    \r\n    private String user = null;\r\n    private String password = null;\r\n    \r\n    private String url = \"failover:tcp://172.16.102.153:61616\";\r\n    private String subject = \"TOOL.DEFAULT\";\r\n    private boolean topic;\r\n    private boolean transacted;\r\n    private boolean persistent = true;\r\n    private static Object lockResults = new Object();\r\n\r\n    public static void main(String[] args) throws Exception {\r\n    \r\n        ArrayList<ProducerTool> threads = new ArrayList();\r\n        ProducerTool producerTool = new ProducerTool();\r\n        String[] unknown = CommandLineSupport.setOptions(producerTool, args);\r\n        if (unknown.length > 0) {\r\n            System.out.println(\"Unknown options: \" + Arrays.toString(unknown));\r\n            System.exit(-1);\r\n        }\r\n        producerTool.showParameters();\r\n        for (int threadCount = 1; threadCount <= parallelThreads; threadCount++) {\r\n            producerTool = new ProducerTool();\r\n            CommandLineSupport.setOptions(producerTool, args);\r\n            producerTool.start();\r\n            threads.add(producerTool);\r\n        }\r\n\r\n        while (true) {\r\n            Iterator<ProducerTool> itr = threads.iterator();\r\n            int running = 0;\r\n            while (itr.hasNext()) {\r\n                ProducerTool thread = itr.next();\r\n                if (thread.isAlive()) {\r\n                    running++;\r\n                }\r\n            }\r\n            if (running <= 0) {\r\n                System.out.println(\"All threads completed their work\");\r\n                break;\r\n            }\r\n            try {\r\n                Thread.sleep(1000);\r\n            } catch (Exception e) {\r\n            }\r\n        }\r\n        System.exit(0);\r\n    }\r\n\r\n    public void showParameters() {\r\n        System.out.println(\"Connecting to URL: \" + url + \" (\" + user + \":\" + password + \")\");\r\n        System.out.println(\"Publishing a Message with size \" + messageSize + \" to \" + (topic ? \"topic\" : \"queue\") + \": \" + subject);\r\n        System.out.println(\"Using \" + (persistent ? \"persistent\" : \"non-persistent\") + \" messages\");\r\n        System.out.println(\"Sleeping between publish \" + sleepTime + \" ms\");\r\n        System.out.println(\"Running \" + parallelThreads + \" parallel threads\");\r\n\r\n        if (timeToLive != 0) {\r\n            System.out.println(\"Messages time to live \" + timeToLive + \" ms\");\r\n        }\r\n    }\r\n\r\n    public void run() {\r\n        Connection connection = null;\r\n        try {\r\n            // Create the connection.\r\n            \r\n            url = \"tcp://localhost:61616\";\r\n            \r\n            ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(user, password, url);\r\n            connection = connectionFactory.createConnection();\r\n            connection.start();\r\n            \r\n            Session session = connection.createSession(transacted, Session.AUTO_ACKNOWLEDGE);\r\n            if (topic) {\r\n                destination = session.createTopic(subject);\r\n            } else {\r\n                destination = session.createQueue(subject);\r\n            }\r\n\r\n            // Create the session\r\n\r\n            // Create the producer.\r\n            MessageProducer producer = session.createProducer(destination);\r\n            if (persistent) {\r\n                producer.setDeliveryMode(DeliveryMode.PERSISTENT);\r\n            } else {\r\n                producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT);\r\n            }\r\n            if (timeToLive != 0) {\r\n                producer.setTimeToLive(timeToLive);\r\n            }\r\n\r\n            // Start sending messages\r\n            sendLoop(session, producer);\r\n\r\n            System.out.println(\"[\" + this.getName() + \"] Done.\");\r\n\r\n            synchronized (lockResults) {\r\n                ActiveMQConnection c = (ActiveMQConnection) connection;\r\n                System.out.println(\"[\" + this.getName() + \"] Results:\\n\");\r\n                c.getConnectionStats().dump(new IndentPrinter());\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            System.out.println(\"[\" + this.getName() + \"] Caught: \" + e);\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                connection.close();\r\n            } catch (Throwable ignore) {\r\n            }\r\n        }\r\n    }\r\n\r\n    protected void sendLoop(Session session, MessageProducer producer) throws Exception {\r\n\r\n        for (int i = 0; i < messageCount || messageCount == 0; i++) {\r\n\r\n            TextMessage message = session.createTextMessage(createMessageText(i));\r\n\r\n            if (verbose) {\r\n                String msg = message.getText();\r\n                if (msg.length() > 50) {\r\n                    msg = msg.substring(0, 50) + \"...\";\r\n                }\r\n                System.out.println(\"[\" + this.getName() + \"] Sending message: '\" + msg + \"'\");\r\n            }\r\n\r\n            producer.send(message);\r\n\r\n            if (transacted) {\r\n                System.out.println(\"[\" + this.getName() + \"] Committing \" + messageCount + \" messages\");\r\n                session.commit();\r\n            }\r\n            Thread.sleep(sleepTime);\r\n        }\r\n    }\r\n\r\n    private String createMessageText(int index) {\r\n        StringBuffer buffer = new StringBuffer(messageSize);\r\n        buffer.append(\"Message: \" + index + \" sent at: \" + new Date());\r\n        if (buffer.length() > messageSize) {\r\n            return buffer.substring(0, messageSize);\r\n        }\r\n        for (int i = buffer.length(); i < messageSize; i++) {\r\n            buffer.append(' ');\r\n        }\r\n        return buffer.toString();\r\n    }\r\n\r\n    public void setPersistent(boolean durable) {\r\n        this.persistent = durable;\r\n    }\r\n\r\n    public void setMessageCount(int messageCount) {\r\n        this.messageCount = messageCount;\r\n    }\r\n\r\n    public void setMessageSize(int messageSize) {\r\n        this.messageSize = messageSize;\r\n    }\r\n\r\n    public void setPassword(String pwd) {\r\n        this.password = pwd;\r\n    }\r\n\r\n    public void setSleepTime(long sleepTime) {\r\n        this.sleepTime = sleepTime;\r\n    }\r\n\r\n    public void setSubject(String subject) {\r\n        this.subject = subject;\r\n    }\r\n\r\n    public void setTimeToLive(long timeToLive) {\r\n        this.timeToLive = timeToLive;\r\n    }\r\n\r\n    public void setParallelThreads(int parallelThreads) {\r\n        if (parallelThreads < 1) {\r\n            parallelThreads = 1;\r\n        }\r\n        this.parallelThreads = parallelThreads;\r\n    }\r\n\r\n    public void setTopic(boolean topic) {\r\n        this.topic = topic;\r\n    }\r\n\r\n    public void setQueue(boolean queue) {\r\n        this.topic = !queue;\r\n    }\r\n\r\n    public void setTransacted(boolean transacted) {\r\n        this.transacted = transacted;\r\n    }\r\n\r\n    public void setUrl(String url) {\r\n        this.url = url;\r\n    }\r\n\r\n    public void setUser(String user) {\r\n        this.user = user;\r\n    }\r\n\r\n    public void setVerbose(boolean verbose) {\r\n        this.verbose = verbose;\r\n    }\r\n}",
        "AMQ accepts illegal wildcard usage in MQTT SUBSCRIBE and UNSUBSCRIBE AMQ accepts: \"#MQTTClient\" , \"MQTTClient/#/def\", \"MQTTClient+\"\r\n\r\nMQTT spec says:\r\n[MQTT-4.7.1-2]\r\nThe multi-level wildcard character MUST be specified either on its own or following a topic level separator. In either case it MUST be the last character specified in the Topic Filter.\r\n[MQTT-4.7.1-3]\r\nThe single-level wildcard can be used at any level in the Topic Filter, including first and last levels. Where it is used it MUST occupy an entire level of the filter."
    ],
    [
        "AMQ-3468",
        "AMQ-1616",
        "Update xstream to latest release v1.4.1 XStream has released version 1.4.1 which includes the fixes that were worked around in AMQ-2825.  This means we can remove our local version of JettisonMappedXmlDriver.java and use the one in the XStream API once more.",
        "JMS Compliance - Closing a closed connection should not throw an exception According to the JMS Spec, section 4.3.5, \"Closing a closed connection must NOT throw an exception.\""
    ],
    [
        "AMQ-3905",
        "AMQ-3609",
        "Karaf: activemq:create-broker results in only locally visible broker When I start ActiveMQ with default config on console I get a broker that is visible by other machines as well as the default config uses 0.0.0.0 as publish address. Surprisingly when I embed it inside a Karaf instance the config generated from activemq:create-broker generates a broker that is only visible on my local machine.\r\n\r\nIt would be better, if both default ways would work the same: Also when starting ActiveMQ inside Karaf, it should publish the broker at 0.0.0.0 ",
        "Turn inactivity monitor thread off by default By default schedulePeriodForDestinationPurge is set to run every 5 second, checking every destination if it needs to be checked or deleted. That can put a lot of stress on brokers with many destinations. As for it to actually work properly what it need to do, the separate destination policy changes must be set, so keeping this on by default doesn't make much sense.\r\n\r\nWe should keep it off by default (0) and set it explicitly if the check is needed."
    ],
    [
        "AMQ-1815",
        "AMQ-2419",
        "NULL ptr when using in memory indexes Caused by: java.lang.NullPointerException\n     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)\n     at org.apache.activemq.kaha.impl.index.VMIndexLinkedList.remove(VMIndexLinkedList.java:265)\n     at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)\n     at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:314)\n     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)\n     at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:695)\n     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)\n     at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.acknowledgeReference(KahaTopicReferenceStore.java:148\n     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)\n     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:163)\n     at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)\n     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:91)\n     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)\n     at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:441)\n     at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)\n     at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:223)\n     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)\n     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:229)\n     at java.lang.Thread.run(Thread.java:595)\n     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)\n ERROR - Service                        - Async error occurred: java.lang.NullPointerException\n     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)\n java.lang.NullPointerException\n     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)\n     at org.apache.activemq.kaha.impl.index.VMIndexLinkedList.remove(VMIndexLinkedList.java:265)\n     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)\n     at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:314)\n     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)\n     at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:695)\n     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)\n     at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.acknowledgeReference(KahaTopicReferenceStore.java:148\n     at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:444)\n     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:163)\n     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)\n     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:91)\n     at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)\n     at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:441)\n     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)\n     at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:223)\n     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)\n     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:229)\n     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)\n     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)\n     at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)\n     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)\n     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)\n     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)\n     at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)\n     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)\n     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)\n     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)\n     ... 1 more\n     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)",
        "move activemq-protocol-buffer to the sandbox "
    ],
    [
        "AMQ-1991",
        "AMQ-2824",
        "dequeue is stalled compared to enqueue pace  After some time ..ActiveMQ is not dequeueing...We are adding 13K message every 10 minute..It's working for some time after that Dequeuing count stays the same ..while enqueueing count keeps increasing.\n\n\n\nWe are using ActiveMQ 5.1\nSpring 2.5\nTomcat 6\nJDK 1.6\n\n",
        "\"Starting ActiveMQ\" doc page is not accurate for latest Unix release See this page:\nhttp://activemq.apache.org/getting-started.html#GettingStarted-StartingActiveMQ\n\nThe \"On Unix\" section directs you to do:\n$ cd [activemq_install_dir]\n$ bin/activemq\n\nThis was correct in 5.2.0, but not in 5.3.0.  As best as I can tell, the Unix instructions should now be:\n$ cd [activemq_install_dir]\n$ java -jar run.jar start  (perhaps as superuser)\n"
    ],
    [
        "AMQ-2068",
        "AMQ-3588",
        "Wrong/missing OSGi metadata in activemq-core and kahadb In order to be able to use ActiveMQ 5.3-SNAPSHOT inside an OSGi container (e.g. ServiceMix Kernel), two modifications are required:\n- the org.apache.maven.* packages should be marked as optional imports from activemq-core\n- kahadb needs to be packaged as an OSGi bundle",
        "PooledSession - Can cause memory leak in case many consumers is created by the session See (CAMEL-4657\r\n\r\nIn the activemq-pool we have a memory leak when a PooledSession is used to create many consumers. As each consumer is added to an internal list, which in case the session is closed, the list is used to ensure all previously created consumers gets closed as well.\r\n\r\nHowever if the session is used to create many consumers, then that internal list just keep growing, and causing OOME. See attached screenshots of a before vs after with the bug fix.\r\n\r\nSo to remedy this situation, we should ensure any closed consumer gets removed from that internal list. As its already closed, and therefore the session do not need to keep track of it anymore.\r\n\r\nThis bug have existed ever since AMQ-615.\r\n\r\nThe impact of this bug can be seen in CAMEL-4657, which essentially makes using Camel for request/reply over JMS with AMQ and with named replyTo queues (eg not temporary) will cause this problem. The problem manifests due Spring DMLC, which uses a MessageSelector to only pickup expected reply messages. And because the MessageSelector is created once when the consumer is created. We need to create a new Consumer, every time a new message is doing request/reply, to ensure the Message Selector gets updated. So in that situation many consumers get created, which leads to OOME as the list in PooledSession keeps growing.\r\n\r\nIt would be great if this bug fix can be backported to the 5.5 branch as well."
    ],
    [
        "AMQ-4704",
        "AMQ-3441",
        "Stomp unit tests fail Failed tests:   testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompNIOSSLTest)\r\n  testTempDestination(org.apache.activemq.transport.stomp.StompNIOSSLTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User system is not authorized to read from: temp-queue://ID:vostro-41790-1377853697900-4:46:1\r\n  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompNIOSSLTest): Receipt Frame: ERROR\r\n  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompNIOSSLTest)\r\n  testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompNIOTest)\r\n  testTempDestination(org.apache.activemq.transport.stomp.StompNIOTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User system is not authorized to read from: temp-queue://ID:vostro-58773-1377854133134-4:46:1\r\n  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompNIOTest): Receipt Frame: ERROR\r\n  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompNIOTest)\r\n  testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompSslAuthTest)\r\n  testTempDestination(org.apache.activemq.transport.stomp.StompSslAuthTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User CN=localhost, OU=activemq.org, O=activemq.org, L=LA, ST=CA, C=US is not authorized to read from: temp-queue://ID:vostro-35025-1377854435243-2:46:1\r\n  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompSslAuthTest): Receipt Frame: ERROR\r\n  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompSslAuthTest)\r\n  testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompSslTest)\r\n  testTempDestination(org.apache.activemq.transport.stomp.StompSslTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User system is not authorized to read from: temp-queue://ID:vostro-34293-1377854833774-4:46:1\r\n  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompSslTest): Receipt Frame: ERROR\r\n  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompSslTest)\r\n  testSendMessageWithDelay(org.apache.activemq.transport.stomp.StompTest)\r\n  testTempDestination(org.apache.activemq.transport.stomp.StompTest): expected:<[Hello World]> but was:<[java.lang.SecurityException: User system is not authorized to read from: temp-queue://ID:vostro-40068-1377855151851-4:46:1\r\n  testReplyToAcrossConnections(org.apache.activemq.transport.stomp.StompTest): Receipt Frame: ERROR\r\n  testReplyToDestinationNaming(org.apache.activemq.transport.stomp.StompTest)\r\n\r\nTests run: 519, Failures: 20, Errors: 0, Skipped: 0\r\n",
        "Broker and client using different versions of AMQ Hi,\r\nWe are in the process of migrating our production broker to version 5.5 (from 5.3). \r\nThe producers and consumers are using version 5.3 for connecting and listening to the queues and topics and we at present we are not in a position to upgrade them to 5.5.\r\n\r\nI would like to know if there is any possibility of a potential issue to creep up due to this. I tried writing a simple producer and consumer test case and starting the broker using 5.5 and found the test cases to be running fine. But I want to be doubly sure before going ahead with this, this evening. \r\n\r\nI request for a response at the earliest.\r\n\r\nThank you\r\nHari"
    ],
    [
        "AMQ-6124",
        "AMQ-5033",
        "failover backup transports do not update the brokerInfo leaving stale org.apache.activemq.ActiveMQConnection#getBrokerName with broker url {code}failover:(tcp://a:<port>,tcp://b:<port> \")?randomize=false&priorityBackup=true{code} The brokerName as reported by \r\norg.apache.activemq.ActiveMQConnection#getBrokerName stays at A even after failover to B.\r\n\r\nThe backup transport are started up front and the brokerInfo is not cached so it  never gets replayed to the jms connection.\r\n\r\nThe same is true for the backup attribute",
        "webconsole url and html encoding missing While working on AMQ-4813, many cases of passing text through to HTML without proper HTML and URL encoding.\r\n\r\nI believe this can cause security risks, failed operations, or a misformatted UI."
    ],
    [
        "AMQ-3578",
        "AMQ-603",
        "Java Wrapper Service does not Start on Windows 7 Enterprise SP1 Service fails to start:  \r\n\r\n2011-11-03 10:43:28,147 | WARN  | tmpdir | org.eclipse.jetty.util.log | WrapperSimpleAppMain\r\njava.io.IOException: The system cannot find the path specified\r\n\tat java.io.WinNTFileSystem.createFileExclusively(Native Method)\r\n\tat java.io.File.createTempFile(File.java:1879)\r\n\tat java.io.File.createTempFile(File.java:1923)\r\n\tat org.eclipse.jetty.webapp.WebInfConfiguration.resolveTempDirectory(WebInfConfiguration.java:279)\r\n\tat org.eclipse.jetty.webapp.WebInfConfiguration.preConfigure(WebInfConfiguration.java:43)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:378)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)\r\n\tat org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:338)\r\n\tat org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:229)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)\r\n\tat org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:242)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\r\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\r\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:114)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:114)\r\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:70)\r\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\r\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\r\n\tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\r\n\tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\r\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\n\tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)\r\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\r\n\tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\r\n\tat org.apache.activemq.console.Main.main(Main.java:107)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\tat org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)\r\n\tat java.lang.Thread.run(Thread.java:722)\r\n2011-11-03 10:43:28,213 | INFO  | ActiveMQ Message Broker (localhost, ID:WOJCIRC1-WL2-49186-1320331407588-0:1) is shutting down | org.apache.activemq.broker.BrokerService | ActiveMQ ShutdownHook\r\n2011-11-03 10:43:29,739 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ ShutdownHook\r\n2011-11-03 10:43:29,743 | INFO  | PListStore:C:\\activemq\\bin\\win32\\..\\..\\data\\localhost\\tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | ActiveMQ ShutdownHook\r\n2011-11-03 10:43:29,743 | INFO  | Stopping async queue tasks | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ ShutdownHook\r\n2011-11-03 10:43:29,743 | INFO  | Stopping async topic tasks | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ ShutdownHook\r\n2011-11-03 10:43:29,743 | INFO  | Stopped KahaDB | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ ShutdownHook\r\n2011-11-03 10:43:30,058 | INFO  | ActiveMQ JMS Message Broker (localhost, ID:WOJCIRC1-WL2-49186-1320331407588-0:1) stopped | org.apache.activemq.broker.BrokerService | ActiveMQ ShutdownHook\r\n\r\nCommand line invocation of wrapper.exe terminates with the following error:\r\n\r\njvm 1    |  INFO | Database ..\\..\\data\\kahadb\\lock is locked... waiting 10 secon\r\nds for the database to be unlocked. Reason: java.io.FileNotFoundException: ..\\..\r\n\\data\\kahadb\\lock (Access is denied)",
        "Patch: C++ command generation scripts I have tweaked the C++ command generation scripts a bit to make them generate more precise types and includes, see attached files."
    ],
    [
        "AMQ-1797",
        "AMQ-2778",
        "persistent messages for durable subscribers are not purged from disc storage I have some problems with multiple durable subscribers while persistent delivery is used.\nMessage should be deleted from disc storage (periodically) after all interested subscribers have received it. In case there was one durable subscriber everything woks just fine. However when I tested this scenerio with two durable subscribers on topic,  the messages were never deleted (disc usage is continously consumed and never purged). \n\n\nTest case description:\n-using default activemq.xml configuration file from binary distribution \n-TopicConsumers.java creates two separetes durable consumers\n-textMessageFile.txt is file which text is sent by producer (place it on classpath)\n\nResult:\n-all messages there were send were also received by both subscribers\n-after more then 100k messages data directory is about 1GB. \n-restarting activemq with so big persistent storage takes very long time",
        "Memory leak with ManagedRegionBroker There are memory leak with the ManagedRegionBroker"
    ],
    [
        "AMQ-3713",
        "AMQ-814",
        "tmpDB.data file grows irreversibly Steps to replicate\r\n\r\nOn a queue, produce non-persistent messages(message size can be 1Kb to 5kb ) with consumer down. There will be an increase in db-*.log files along with this there is an increase in the size of tmpDB.data file. Let the temp store percentage grow up to 90% without triggering the consumer. Once the temp store is 90% start the consumer. The log files are deleted once the messages are consumed but tmpDB.data file does not decrease in size and this causes  the temp store to be 60 - 70% full.  \r\n\r\nIssues with this with slow consumer, which does not call for a producer flow control, temp store % keeps growing and at one particular point of time hits 100% just because of tmpDB.data file and hence no messages can be produced on to AMQ without a restart of it.\r\n\r\nIn my case this situation occurs very quickly when one of the consumer goes down as the load on AMQ is high.\r\n\r\nThe above is the case with persistent store as well. Please suggest a solution or provide a patch for this problem.",
        "Remove the Maven 1 build files since maven 2 is now the prefered way to build ActiveMQ "
    ],
    [
        "AMQ-5271",
        "AMQ-3656",
        "Add an in-memory JobSchedulerStore implementation For brokers that run with persistence disabled there currently no in-memory job scheduler store so an embedded broker without persistence can't have scheduled messages or do broker led redelivery without manually configuring in the normal JobSchedulerStore impl which requires a disk based store.  We should add an in memory variant that is the default if persistence is disabled but scheduler support is enabled. ",
        "Activemq hung or slows down significantly when high number of connections occurs We have an issue with AMQ performance. In our test program, we run two amq nodes in a network cluster. Both AMQ client and server/worker consist of producers and consumers. When client makes a connection to an AMQ node, it will send messages to three queues and meanwhile listen to 2 topics and one temporary queue. In AMQ worker/server side, it will listen to three queues and send messages back to corresponding two topics and one temp queue.  During our test, We first had 10 servers/workers running at the same node as one AMQ broker was running, then started client program remotely by making 50 connections first, then repeated the 50 connections again and again. We found when the connection number reached above 650, AMQ slowed down significantly, as when we tried to send a text message through Jconsole (which run remotely also);  we couldn't get a response from Jconsole with a returned messageID.  Any message sent during that time was not enqueued in time.  Looks like there was a blocking to the producer side, but we had producer flow control turned off.  The heap memory usage looked fine to us during that time (well below 3G we assigned for JVM). But we did notice that we even couldn't do a thread dump during that time, as it kept failing to attach the process. It took some time (from 10 seconds to 15 minutes or more) for the AMQ to come back and response to the messages sent, and by then we could do thread dump without a problem.  \r\nIn amq configure side, I have followed suggestion by Dave Stanley http://www.pepperdust.org/?p=150. Not sure why we still have such a \"hung\" problem? I'll attach the test case program with our amq configure file latter. \r\n"
    ],
    [
        "AMQ-272",
        "AMQ-2172",
        "Default Wire Format message caching cannot be disabled See:\n\nhttp://permalink.gmane.org/gmane.comp.java.activemq.devel/534",
        "QueueBrowser doesn't browse the entire queue Browsing a queue only seems to \"snapshot\" the first few messages in the queue when there are lots of messages in the buffer.  See attached test case."
    ],
    [
        "AMQ-5388",
        "AMQ-816",
        "User Role Granted Full Privileges in jetty.xml The default ConstraintMapping for the \"user\" role grants privileges to /admin/*, which supersedes the *.action constraint that is supposed to be granted only to the admin role.\r\n\r\nThe current pathspec for the user role reads:\r\n<property name=\"pathSpec\" value=\"/api/*,/admin/*,*.jsp\" />\r\n\r\nBy granting access to /admin/*, that in turn grants access to all of the *.action URLs, essentially nullifying the attempt to restrict *.action URLs to only the admin role.\r\n\r\nTo repeat, just log in as the default \"user/user\" account to the web console and add or delete destinations.\r\n\r\nWorkaround is to change the pathSpec to:\r\n\r\n<property name=\"pathSpec\" value=\"/,*.jsp,*.css\" />\r\n\r\nWhich allows access to the console but disallows access to the *.action URLs.",
        "new transport for load balancing client requests across many brokers Rather than creating store and forward networks, it might be nice to have a kind of composite transport where...\n\n* consumers are created on each broker found/discovered. This allows messages to be sent to any broker and consumed by any consumer\n\n* producers could dynmically choose which broker to send a message to (or could just pick one broker per session/producer)\n\nthis allows for a load balancing layer at the client side which avoids the need for store/forward networks (which results in more network traffic and often increases load on the brokers).\n\nSo it basically pushes load back to the clients. The downside of this appoach is that the clients have more connections to brokers - but given the linear scalability of this, it sounds a great idea to me at least :)"
    ],
    [
        "AMQ-2470",
        "AMQ-2475",
        "JMS clients stalled in case of many messages on a different queue - JDBC persistence With a large amount of messages in a Queue > 2M, the cleanup task takes a long time, maybe 20 minutes. Then it starts again immediately, which continually hogs the database as it locks out other users or other destinations.",
        "If tmp message store fills up, broker can deadlock due to while producers wait on disk space and consumers wait on acks I will attach a simple project that shows this. In the test the tmp space is set to 32 MB and two threads are created. One thread will constantly produce 1KB messages and the other consumes these, but sleeps for 100ms, note that producer flow control is turned off as well. The goal here is to ensure that the producers block while the consumers read the rest of the messages from the broker and catch up, this in turn frees up the disk space and allows the producer to send more messages. This config means that you can bound the broker based on disk space rather than memory usage.\n\nUnfortunately in this test using topics while the broker is reading in the message from the producer it has to lock the matched list it is adding it to. This is an abstract from the Topic's point of view and doesn't realize that the file may block based on the file system. \n{code}\n    public void add(MessageReference node) throws Exception { //... snip ...\n            if (maximumPendingMessages != 0) {\n                synchronized (matchedListMutex) {   // We have this mutex\n                    matched.addMessageLast(node); // ends up waiting for space\n                    // NOTE - be careful about the slaveBroker!\n                    if (maximumPendingMessages > 0) {\n{code}\nMeanwhile the consumer is sending acknowledgements for the 10 messages it just read in (the configured prefetch) from the same topic, but since they also modify the same list in the topic this waits as well on the mutex held to service the producer:\n{code}\n    private void dispatchMatched() throws IOException {       \n        synchronized (matchedListMutex) {  // never gets passed here.\n            if (!matched.isEmpty() && !isFull()) {\n{code}\nThis is a fairly classic deadlock. The trick is now how to resolve this given the fact that the topic isn't aware that it's list may need to wait for the file system to clean up.\n"
    ],
    [
        "AMQ-2797",
        "AMQ-2993",
        "KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release The KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release.\n\nFurthermore, the key A2F9E313 does not appear to be available from the pgp.mit.edu server.\n\nThis means that it is impossible to check the integrity of the release.\n\n",
        "Virtual topic interceptor process advisory messages This can cause all sorts of trouble (including forwarding ConsumerInfo to the consumer) in networked environment."
    ],
    [
        "AMQ-902",
        "AMQ-5436",
        "Exception thrown when compiling activemq-optional. The exception below is thrown when compiling activemq-optional.\n\n\"[WARNING] Unable to get resource from repository central (http://ibiblio.org/maven2/)\n[INFO] [compiler:compile]\nCompiling 12 source files to D:\\logicblaze\\working-source\\activemq\\activemq-optional\\target\\classes\n[INFO] ------------------------------------------------------------------------\n[ERROR] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Compilation failure\n\nD:\\logicblaze\\working-source\\activemq\\activemq-optional\\src\\main\\java\\org\\apache\\activemq\\transport\\https\\HttpsTransportServer.java:[51,36] cannot find symbol\nsymbol  : method setAlgorithm(java.lang.String)\nlocation: class org.mortbay.jetty.security.SslSocketConnector\"\n\n--------------------------------------------------------------------------------\n\nThere was an update made on jetty dependency version from 6.0.0rc0 to 6.0.0rc2 wherein the method \"setAlgorithm(String)\" of \"org.mortbay.jetty.security.SslSocketConnector\" was changed to a more specific methods \"setSecureRandomAlgorithm(String), setSslKeyManagerFactoryAlgorithm(String) and setSslTrustManagerFactoryAlgorithm(String)\". This change caused the class \"HttpsTransportServer.\" to throw an exception since it can no longer find the \"setAlgorithm(String)\" method. \n\n\n",
        "Performance Test does not cater for temporary destinations The current version of the performance test tool does not support the use of temporary queues or topics. Consumers should be able to create one on demand, while producers should be able to send messages to a named temp destination."
    ],
    [
        "AMQ-1277",
        "AMQ-3986",
        "Deployed 4.2-incubator-SNAPHOT poms has not expanded properties. If you inspect\nhttp://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/activemq-parent/4.2-incubator-SNAPSHOT/activemq-parent-4.2-incubator-20070121.082022-40.pom\nyou will notice that the properties have not been expanded. For instance:\n\n<dependency>\n  <groupId>org.apache.geronimo.specs</groupId>\n  <artifactId>geronimo-j2ee-management_1.0_spec</artifactId>\n  <version>${org-apache-geronimo-specs-version}</version>\n</dependency>\n\ninstead of \n\n<dependency>\n  <groupId>org.apache.geronimo.specs</groupId>\n  <artifactId>geronimo-j2ee-management_1.0_spec</artifactId>\n  <version>1.0</version>\n</dependency> \n\nThis was a known problem with maven 2.0.5. Could you please redeploy all your activemq 4.2-incubator-SNAPSHOT poms using maven 2.0.4? (Alternatively 2.0.6 should work too.)",
        "Allow optimizeDurableTopicPrefetch to be set using resource adapter properties "
    ],
    [
        "AMQ-5618",
        "AMQ-4112",
        "Infinite loop in log replay with Replicated LevelDB This is very similar to AMQ-5300 except that I use replicatedLevelDB persistence adapter and in order to reproduce I don't have to delete any index files.\r\n\r\nSetup: 1 ZK instance, 3 AMQ nodes.\r\nOne of the AMQ configs:\r\n{code}\r\n<replicatedLevelDB directory=\"${activemq.data}/replicatedLevelDB\"\r\n                                replicas=\"3\"\r\n                                bind=\"tcp://0.0.0.0:61619\"\r\n                                zkAddress=\"instance-6:2181\"\r\n                                zkPath=\"/activemq/leveldb-stores\"\r\n                                hostname=\"instance-7\" />\r\n{code}\r\nDifference between nodes is only in hostname attribute.\r\n\r\nThe way to reproduce is almost the same as in AMQ-5300: \r\n# Produce lots of messages to generate several log files in leveldb data directory.\r\n# Consume _some_ messages until you see \"Deleting log\" in activemq.log.\r\n# Restart master. Wait for system to rebalance itself. Everything's fine at this point.\r\n# Restart the second master.\r\n# Observe the massive (infinite?) logging on slave and relatively calm but still possibly infinite logging on master.\r\n\r\nThis is what the first master logs after it's restarted:\r\n{code}\r\n2015-02-25 21:37:08,338 | DEBUG | Download session connected... | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:08,582 | INFO  | Slave skipping download of: log/00000000190be289.log | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,099 | INFO  | Slave skipping download of: log/000000000642f848.log | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,411 | INFO  | Slave skipping download of: log/000000000c85f06d.log | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,838 | INFO  | Slave skipping download of: log/0000000012c8e921.log | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,842 | INFO  | Slave requested: 000000001c9373b4.index/CURRENT | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,846 | INFO  | Slave requested: 000000001c9373b4.index/MANIFEST-000002 | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,850 | INFO  | Slave requested: 000000001c9373b4.index/000003.log | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,857 | INFO  | Attaching... Downloaded 0.02/95.65 kb and 1/3 files | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,859 | INFO  | Attaching... Downloaded 0.06/95.65 kb and 2/3 files | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,861 | INFO  | Attaching... Downloaded 95.65/95.65 kb and 3/3 files | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,862 | INFO  | Attached | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:37:09,878 | DEBUG | Taking a snapshot of the current index: /usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/000000001c9373b4.index | org.apache.activemq.leveldb.LevelDBClient | Thread-2\r\n2015-02-25 21:37:10,352 | DEBUG | Recovering from last index snapshot at: /usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/dirty.index | org.apache.activemq.leveldb.LevelDBClient | Thread-2\r\n{code}\r\n\r\nRight after that everything seems fine. But as soon as I stop the new master, the another new master (that would be the third one) logs\r\n\r\n{code}\r\n2015-02-25 21:38:43,876 | INFO  | Promoted to master | org.apache.activemq.leveldb.replicated.MasterElector | main-EventThread\r\n2015-02-25 21:38:43,894 | INFO  | Using the pure java LevelDB implementation. | org.apache.activemq.leveldb.LevelDBClient | ActiveMQ BrokerService[localhost] Task-5\r\n2015-02-25 21:38:45,954 | WARN  | Invalid log position: 44 | org.apache.activemq.leveldb.LevelDBClient | ActiveMQ BrokerService[localhost] Task-5\r\n2015-02-25 21:38:45,955 | WARN  | Invalid log position: 325280 | org.apache.activemq.leveldb.LevelDBClient | ActiveMQ BrokerService[localhost] Task-5\r\n...\r\n2015-02-25 21:38:46,696 | WARN  | Invalid log position: 104726993 | org.apache.activemq.leveldb.LevelDBClient | ActiveMQ BrokerService[localhost] Task-5\r\n2015-02-25 21:38:46,902 | INFO  | Master started: tcp://instance-8:61619 | org.apache.activemq.leveldb.replicated.MasterElector | ActiveMQ BrokerService[localhost] Task-6\r\n...\r\n2015-02-25 21:38:52,127 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main\r\n2015-02-25 21:38:53,181 | INFO  | jolokia-agent: No access restrictor found at classpath:/jolokia-access.xml, access to all MBeans is allowed | /api | main\r\n2015-02-25 21:38:56,881 | WARN  | Invalid log position: 0 | org.apache.activemq.leveldb.LevelDBClient | Thread-4\r\n2015-02-25 21:39:06,884 | WARN  | Invalid log position: 0 | org.apache.activemq.leveldb.LevelDBClient | Thread-4\r\n2015-02-25 21:39:16,887 | WARN  | Invalid log position: 0 | org.apache.activemq.leveldb.LevelDBClient | Thread-4\r\n...\r\n{code}\r\nthe last message starts repeating every 10 seconds without hint of stopping.\r\nAt the same time the one left slave (that was the 1st master) logs\r\n{code}\r\n2015-02-25 21:38:50,124 | INFO  | Attached | org.apache.activemq.leveldb.replicated.SlaveLevelDBStore | hawtdispatch-DEFAULT-1\r\n2015-02-25 21:38:50,134 | DEBUG | Taking a snapshot of the current index: /usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/000000001c9373b4.index | org.apache.activemq.leveldb.LevelDBClient | Thread-3\r\n2015-02-25 21:38:50,149 | DEBUG | Recovering from last index snapshot at: /usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/dirty.index | org.apache.activemq.leveldb.LevelDBClient | Thread-3\r\n2015-02-25 21:38:50,189 | DEBUG | Replay of journal from: 0 to 479425460. | org.apache.activemq.leveldb.LevelDBClient | Thread-3\r\n2015-02-25 21:38:50,328 | WARN  | No reader available for position: 0, log_infos: {105052232=LogInfo(/usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/000000000642f848.log,105052232,105052197), 210104429=LogInfo(/usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/000000000c85f06d.log,210104429,105052340), 315156769=LogInfo(/usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/0000000012c8e921.log,315156769,105052520), 420209289=LogInfo(/usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/00000000190be289.log,420209289,0)} | org.apache.activemq.leveldb.RecordLog | Thread-3\r\n2015-02-25 21:38:50,332 | WARN  | No reader available for position: 0, log_infos: {105052232=LogInfo(/usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/000000000642f848.log,105052232,105052197), 210104429=LogInfo(/usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/000000000c85f06d.log,210104429,105052340), 315156769=LogInfo(/usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/0000000012c8e921.log,315156769,105052520), 420209289=LogInfo(/usr/local/apache-activemq-5.11.1/data/replicatedLevelDB/00000000190be289.log,420209289,0)} | org.apache.activemq.leveldb.RecordLog | Thread-3\r\n...\r\n{code}\r\nthe last message repeats infinitely and every ~1ms, with activemq process taking 100% CPU.\r\n\r\nIf I would now start the stopped node (that was the 2d master) it would log exactly the same message with the same intensity.\r\n\r\nIt should also be noted that while I can observe correct diminished (relatively to initial, due to some consumption) count of messages in a queue via console after the first restart, the second restart changes that and queue size becomes bigger (although I'm not sure if it is equal to the size of queue before any consumption).",
        "Upgrade to MQTT Client 1.4 We should upgrade from 1.3 to 1.4"
    ],
    [
        "AMQ-3118",
        "AMQ-909",
        "Failover Transport Hot Backup Connections Not Being Closed By Connection Pool When The Primary Connection Is Idle I am currently using the following URL in my consumer to connect to my AMQ broker:\r\nfailover://(tcp://host1:61616,tcp://host2:61616)?randomize=false&maxReconnectAttempts=2&startupMaxReconnectAttempts=100&initialReconnectDelay=1000&backup=true&timeout=3000\r\n\r\nI have specified the URL parameter backup=true to enable fast failover.\r\n\r\nI am also using the following connection factory configuration from Spring:\r\n\r\n<bean id=\"feeds-jms-connection-factory\" class=\"org.apache.activemq.pool.XaPooledConnectionFactory\"\r\n  destroy-method=\"stop\">\r\n  <property name=\"connectionFactory\">\r\n    <bean class=\"org.apache.activemq.spring.ActiveMQConnectionFactory\">\r\n      <property name=\"brokerURL\" value=\"failover://(tcp://host1:61616,tcp://host2:61616)?randomize=false&amp;maxReconnectAttempts=2&amp;startupMaxReconnectAttempts=100&amp;initialReconnectDelay=1000&amp;backup=true&amp;timeout=3000\" />\r\n      <property name=\"redeliveryPolicy\">\r\n        <bean class=\"org.apache.activemq.RedeliveryPolicy\">\r\n          <property name=\"maximumRedeliveries\" value=\"3\" />\r\n          <property name=\"initialRedeliveryDelay\" value=\"100\" />\r\n        </bean>\r\n      </property>\r\n    </bean>\r\n  </property>\r\n</bean>\r\n\r\nThe problem is this: currently, my producers are not working at a very high load, so my primary connections are in an idle state for more than 30 seconds, which means that the connection pool is expiring them.  Unfortunately, the pool is not closing the hot backup connections (I can see this through either the JMX console or by running netstat on the producer and broker boxes and seeing a large number of open connections between the producer and broker).  After a few days, the broker is running out of file handles and the broker's CPU is pegged because of all the persistent connections.\r\n\r\nIt seems that it should be the responsibility of the Pooled Connection Factory to close any persistent backup connections (or perhaps it should be the responsibility of whichever component creates the hot backup connection in the first place).  In any case, this seems to be a resource leak.\r\n\r\nMy only option right now is not to use hot backups and to let those backup connections be created dynamically.\r\n\r\n",
        "Upgrade to xbean 2.6 "
    ],
    [
        "AMQ-1863",
        "AMQ-2366",
        "org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long I have web client which uses jetty configured through servicemix which intermittently throws an activemq.transport.InactivityIOException. The problem is reported in a solaris environment and I have been able to reproduce this issue with Redhat Linux AdvancedServer 2.1 after an extended period of no web client activity for about 2 days.\n\nI have tried setting maxInactivityDuration = 0 (at the web client end) and have also tried applying the patch (changes to Transport.InactivityMonitor.java) mentioned in AMQ-1146 to 4.0.2 but the issue still occurs.\n\nIt appears that this issue has been ongoing as there are similar issues resolved in 5.1.\n\nIs this issue resolved in 4.1 or must I upgrade to 5.1 to resolve this issue?\n\nBelow is exception message from the servicemix.log and the activemq.xml confguration file is attached.\n\n15:25:19,414 | WARN  | btpool0-10922 | jetty                    | ervicemix.http.jetty.JCLLogger   93 | /ecli/: \njava.lang.Exception: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Channel was inactive for too long.; nested exception is org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.\n\tat org.apache.servicemix.http.processors.ConsumerProcessor.process(ConsumerProcessor.java:202)\n\tat org.apache.servicemix.http.HttpBridgeServlet.doPost(HttpBridgeServlet.java:71)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:615)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:688)\n\tat org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:443)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:356)\n\tat org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:179)\n\tat org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:615)\n\tat org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:149)\n\tat org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:123)\n\tat org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:141)\n\tat org.mortbay.jetty.Server.handle(Server.java:269)\n\tat org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:430)\n\tat org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:333)\n\tat org.mortbay.jetty.nio.HttpChannelEndPoint.run(HttpChannelEndPoint.java:270)\n\tat org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)\nCaused by: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Channel was inactive for too long.; nested exception is org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.\n\tat org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:194)\n\tat org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:162)\n\tat org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:432)\n\tat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:485)\n\tat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:471)\n\tat org.apache.servicemix.components.jms.JmsSenderComponent.process(JmsSenderComponent.java:81)\n\tat org.apache.servicemix.components.util.OutBinding.onMessageExchange(OutBinding.java:49)\n\tat org.apache.servicemix.jbi.messaging.DeliveryChannelImpl.processInBound(DeliveryChannelImpl.java:624)\n\tat org.apache.servicemix.jbi.nmr.flow.AbstractFlow.doRouting(AbstractFlow.java:169)\n\tat org.apache.servicemix.jbi.nmr.flow.seda.SedaFlow.doRouting(SedaFlow.java:177)\n\tat org.apache.servicemix.jbi.nmr.flow.seda.SedaQueue$1.run(SedaQueue.java:227)\n\tat org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)\n\tat EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)\n\tat java.lang.Thread.run(Unknown Source)\nCaused by: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Channel was inactive for too long.\n\tat org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1171)\n\tat org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:270)\n\tat org.apache.activemq.pool.SessionPool.createSession(SessionPool.java:112)\n\tat org.apache.activemq.pool.SessionPool.makeObject(SessionPool.java:80)\n\tat org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)\n\tat org.apache.activemq.pool.SessionPool.borrowSession(SessionPool.java:55)\n\tat org.apache.activemq.pool.ConnectionPool.createSession(ConnectionPool.java:70)\n\tat org.apache.activemq.pool.PooledConnection.createSession(PooledConnection.java:129)\n\tat org.springframework.jms.core.JmsTemplate.createSession(JmsTemplate.java:826)\n\tat org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:420)\n\t... 11 more\nCaused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.\n\tat org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:101)\n\tat org.apache.activemq.transport.InactivityMonitor.access$000(InactivityMonitor.java:35)\n\tat org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:51)\n\tat edu.emory.mathcs.backport.java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:431)\n\tat edu.emory.mathcs.backport.java.util.concurrent.FutureTask.runAndReset(FutureTask.java:198)\n\tat edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:189)\n\tat edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:213)\n\tat edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)\n\tat edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)\n\t... 1 more",
        "File leak in KahaDB file lock - slave exhausts OS fd limit If I follow the logs, the slave brokers emit this message for a while:\n \nDatabase /opt/fusemq/data/dev-broker1/kahadb/lock is locked... waiting 10 seconds for the database to be unlocked. Reason: java.io.IOException: File '/opt/fusemq/data/dev-broker1/kahadb/lock' could\nnot be locked.\n \nThen, it switches to\n \nDatabase /opt/fusemq/data/dev-broker1/kahadb/lock is locked... waiting 10 seconds for the database to be unlocked. Reason: java.io.FileNotFoundException: /opt/fusemq/data/dev-broker1/kahadb/lock (Too many open files)\n\nlsof shows loads of fds allocated to the slave broker."
    ],
    [
        "AMQ-1545",
        "AMQ-5979",
        "Chat sample not working properly with > 1 windows Opening three browser windows of the Chat sample is resulting in it not working properly.  Each message sent from one window gets picked up by only one of the three browser windows (in rotating fashion).  It is possible to move to a publish-subscribe model for the javascript comprising this example so all windows get each message sent?",
        "Error browsing message on queue. Trying to browse to a message gives the error...\r\n\r\nException occurred while processing this request, check the log for more information!\r\n\r\nactivemq.log gives...\r\n\r\n\r\nPWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag\r\nPWC6199: Generated servlet error:\r\nThe type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files\r\n"
    ],
    [
        "AMQ-3290",
        "AMQ-5642",
        "Wire format negotiation timeout: peer did not send his wire format I have two client application written on Java. Each of them has consumers to ActiveMQ (maven dependancy 'activemq-core' version 5.3.2).\r\nAlso there are three applications written on C# (two windows services and one ASP.NET application) which use Apache.NMS 1.5 to connect to ActiveMQ server.\r\n\r\nDuring some time everything's fine (e.g. today this period has been about 4 hours). But since some moment .NET started throw the following exception:\r\n\r\nWire format negotiation timeout: peer did not send his wire format.\r\nApache.NMS.ActiveMQ.IOException: Wire format negotiation timeout: peer did not send his wire format.\r\n   at Apache.NMS.ActiveMQ.Connection.SyncRequest(Command command) in c:\\dev\\NMS.ActiveMQ\\src\\main\\csharp\\Connection.cs:line 628\r\n   at Apache.NMS.ActiveMQ.Connection.CheckConnected() in c:\\dev\\NMS.ActiveMQ\\src\\main\\csharp\\Connection.cs:line 712\r\n   at Apache.NMS.ActiveMQ.Connection.CreateAtiveMQSession(AcknowledgementMode ackMode) in c:\\dev\\NMS.ActiveMQ\\src\\main\\csharp\\Connection.cs:line 467\r\n   at Apache.NMS.ActiveMQ.Connection.CreateSession() in c:\\dev\\NMS.ActiveMQ\\src\\main\\csharp\\Connection.cs:line 454\r\n\r\nActually Java consumers also don't work though there are no errors in their part. But I can see via ActiveMQ web console that no one Query has consumers (for each Query column 'Number Of Consumers' value equals 0).\r\nSo actually nothing works (not Java, not C#) since some moment. I can see the error in .NET but can't see in Java.\r\n\r\nAlso this problem appears after restarting operation system. Not always but it happens occasionally.\r\n\r\nPS For Java application I use org.apache.activemq.ActiveMQConnectionFactory and Mule ESB jms:activemq-connector. And this part doesn't show error when it happens.\r\nFor C# applications I use Apache.NMS.ActiveMQ.ConnectionFactory and every time when I think we can face to problem I'm trying to get new connection with the following code lines:\r\n\r\nif ((connection == null) || !connection.IsStarted)\r\n{\r\n\tconnection = factory.CreateConnection();\r\n\tISession session = connection.CreateSession();\r\n\tIDestination dest = session.GetDestination(Queue);\r\n\tproducer = session.CreateProducer(dest);\r\n}\r\n\r\nbut unfortunately it doesn't help.",
        "Add ActiveMQXAConnectionFactory to ra.xml Add ActiveMQXAConnectionFactory definition to ra.xml so that it can be used as an admin-object."
    ],
    [
        "AMQ-1858",
        "AMQ-2784",
        "Integer overflow in default settings From BrokerService, line 711-2:\n\nsystemUsage.getTempUsage().setLimit(1024 * 1024 * 1024 * 100); // 10 Gb\nsystemUsage.getStoreUsage().setLimit(1024 * 1024 * 1024 * 100); // 100 GB\n\nThe expression 1024 * 1024 * 1024 * 100 overflows int, so the above lines actually correspond to setLimit(0).\nEasy fix is to make one of the multipliers a long, for example:\n\n1024L * 1024 * 1024 * 100\n\nOther places may have the same problem, but I did not look for all places.",
        "Change favicon "
    ],
    [
        "AMQ-5266",
        "AMQ-2723",
        "Stuck Messages in Single Broker when using JDBC Persistent Store With multiple concurrent producer transactions and active fast consumers it is possible to get out of order db insertions and scans resulting in a skipped dispatch. This scenario is exacerbated when the cursor cache is disabled because every dispatch will potentially result in a scan.\r\nthe JDBC store maps jms transaction to jdbc connection transactions at the point of a commit and these can occur in parallel. The broker tracks a sequenceId to ensure ordering relative to a jms connection and  scans respect that order but there is currently nothing to stop a scan seeing a later sequence before an earlier sequence is stored. In other words, inserts can race, but the reader needs to limit a read to the lowest outstanding sequence.\r\n\r\nOn a restart, any stuck messages will be replayed correctly, because the cursor transient state w.r.t to the last sequence id read will be reset.",
        "VM connection leaks during each attempt to create a network bridge to a non-existent broker. Symptom\n========\nWe deployed ActiveMQ in a network of brokers using HTTP as the broker-to-broker transport and VM as the inter-broker transport.  Each broker uses a SimpleDiscoveryAgent with a list of HTTP URLs to potential peer brokers -- in many cases this list contains URLs for brokers that are inactive for long periods of time.  We performed a week-long test with three active brokers and 5 inactive brokers.  After one week, the active brokers began reporting OutOfMemory exceptions related to exhaused heap space (384MB max) and they stopped functioning.\n\nThe generated heap dump revealed 100K+ instances of DurableConduitBridge and related anonymous classes in DemandForwardingBridgeSupport.  Our expectation was that since there are only three active brokers, there should have been at most three instances of DurableConduitBridge.  It appeared that each attempt to create a bridge to a non-existent broker was resulting in leaking instances of DurableConduitBridge et al.\n\nUnit Test\n=======\nA JUnit test is included with this ticket to demonstrate the issue.\n\nCause\n=====\nThe leaking references to DirectConduitBridge et al. were due to the accumulation of VMTransport connections in TransportConnector#connections.  It seemed that each failed attempt to create a network bridge was resulting in an instance being added to TransportConnector#connections that was never being removed.  Here's the reason...\n\nEach time a broker attempts to create a network bridge to another broker, a call is made to DiscoveryNetworkConnector::onServiceAdd(DiscoveryEvent) by SimpleDiscoveryAgent.  The broker initiating the connection creates a local and remote transport and then attempts to create a bridge between them:\n\n   remoteTransport = TransportFactory.connect(connectUri);\n...\n   localTransport = createLocalTransport();\n...\n   try {\n      bridge.start();\n      ...\n    } catch (Exception e) {\n      ServiceSupport.dispose(localTransport);\n      ServiceSupport.dispose(remoteTransport);\n      ...\n   }\n\nIf the remote broker does not exist (as is the case with our environment), bridge.start() throws an exception which triggers the disposal of the local and remote transports.\n\nThe localTransport is an instance of VMTransport, and its disposal will eventually call VMTransport#stop():\n\n    public void stop() throws Exception {\n...\n                enqueueValve.turnOff();\n                if (!disposed) {\n                    started = false;\n                    disposed = true;\n...\n                }\n            } finally {\n                stopping.set(false);\n                enqueueValve.turnOn();\n            }\n...\n            // let the peer know that we are disconnecting..\n            try {\n                oneway(DISCONNECT);\n            } catch (Exception ignore) {\n            }\n        }\n    }\n\nThe DISCONNECT should get processed by the VMTransport#iterate() on the peer side:\n\n    public boolean iterate() {\n...\n            if( command == DISCONNECT ) {\n                tl.onException(new TransportDisposedIOException(\"Peer (\" + peer.toString() + \") disposed.\"));\n            } else {\n...\n\ntl is a reference to the TransportListener implemented by TransportConnection  and should result in a call to TransportConnection#doStop():\n\n    protected void doStop() throws Exception, InterruptedException {\n...\n        connector.onStopped(this);\n\nThe call to connector.onStopped(this) is implemented by TransportConnector#onStopped(TransportConnection):\n\n    public void onStopped(TransportConnection connection) {\n        connections.remove(connection);\n    }\n\nThis removes the connection represented by the local side of the bridge from the connections array.\n\n*** HOWEVER *** in VMTransport#stop(), the disposed flag is set to true before the call to oneway(DISCONNECT); this causes the oneway(DISCONNECT) to fail  because of this code in VMTransport#oneway(Object):\n\n    public void oneway(Object command) throws IOException {\n        if (disposed) {\n            throw new TransportDisposedIOException(\"Transport disposed.\");\n        }\n...\n\nIn other words, the DISCONNECT never makes it to the peer and so is never processed by TransportConnection (as TransportListener).\n\nSolution\n=======\nThe solution is to send the DISCONNECT before setting the disposed flag to true.  However, care must be taken to prevent deadlock since VMTransport#stop() acquires a lock on enqueueValve and VMTransport#oneway(Object) acquires locks on the peer.enqueueValve --- if both peers try to stop concurrently, they may deadlock on the acquisition of VMTransport#enqueueValve.  To prevent this deadlock, it is necessary to send the DISCONNECT before the \"local\" enqueueValve is acquired --- this may mean sending the DISCONNECT unnecessarily (i.e., even if the client is already disposed), but this is not a problem since the resulting exception is ignored.\n\n"
    ],
    [
        "AMQ-2230",
        "AMQ-5434",
        "activemq-flow: Store and SharedQueue enhancements -- new SharedQueue implementation that is persistent This patch replaces the old SharedQueue implementation with one that uses the store.  General persistence and recovery of the shared, partitioned and priority queues are working. \n\nThere are some still some issues that need to be worked out:\n1. Memory limiting -- there are still some issue in this area when the queue size is larger than the memory size.\n2. Message expiration is not yet implemented.\n3. Redelivery updates are not yet working. \n",
        "Expose consumer details via JMX Via the ActiveMQ console, details are presented per connection / client about:\r\n* Selector\r\n* Enqueues\r\n* Dequeues\r\n* Dispatched\r\n...etc\r\n\r\nIt would be really great if 3rd party monitoring tooling (such as HawtIO) could pick up these details too through JMX.\r\n\r\n"
    ],
    [
        "AMQ-5488",
        "AMQ-848",
        "Broker should not log IOExceptions from TransportConnection class on WARN level when shutting down If the broker is in the process of shutting down, then prior function calls into the persistence adapter layer could result in and bubble back up with an IOException due to the fact that the broker is shutting down. Currently, such TransportConnection IOException(s) are handled and logged on the WARN level when actually they are harmless as the broker is shutting down. For one such example, please consider the following code blocks from  activemq-5.10.0:\r\n\r\nactivemq\\activemq-broker\\src\\main\\java\\org\\apache\\activemq\\broker\\TransportConnection.java\r\n\r\nLines 933 - 937\r\n\r\ntry {\r\n     broker.preProcessDispatch(messageDispatch);\r\n} catch (RuntimeException convertToIO) {\r\n     throw new IOException(convertToIO);\r\n}\r\n\r\nWhen this block throws the IOException, it is caught and further thrown from \r\n\r\nLines 941 - 951\r\n\r\n} catch (IOException e) {\r\n     if (messageDispatch != null) {\r\n          TransmitCallback sub = messageDispatch.getTransmitCallback();\r\n           broker.postProcessDispatch(messageDispatch);\r\n           if (sub != null) {\r\n                sub.onFailure();\r\n           }\r\n           messageDispatch = null;\r\n           throw e;\r\n     }\r\n}\r\n\r\nWhen this block throws the exception, it is further caught and serviced by\r\n\r\nLines 989 - 995\r\n\r\n} catch (IOException e) {\r\n     if (dispatchStopped.compareAndSet(false, true)) {\r\n          dispatchStoppedLatch.countDown();\r\n     }\r\n     serviceExceptionAsync(e);\r\n     return false;\r\n}\r\n\r\nLines 267 - 276 (serviceExceptionAsync) create a new \"Async Exception Handler\" thread which will invoke serviceException\r\n\r\nLines 287 - 289\r\n\r\nif (e instanceof IOException) {\r\n     serviceTransportException((IOException) e);\r\n}\r\n\r\nThis will evaluate to true and hence serviceTransportException is invoked\r\n\r\nLines 242 - 246\r\n\r\nif (TRANSPORTLOG.isDebugEnabled()) {\r\n     TRANSPORTLOG.debug(this + \" failed: \" + e, e);\r\n} else if (TRANSPORTLOG.isWarnEnabled() && !expected(e)) {\r\n     TRANSPORTLOG.warn(this + \" failed: \" + e);\r\n}\r\n\r\nIf debug is enabled, then it is OK for all IOExceptions to be logged. However, in the \"else if\" case, it is not considered if this TransportConnection IOException is being handled while the broker is shutting down. The suggestion is to consider the value of this.broker.getBrokerService().isStopping() as part of the expected(e) call to limit the amount of benign WARN messages that can show up in the log and cause confusion as the broker is shutting down.\r\n\r\nA patch for this fix will be provided.\r\n\r\n",
        "Consolidate all LICENSE files to a single file. For an example see:\nhttp://www.apache.org/dev/release.html"
    ],
    [
        "AMQ-130",
        "AMQ-4735",
        "Keep-alive for ReliableTransportChannel A thread which periodically checks if the channels are alive by sending a special packet which must be acknowledged within a specified timeframe. If not, the channel will be disconnected and the standard ReliableTransportChannel will reestablish the channel.",
        "LinkageError in latest 5.9 snapshot When upgrading a test broker to the latest 5.9 snapshot I get:\r\n\r\njava.lang.LinkageError: loader constraint violation: when resolving method \"org.slf4j.impl.StaticLoggerBinder.getLoggerFactory()Lorg/slf4j/ILoggerFactory;\" the class loader (instance of org/eclipse/jetty/webapp/WebAppClassLoader) of the current class, org/slf4j/LoggerFactory, and the class loader (instance of java/net/URLClassLoader) for resolved class, org/slf4j/impl/StaticLoggerBinder, have different Class objects for the type org/slf4j/ILoggerFactory used in the signature\r\n"
    ],
    [
        "AMQ-4307",
        "AMQ-3688",
        "org.apache.activemq.transport.http.HttpClientReconnectTest hangs occasionally This test occasionally hangs, causing the build to hang.  I haven't been able to reproduce it yet, but have seen it several times on the Fuse Hudson instance.  I'll attach a patch which adds a timeout.\r\n",
        "slave fail if client connected to master via SSL in master/slave configuration 0/ the master/slave configuration is started, the slave have started its master connector using its credential (username/pasword) and a MasterBroker instance have been created on the master.\r\n1/ a client creates a new connection on the master broker with ssl and its client certificate. the ConnectionInfo is propagated through the BrokerFilter stack with addConnection().\r\n2/ the MasterBroker sends the ConnectionInfo to the slave via sendAsyncToSlave(Command command) ; the ConnectionInfo have userName=null and password=null but appropriate transportContext information that allowed it to pass though JaasCertificateAuthenticationBroker is set.\r\n3/ The slave broker receive the ConnectionInfo command, does not have the initial SSL transportContext, channel it as no SSL to JaasAuthenticationBroker, which choke on the null userName ( -> NPE in login() -> Login failed exception )\r\n4/ Each message inserted on the master by the ssl client triggers an exception (Slave Failed) for the the unreferenced connection id on the slave side. "
    ],
    [
        "AMQ-1546",
        "AMQ-524",
        "Web Console application needs input field validation The web console application needs screen validation to make sure proper values are being entered.  Presently leaving certain fields blank or with invalid values  causes runtime exceptions with the stacktrace displayed to the user.  Switching to Spring MVC's SimpleFormController can help greatly with this validation.",
        "The clientId property on the activation spec was not being honnored. The clientId property on the activation spec was not being honnored."
    ],
    [
        "AMQ-5212",
        "AMQ-4992",
        "Deadlock with duplicate detection and dlq processing in kahadb Contention between access to the destination map from store duplicate processing and dlq destination creation from the cursor. But could be between any destination creation/deletion.\r\nFrom the test case: {code}Found one Java-level deadlock:\r\n=============================\r\n\"ActiveMQ Transport: tcp://27.0.0.1:60895@60852\":\r\n  waiting for ownable synchronizer 7df695ea8, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),\r\n  which is held by \"ActiveMQ Transport: tcp://27.0.0.1:60894@60852\"\r\n\"ActiveMQ Transport: tcp://27.0.0.1:60894@60852\":\r\n  waiting for ownable synchronizer 7df605fd8, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),\r\n  which is held by \"ConcurrentQueueStoreAndDispatch\"\r\n\"ConcurrentQueueStoreAndDispatch\":\r\n  waiting for ownable synchronizer 7df695ea8, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),\r\n  which is held by \"ActiveMQ Transport: tcp://27.0.0.1:60894@60852\"\r\n\r\nJava stack information for the threads listed above:\r\n===================================================\r\n\"ActiveMQ Transport: tcp://27.0.0.1:60895@60852\":\r\n\tat sun.misc.Unsafe.park(Native Method)\r\n\t- parking to wait for  <7df695ea8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)\r\n\tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:890)\r\n\tat org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:129)\r\n\tat org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:334)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\r\n\tat org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:184)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\r\n\tat org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)\r\n\tat org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:384)\r\n\tat org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)\r\n\tat org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:172)\r\n\tat org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)\r\n\tat org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)\r\n\tat org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:112)\r\n\tat org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:565)\r\n\tat org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:108)\r\n\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)\r\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)\r\n\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\n\tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\n\tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)\r\n\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\n\tat java.lang.Thread.run(Thread.java:695)\r\n\"ActiveMQ Transport: tcp://27.0.0.1:60894@60852\":\r\n\tat sun.misc.Unsafe.park(Native Method)\r\n\t- parking to wait for  <7df605fd8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)\r\n\tat java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:890)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.getMessageCount(KahaDBStore.java:490)\r\n\tat org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)\r\n\tat org.apache.activemq.broker.region.Queue.initialize(Queue.java:389)\r\n\tat org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:87)\r\n\tat org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:546)\r\n\tat org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:135)\r\n\tat org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:334)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\r\n\tat org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:184)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\r\n\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\r\n\tat org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)\r\n\tat org.apache.activemq.broker.region.RegionBroker.addProducer(RegionBroker.java:384)\r\n\tat org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)\r\n\tat org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:172)\r\n\tat org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)\r\n\tat org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)\r\n\tat org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:112)\r\n\tat org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:565)\r\n\tat org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:108)\r\n\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)\r\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:148)\r\n\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\n\tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\n\tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)\r\n\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\n\tat java.lang.Thread.run(Thread.java:695)\r\n\"ConcurrentQueueStoreAndDispatch\":\r\n\tat sun.misc.Unsafe.park(Native Method)\r\n\t- parking to wait for  <7df695ea8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)\r\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:941)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1261)\r\n\tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:677)\r\n\tat org.apache.activemq.broker.region.AbstractRegion.getDestinations(AbstractRegion.java:243)\r\n\tat org.apache.activemq.broker.region.RegionBroker.getDestinations(RegionBroker.java:149)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore.rollbackStatsOnDuplicate(KahaDBStore.java:286)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1316)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$11.execute(MessageDatabase.java:1140)\r\n\tat org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1137)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase$10.visit(MessageDatabase.java:1074)\r\n\tat org.apache.activemq.store.kahadb.data.KahaAddMessageCommand.visit(KahaAddMessageCommand.java:241)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1071)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:978)\r\n\tat org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:958)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:426)\r\n\tat org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1281)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)\r\n\tat java.lang.Thread.run(Thread.java:695)\r\n\r\nFound 1 deadlock.{code}",
        "Cannot find maxSessions value for ActiveMQ consumers Hi,\r\nI am using the latest jboss-fuse-6.1.0.redhat-321 build which comes with the latest 1.2-M-redhat-321 hawtio console. The hawtio console is showing all ActiveMQ queues and consumers but is missing very important information about number of threads allowed for each consumer.\r\nThis is not a Hawtio issue since ActiveMQ currently does not have JMX MBeans to cover those metrics.\r\nPlease see relevant issue initially created for Hawtio - https://github.com/hawtio/hawtio/issues/997\r\nThanks\r\n"
    ],
    [
        "AMQ-3412",
        "AMQ-2864",
        "activemq-camel bundle dosen't need to export the package of META-INF.services.org.apache.camel As the camel-core has an activator to load the type converter, we don't need to expor the package in the camel-activemq bundle.",
        "AMQ2149KahaDBTest - intermittent missing/out of order message with restart/failover and durable subs intermittent failure, activate of a durable sub and additions to the topic store may need a sync or async store and dispatch topics may need to be disabled."
    ],
    [
        "AMQ-3897",
        "AMQ-3043",
        "Stomp 1.1 keep alive does not work with stomp+nio using the transport:\r\n\r\n{quote}\r\n  <transportConnector name=\"stomp+nio\" uri=\"stomp+nio://0.0.0.0:6163\"/>\r\n{quote}\r\n\r\nWhen connecting a stomp 1.1 client I see this using tcpdump (tcpdump output so new lines etc):\r\n\r\n{quote}\r\nsend...>\r\nCONNECT\r\n.passcode:xxx.host:kvm4.content-length:0.heart-beat:30000,30000.content-type:text/plain; charset=UTF-8.login:rip.accept-version:1.1,1.0...\r\n<...receive\r\nCONNECTED.heart-beat:0,0.session:ID:kvm4-55239-1340217683781-3:10008.server:ActiveMQ/5.6.0.version:1.1....\r\n{quote}\r\n\r\nNotice that I send the heart-beat header requesting 30000,30000 heartbeats but then ActiveMQ replies with 0,0\r\n\r\nIf I change the stomp transport to stomp and not stomp+nio and not changing my code or what I send in CONNECT request I get the correct heartbeats.\r\n\r\nIt seems stomp+nio does not have heartbeat support for protocol 1.1",
        "java.util.concurrent.ExecutionException: java.lang.NoSuchMethodError: org.apache.activemq.command.ConnectionInfo.isBrokerMasterConnector()Z getting issue with activmq while connecting : java.util.concurrent.ExecutionException: java.lang.NoSuchMethodError: org.apache.activemq.command.ConnectionInfo.isBrokerMasterConnector()Z"
    ],
    [
        "AMQ-5627",
        "AMQ-4182",
        "Dead picture links in website The following page contains dead picture links:\r\nhttp://activemq.apache.org/scaling-the-depth-of-a-queue.html",
        "Memory Leak for ActiveMQBytesMessage with Compression as true InflaterInputStream is supposed to close explicitly to release resource allocated by its JNI methods. In ActiveMQBytesMessage, dataIn property is disposed simply without closing it, which results in some weird memory leak that can't be detected from heap size. It can't be controlled by -Xmx or -XX:MaxDirectMemorySize.\r\n\r\nPlease run the following test program to verify the issue:\r\n\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport javax.jms.BytesMessage;\r\nimport javax.jms.Connection;\r\nimport javax.jms.Session;\r\n\r\nimport org.apache.activemq.ActiveMQConnectionFactory;\r\nimport org.apache.activemq.command.ActiveMQBytesMessage;\r\n\r\n/**\r\n * A simple test to verify memory leak in ActiveMQBytesMessage.\r\n */\r\npublic class Main\r\n{\r\n    public static void main(String[] args) throws Exception \r\n    {\r\n        ActiveMQConnectionFactory connFactory = new ActiveMQConnectionFactory(\"vm://localhost\");\r\n        connFactory.setUseCompression(true);\r\n        Connection conn = connFactory.createConnection();\r\n        Session session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);\r\n        BytesMessage message = session.createBytesMessage();\r\n        \r\n        message.writeBytes(new byte[1024]);\r\n\r\n        ActiveMQBytesMessage m = (ActiveMQBytesMessage)message;\r\n        if(!m.isCompressed())\r\n        {\r\n            throw new RuntimeException();\r\n        }\r\n        \r\n        \r\n        while (true)\r\n        {\r\n            for (int k = 0; k < 1024; ++k)\r\n            {\r\n                message.reset();\r\n                byte[] data = new byte[1024];\r\n                message.readBytes(data);\r\n            }\r\n            TimeUnit.MILLISECONDS.sleep(10);\r\n        }\r\n    }\r\n\r\n}"
    ],
    [
        "AMQ-5010",
        "AMQ-3632",
        "deleting queue suffixed with a dot (\".\") causes messages to disappear in similarly named queue (without the dot) To reproduce:\r\n\r\n1) create queue named \"A\"\r\n2) send test message to A (verify queue A contains a message via Web Console or \"activemq-admin browse\" command.\r\n3) create queue named \"A.\" (if you check the contents of A. they are identical to that of A)\r\n4) delete queue A.\r\n5) check queue A\r\n\r\nDespite a positive pending message count, no messages appear in queue A when looking via web console or activemq-admin tool. They do, however, show up via JMX operations on the queue, such as browseAsTable().",
        "Allow easy creation of purely static bridges Introduce new boolean property which will prevent network connector to create listener for consumer advisory messages and only bridge statically defined destinations, like\r\n\r\n{code}<networkConnector ... staticBridge=\"true\">\r\n        <staticallyIncludedDestinations>\r\n      \t\t<queue physicalName=\"always.include.queue\"/>\r\n        </staticallyIncludedDestinations>\r\n</networkConnector>{code}\r\n\r\nThis will help in cases when we want to create \"purely\" static network between brokers and prevent remote consumer information affect the local broker (and also decrease load on the network connector by not having advisories exchanged between brokers)"
    ],
    [
        "AMQ-3101",
        "AMQ-2779",
        "Issues in password encryption I am trying to use security features provided in activemq 5.4.2, I downloaded and extractd the zip file. I am trying the below command to encrypt the password but getting few errors, below are the details ...\r\n\r\n\r\nH:\\apache-activemq-5.4.2-bin\\apache-activemq-5.4.2>bin\\activemq encrypt --passwo\r\nrd activemq --input mypassword\r\nJava Runtime: IBM Corporation 1.6.0 G:\\IBM\\IBM-JDK\\ibm_sdk60\\ibm_sdk60\\jre\r\n  Heap sizes: current=4096k  free=2789k  max=524288k\r\n    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=G:\\IBM\\IB\r\nM-JDK\\ibm_sdk60\\ibm_sdk60\\jre\\bin -Dsun.boot.library.path=G:\\IBM\\IBM-JDK\\ibm_sdk\r\n60\\ibm_sdk60\\jre\\bin -Djava.library.path=G:\\IBM\\IBM-JDK\\ibm_sdk60\\ibm_sdk60\\jre\\\r\nbin;.;C:\\Perl\\bin;C:\\Program Files\\Common Files\\NetSarang;C:\\WINDOWS\\system32;C:\r\n\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;G:\\IBM\\IBM-JDK\\ibm_sdk60\\ibm_sdk60\\bin;H:\\Java\r\n\\apache-ant-1.7.0-bin\\apache-ant-1.7.0\\bin;C:\\Program Files\\Windows Imaging\\ -Dj\r\nava.home=G:\\IBM\\IBM-JDK\\ibm_sdk60\\ibm_sdk60\\jre -Djava.ext.dirs=G:\\IBM\\IBM-JDK\\i\r\nbm_sdk60\\ibm_sdk60\\jre\\lib\\ext -Duser.dir=H:\\apache-activemq-5.4.2-bin\\apache-ac\r\ntivemq-5.4.2 _j2se_j9=71168 -Xdump -Dconsole.encoding=Cp437 -Djava.class.path=.\r\n-Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRu\r\nnner=true -Djava.util.logging.config.file=logging.properties -Dactivemq.classpat\r\nh=H:\\apache-activemq-5.4.2-bin\\apache-activemq-5.4.2/conf;H:\\apache-activemq-5.4\r\n.2-bin\\apache-activemq-5.4.2/conf; -Dactivemq.home=H:\\apache-activemq-5.4.2-bin\\\r\napache-activemq-5.4.2 -Dactivemq.base=H:\\apache-activemq-5.4.2-bin\\apache-active\r\nmq-5.4.2 -Djava.class.path=H:\\apache-activemq-5.4.2-bin\\apache-activemq-5.4.2/bi\r\nn/run.jar -Dsun.java.command=H:\\apache-activemq-5.4.2-bin\\apache-activemq-5.4.2/\r\nbin/run.jar start encrypt --password activemq --input mypassword -Dsun.java.laun\r\ncher=SUN_STANDARD _port_library\r\nACTIVEMQ_HOME: H:\\apache-activemq-5.4.2-bin\\apache-activemq-5.4.2\r\nACTIVEMQ_BASE: H:\\apache-activemq-5.4.2-bin\\apache-activemq-5.4.2\r\nLoading message broker from: encrypt\r\nERROR: java.lang.RuntimeException: Failed to execute start task. Reason: java.la\r\nng.IllegalArgumentException: Invalid broker URI, no scheme specified: encrypt\r\njava.lang.RuntimeException: Failed to execute start task. Reason: java.lang.Ille\r\ngalArgumentException: Invalid broker URI, no scheme specified: encrypt\r\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand\r\n.java:98)\r\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC\r\nommand.java:57)\r\n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand\r\n.java:143)\r\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC\r\nommand.java:57)\r\n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja\r\nva:85)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.\r\njava:59)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces\r\nsorImpl.java:39)\r\n        at java.lang.reflect.Method.invoke(Method.java:612)\r\n        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)\r\n        at org.apache.activemq.console.Main.main(Main.java:107)\r\nCaused by: java.lang.IllegalArgumentException: Invalid broker URI, no scheme spe\r\ncified: encrypt",
        "Propagate queue subscription selectors to virtual topic dispatch such that unmatched messages do not pile up on subscription queues With virtual topics each consumer can get its own queue or share an existing queue. http://activemq.apache.org/virtual-destinations.html\n\nConsumers which share a queue, can use selectors to partition the consumer queue but individual consumers that use selectors run into a problem in that the dispatch to the queue does not take account of the selector and all messages are dispatched to the queue. Over time, the unmatched messages build up on the queue.\nThrough static configuration it is possible to arrange that the destination queues are filtered, but this solution is static.\n\nAn alternative approach, that does impose a cpu hit during dispatch (as the selectors are executed twice) can provide a neat solution. Making a virtual topic selectorAware allows the destination interceptor to only dispatch messages that match the selector of one of the existing subscriptions. In this way, no unmatched messages will be dispatched to the subscription queues. In xml configuration, the following will make all topic dispatch respect the selectors of the existing subscriptions:{code}\n<broker xmlns=\"http://activemq.apache.org/schema/core\">\n    <destinationInterceptors>\n      <virtualDestinationInterceptor>\n        <virtualDestinations>\n          <virtualTopic name=\">\" selectorAware=\"true\"/>\n        </virtualDestinations>\n      </virtualDestinationInterceptor>\n    </destinationInterceptors>\n\n  </broker>{code}"
    ],
    [
        "AMQ-597",
        "AMQ-697",
        "NullPointerException in MemoryBoundedMessageCache If you put two messages in the MemoryBoundedMessageCache with the same message id, the MemoryBoundedMessageCache puts itself into an inconsistent state, which causes a NullPointerException in removeOldest(), on the following line:\n\n      CacheNode node = (CacheNode) messages.remove(messageID);\n      decrementMemoryUsed(node.message);\n\nThis is because there is no corresponding CacheNode entry for the given messageID.\n\nThe problem is caused by the following block of code, in put(String, ActiveMQMessage):\n\n            CacheNode oldNode = (CacheNode) messages.put(messageID, newNode);\n            if( oldNode !=null ) {\n                lruList.remove(oldNode);\n                decrementMemoryUsed(oldNode.message);\n            }  \n\nWhen it removes the existing CacheNode from the messages map, it fails to remove it from the lruList, causing its entry to be left in the lruList. This means that the lruList will now contain two entries for the same message id.  The first one to be removed will remove the only entry in the messages map, and will be fine, but the second one to be removed will cause a NullPointerException, since there is now no corresponding CacheNode in the messages map.\n\nTo fix all that needs to be done is change the line:\n\n                lruList.remove(oldNode);\n\nto be\n\n                lruList.remove(oldNode.entry);\n\nso that the entry is correctly removed from the lruList.",
        "Jmeter build is broken Hi Jonas,   \n\nI tried doing a windows build of the jmeter tests in the amq 4.x branch (My maven repo has been deleted) and I got the following:\n\nC:\\sandbox\\activemq-4-branch\\activemq-jmeter>maven clean default\n __  __\n|  \\/  |__ _Apache__ ___\n| |\\/| / _` \\ V / -_) ' \\  ~ intelligent projects ~\n|_|  |_\\__,_|\\_/\\___|_||_|  v. 1.0.2\n\nAttempting to download activemq-core-4.0-SNAPSHOT.jar.\nAttempting to download batik-awt-util-1.0.jar.\nWARNING: Failed to download batik-awt-util-1.0.jar.\nAttempting to download xalan-1.0.jar.\nWARNING: Failed to download xalan-1.0.jar.\nAttempting to download xml-apis-1.0.jar.\nWARNING: Failed to download xml-apis-1.0.jar.\nAttempting to download manta-1.0.jar.\nWARNING: Failed to download manta-1.0.jar.\nThe build cannot continue because of the following unsatisfied dependencies:\n\nbatik-awt-util-1.0.jar\nxalan-1.0.jar\nxml-apis-1.0.jar\nmanta-1.0.jar\n\nTotal time: 13 seconds\nFinished at: Fri Apr 28 18:16:40 EDT 2006\n"
    ],
    [
        "AMQ-2194",
        "AMQ-2428",
        "When starting ActiveMQ, get the error: ERROR BrokerService   -Failed to start ActiveMQ JMS Message Broker. Reason: java.net.SocketException: The socket name is not available on this system. $ activemq\nACTIVEMQ_HOME: /ngbss/uipapp/apache-activemq-5.1.0\nACTIVEMQ_BASE: /ngbss/uipapp/apache-activemq-5.1.0\nLoading message broker from: xbean:activemq.xml\nINFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(/ngbss/uipapp/apache-activemq-5.\n1.0/data)\nINFO  BrokerService                  - ActiveMQ 5.1.0 JMS Message Broker (localhost) is starting\nINFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/\nINFO  AMQPersistenceAdapter          - AMQStore starting using directory: /ngbss/uipapp/apache-activemq-5.1.0/data\nINFO  KahaStore                      - Kaha Store using data directory /ngbss/uipapp/apache-activemq-5.1.0/data/kr-store\n/state\nINFO  AMQPersistenceAdapter          - Active data files: []\nINFO  KahaStore                      - Kaha Store using data directory /ngbss/uipapp/apache-activemq-5.1.0/data/kr-store\n/data\nINFO  TransportServerThreadSupport   - Listening for connections at: tcp://ngcrmift:61616\nERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.net.SocketException: Th\ne socket name is not available on this system.\njava.net.SocketException: The socket name is not available on this system.\n        at java.net.PlainDatagramSocketImpl.join(Native Method)\n        at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:220)\n        at java.net.MulticastSocket.joinGroup(MulticastSocket.java:288)\n        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:\n277)\n        at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:245)\n        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1853)\n        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1801)\n        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:455)\n        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:50)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowi\nreCapableBeanFactory.java:1288)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireC\napableBeanFactory.java:1257)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCap\nableBeanFactory.java:438)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBea\nnFactory.java:383)\n        at java.security.AccessController.doPrivileged(AccessController.java:197)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapab\nleBeanFactory.java:353)\n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegis\ntry.java:169)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListable\nBeanFactory.java:400)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplic\nationContext.java:736)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:369)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:111)\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:73)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:618)\n        at org.apache.activemq.console.Main.runTaskClass(Main.java:222)\n        at org.apache.activemq.console.Main.main(Main.java:106)\nERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationE\nxception: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource\n[activemq.xml]: Invocation of init method failed; nested exception is java.net.SocketException: The socket name is not a\nvailable on this system.\njava.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationExceptio\nn: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [active\nmq.xml]: Invocation of init method failed; nested exception is java.net.SocketException: The socket name is not availabl\ne on this system.\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:618)\n        at org.apache.activemq.console.Main.runTaskClass(Main.java:222)\n        at org.apache.activemq.console.Main.main(Main.java:106)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.x\nbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested excep\ntion is java.net.SocketException: The socket name is not available on this system.\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireC\napableBeanFactory.java:1260)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCap\nableBeanFactory.java:438)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBea\nnFactory.java:383)\n        at java.security.AccessController.doPrivileged(AccessController.java:197)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapab\nleBeanFactory.java:353)\n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegis\ntry.java:169)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListable\nBeanFactory.java:400)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplic\nationContext.java:736)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:369)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:111)\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:73)\n        ... 10 more\nCaused by: java.net.SocketException: The socket name is not available on this system.\n        at java.net.PlainDatagramSocketImpl.join(Native Method)\n        at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:220)\n        at java.net.MulticastSocket.joinGroup(MulticastSocket.java:288)\n        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:\n277)\n        at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:245)\n        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1853)\n        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1801)\n        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:455)\n        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:50)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowi\nreCapableBeanFactory.java:1288)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireC\napableBeanFactory.java:1257)\n        ... 29 more\nERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.\napache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method fai\nled; nested exception is java.net.SocketException: The socket name is not available on this system.\njava.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.\nactivemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; ne\nsted exception is java.net.SocketException: The socket name is not available on this system.\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:618)\n        at org.apache.activemq.console.Main.runTaskClass(Main.java:222)\n        at org.apache.activemq.console.Main.main(Main.java:106)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.x\nbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested excep\ntion is java.net.SocketException: The socket name is not available on this system.\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireC\napableBeanFactory.java:1260)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCap\nableBeanFactory.java:438)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBea\nnFactory.java:383)\n        at java.security.AccessController.doPrivileged(AccessController.java:197)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapab\nleBeanFactory.java:353)\n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegis\ntry.java:169)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListable\nBeanFactory.java:400)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplic\nationContext.java:736)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:369)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:111)\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:73)\n        ... 10 more\nCaused by: java.net.SocketException: The socket name is not available on this system.\n        at java.net.PlainDatagramSocketImpl.join(Native Method)\n        at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:220)\n        at java.net.MulticastSocket.joinGroup(MulticastSocket.java:288)\n        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:\n277)\n        at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:245)\n        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1853)\n        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1801)\n        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:455)\n        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:50)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowi\nreCapableBeanFactory.java:1288)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireC\napableBeanFactory.java:1257)\n        ... 29 more\nINFO  BrokerService                  - ActiveMQ Message Broker (localhost, null) is shutting down\nINFO  NetworkConnector               - Network Connector default-nc Stopped\nERROR MulticastDiscoveryAgent        - Failed to advertise our service: default.ActiveMQ-4.dead.%localhost%tcp://ngcrmif\nt:61616\njava.io.IOException: Cannot reach the destination network.\n        at java.net.PlainDatagramSocketImpl.send(Native Method)\n        at java.net.PlainDatagramSocketImpl.send(PlainDatagramSocketImpl.java:134)\n        at java.net.DatagramSocket.send(DatagramSocket.java:624)\n        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryA\ngent.java:361)\n        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.stop(MulticastDiscoveryAgent.java:2\n94)\n        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)\n        at org.apache.activemq.broker.TransportConnector.stop(TransportConnector.java:258)\n        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)\n        at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java:1379)\n        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:483)\n        at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1724)\n        at org.apache.activemq.broker.BrokerService$3.run(BrokerService.java:1702)\nINFO  TransportConnector             - Connector openwire Stopped\nINFO  TransportConnector             - Connector ssl Stopped\nINFO  TransportConnector             - Connector stomp Stopped\nINFO  TransportConnector             - Connector xmpp Stopped\nINFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, null) stopped\n$\n\n\n\n\nWhat happened?????",
        "Improve producer flow control logging Currently we log a info message immediately after producer is stopped on some system usage limit. We do so just for the first time for memory limits, to prevent flooding the log. It would be good to log message only if producer is stopped for specified (configurable) amount of time, and thus avoid flooding the log in these edge cases."
    ],
    [
        "AMQ-2624",
        "AMQ-5550",
        "JMS Bridges starting successful without a connection and never connect then When the JMS Bridges get a start() command and the foreign endpoint is down, the bridge prints a stacktrace and goes on. The bridge never connects.\n\n2010-02-23 18:17:27,437 ERROR JmsQueueConnector    init              - Failed to initialize the JMSConnector\noracle.jms.AQjmsException: I/O Exception: The Network Adapter could not establish the connection\n\tat oracle.jms.AQjmsDBConnMgr.checkForSecurityException(AQjmsDBConnMgr.java:934)\n\tat oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:609)\n\tat oracle.jms.AQjmsDBConnMgr.<init>(AQjmsDBConnMgr.java:243)\n\tat oracle.jms.AQjmsConnection.<init>(AQjmsConnection.java:185)\n\tat oracle.jms.AQjmsQueueConnectionFactory.createQueueConnection(AQjmsQueueConnectionFactory.java:224)\n\tat org.apache.activemq.network.jms.JmsQueueConnector.initializeForeignQueueConnection(JmsQueueConnector.java:225)\n\tat org.apache.activemq.network.jms.JmsQueueConnector.init(JmsQueueConnector.java:55)\n\tat org.apache.activemq.network.jms.JmsConnector.start(JmsConnector.java:117)\n\tat org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1941)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:471)\n\tat org.test.EmbeddedBroker.main(EmbeddedBroker.java:48)\nCaused by: java.sql.SQLRecoverableException: I/O Exception: The Network Adapter could not establish the connection\n\tat oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:101)\n\tat oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:112)\n\tat oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:173)\n\tat oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:229)\n\tat oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:458)\n\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:411)\n\tat oracle.jdbc.driver.PhysicalConnection.<init>(PhysicalConnection.java:490)\n\tat oracle.jdbc.driver.T4CConnection.<init>(T4CConnection.java:202)\n\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:33)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:465)\n\tat java.sql.DriverManager.getConnection(DriverManager.java:582)\n\tat java.sql.DriverManager.getConnection(DriverManager.java:207)\n\tat oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:575)\n\t... 9 more\n2010-02-23 18:17:27,453 INFO  JmsConnector         start             - JMS Connector Connector:0 Started\n\nin JMSQueueConnector.java:\n\n   @Override\n\tpublic boolean init() {\n        boolean result = super.init();\n        if (result) {\n            try {\n                initializeForeignQueueConnection();\n                initializeLocalQueueConnection();\n                initializeInboundJmsMessageConvertor();\n                initializeOutboundJmsMessageConvertor();\n                initializeInboundQueueBridges();\n                initializeOutboundQueueBridges();\n            } catch (Exception e) {\n                LOG.error(\"Failed to initialize the JMSConnector\", e);\n            }\n        }\n        return result;\n    }\n\nI need a solution for this and I would not mind to do some work on it.\n\nShould the DestinationBridge get a maintainance thread to keep care of reconnecting later? Should we have a callback to inform the client about a failing bridge (case of embedded broker)?\n\nPlease give me some suggestions how a fix could look like and I fix it.\n\nThanks \n\njuergen\n\n",
        "Close of an AMQP consumer that failed to open because it was unauthorized causes exception in broker logs. When an AMQP client creates a receiver link and the logged in user is not authorized on error is sent to the client and the link is closed, this generates an event which causes us to try and remove the consumer but that consumer was never registered so you see these sorts of things in the logs:\r\n\r\n{noformat}\r\njava.lang.IllegalStateException: Cannot remove a consumer that had not been registered: ID:OfficePC-58049-1422548859782-1:3:1:0\r\n\tat org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:691)\r\n\tat org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:76)\r\n\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)\r\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)\r\n\tat org.apache.activemq.transport.amqp.AmqpTransportFilter.sendToActiveMQ(AmqpTransportFilter.java:114)\r\n\tat org.apache.activemq.transport.amqp.AmqpProtocolConverter.sendToActiveMQ(AmqpProtocolConverter.java:1486)\r\n\tat org.apache.activemq.transport.amqp.AmqpProtocolConverter$ConsumerContext.onClose(AmqpProtocolConverter.java:1017)\r\n\tat org.apache.activemq.transport.amqp.AmqpProtocolConverter.processLinkEvent(AmqpProtocolConverter.java:390)\r\n\tat org.apache.activemq.transport.amqp.AmqpProtocolConverter.onFrame(AmqpProtocolConverter.java:331)\r\n\tat org.apache.activemq.transport.amqp.AmqpProtocolConverter.onAMQPData(AmqpProtocolConverter.java:275)\r\n\tat org.apache.activemq.transport.amqp.AmqpTransportFilter.onCommand(AmqpTransportFilter.java:98)\r\n\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\n{noformat}\r\n\r\nThis would likely also happen for a sender link.\r\n\r\nWe need to track this state and not try and remove consumers or producers from the Broker that not actually registered due to security or other errors.  This causes not just log spam but a connection close as we treat the returned error from the Broker as a fatal protocol error which it is not. "
    ],
    [
        "AMQ-2800",
        "AMQ-4321",
        "JDBCMessageStore message audit suppresses composite destination and DLQ messages as duplicates With the audit enabled, messages send to composite destinations are suppressed as duplicates so the will not survive a restart. In addition, persistent DLQ messages are suppressed (depending on the audit depth).\nDisabling the audit on the persistence adapter works around this issue. It is ok to disable the audit. The audit is needed to close a small window where duplicate message sends can occur with the non transactional use of the failover: transport. It can happen if a send is in progress when a failover reconnection occurs back o the same broker (as if there was a temp network partition) and the send reply is not received. A non transactional client will resend the message which needs to be suppressed by the audit. Disabling the audit leaves the possibility of having a duplicate message in the database that will not be dispatched.",
        "NIO+SSL Connector corrupts stream when data size exceeds SSL buffer size When using the default enabledCipherSuites settings on Java 7, the NIO+SSL connector corrupts the SSL output stream when asked to flush a buffer larger than the SSL buffer size (approx. 16 KB). This is reproducible by sending a single BytesMessage >= 16KB to the broker and attempting to consume it. "
    ],
    [
        "AMQ-4485",
        "AMQ-2634",
        "Skipped message dispatch with concurrent transacted sends at cursor memory limit With multiple concurrent transacted sends, transaction synchronisation after completions are used to update the cursors.\r\nThese happen independent of the order that the store is updated, and hence the store order index.\r\nWhen the cache is exhausted, a callback to the store to mark the end of caching assumes matching order. If scheduling has swapped the order, it is possible to mark the order index past what is cached and it is possible to skip a dispatch. Alternatively it is possible to mark too early which results in duplicate dispatch if the audit is disabled or exhausted.\r\n\r\nThe senario that exposed this occurrence used concurrent transacted sends to 100 destinations with slow consumers. Leaving scope for out of order processing and ensuring that the cache is exhausted.\r\n\r\nUsing a large destination memory limit or systemUsage limit or useCache=false policy entry will avoid this problem. The order is only important when the cache is exhausted.\r\nIn the skipped case, the message appears on the queue but is not consumable, however it is consumable after a restart.\r\n\r\nThe proper fix is to ensure cursors are updated in the same order as the store.",
        "Exception on setting \"sendFailIfNoSpaceAfterTimeout\" I added the follwing configuration to my broker:\n---\n<systemUsage>\n <systemUsage sendFailIfNoSpaceAfterTimeout=\"3000\">\n   <memoryUsage>\n     <memoryUsage limit=\"20 mb\"/>\n   </memoryUsage>\n </systemUsage>\n</systemUsage>\n---\n\nI get the following exceptions:\n(after removing sendFailIfNoSpaceAfterTimeout the broker start properly)\n---\n# /etc/init.d/activemq fgstart                                                                                                                                                                                                        \nINFO: loading '/etc/default/activemq'                                                                                                                                                                                                 \nINFO: useing java '/usr/bin/java'                                                                                                                                                                                                     \nINFO: starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+c)                                                                                                                                   \nINFO: changing to user 'activemq' to invoke java                                                                                                                                                                                      \nJava Runtime: IBM Corporation 1.6.0 /usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre                                                                                                                                                           \n  Heap sizes: current=131072k  free=126099k  max=1048576k                                                                                                                                                                             \n    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Dsun.boot.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Djava.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64:/usr/lib -Djava.home=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre -Djava.ext.dirs=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/ext -Duser.dir=/srv/activemq/conf _j2se_j9=1119744 -Xdump -Djava.class.path=. -Xms128M -Xmx1024M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/srv/activemq/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/srv/activemq/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.130.18.244 -Dcom.sun.management.jmxremote -Dcom.sun.management.snmp.port=30000 -Dcom.sun.management.snmp.interface=0.0.0.0 -Dcom.sun.management.snmp.acl.file=/srv/activemq/conf/snmp.acl -Dactivemq.classpath=/srv/activemq/conf/; -Dactivemq.home=/srv/activemq/install/apache-activemq -Dactivemq.base=/srv/activemq/install/apache-activemq -Djava.class.path=/srv/activemq/install/apache-activemq/bin/run.jar -Dsun.java.command=/srv/activemq/install/apache-activemq/bin/run.jar start -Dsun.java.launcher=SUN_STANDARD -Dsun.java.launcher.pid=25854 _port_library _org.apache.harmony.vmi.portlib  \nACTIVEMQ_HOME: /srv/activemq/install/apache-activemq                                                                                                                                                                                  \nACTIVEMQ_BASE: /srv/activemq/install/apache-activemq                                                                                                                                                                                  \nLoading message broker from: xbean:activemq.xml                                                                                                                                                                                       \nERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                                                                              \njava.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                                                                                     \n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)                                                                                                                                             \n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)                                                                                                                                       \n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)                                                                                                                                            \n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)                                                                                                                                       \n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)                                                                                                                                                \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                                                                                                                                                                \n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)                                                                                                                                              \n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)                                                                                                                                      \n        at java.lang.reflect.Method.invoke(Method.java:599)                                                                                                                                                                           \n        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)                                                                                                                                                               \n        at org.apache.activemq.console.Main.main(Main.java:107)                                                                                                                                                                       \nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                      \n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)                                                                                               \n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)                                                                                        \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)                                                                             \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)                                                                                    \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                                                            \n        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                                                       \n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)                                                                                                                    \n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)                                                                                                 \n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)                                                                                                                      \n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)                                                                                                                        \n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)                                                                                                                        \n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)                                                                                         \n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)                                                                                        \n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)                                                                                                                \n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)                                                                                                                \n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)                                                                                                                \n        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)                                                                                                                          \n        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)                                                                                                                                      \n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)                                                                                                                                               \n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)                                                                                                                                               \n        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)                                                                                                                                        \n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)                                                                                                                                             \n        ... 10 more                                                                                                                                                                                                                   \nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                  \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)                                                                             \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)                                                                                    \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                                                            \n        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                                                       \n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)                                                                                               \n        ... 33 more                                                                                                                                                                                                                   \nCaused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                        \n        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)                                                                                                                                       \n        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)                                                                                                                                       \n        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)                                                                                                                     \n        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)                                                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)\n        ... 39 more\nERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\njava.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n        at java.lang.reflect.Method.invoke(Method.java:599)\n        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)\n        at org.apache.activemq.console.Main.main(Main.java:107)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)\n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\n        at java.security.AccessController.doPrivileged(AccessController.java:224)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\n        ... 10 more\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\n        at java.security.AccessController.doPrivileged(AccessController.java:224)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)\n        ... 33 more\nCaused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)\n        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)\n        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)\n        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)\n        ... 39 more\n---\n\nMy activemq.xml:\n---                                                                \n<!--                                                                                      \n    Licensed to the Apache Software Foundation (ASF) under one or more                    \n    contributor license agreements.  See the NOTICE file distributed with                 \n    this work for additional information regarding copyright ownership.                   \n    The ASF licenses this file to You under the Apache License, Version 2.0               \n    (the \"License\"); you may not use this file except in compliance with                  \n    the License.  You may obtain a copy of the License at                                 \n                                                                                          \n    http://www.apache.org/licenses/LICENSE-2.0                                            \n                                                                                          \n    Unless required by applicable law or agreed to in writing, software                   \n    distributed under the License is distributed on an \"AS IS\" BASIS,                     \n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.              \n    See the License for the specific language governing permissions and                   \n    limitations under the License.                                                        \n-->                                                                                       \n<beans                                                                                    \n  xmlns=\"http://www.springframework.org/schema/beans\"                                     \n  xmlns:amq=\"http://activemq.apache.org/schema/core\"                                      \n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"                                   \n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd\">                               \n\n    <!-- Allows us to use system properties as variables in this configuration file -->\n    <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n        <property name=\"locations\">                                                      \n            <value>file:${activemq.base}/conf/credentials.properties</value>             \n        </property>                                                                      \n    </bean>                                                                              \n\n    <!-- \n        The <broker> element is used to configure the ActiveMQ broker. \n    -->                                                                \n    <broker xmlns=\"http://activemq.apache.org/schema/core\" brokerName=\"localhost\" dataDirectory=\"${activemq.base}/data\" >\n                                                                                                                         \n<!--                                                                                                                     \n         <systemUsage>                                                                                                   \n           <systemUsage sendFailIfNoSpaceAfterTimeout=\"3000\">                                                            \n             <memoryUsage>                                                                                               \n               <memoryUsage limit=\"700 mb\"/>                                                                             \n             </memoryUsage>                                                                                              \n             <storeUsage>                                                                                                \n               <storeUsage limit=\"1 gb\" name=\"foo\"/>                                                                     \n             </storeUsage>                                                                                               \n             <tempUsage>                                                                                                 \n               <tempUsage limit=\"1 gb\"/>                                                                                 \n             </tempUsage>                                                                                                \n           </systemUsage>                                                                                                \n         </systemUsage>                                                                                                  \n-->                                                                                                                      \n\n<systemUsage>\n <systemUsage sendFailIfNoSpaceAfterTimeout=\"3000\"> \n   <memoryUsage>                                    \n     <memoryUsage limit=\"20 mb\"/>                   \n   </memoryUsage>                                   \n </systemUsage>                                     \n</systemUsage>                                      \n\n        <!-- \n            The managementContext is used to configure how ActiveMQ is exposed in \n            JMX. By default, ActiveMQ uses the MBean server that is started by    \n            the JVM. For more information, see:                                   \n                                                                                  \n            http://activemq.apache.org/jmx.html                                   \n        -->                                                                       \n        <managementContext>                                                       \n            <managementContext createConnector=\"false\"/>                          \n        </managementContext>                                                      \n\n        <!-- \n            Configure message persistence for the broker. The default persistence\n            mechanism is the KahaDB store (identified by the kahaDB tag).        \n            For more information, see:                                           \n                                                                                 \n            http://activemq.apache.org/persistence.html                          \n        -->                                                                      \n        <persistenceAdapter>                                                     \n            <kahaDB directory=\"${activemq.base}/data/kahadb\"/>                   \n        </persistenceAdapter>                                                    \n                                                                                 \n                                                                                 \n        <!--                                                                     \n                        For better performances use VM cursor and small memory limit.\n                        For more information, see:                                   \n                                                                                     \n            http://activemq.apache.org/message-cursors.html                          \n                                                                                     \n            Also, if your producer is \"hanging\", it's probably due to producer flow control.\n            For more information, see:                                                      \n            http://activemq.apache.org/producer-flow-control.html                           \n        -->                                                                                 \n                                                                                            \n        <destinationPolicy>                                                                 \n            <policyMap>                                                                     \n              <policyEntries>                                                               \n\n\n                <policyEntry topic=\">\" producerFlowControl=\"false\" memoryLimit=\"1mb\">\n\n                  <deadLetterStrategy>\n                    <!--              \n                      Use the prefix 'DLQ.' for the destination name, and make\n                      the DLQ a queue rather than a topic                     \n                    -->                                                       \n                    <individualDeadLetterStrategy                             \n                      queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" />   \n                  </deadLetterStrategy>\n\n                  <pendingSubscriberPolicy>\n                    <vmCursor />\n                  </pendingSubscriberPolicy>\n                </policyEntry>\n                <policyEntry queue=\">\" producerFlowControl=\"false\" memoryLimit=\"1mb\">\n                  <!-- Use VM cursor for better latency\n                       For more information, see:\n\n                       http://activemq.apache.org/message-cursors.html\n\n                  <pendingQueuePolicy>\n                    <vmQueueCursor/>\n                  </pendingQueuePolicy>\n                  -->\n                </policyEntry>\n              </policyEntries>\n            </policyMap>\n        </destinationPolicy>\n\n         <!--\n            The systemUsage controls the maximum amount of space the broker will\n            use before slowing down producers. For more information, see:\n\n            nfigur\n            http://activemq.apache.org/producer-flow-control.html\n\n        <systemUsage>\n            <systemUsage>\n                <memoryUsage>\n                    <memoryUsage limit=\"20 mb\"/>\n                </memoryUsage>\n                <storeUsage>\n                    <storeUsage limit=\"1 gb\" name=\"foo\"/>\n                </storeUsage>\n                <tempUsage>\n                    <tempUsage limit=\"100 mb\"/>\n                </tempUsage>\n            </systemUsage>\n        </systemUsage>\n                -->\n\n        <!--\n            The transport connectors expose ActiveMQ over a given protocol to\n            clients and other brokers. For more information, see:\n\n            http://activemq.apache.org/configuring-transports.html\n        -->\n        <transportConnectors>\n            <transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:61616\"/>\n        </transportConnectors>\n\n    </broker>\n\n    <!--\n        Uncomment to enable Camel\n        Take a look at activemq-camel.xml for more details\n\n    <import resource=\"camel.xml\"/>\n    -->\n\n    <!--\n        Enable web consoles, REST and Ajax APIs and demos\n        Take a look at activemq-jetty.xml for more details\n    -->\n    <import resource=\"jetty.xml\"/>\n\n</beans>\n---\n"
    ],
    [
        "AMQ-5734",
        "AMQ-2284",
        "Support MQTT 3.1 silent subscription fail There's a difference in what 3.1 and 3.1.1 specs say should happen when an unauthorised subscribe happens. In 3.1, the broker don't informs the client so it just silently ignores the problem. In 3.1.1 it sends special QoS back. We currently only implement the later. We need to implement also 3.1 behaviour for older clients.",
        "ClassCastException in KahaDB We test the broker with the Kaha message store. After some time we get lots of class cast exceptions:\n\n{noformat}\n[2009-06-06 06:01:22,047] [QueueThread:queue://xxx] [ERROR] [org.apache.activemq.broker.region.cursors.AbstractStoreCursor] [Failed to fill batch]\njava.lang.ClassCastException: java.lang.Long cannot be cast to org.apache.activemq.store.kahadb.MessageDatabase$MessageKeys\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:228)\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:221)\n        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:81)\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:227)\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:134)\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)\n        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1280)\n        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1419)\n        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1103)\n        at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)\n        at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:619)\n[2009-06-06 06:01:22,048] [QueueThread:queue://xxx] [ERROR] [org.apache.activemq.broker.region.cursors.AbstractStoreCursor] [Failed to fill batch]\njava.lang.RuntimeException: java.lang.ClassCastException: java.lang.Long cannot be cast to org.apache.activemq.store.kahadb.MessageDatabase$MessageKeys\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:230)\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:134)\n        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)\n        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1280)\n        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1419)\n        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1103)\n        at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)\n        at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:619)\nCaused by: java.lang.ClassCastException: java.lang.Long cannot be cast to org.apache.activemq.store.kahadb.MessageDatabase$MessageKeys\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:228)\n        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)\n        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:221)\n        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:81)\n        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:227)\n        ... 10 more\n{noformat}\n\nFor the messages we use the persistence delivery mode. \n\nOur configuration (in Spring) for the persistance adapter:\n\n{code:xml} \n<property name=\"persistenceAdapter\">\n   <bean class=\"org.apache.activemq.store.kahadb.KahaDBStore\">\n      <property name=\"directory\" value=\"/message/store/dir\" />\n   </bean>\n</property>\n{code} "
    ],
    [
        "AMQ-1535",
        "AMQ-3152",
        "missing lines in wrapper.conf The bug mentioned in this post:\nhttp://www.nabble.com/wrapper.conf-5.0-SNAPSHOT-td13154884s2354.html#a13154884\n\nwas not fixed in the 5.0.0 release.\n\nPlease add the two lines to wrapper.conf mentioned in the post:\nwrapper.app.parameter.2=start \nwrapper.app.parameter.3=xbean:activemq.xml \n\nWithout these lines, the broker does not work as a Windows Service.\n\nThanks!",
        "JMS Selectors and a more current SQL database query language version. JMS Selectors are defined using SQL 92; http://activemq.apache.org/selectors.html\r\n\r\nSQL 92 has been superseded by SQL 1999, SQL 2003 and SQL 2008; http://en.wikipedia.org/wiki/SQL-92\r\n\r\nAny reason why one of these most recent versions isn't being used in support of JMS Selectors?\r\n\r\nThat is, I recommend using a more current version if practical and feasible.\r\n\r\nThanks!"
    ],
    [
        "AMQ-5598",
        "AMQ-1837",
        "MQTT+NIO+SSL: Concurrent connections lead to 100% CPU usage Connecting with multiple instances of  mqtt clients via ssl at the same time causes the borker server to run on 100% CPU usage forever. Only restart of ActiveMQ helps. Thread count maximizes during connection attempt.\r\n\r\nCritical: It doesn't matter if the certificate is valid or not, I am able to shut down the broker from one client with 500 concurrent connecting instances. The payload size is not important. The problem is somewhere at the ssl handshake located. Without ssl everything works fine. Single ssl connections work.\r\n\r\nSimilar issues (with older versions) described are here:\r\n\r\n- http://activemq.2283324.n4.nabble.com/SSL-handshake-stalls-broker-with-NIO-td4677916.html\r\n- http://stackoverflow.com/questions/19395769/activemq-mqtt-maxes-cpu-on-first-client-connect\r\n\r\n ",
        "Lost messages after broker recovery We experienced that some messages (send in persistent mode) were lost after the message broker was killed and restarted.\nThe attached little test simulates the situation:\nThere are 10 queues, 10 sender and 10 receiver threads each sending / receiving quite frequently to / from one queue for a quite long time.\nThe receiver for each queue expects the messages exactly in the order the sender has send the messages.\nAfter restarting (killing) the broker the order of the received messages gets disturbed or messages get lost. \n\n* Start the broker as configures by default in the distribution (only switch on JMX support). \n* Start the main method of the attached class\n* Wait until some messages are received\n* kill or shutdown the broker\n* restart the broker\n* have a look at the output of the test class\n{code:title=Output}\nException in ReceiverThread: java.lang.RuntimeException: Received unexpected message! Expected: QUEUE-4: #3197, Received: QUEUE-4: #3267\n{code}\n\n{code:title=Broker Output}\n...\nINFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(D:\\sandbox\\Experimental\\Activemq\\apache-activemq-5.2-SNAPSHOT\\bin\\..\\data)\nINFO  AMQPersistenceAdapter          - AMQStore starting using directory: D:\\sandbox\\Experimental\\Activemq\\apache-activemq-5.2-SNAPSHOT\\bin\\..\\data\nINFO  KahaStore                      - Kaha Store using data directory D:\\sandbox\\Experimental\\Activemq\\apache-activemq-5.2-SNAPSHOT\\bin\\..\\data\\kr-store\\state\nINFO  AMQPersistenceAdapter          - Active data files: []\nWARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...\nINFO  KahaStore                      - Kaha Store successfully deleted data directory D:\\sandbox\\Experimental\\Activemq\\apache-activemq-5.2-SNAPSHOT\\bin\\..\\data\\kr-store\\data\nINFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)\nINFO  KahaStore                      - Kaha Store using data directory D:\\sandbox\\Experimental\\Activemq\\apache-activemq-5.2-SNAPSHOT\\bin\\..\\data\\kr-store\\data\nINFO  AMQPersistenceAdapter          - Recovered 198261 operations from redo log in 18.028 seconds.\nINFO  AMQPersistenceAdapter          - Finished recovering the ReferenceStore\nINFO  BrokerService                  - ActiveMQ 5.2-SNAPSHOT JMS Message Broker (localhost) is starting\n...\n{code}\n"
    ],
    [
        "AMQ-648",
        "AMQ-806",
        "Changing the default JMX URL Most of the command line utilities accept a jmxurl parameter, but there doesn't seem to be an easy way to set up ActiveMQ to use a JMX URL other than the default.  I'd wanted to do so for my development environment so that I could run a JMX console on my desktop and connect to the server running on another machine.  At ab0oo's suggestion, I'll use an SSH port forward (ssh remotehost -L1099:localhost:1099) for now, but it'd be nice to see this covered in some form in the JMX notes.\n",
        "Support a ?trace=true option on the http client side transport "
    ],
    [
        "AMQ-2236",
        "AMQ-5889",
        "activemq-flow: SharedQueue cursoring/paging enhancements -- updated queue to enforce a memory limit less than the queue's max size This improvement updates the cursoring logic in shared queue to allow enforcement of a memory limit that is separate from the queue's size limit. If the queue is configured to limit memory then each cursor now additionally gets a memory limiter/controller. When elements are added to the queue open cursors are checked to see if they can absorb the element in memory -- if not the element is paged out to disk. \n\nThis is still a work in progress -- the implementation is still a bit buggy, and it needs to be further enhanced to throttle back producers to avoid constantly paging out/in elements once the queue's cursors have caught up to the live delivery stream.\n\n",
        "Support a single port for all wire protocols Both Apollo and Artemis support the ability to use a single port for all protocols and to have automatic detection for the protocol being used.  It would be nice to be able to support at least a subset of this feature in the 5.x broker as well.\r\n\r\nIdeally we should at least be able to detect OpenWire, MQTT, STOMP, and AMQP over a TCP, SSL, and NIO transport.  Websockets and HTTP would be a bonus but could be more difficult to implement depending on how this could work with Jetty so that would take some investigation.\r\n\r\nThis is especially useful in environments where having to open up several new ports can be difficult because of firewall and security restrictions."
    ],
    [
        "AMQ-3615",
        "AMQ-906",
        "Advisory broker replay of destination advisories needs to distinguish temp destination from regular destination By default an activemq connection registers an advisory consumer for temp destinations. This is configurable via: {{jms.watchTopicAdvisories}}. This allow the client to respond to a request to a deleted temp destination without a round trip to the broker and avoid a possible auto creation. \r\nAt the moment, that advisory consumer gets notified of *all* destinations, not just temp destinations. So if there are large amounts of destinations, there is an unnecessary flood of advisories on the initial subscribe.\r\nThe workaround, for clients who don't use temps is to disable this advisory monitor, using {{jms.watchTopicAdvisories=false}} on the connection factory broker url or setting the corresponding property on the connection factory or connection.",
        "Exception does not lead to redelivery for AUTO_ACKNOWLEDGE I have a message driven pojo configured configured with with auto_acknowledge, nontransactional and some persistent message in a queue. All my mdp does it to throw new RuntimeException(\"please retry\") but unfortunately the messages are not retried:\n\nSEVERE: error dispatching message: \njava.lang.RuntimeException: Please retry\n\tat net.activem.jms.ExceptionTestOutboundMdp.onMessage(ExceptionTestOutboundMdp.java:46)\n\tat org.jencks.LocalTransactionEndpoint.onMessage(LocalTransactionEndpoint.java:68)\n\tat org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:120)\n\tat org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:60)\n\tat org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:692)\n\tat org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:163)\n\tat org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)\n\tat EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)\n\nLooking in the ActiveMQ source code I think the problem might be in these lines:\n\n            try { \n                messageListener.onMessage(message);\n            } catch ( Throwable e ) {  \n                // TODO: figure out proper way to handle error.\n                log.error(\"error dispatching message: \",e);\n                connection.onAsyncException(e);\n            }\n\n\tat java.lang.Thread.run(Thread.java:595)\n\n\nfound in org.apache.activemq.ActiveMQSession.\n\nAccording to JMS spec, I'd say that with auto_ack a msg should be retried in case the message listener throws an exception, even if the operation is non-transactional:\n\nhttp://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html#AUTO_ACKNOWLEDGE\n\npublic static final int AUTO_ACKNOWLEDGE\n\n    With this acknowledgment mode, the session automatically acknowledges a client's receipt of a message either when the session has successfully returned from a call to receive or when the message listener the session has called to process the message successfully returns.\n\n"
    ],
    [
        "AMQ-261",
        "AMQ-1265",
        "ActiveMQ 3.0 client does not seem to be compatible with 3.1 server. Cook reported that we have broker the wire Format.",
        "client setMessageListener for queue hangs when one queue contains 50+ messages and after broker restart setMessageListener calls for 4 queue are called A JMS client connections hangs when subscribing to queue that is filled with a small number of messages: 50+.\nThe messages have been produced before shutting down the message broker (bin\\activemq.bat process), at that time the queue consumer was not connected.\n\nSubscribing to 4 queues produces the problem.  When the queue is cleared, the problem goes away (by subscribing to only one queue for example).\n\nActiveMQMessageConsumer.setMessageListener\nfreezes on line 329\nsession.stop();\n\nIntelliJ debug screen: (at the next step the wait statement freezes the client connection).\npool-1-thread-1@10f, priority=5, in group 'main', status: 'RUNNING'\n\t  shutdown():87, PooledTaskRunner.java\n\t  stop():113, ActiveMQSessionExecutor.java\n\t  stop():1469, ActiveMQSession.java\n\t  setMessageListener():329, ActiveMQMessageConsumer.java\n\t  registerHandler():112, AbstractJMSMessagingServiceImpl.java\n\t  registerHandlerByAlias():134, ActiveMQMessagingServiceImpl.java\n\t  initMessagingHandler():412, AdapterDeployer.java\n\t  initAdapterHandlers():341, AdapterDeployer.java\n\t  run():139, AdapterDeployer.java\n\t  call():442, Executors.java\n\t  run():176, FutureTask.java\n\t  access$101():138, ScheduledThreadPoolExecutor.java\n\t  run():237, ScheduledThreadPoolExecutor.java\n\t  runWorker():987, ThreadPoolExecutor.java\n\t  run():528, ThreadPoolExecutor.java\n\t  run():595, Thread.java\n\nWhen watching the debug session, the boolean variable \"iterating\" is set to true in PooledTaskRunner.java for the blocking setMessageListener call.  The other non blocking setMessageListeners have their iteration boolean set to false.  Does the fact that one queue contains message set this to true maybe ?\n"
    ],
    [
        "AMQ-1756",
        "AMQ-5269",
        "Resource Adapter's ManagedSessionProxy.setMessageListener is commented out. In the org.apache.activemq.ra.ManagedSessionProxy class the setMessageListener method doesn't do anything;.\n\nThis prevents the MessageListener from being added to the Session and that makes it kind of hard to listen to messages.\n\nIt seems quite probable that this is just a quick debugging fix that accidentally made it into subversion; but if there is some reason for this that I can't see please let me know.\n\nThe code:\n    public void setMessageListener(MessageListener listener) throws JMSException {\n        getSession(); // .setMessageListener(listener);\n    }\n",
        "NIO transports using blocking accept calls, very slow shutdown \r\nCurrently, all the TCP based transports are using the old blocking style of socket.accept() to accept connections.   This works \"OK\" except that for sockets that have a channel associated with them, the socket.close() doesn't cause it to return immediately.  It still waits for the SoTimeout which is currently set a 2 seconds.   That can cause 2 second delays for any shutdown which causes long, unnecessary delays, particularly in the tests.\r\n\r\nOne possible \"fix\" is to drop the socket.setSoTimeout(2000) call to something much smaller.   However, that would turn the accept thread into a more \"busy wait\" scenario which is undesirable.\r\n\r\nA better fix is to change the accepts for the sockets that have a ServerSocketChannel to use the NIO based selectors for the accept operations.   The selector.disable()/selector.close() allows the socket and everything to close immediately.  The result is that the NIO based tests now take the same amount of time as the non-NIO based tests (for which socket.close() causes the accept to return immediately).\r\n\r\nPull request forthcoming."
    ],
    [
        "AMQ-1756",
        "AMQ-4802",
        "Resource Adapter's ManagedSessionProxy.setMessageListener is commented out. In the org.apache.activemq.ra.ManagedSessionProxy class the setMessageListener method doesn't do anything;.\n\nThis prevents the MessageListener from being added to the Session and that makes it kind of hard to listen to messages.\n\nIt seems quite probable that this is just a quick debugging fix that accidentally made it into subversion; but if there is some reason for this that I can't see please let me know.\n\nThe code:\n    public void setMessageListener(MessageListener listener) throws JMSException {\n        getSession(); // .setMessageListener(listener);\n    }\n",
        "ActiveMQInputStream does not work for big content Sending a file with size 4.6 MB with ActiveMQOutputStream works and results in 71 messages on the ActiveMQ broker.\r\nTrying to receive this file / these messages using an ActiveMQInputStream fails - after a while (720896 bytes received so far) inputStream.read(buffer) never answers (it waits in ...). If inputStream is created with a timeout, I get a ActiveMQInputStream$ReadTimeoutEcxeption. "
    ],
    [
        "AMQ-1491",
        "AMQ-2364",
        "bug in TcpTransport.run() and stop() holds dead connections and prevents reconnects TcpTransport.stop() await()s on a countDownLatch that is counted down in TcpTransport.run(). When stop() is called in in the dynamic scope of run(), the countDown() will never happen. Example stack:\n\n\"ActiveMQ Transport: tcp://localhost/127.0.0.1:62002\" prio=10 tid=0x0be46c00 nid=0x2dbc waiting on condition [0x0125c000..0x0125ce50]\n   java.lang.Thread.State: WAITING (parking)\n        at sun.misc.Unsafe.park(Native Method)\n        - parking to wait for  <0x7f352dd0> (a java.util.concurrent.CountDownLatch$Sync)        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:712)\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:870)\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1182)\n        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207)\n        at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:440)\n        at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:66)\n        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)\n        at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:78)\n        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)\n        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)\n        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)        at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java:340)        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:40)\n        at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceRemove(DiscoveryNetworkConnector.java:132)\n        at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent.serviceFailed(SimpleDiscoveryAgent.java:104)\n        at org.apache.activemq.network.DiscoveryNetworkConnector$1.bridgeFailed(DiscoveryNetworkConnector.java:179)\n        at org.apache.activemq.network.DemandForwardingBridgeSupport.fireBridgeFailed(DemandForwardingBridgeSupport.java:909)\n        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteException(DemandForwardingBridgeSupport.java:371)\n        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:395)\n        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:149)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)\n        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:126)\n        - locked <0x7f3530b0> (a org.apache.activemq.transport.InactivityMonitor$1)\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\n        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:183)\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:170)\n        at java.lang.Thread.run(Thread.java:619)",
        "Failover transport memory leak on rollback See this description:\n[http://www.nabble.com/Failover-transport-memory-leak-on-rollback-td24868423.html]\n\nI'm not sure but maybe the TransactionContext should call this.connection.syncSendPacket(info) instead of this.connection.asyncSendPacket(info).\n\nCheers,\nFabrice"
    ],
    [
        "AMQ-1877",
        "AMQ-4929",
        "Invalid Topic Statistics I'm not sure if this affects 5.0.0 directly but I imagine it does since I'm seeing this in the 5.0.0.14-fuse release.\n\nWhen I have a single topic subscriber and publisher on a freshly started AMQ broker and I send one message I see the following invalid statistics.\n{noformat}\nDequeueCount = 1\nDispatchCount = 1\nEnqueueCount = 1\nQueueSize = 1\n{noformat}\n\nWhat I expect to see is:\n{noformat}\nDequeueCount = 1\nDispatchCount = 1\nEnqueueCount = 1\nQueueSize = 0\n{noformat}\n\nI also noticed with one publisher and no subscribers and I send one message I see the following:\n{noformat}\nDequeueCount = 0\nDispatchCount = 0\nEnqueueCount = 1\nQueueSize = 1\n{noformat}\n\nWhat I expect to see is:\n{noformat}\nDequeueCount = 0\nDispatchCount = 0\nEnqueueCount = 1\nQueueSize = 0\n{noformat}",
        "remove old and unused org.apache.activemq.broker.BrokerService#setSupportFailOver there is a bunch of duplicate detection in transactionbroker that is disabled by default and not tested that duplicates work done elsewhere - store and producerAutit. It should be removed."
    ],
    [
        "AMQ-2501",
        "AMQ-958",
        "Modify Apache Camel version of the pom The current pom of the activemq project uses 2.0 as camel version.\n\nThe issue is that when we deploy activemq-camel 5.3.0 top of servicemix 4.1.0-SNAPSHOT, we have a classloading issue because activemq-camel bundle cannot import org.apache.camel.component.jms package from Camel 2.1.SNAPSHOT\n\nMay I propose to change version or add a version range in the MANIFEST file generated for activemq-camel :\n\nThe current is :\n\n{code}\nImport-Package: META-INF.services.org.apache.camel,javax.jms;version=\"\n [1.1,1.2)\",org.apache.activemq;version=\"[5.3,5.4)\",org.apache.activem\n q.advisory;version=\"[5.3,5.4)\",org.apache.activemq.camel;version=\"[5.\n 3,5.4)\",org.apache.activemq.camel.component;version=\"[5.3,5.4)\",org.a\n pache.activemq.camel.converter;version=\"[5.3,5.4)\",org.apache.activem\n q.command;version=\"[5.3,5.4)\",org.apache.activemq.kaha.impl.async;ver\n sion=\"[5.3,5.4)\",org.apache.activemq.management;version=\"[5.3,5.4)\",o\n rg.apache.activemq.spring;version=\"[5.3,5.4)\",org.apache.activemq.tra\n nsport;version=\"[5.3,5.4)\",org.apache.activemq.util;version=\"[5.3,5.4\n )\",org.apache.camel;resolution:=optional;version=\"[2.0,2.1)\",org.apac\n he.camel.component.jms;resolution:=optional;version=\"[2.0,2.1)\",org.a\n pache.camel.impl;resolution:=optional;version=\"[2.0,2.1)\",org.apache.\n camel.util;resolution:=optional;version=\"[2.0,2.1)\",org.apache.common\n s.logging,org.apache.xbean.spring.context.v2;resolution:=optional,org\n .springframework.beans.factory;resolution:=optional;version=\"[2.5,2.6\n )\",org.springframework.beans.factory.xml;resolution:=optional;version\n =\"[2.5,2.6)\",org.springframework.jms.connection;resolution:=optional;\n version=\"[2.5,2.6)\",org.springframework.transaction;resolution:=optio\n nal;version=\"[2.5,2.6)\"\n{code}",
        "Supprot a create=false option on the vm://localhost transport so that the connect fails if the broker is not allready running "
    ],
    [
        "AMQ-3114",
        "AMQ-2600",
        "\"atom\" should read \"Atom\" and \"rss\" should read \"RSS This is minor...\r\n\r\nThe icons on the AMQ web console Queues page (http://localhost:8161/admin/queues.jsp) do not follow the appropriate case.\r\n\r\n\"atom\" should read \"Atom\"\r\nand\r\n\"rss\" should read \"RSS\r\n\r\nReference: http://en.wikipedia.org/wiki/Atom_%28standard%29",
        "Upgrade to Jetty 7 Upgrade to Jetty 7.0.1 for a web socket support"
    ],
    [
        "AMQ-5973",
        "AMQ-2968",
        "Update Spring Framework version Update to a more recent version of the Spring Framework",
        "Add Apache commons daemon (jsvc/procrun) start/stop support. This JIRA is for adding support to use Apache commons daemon support to ActiveMQ.\n\nhttp://commons.apache.org/daemon/jsvc.html\nhttp://blog.bigrocksoftware.com/2010/10/07/commons-daemon-procrun-as-a-java-service-wrapper-for-activemq/"
    ],
    [
        "AMQ-5862",
        "AMQ-1662",
        "JMSException when sending a message in the WebConsole When sending a message to a destination in the webconsole, a JMSException is thrown:\r\n\r\n{code}\r\njavax.jms.JMSException: Cannot add a producer to a session that had not been registered: ID:latitude-58030-1435119975729-1:1:1\r\n\tat org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)\r\n\tat org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1420)\r\n\tat org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:2018)\r\n\tat org.apache.activemq.ActiveMQMessageProducer.<init>(ActiveMQMessageProducer.java:124)\r\n\tat org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:1048)\r\n\tat org.apache.activemq.web.WebClient.getProducer(WebClient.java:307)\r\n\tat org.apache.activemq.web.WebClient.send(WebClient.java:240)\r\n\tat org.apache.activemq.web.controller.SendMessage.sendMessages(SendMessage.java:77)\r\n\tat org.apache.activemq.web.controller.SendMessage.handleRequest(SendMessage.java:56)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:919)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:851)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:855)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\r\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\r\n\tat org.apache.activemq.web.AuditFilter.doFilter(AuditFilter.java:59)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\r\n\tat org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\r\n\tat org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\r\n\tat org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:267)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\r\n\tat org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:80)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:497)\r\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\r\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\r\n\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.IllegalStateException: Cannot add a producer to a session that had not been registered: ID:latitude-58030-1435119975729-1:1:1\r\n\tat org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:599)\r\n\tat org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:108)\r\n\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)\r\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)\r\n\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\n\tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\r\n\tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)\r\n\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\r\n{code}",
        "AMQ 5.0 Stable release \"PS Old Gen\" Memory is growing continuously When AMQ runs for couple of days and there is lot of message traffic, PS Old Gen memory pool keeps on growing. i have tried fine tuning JVM options for GC but no help. \n\nwhat i realize is when i hit purge on the queues using JMX then PS Old Gen goes down again, even if there are no messages in the AMQ all the produced messages are consumed. \n\nin my last posting i got response from a fellow AMQ member that in 5.0 it cleans the messages after the old message count reaches 1000Message or something, but that doesn't appear to be working here. \n\nthis scenario makes me believe that there is some relationship between the old message cleanup and \"PS Old Gen\" size increase. \n\nThanks!"
    ]
]